{"ast":null,"code":"import _slicedToArray from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/report/MaterialUIPickers.js\";\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport $ from 'jquery';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n\n  return date;\n}\n\nexport default function MaterialUIPickers(props) {\n  var maxAllowedDate = '';\n  var startd = new Date();\n  startd.setHours(0, 0, 0, 0);\n  var endd = new Date();\n  endd.setHours(23, 59, 59, 59); // The first commit of Material-UI\n\n  var _React$useState = React.useState(startd),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedStartDate = _React$useState2[0],\n      setSelectedStartDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(endd),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedEndDate = _React$useState4[0],\n      setSelectedEndDate = _React$useState4[1];\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date, \"START_DATE\");\n  };\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date, \"END_DATE\");\n  };\n\n  const showSingleDate = props.callbackFromParent && props.callbackFromParent.showSingleDate;\n  const d1DateRangeFlag = props.callbackFromParent && props.callbackFromParent.d1DateRangeFlag;\n\n  if (!selectedStartDate) {\n    selectedStartDate = new Date().getTime();\n  }\n\n  var dateObj = new Date(selectedStartDate);\n  dateObj.setMonth(dateObj.getMonth() + 6);\n  var maxAllowedDate = dateObj.setDate(dateObj.getDate() - 1);\n  var currDate = new Date();\n  var back18Month = currDate.setMonth(currDate.getMonth() - 18);\n\n  if (selectedStartDate < back18Month) {\n    selectedStartDate = back18Month;\n  }\n\n  if (selectedStartDate > selectedEndDate) {\n    selectedEndDate = new Date().getTime();\n  }\n\n  var d = new Date();\n\n  if (showSingleDate) {\n    maxAllowedDate = d.setDate(d.getDate() - 1);\n  }\n\n  if (d1DateRangeFlag) {\n    maxAllowedDate = d.setDate(d.getDate() - 1);\n  }\n\n  if (showSingleDate && selectedStartDate.getDate() == new Date().getDate()) {\n    selectedStartDate = d;\n  }\n\n  if (d1DateRangeFlag && selectedStartDate.getDate() == new Date().getDate()) {\n    selectedStartDate = d;\n  }\n\n  if (d1DateRangeFlag && selectedStartDate.getDate() == new Date().getDate()) {\n    selectedEndDate = d;\n  }\n\n  $('.MuiInputBase-inputAdornedEnd').prop('readonly', true);\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disabled: props.callbackFromParent && props.callbackFromParent.generateReportLoader,\n    margin: \"normal\" //readOnly=\"true\"\n    // disabled=\"true\"\n    ,\n    disableFuture: \"true\",\n    allowKeyboardControl: \"true\",\n    minDate: back18Month,\n    minDateMessage: \"Only 18 months back report can be fatch.\",\n    maxDate: maxAllowedDate,\n    maxDateMessage: \"Current date report won't be available\",\n    id: \"date-picker-dialog\",\n    label: showSingleDate ? \"Select Verification Date\" : \"Start Date\",\n    format: \"dd/MM/yyyy\",\n    value: selectedStartDate ? selectedStartDate : maxAllowedDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), !showSingleDate ? React.createElement(KeyboardDatePicker, {\n    disableFuture: \"true\",\n    disabled: props.callbackFromParent && props.callbackFromParent.generateReportLoader,\n    maxDateMessage: \"Max allowed date range is 6 months.\" //    minDateMessage=\"End date can't be less than start date.\"\n    ,\n    minDate: selectedStartDate,\n    maxDate: maxAllowedDate,\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"End Date\",\n    format: \"dd/MM/yyyy\",\n    value: selectedEndDate ? selectedEndDate : maxAllowedDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }) : \"\"));\n}","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/report/MaterialUIPickers.js"],"names":["React","Grid","DateFnsUtils","$","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","addMonths","date","months","d","getDate","setMonth","getMonth","setDate","MaterialUIPickers","props","maxAllowedDate","startd","Date","setHours","endd","useState","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","handleStartDateChange","callbackFromParent","myCallback","handleEndDateChange","showSingleDate","d1DateRangeFlag","getTime","dateObj","currDate","back18Month","prop","generateReportLoader"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport $ from 'jquery';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nexport default function MaterialUIPickers(props) {\n  var maxAllowedDate ='';\n  var startd = new Date(); \n  startd.setHours(0,0,0,0);\n  var endd = new Date(); \n  endd.setHours(23,59,59,59);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  };\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  };\n\n  const showSingleDate =  props.callbackFromParent && props.callbackFromParent.showSingleDate; \n  const d1DateRangeFlag =  props.callbackFromParent && props.callbackFromParent.d1DateRangeFlag; \n\n\n  if(!selectedStartDate){\n    selectedStartDate = new Date().getTime();\n  }\n  \n\n  var dateObj = new Date(selectedStartDate);\n  dateObj.setMonth(dateObj.getMonth() + 6);\n\n  var maxAllowedDate = dateObj.setDate(dateObj.getDate() - 1);\n\n\n  var currDate = new Date();\n  var back18Month= currDate.setMonth(currDate.getMonth() - 18);\n\n\n  if(selectedStartDate <  back18Month){\n    selectedStartDate = back18Month;\n  }\n\n  if(selectedStartDate >  selectedEndDate){\n    selectedEndDate = new Date().getTime();\n  }\n\n\n  var d = new Date();\n  if(showSingleDate){\n    maxAllowedDate = d.setDate(d.getDate()-1);\n  }\n\n  if(d1DateRangeFlag){\n    maxAllowedDate = d.setDate(d.getDate()-1);\n  }\n\n  if(showSingleDate && selectedStartDate.getDate() == new Date().getDate()){\n    selectedStartDate = d;\n  }\n\n\n  if(d1DateRangeFlag && selectedStartDate.getDate() == new Date().getDate()){\n    selectedStartDate = d;\n  }\n\n  if(d1DateRangeFlag && selectedStartDate.getDate() == new Date().getDate()){\n    selectedEndDate = d;\n  }\n\n $('.MuiInputBase-inputAdornedEnd').prop('readonly', true);\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n          disabled={props.callbackFromParent && props.callbackFromParent.generateReportLoader}\n          margin=\"normal\"\n          //readOnly=\"true\"\n          // disabled=\"true\"\n          disableFuture=\"true\"\n          allowKeyboardControl=\"true\"\n          minDate={back18Month}\n          minDateMessage=\"Only 18 months back report can be fatch.\"\n          maxDate={maxAllowedDate}\n          maxDateMessage=\"Current date report won't be available\"\n          id=\"date-picker-dialog\"\n          label={ showSingleDate ? \"Select Verification Date\" :  \"Start Date\" }\n          format=\"dd/MM/yyyy\"\n          value={selectedStartDate ? selectedStartDate : maxAllowedDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        { !showSingleDate ? <KeyboardDatePicker\n          disableFuture=\"true\"\n          disabled={props.callbackFromParent && props.callbackFromParent.generateReportLoader}\n          maxDateMessage=\"Max allowed date range is 6 months.\"\n      //    minDateMessage=\"End date can't be less than start date.\"\n          minDate={selectedStartDate}\n          maxDate={maxAllowedDate}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedEndDate ? selectedEndDate : maxAllowedDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }} \n        />: \"\"}\n          \n       \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}