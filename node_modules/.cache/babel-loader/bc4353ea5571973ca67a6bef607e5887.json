{"ast":null,"code":"import _objectSpread from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/login/RoleManagement.js\";\nimport React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport Grid from '@material-ui/core/Grid';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport $ from 'jquery';\n\nconst handleChangePage = (event, newPage) => {//  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {// this.setRowsPerPage(parseInt(event.target.value, 10));\n  // this.setPage(0);\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass RoleManagement extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); // const re = /^[0-9\\b]+$/;\n      // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n      //     this.setState({ searchby: e.target.value })\n      // }\n    };\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        selectedReasons: _objectSpread({}, this.state.selectedReasons, {\n          [name]: event.target.checked\n        })\n      }));\n    };\n\n    this.state = {\n      products: [],\n      searchedproducts: '',\n      searchby: '',\n      listofzones: [],\n      selectedZone: [],\n      zone: '',\n      addNewEnable: false,\n      roleName: \"\",\n      roleDetails: \"\",\n      selectedRole: false,\n      rejectedReasons: [\"Pack Activation\", \"Offer Upload\", \"Banner Upload\", \"Onboarding Agents\", \"Data Entry\", \"Verification\", \"Document Upload\", \"Agent Status Report\", \"Agent Audit Report\", \"Rejected Data\"]\n    };\n    this.loadProductList = this.loadProductList.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addRole = this.addRole.bind(this);\n    this.showRoleDetails = this.showRoleDetails.bind(this);\n    this.deleteNewRole = this.deleteNewRole.bind(this);\n    this.deleteRole = this.deleteRole.bind(this);\n  }\n\n  componentDidMount() {\n    //  this.loadProductList(\"\");\n    localStorage.setItem(\"lastUrl\", \"role\");\n    var roles = {\n      \"status\": 200,\n      \"message\": \"ok\",\n      \"result\": [{\n        \"id\": 15,\n        \"role\": \"ADMIN\"\n      }, {\n        \"id\": 16,\n        \"role\": \"BOA\"\n      }, {\n        \"id\": 1,\n        \"role\": \"CEO\"\n      }, {\n        \"id\": 8,\n        \"role\": \"CP\"\n      }, {\n        \"id\": 11,\n        \"role\": \"CSM\"\n      }, {\n        \"id\": 14,\n        \"role\": \"DE\"\n      }, {\n        \"id\": 5,\n        \"role\": \"DIST\"\n      }, {\n        \"id\": 10,\n        \"role\": \"DSA\"\n      }, {\n        \"id\": 12,\n        \"role\": \"DTH Sales Head\"\n      }, {\n        \"id\": 9,\n        \"role\": \"FSE\"\n      }, {\n        \"id\": 6,\n        \"role\": \"RET\"\n      }, {\n        \"id\": 7,\n        \"role\": \"SMH\"\n      }, {\n        \"id\": 4,\n        \"role\": \"TM\"\n      }, {\n        \"id\": 2,\n        \"role\": \"ZBM\"\n      }, {\n        \"id\": 3,\n        \"role\": \"ZSM\"\n      }]\n    };\n    this.setState({\n      searchedproducts: roles && roles.result\n    });\n    AdminService.getListOfRoles().then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        searchedproducts: data && data.result\n      });\n    });\n  }\n\n  showRoleDetails(id) {\n    // document.getElementById('roleId'+id).style.backgroundColor = \"lightgray\"; \n    $('#tableId tr').eq(id);\n    AdminService.getRoleDetails(id).then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        roleDetails: data && data.result && data.result.authorites\n      }); // this.setState({ selectedRole: true })\n    });\n  }\n\n  searchOnDB(mobileNumber) {//   this.loadProductList(mobileNumber);\n    // AdminService.searchMobileNo(mobileNumber).then(res => {\n    //     let data = resolveResponse(res);\n    //     const selectedProduct = data.result;            \n    //     if(selectedProduct && selectedProduct.transactionId){\n    //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n    //         //window.localStorage.setItem(\"selectedSim\", '');\n    //         this.props.history.push('/verify-edit');\n    //         // this.setState({\n    //         //     });\n    //     }\n    //     // else{\n    //     //     Notify.showError(\"Not Found or already processed\");\n    //     // }\n    // })\n  }\n\n  loadProductList(mobileNumber) {\n    var d = new Date();\n    var endTime = d.getTime();\n    var startTime = endTime - 172800000;\n    var data = {\n      \"endDate\": endTime,\n      \"mobileNumber\": mobileNumber ? mobileNumber : null,\n      \"noOfRecords\": 20,\n      \"role\": \"BOA\",\n      \"startDate\": 0,\n      \"txnId\": 0,\n      \"type\": \"next\",\n      \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n    AdminService.listDocs(data).then(res => {\n      let data = resolveResponse(res);\n      var activationList = data && data.result && data.result.activationList;\n      this.setState({\n        products: activationList\n      }); //this.setState({searchedproducts: activationList})\n\n      var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n      this.setState({\n        searchedproducts: roles\n      });\n      var listingIds = activationList && activationList.map(function (val, index) {\n        return val.txnId;\n      });\n\n      if (document.getElementById('showMessage')) {\n        if (activationList == null) {\n          document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n        } else {\n          document.getElementById('showMessage').innerHTML = \"\";\n        }\n      }\n\n      localStorage.setItem(\"verifyListingTxn\", listingIds);\n    });\n  }\n\n  addRole() {\n    this.setState({\n      addNewEnable: true\n    });\n  }\n\n  deleteNewRole() {\n    this.setState({\n      addNewEnable: false\n    });\n    this.setState({\n      roleName: \"\"\n    });\n  }\n\n  deleteRole() {\n    window.confirm(\"Please confirm if you want to delete the role?\");\n    return;\n  }\n\n  someAction() {\n    alert(\"action happed in other commpornt\");\n  }\n\n  editProduct(productId, sim) {\n    console.log(\"productid, row.sim\", productId, sim);\n    window.localStorage.setItem(\"selectedProductId\", productId);\n    window.localStorage.setItem(\"selectedSim\", sim);\n    this.props.history.push('/verify-edit'); // this.props.history.push({\n    //     pathname: '/edit-doc',\n    //     search: '?query=abc',\n    //     state: { rowdata: productId }\n    //   })\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  render() {\n    var roleDetails = this.state.roleDetails;\n    var reasonList = [];\n\n    for (var i = 0; i < roleDetails.length; i++) {\n      reasonList.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        divider: true,\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \" \", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: roleDetails[i].alreadyAssigned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), \" \", roleDetails[i].authority, \" \"))));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Role Management\"))), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\",\n        height: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"tableId\",\n      size: \"small\",\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        width: \"170px\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Role Name\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tr\", {\n      style: {\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, this.state.searchedproducts ? this.state.searchedproducts.map(row => React.createElement(TableRow, {\n      key: row.txnId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: \"rolesRow\",\n      id: \"roleId\" + row.id,\n      onClick: () => this.showRoleDetails(row.id),\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, row.role, \" \")), React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.deleteRole(),\n      variant: \"contained\",\n      style: {\n        marginTop: \"12px\",\n        marginLeft: \"5px\"\n      },\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \" \", React.createElement(DeleteForeverIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }))))) : \"\"))), this.state.addNewEnable ? React.createElement(React.Fragment, null, React.createElement(TextField, {\n      label: \"Add New Role\",\n      style: {\n        width: \"525px\"\n      },\n      name: \"roleName\",\n      value: this.state.roleName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.deleteNewRole(),\n      variant: \"contained\",\n      style: {\n        marginTop: \"12px\",\n        marginLeft: \"5px\"\n      },\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Delete\"), \" \") : \"\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Privileges\"), reasonList)), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.addRole(),\n      variant: \"contained\",\n      color: \"default\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Add New Role\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Update\")))), React.createElement(\"div\", {\n      style: {\n        color: \"gray\",\n        fontSize: \"15px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      id: \"showMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  tableRow: {\n    hover: {\n      \"&:hover\": {\n        background: 'green !important'\n      }\n    }\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 340,\n    maxWidth: 340\n  }\n};\nexport default RoleManagement;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/login/RoleManagement.js"],"names":["React","useState","AdminService","Typography","Button","Table","TableHead","TableRow","TableCell","TableBody","Paper","TextField","Notify","ListItem","ListItemText","Divider","InputLabel","FormControl","Select","MenuItem","Input","Grid","VisibilityIcon","PostLoginNavBar","Container","resolveResponse","DeleteForeverIcon","$","handleChangePage","event","newPage","handleChangeRowsPerPage","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","RoleManagement","Component","constructor","props","onChange","e","setState","target","name","value","zoneChange","handleChange","state","selectedReasons","checked","products","searchedproducts","searchby","listofzones","selectedZone","zone","addNewEnable","roleName","roleDetails","selectedRole","rejectedReasons","loadProductList","bind","editProduct","convertBool","addRole","showRoleDetails","deleteNewRole","deleteRole","componentDidMount","localStorage","setItem","roles","result","getListOfRoles","then","res","data","id","eq","getRoleDetails","authorites","searchOnDB","mobileNumber","d","Date","endTime","getTime","startTime","length","document","getElementById","innerHTML","listDocs","activationList","listingIds","map","val","index","txnId","window","confirm","someAction","alert","productId","sim","console","log","history","push","flag","render","reasonList","i","alreadyAssigned","authority","padding","overflow","height","whiteSpace","row","role","marginTop","marginLeft","color","fontSize","textAlign","styles","tableStyle","display","justifyContent","tableRow","hover","background","selectStyle","marginBottom","minWidth","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport $ from 'jquery'; \n\n\nconst handleChangePage = (event, newPage) => {\n    //  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {\n\n    // this.setRowsPerPage(parseInt(event.target.value, 10));\n    // this.setPage(0);\n};\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass RoleManagement extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            searchedproducts: '',\n            searchby: '',\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            addNewEnable:false,\n            roleName:\"\",\n            roleDetails:\"\",\n            selectedRole:false,\n            rejectedReasons: [\"Pack Activation\", \"Offer Upload\", \"Banner Upload\", \"Onboarding Agents\", \"Data Entry\", \"Verification\", \"Document Upload\", \"Agent Status Report\", \"Agent Audit Report\", \"Rejected Data\"]\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addRole = this.addRole.bind(this);\n        this.showRoleDetails = this.showRoleDetails.bind(this);\n\n        \n\n        this.deleteNewRole = this.deleteNewRole.bind(this);\n        this.deleteRole = this.deleteRole.bind(this);\n\n        \n\n\n    }\n\n    componentDidMount() {\n      //  this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\", \"role\");\n\n        var roles = {\"status\":200,\"message\":\"ok\",\"result\":[{\"id\":15,\"role\":\"ADMIN\"},{\"id\":16,\"role\":\"BOA\"},{\"id\":1,\"role\":\"CEO\"},{\"id\":8,\"role\":\"CP\"},{\"id\":11,\"role\":\"CSM\"},{\"id\":14,\"role\":\"DE\"},{\"id\":5,\"role\":\"DIST\"},{\"id\":10,\"role\":\"DSA\"},{\"id\":12,\"role\":\"DTH Sales Head\"},{\"id\":9,\"role\":\"FSE\"},{\"id\":6,\"role\":\"RET\"},{\"id\":7,\"role\":\"SMH\"},{\"id\":4,\"role\":\"TM\"},{\"id\":2,\"role\":\"ZBM\"},{\"id\":3,\"role\":\"ZSM\"}]}; \n        this.setState({ searchedproducts: roles && roles.result })\n\n        AdminService.getListOfRoles().then(res => {\n            let data = resolveResponse(res);\n            this.setState({ searchedproducts: data && data.result })\n        })\n\n     \n    }\n\n    showRoleDetails(id){\n        \n       // document.getElementById('roleId'+id).style.backgroundColor = \"lightgray\"; \n       \n        $('#tableId tr').eq(id)\n\n\n        AdminService.getRoleDetails(id).then(res => {\n            let data = resolveResponse(res);\n            this.setState({ roleDetails: data && data.result && data.result.authorites })\n           // this.setState({ selectedRole: true })\n        })\n\n    }\n\n    searchOnDB(mobileNumber) {\n\n     //   this.loadProductList(mobileNumber);\n\n        // AdminService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n\n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n\n        // })\n    }\n\n\n    loadProductList(mobileNumber) {\n\n\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000;\n\n        var data = {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"BOA\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        AdminService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList;\n                this.setState({ products: activationList })\n\n\n\n                //this.setState({searchedproducts: activationList})\n                var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n\n                this.setState({ searchedproducts: roles })\n\n                var listingIds = activationList && activationList.map(function (val, index) {\n                    return val.txnId\n                });\n\n                if (document.getElementById('showMessage')) {\n                    if (activationList == null) {\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    } else {\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }\n                }\n\n                localStorage.setItem(\"verifyListingTxn\", listingIds);\n            });\n\n    \n\n    }\n\n    onChange = (e) => {\n\n    this.setState({ [e.target.name]: e.target.value })\n\n        // const re = /^[0-9\\b]+$/;\n        // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        //     this.setState({ searchby: e.target.value })\n        // }\n\n    }\n\n    zoneChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addRole() {\n        this.setState({ addNewEnable: true }) \n    }\n\n    deleteNewRole(){\n        this.setState({ addNewEnable: false }) \n        this.setState({ roleName: \"\" }) \n\n\n    }\n\n    deleteRole(){\n\n        window.confirm(\"Please confirm if you want to delete the role?\"); \n        return;\n    }\n\n    someAction() {\n        alert(\"action happed in other commpornt\");\n    }\n\n\n\n\n    editProduct(productId, sim) {\n        console.log(\"productid, row.sim\", productId, sim)\n\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n    handleChange = name => event => {\n        this.setState({ ...this.state, selectedReasons: { ...this.state.selectedReasons, [name]: event.target.checked } });\n    };\n\n\n\n    render() {\n\n      \n\n        var roleDetails = this.state.roleDetails;\n        var reasonList = [];\n        for (var i = 0; i < roleDetails.length; i++) {\n            reasonList.push(\n                <div> \n                    <ListItem divider  button>\n                        <label> <input  type=\"checkbox\" checked={roleDetails[i].alreadyAssigned} /> {roleDetails[i].authority} </label>\n                    </ListItem>\n                </div>)\n\n        }\n\n\n\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                    <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n                        <Grid item xs={12} sm={9} >\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                                Role Management\n                                </Typography>\n                        </Grid>\n                        {/* <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid> */}\n\n                        {/* <Grid item xs={2} sm={2}  > \n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid> */}\n                        {/* <Grid item xs={3} sm={3} alignItems=\"left\">\n                            <Button type=\"submit\" onClick={() => this.searchOnDB(this.state.searchby)} variant=\"contained\" style={{ marginLeft: '20px' }} >Add New</Button>\n                        </Grid> */}\n\n                    </Grid>\n\n\n                        {/* <Container  > */}\n                        {/* <EnhancedTable products={this.state.products}/> */}\n\n                        {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n\n                        {/* <Typography variant=\"h5\" style={styles.tableStyle}>&nbsp;Document Verification</Typography> */}\n                        {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n\n                        {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                        <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n\n                                <Grid item xs={12} sm={6} >\n                                <div style={{ padding: \"10px\", overflow: \"auto\", height: \"400px\" }} >\n\n\n                                    <table id=\"tableId\" size=\"small\" aria-label=\"sticky table\">\n                                        \n                                            <tr style={{ width: \"170px\", whiteSpace: \"nowrap\" }}>\n                                                {/* <TableCell align=\"\">View</TableCell> */}\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Role Name\n                                                    </Typography>\n                                                </TableCell>\n\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Delete\n                                                    </Typography>\n                                                </TableCell>\n                                            </tr>\n                                        \n                                        <tr style={{ whiteSpace: \"nowrap\" }}>\n                                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                                <TableRow key={row.txnId} >\n                                                   \n                                                   <TableCell className='rolesRow' id={\"roleId\"+row.id}  onClick={() => this.showRoleDetails(row.id)}  component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        <ListItem  button>{row.role} </ListItem>\n                                                    </TableCell>\n                                                   \n                                                   \n                                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        <Button onClick={() => this.deleteRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\"> <DeleteForeverIcon/></Button> \n                                                    </TableCell>\n\n                                                </TableRow>\n                                            )) : \"\"}\n                                        </tr>\n                                    </table>\n                                    </div>\n                                    {this.state.addNewEnable ? \n                                    <>\n                                    <TextField label=\"Add New Role\" style={{width: \"525px\"}}  name=\"roleName\" value={this.state.roleName} onChange={this.onChange}/>\n                                    <Button onClick={() => this.deleteNewRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\">Delete</Button> </>\n                                    : \"\"}\n                                    \n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Typography color=\"primary\" gutterBottom>\n                                        Privileges\n                            </Typography>\n                                    {reasonList}\n                                </Grid>\n\n\n                            </Grid>\n\n                            \n                        {/* <br />\n                            <Divider /> <br /> */}\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                           \n\n                                <Grid item xs={12} sm={6} >\n\n                                    <Button onClick={() => this.addRole()} variant=\"contained\" color=\"default\"  style={{ marginLeft: '20px' }} >Add New Role</Button>\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} >Update</Button>\n\n\n                                </Grid>\n                            </Grid>\n\n\n\n\n                        </Paper>\n\n\n\n\n                        <div style={{ color: \"gray\", fontSize: \"15px\", textAlign: \"center\" }}> <br /> <span id=\"showMessage\"> </span></div>\n\n                        {/* </Container> */}\n\n              \n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n\n    selectStyle: {\n        // minWidth: '100%',\n        marginBottom: '0px',\n        minWidth: 340,\n        maxWidth: 340,\n    }\n}\n\n\n\nexport default RoleManagement;"]},"metadata":{},"sourceType":"module"}