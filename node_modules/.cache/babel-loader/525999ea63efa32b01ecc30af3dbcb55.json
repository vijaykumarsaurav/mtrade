{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/report/Report.js\";\nimport React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\nimport Title from './Title';\nimport TextField from '@material-ui/core/TextField';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport * as alasql from 'alasql';\nimport json2csv from \"json2csv\";\nimport { CSVLink } from \"react-csv\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass Report extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.value.includes(\"Select All\")) {\n        this.setState({\n          selectedZone: this.state.listofzones\n        });\n        this.setState({\n          selectAllzone: \"Remove All\"\n        });\n      }\n\n      if (e.target.value.includes(\"Remove All\")) {\n        this.setState({\n          selectedZone: []\n        });\n        this.setState({\n          selectAllzone: \"Select All\"\n        });\n      }\n    };\n\n    this.onChange = e => {\n      if (e.target.value == 'zoneWiseDetailedReport') {\n        this.setState({\n          showZoneSelection: true\n        });\n      } else {\n        this.setState({\n          showZoneSelection: false\n        });\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.myCallback = (date, fromDate) => {\n      if (fromDate === \"START_DATE\") {\n        console.log(\"date\", date);\n        this.setState({\n          startDate: new Date(date).getTime()\n        });\n      } else if (fromDate === \"END_DATE\") {\n        this.setState({\n          endDate: new Date(date).getTime()\n        });\n      }\n    };\n\n    this.state = {\n      //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n      products: '',\n      reporttype: '',\n      startDate: \"\",\n      endDate: \"\",\n      emails: \"\",\n      responseFlag: false,\n      responseFlagMsg: '',\n      listofzones: [],\n      selectedZone: [],\n      zone: '',\n      selectAllzone: 'Select All',\n      reportName: \"Download Report\"\n    };\n    this.loadProductList = this.loadProductList.bind(this);\n    this.sendReportToEmail = this.sendReportToEmail.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n  }\n\n  componentDidMount() {\n    //this.loadProductList();\n    ActivationService.getStaticData('BOA').then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        listofzones: data.result && data.result.zones\n      });\n    });\n  }\n\n  loadProductList() {}\n\n  sendReportToEmail() {\n    //if(this.state.reporttype)\n    if (!this.state.startDate) {\n      this.state.startDate = new Date().getTime();\n    }\n\n    if (!this.state.endDate) {\n      this.state.endDate = new Date().getTime();\n    }\n\n    if (!this.state.reporttype) {\n      Notify.showError(\"First select report type\");\n      return;\n    }\n\n    var data = {\n      retrieveType: 'BY_FTA_DATE',\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    var api = this.state.reporttype; // var api = \"distributorLastUploadedData\";\n    //   var data = {retrieveType: \"BY_FTA_DATE\", startDate: 1578998520000, endDate: 1582540933936}; \n    //    console.log(data); \n\n    this.setState({\n      responseFlag: false,\n      responseFlagMsg: '',\n      dataEntryData: false,\n      reportName: \"Download Report\"\n    });\n    AdminService.sentReportToEmail(data, api).then(res => {\n      let data = resolveResponse(res); // console.log(\"report data\",data.result.data);\n\n      if (api == \"agentStatusReport\" && data.result) {\n        if (data.result && data.result.verifications) this.setState({\n          products: data.result.verifications,\n          responseFlag: true,\n          reportName: \"Verification Report\"\n        });\n        if (data.result && data.result.dataEntry) this.setState({\n          dataEntryData: data.result.dataEntry\n        });\n      } else if (data.result && data.result.data && data.result.data.length) {\n        this.setState({\n          products: data.result.data,\n          responseFlag: true\n        });\n      } else {\n        this.setState({\n          responseFlagMsg: \"No Records Found\"\n        });\n      }\n    });\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  render() {\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate: ''\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Report Download\"), React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 2,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"Active\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Select type of report\"), React.createElement(Select, {\n      name: \"reporttype\",\n      value: this.state.reporttype,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"distributorLastUploadedData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Distributor Last Uploaded Data\"), React.createElement(MenuItem, {\n      value: \"detailedPendingReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Detailed Pending Report\"), React.createElement(MenuItem, {\n      value: \"rejectReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Rejected Data\"), React.createElement(MenuItem, {\n      value: \"agentStatusReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Agent Status Report\"), React.createElement(MenuItem, {\n      value: \"backOfficeReceptionReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Back Office Reception Report\"), React.createElement(MenuItem, {\n      value: \"agentWisePerformanceLog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Agent Wise Performance Report\"), React.createElement(MenuItem, {\n      value: \"agentAuditReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Agent Audit Report\"), React.createElement(MenuItem, {\n      value: \"ipacsReadyReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"IPACS Ready Report\"), React.createElement(MenuItem, {\n      value: \"noneComplainceReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"None Complaince Report\"), React.createElement(MenuItem, {\n      value: \"omniTransferReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"OMNI Transfer Report\"), React.createElement(MenuItem, {\n      value: \"summaryReportForDistributor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Summary Report For Distributor\"), React.createElement(MenuItem, {\n      value: \"zoneWiseDetailedReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Zone Wise Detailed Report \")))), this.state.showZoneSelection ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      item: true,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Select Zone\"), React.createElement(Select, {\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      multiple: true,\n      name: \"selectedZone\",\n      value: this.state.selectedZone,\n      onChange: this.zoneChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: this.state.selectAllzone,\n      value: this.state.selectAllzone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \" \", this.state.selectAllzone, \"   \")), this.state.listofzones ? this.state.listofzones.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, name)) : \"\"))) : \"\", React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      item: true,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(MaterialUIPickers, {\n      callbackFromParent: dateParam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 2,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      item: true,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"Primary\",\n      style: {\n        marginLeft: '20px'\n      },\n      onClick: this.sendReportToEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Generate Report\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 10,\n      item: true,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.responseFlag ? React.createElement(CSVLink, {\n      data: this.state.products,\n      filename: this.state.reporttype + \".csv\",\n      className: \"btn btn-primary\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      style: {\n        color: 'green'\n      },\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, this.state.reportName)) : \"\", this.state.dataEntryData ? React.createElement(CSVLink, {\n      data: this.state.dataEntryData,\n      filename: \"dataEntry.csv\",\n      className: \"btn btn-primary\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      style: {\n        color: 'green'\n      },\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Data Entry Report\")) : \"\", React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"error\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, this.state.responseFlagMsg))), React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 2,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, this.state.responseFlag ? React.createElement(Table, {\n      data: this.state.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }) : \"\")))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"12px\"\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 300,\n    maxWidth: 300\n  }\n};\nexport default Report;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/report/Report.js"],"names":["React","useState","AdminService","Typography","Button","Table","Notify","Input","ActivationService","Title","TextField","PostLoginNavBar","resolveResponse","FormControl","Select","InputLabel","Grid","Paper","MenuItem","MaterialUIPickers","DoneSharpIcon","alasql","json2csv","CSVLink","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","Report","Component","constructor","props","zoneChange","e","setState","target","name","value","includes","selectedZone","state","listofzones","selectAllzone","onChange","showZoneSelection","myCallback","date","fromDate","console","log","startDate","Date","getTime","endDate","products","reporttype","emails","responseFlag","responseFlagMsg","zone","reportName","loadProductList","bind","sendReportToEmail","convertBool","componentDidMount","getStaticData","then","res","data","result","zones","showError","retrieveType","length","api","dataEntryData","sentReportToEmail","verifications","dataEntry","flag","render","dateParam","padding","styles","multiselect","selectStyle","map","marginLeft","color","tableStyle","display","justifyContent","minWidth","marginBottom","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\n\n\nimport Title from './Title';\nimport TextField from '@material-ui/core/TextField';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\n import * as alasql from 'alasql';\n import json2csv from \"json2csv\";\n import { CSVLink } from \"react-csv\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n \nclass Report extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n          products:'',\n          reporttype: '',\n            startDate: \"\",\n            endDate: \"\",\n            emails: \"\",\n            responseFlag: false,\n            responseFlagMsg:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            reportName : \"Download Report\"\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.sendReportToEmail = this.sendReportToEmail.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n    componentDidMount() {\n        //this.loadProductList();\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data.result && data.result.zones}) \n        })\n    }\n\n    loadProductList() {\n        \n\n    }\n    onChange = e => {\n\n        if(e.target.value == 'zoneWiseDetailedReport'){\n            this.setState({ showZoneSelection: true });\n        }else{\n            this.setState({ showZoneSelection: false });\n\n        }\n        this.setState({ [e.target.name]: e.target.value });\n\n    } \n\n\n    sendReportToEmail() {\n\n        //if(this.state.reporttype)\n\n        if(!this.state.startDate){\n            this.state.startDate = new Date().getTime();\n        }\n      \n        if(!this.state.endDate){\n            this.state.endDate = new Date().getTime();\n        }\n\n    \n          \n        if(!this.state.reporttype){\n        Notify.showError(\"First select report type\");\n        return;\n        }\n\n      \n        var data = {\n            retrieveType: 'BY_FTA_DATE',\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n\n        }\n       var api = this.state.reporttype; \n      // var api = \"distributorLastUploadedData\";\n    //   var data = {retrieveType: \"BY_FTA_DATE\", startDate: 1578998520000, endDate: 1582540933936}; \n\n    //    console.log(data); \n\n      this.setState({ responseFlag : false, responseFlagMsg : '', dataEntryData :false, reportName:\"Download Report\" });\n\n\n        AdminService.sentReportToEmail(data,api)\n            .then((res) => {\n\n                let data = resolveResponse(res);\n               // console.log(\"report data\",data.result.data);\n\n\n                if(api == \"agentStatusReport\" && data.result){\n\n                    if(data.result && data.result.verifications)\n                    this.setState({ products: data.result.verifications, responseFlag : true, reportName:\"Verification Report\" });\n                    if(data.result && data.result.dataEntry)\n                    this.setState({ dataEntryData: data.result.dataEntry});\n\n                }else if(data.result && data.result.data && data.result.data.length ){\n                    this.setState({ products: data.result.data, responseFlag : true});\n                }else{\n                    this.setState({ responseFlagMsg : \"No Records Found\" });\n                }\n\n                \n            });\n    }\n\n\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            console.log(\"date\",date)\n            this.setState({ startDate: new Date(date).getTime() });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: new Date(date).getTime() });\n        }\n    };\n\n\n\n    render() {\n\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: ''\n\n        }\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n                <div style={{ padding: \"20px\" }}>\n                    <br />\n                    <Paper style={{ padding: \"40px\" }}>\n\n                        <Title>Report Download</Title>\n             \n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} >\n                                <FormControl style={styles.multiselect}>\n                                    <InputLabel htmlFor=\"Active\" required={true}>Select type of report</InputLabel>\n                                    <Select name=\"reporttype\" value={this.state.reporttype} onChange={this.onChange}>\n                                        <MenuItem value=\"distributorLastUploadedData\">Distributor Last Uploaded Data</MenuItem>\n                                        <MenuItem value=\"detailedPendingReport\">Detailed Pending Report</MenuItem>\n                                        <MenuItem value=\"rejectReport\">Rejected Data</MenuItem>\n\n                                        <MenuItem value=\"agentStatusReport\">Agent Status Report</MenuItem>\n                                        <MenuItem value=\"backOfficeReceptionReport\">Back Office Reception Report</MenuItem>\n                                        <MenuItem value=\"agentWisePerformanceLog\">Agent Wise Performance Report</MenuItem>\n\n                                        <MenuItem value=\"agentAuditReport\">Agent Audit Report</MenuItem>\n                                        <MenuItem value=\"ipacsReadyReport\">IPACS Ready Report</MenuItem>\n                                        <MenuItem value=\"noneComplainceReport\">None Complaince Report</MenuItem>\n\n                                        <MenuItem value=\"omniTransferReport\">OMNI Transfer Report</MenuItem>\n                                        <MenuItem value=\"summaryReportForDistributor\">Summary Report For Distributor</MenuItem>\n\n                                        <MenuItem value=\"zoneWiseDetailedReport\">Zone Wise Detailed Report </MenuItem>\n\n\n                                    </Select>\n                                </FormControl>\n\n                            </Grid>\n\n                            {this.state.showZoneSelection ? \n\n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                    <Select\n                                    labelId=\"demo-mutiple-name-label\"\n                                    id=\"demo-mutiple-name\"\n                                    multiple\n                                    name=\"selectedZone\"\n                                    value={this.state.selectedZone}\n                                    onChange={this.zoneChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                        <b> {this.state.selectAllzone}   </b>                                         \n                                    </MenuItem>\n                                    {this.state.listofzones ? this.state.listofzones.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                            <Grid item xs={12} sm={5} item alignItems='flex-end'>\n                                <MaterialUIPickers callbackFromParent={dateParam} />\n                            </Grid>\n\n\n\n                            </Grid>\n\n\n                            \n                            <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n\n\n                            <Grid item xs={12} sm={2} item alignItems='flex-end'>\n                            <Button variant=\"contained\" color=\"Primary\" style={{ marginLeft: '20px' }} onClick={this.sendReportToEmail} >Generate Report</Button>\n\n                                {/* <Typography component=\"h2\" variant=\"h4\" color=\"primary\" gutterBottom>\n                                    <TextField type=\"text\" value={this.state.emails} label=\"You can type multiple emails by comma(,) seperated\" style={{ width: \"100%\" }} name=\"emails\" onChange={this.onChange} />\n                                </Typography> */}\n                            </Grid>\n                            <Grid item xs={12} sm={10} item alignItems='flex-end'  >\n                                {this.state.responseFlag ? \n                                <CSVLink data={this.state.products}\n                                    filename={this.state.reporttype+\".csv\"}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        {this.state.reportName}\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n                                {this.state.dataEntryData ? \n                                <CSVLink data={this.state.dataEntryData}\n                                    filename={\"dataEntry.csv\"}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        Data Entry Report\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n\n                                {/* {this.state.responseFlagMsg ?  <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  No Records Found\n                                </Typography> : \"\" } */}\n\n                                <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  {this.state.responseFlagMsg}\n                                </Typography> \n                            </Grid>\n                        </Grid>\n\n\n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} item >\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={4} item >\n                                <br />\n                                {/* {this.state.responseFlag ?\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        <DoneSharpIcon />  Report have been sent to your email id(s).\n                                        </Typography>\n                                    : \"\"} */}\n                            </Grid>\n                            <Grid item xs={12} sm={4} item >\n\n                           \n\n                            {this.state.responseFlag ? \n                                <Table data={this.state.products}/>\n\n                            :\"\"}\n\n                            \n\n\n                            </Grid>\n\n                        </Grid>\n\n\n\n                    </Paper>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    multiselect: {\n        minWidth: \"100%\",\n        marginBottom: \"12px\"\n    },\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 300,\n          maxWidth: 300,\n    }\n}\n\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}