{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/dataentry/ResubmitDataEntryList.js\";\nimport React, { useState } from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Notify from \"../../utils/Notify\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./DataEntry.css\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass DataEntryList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onlockTransectionOnSkip = txn => {\n      var transactionsIds = {\n        transactionsIds: txn\n      };\n      ActivationService.unlockTransectionsSkip(transactionsIds).then(res => {\n        let data = resolveResponse(res);\n\n        if (data.message != 'ok') {\n          Notify.showError(\"Server Error\" + data.message);\n        }\n      });\n    };\n\n    this.onChange = e => {\n      // this.setState({[e.target.name]: e.target.value});\n      // if(this.state.searchby){\n      //     this.setState({searchedproducts: this.state.products.filter(l => {\n      //         return l.mobileNumber.toLowerCase().match( e.target.value );\n      //     })});\n      // }else{\n      //     this.setState({searchedproducts: this.state.products})\n      // }\n      // if(e.target.value.length > 10){\n      //     this.setState({searchby: e.target.value.substring(0, 10)});\n      // }\n      const re = /^[0-9\\b]+$/;\n\n      if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        this.setState({\n          searchby: e.target.value\n        });\n      }\n    };\n\n    this.state = {\n      products: [],\n      searchedproducts: null,\n      searchby: '',\n      listingTakingTime: null,\n      listofzones: [],\n      selectedZone: [],\n      zone: ''\n    };\n    this.loadProductList = this.loadProductList.bind(this);\n    this.addProduct = this.addProduct.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n    this.onChange = this.onChange.bind(this);\n  } // myhooks(){\n  //     [this.page, this.setPage] = React.useState(0);\n  //     [this.rowsPerPage, this.setRowsPerPage] = React.useState(5);\n  // }\n\n\n  componentDidMount() {\n    this.loadProductList();\n    localStorage.setItem(\"lastUrl\", \"dataentry\");\n    ActivationService.getTotalToBeProcessed().then(res => {\n      let data = resolveResponse(res);\n      console.log(data.result);\n      localStorage.setItem(\"acquisitionCount\", data.result && data.result.acquisitionCount);\n      localStorage.setItem(\"resubmitCount\", data.result && data.result.resubmitCount);\n    });\n  }\n\n  loadProductList(mobileNumber) {\n    var d = new Date();\n    var endTime = d.getTime();\n    var startTime = endTime - 259200000;\n    var data = {\n      \"endDate\": endTime,\n      \"mobileNumber\": mobileNumber ? mobileNumber : null,\n      \"noOfRecords\": 20,\n      \"role\": \"DE\",\n      \"startDate\": 0,\n      \"txnId\": 0,\n      \"type\": \"next\",\n      \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n    ActivationService.listDocsResubmit(data).then(res => {\n      let data = resolveResponse(res);\n      var activationList = data.result && data.result.activationList;\n      this.setState({\n        products: activationList\n      });\n      this.setState({\n        searchedproducts: activationList\n      });\n      var listingIds = activationList && activationList.map(function (val, index) {\n        return val.txnId;\n      });\n\n      if (listingIds) {\n        localStorage.setItem(\"dataentryListingTxn\", listingIds);\n      } else {\n        localStorage.setItem(\"dataentryListingTxn\", \"\");\n      }\n\n      document.getElementById('showMessage').innerHTML = \"\";\n\n      if (document.getElementById('showMessage')) {\n        if (activationList == null) {\n          document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n        }\n      }\n    });\n    setTimeout(() => {\n      if (this.state.searchedproducts && this.state.searchedproducts.length == 0) {\n        document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n      }\n    }, 7000);\n    ActivationService.getStaticData('DE').then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        listofzones: data && data.result && data.result.zones\n      });\n    });\n  }\n\n  addProduct() {\n    this.props.history.push('/add-product');\n  }\n\n  searchOnDB(mobileNumber) {\n    var dataentryListingTxn = localStorage.getItem(\"dataentryListingTxn\");\n    dataentryListingTxn = dataentryListingTxn && dataentryListingTxn.split(',');\n\n    if (dataentryListingTxn.length >= 1) {\n      this.onlockTransectionOnSkip(dataentryListingTxn);\n    }\n\n    this.loadProductList(mobileNumber); // console.log(mobileNumber);\n    // ActivationService.searchMobileNo(mobileNumber).then(res => {\n    //     let data = resolveResponse(res);\n    //     const selectedProduct = data.result;            \n    //     if(selectedProduct && selectedProduct.transactionId){\n    //         window.localStorage.setItem(\"dataEntryId\", selectedProduct.transactionId);\n    //         this.props.history.push('/data-edit');\n    //         // this.setState({\n    //         //     });\n    //     }\n    // })\n  }\n\n  editProduct(productId) {\n    console.log(\"productid\", productId);\n    window.localStorage.setItem(\"dataEntryId\", productId);\n    window.localStorage.setItem(\"fromSubmit\", 'yes');\n    this.props.history.push('/data-edit'); // this.props.history.push({\n    //     pathname: '/edit-doc',\n    //     search: '?query=abc',\n    //     state: { rowdata: productId }\n    //   })\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  render() {\n    //  console.log(\"this.state.products\",this.state.products); \n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 3,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Resubmit \\u2013 Data Entry\")), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Select Zone\"), React.createElement(Select, {\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      multiple: true,\n      name: \"selectedZone\",\n      value: this.state.selectedZone,\n      onChange: this.zoneChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.listofzones ? this.state.listofzones.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, name)) : \"\"))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      sm: 2,\n      alignItems: \"flex-end\",\n      alignContent: \"flex-end\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      value: this.state.searchby,\n      label: \"Search by Mobile No.\",\n      style: {\n        width: \"100%\"\n      },\n      name: \"Search by Mobile No.\",\n      name: \"searchby\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      sm: 1,\n      alignItems: \"flex-end\",\n      alignContent: \"flex-end\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      onClick: () => this.searchOnDB(this.state.searchby),\n      variant: \"contained\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(\"div\", {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\",\n        height: \"550px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      style: {\n        width: \"170px\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"View\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Mobile Number\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"NIC\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"SIM\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"PEF Count\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"NIC Count\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Distributor\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Zone\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"FTA Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Submit Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Resubmit Date\"))), React.createElement(TableBody, {\n      style: {\n        width: \"170px\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, this.state.searchedproducts ? this.state.searchedproducts.map(row => React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      onClick: () => this.editProduct(row.txnId),\n      hover: true,\n      key: row.txnId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(VisibilityIcon, {\n      style: {\n        cursor: \"hand\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, row.mobileNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, row.nic), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, row.sim), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, row.pefCount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, row.nicCount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, row.distributer), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, row.zone), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, row.ftaDate.substring(0, 10)), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, row.submitDate ? row.submitDate.substring(0, 10) : \"none\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"))) : \"\")), React.createElement(\"div\", {\n      style: {\n        color: \"gray\",\n        fontSize: \"15px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      id: \"showMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \" \")))));\n  }\n\n} //this.myhooks();\n\n\nconst handleChangePage = (event, newPage) => {\n  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {\n  this.setRowsPerPage(parseInt(event.target.value, 10));\n  this.setPage(0);\n};\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 340,\n    maxWidth: 340\n  }\n};\nexport default DataEntryList;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/dataentry/ResubmitDataEntryList.js"],"names":["React","useState","ActivationService","Typography","Button","Table","TableHead","TableRow","TableCell","Paper","TableBody","Grid","TextField","Notify","InputLabel","FormControl","Select","MenuItem","Input","VisibilityIcon","PostLoginNavBar","Container","resolveResponse","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","DataEntryList","Component","constructor","props","zoneChange","e","setState","target","name","value","onlockTransectionOnSkip","txn","transactionsIds","unlockTransectionsSkip","then","res","data","message","showError","onChange","re","test","length","searchby","state","products","searchedproducts","listingTakingTime","listofzones","selectedZone","zone","loadProductList","bind","addProduct","editProduct","convertBool","componentDidMount","localStorage","setItem","getTotalToBeProcessed","console","log","result","acquisitionCount","resubmitCount","mobileNumber","d","Date","endTime","getTime","startTime","document","getElementById","innerHTML","listDocsResubmit","activationList","listingIds","map","val","index","txnId","setTimeout","getStaticData","zones","history","push","searchOnDB","dataentryListingTxn","getItem","split","productId","window","flag","render","padding","styles","selectStyle","marginLeft","overflow","height","whiteSpace","row","cursor","nic","sim","pefCount","nicCount","distributer","ftaDate","substring","submitDate","resubmitDate","color","fontSize","textAlign","handleChangePage","event","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","parseInt","tableStyle","display","justifyContent","marginBottom","minWidth","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport \"./DataEntry.css\";\n\n\n\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass DataEntryList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts: null,\n            searchby:'',\n            listingTakingTime : null,\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n\n        this.onChange = this.onChange.bind(this);\n\n    \n     \n    }\n\n    // myhooks(){\n    //     [this.page, this.setPage] = React.useState(0);\n    //     [this.rowsPerPage, this.setRowsPerPage] = React.useState(5);\n    // }\n\n    componentDidMount() {\n        this.loadProductList();\n        localStorage.setItem(\"lastUrl\",\"dataentry\");\n        ActivationService.getTotalToBeProcessed().then(res => {\n            let data = resolveResponse(res);\n            console.log(data.result)\n            localStorage.setItem(\"acquisitionCount\",data.result && data.result.acquisitionCount ); \n            localStorage.setItem(\"resubmitCount\",data.result && data.result.resubmitCount ); \n        })\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    \n\n     \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n       \n        var  data =  {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"DE\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocsResubmit(data)\n            .then((res) => {\n              \n               \n                let data = resolveResponse(res);\n                    var activationList = data.result && data.result.activationList; \n                    this.setState({products: activationList})\n                    this.setState({searchedproducts:activationList})\n                    \n                    var listingIds = activationList && activationList.map(function(val, index){\n                        return val.txnId\n                    })\n\n                    if(listingIds){\n                        localStorage.setItem(\"dataentryListingTxn\",listingIds); \n                    }else{\n                        localStorage.setItem(\"dataentryListingTxn\",\"\"); \n                    }\n                  \n                    document.getElementById('showMessage').innerHTML = \"\";\n                    if(document.getElementById('showMessage')){\n                        if(activationList == null){\n                            document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                        }  \n                    }\n\n            });\n\n            setTimeout(() => {\n                if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                    document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n                }\n            }, 7000);\n\n            ActivationService.getStaticData('DE').then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data && data.result && data.result.zones}) \n            })\n\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : txn\n        }\n\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }  \n       });\n       \n    }\n\n    searchOnDB(mobileNumber) {\n        \n\n        var dataentryListingTxn = localStorage.getItem(\"dataentryListingTxn\");\n        dataentryListingTxn =  dataentryListingTxn && dataentryListingTxn.split(',');\n       \n        if(dataentryListingTxn.length >= 1){\n            this.onlockTransectionOnSkip(dataentryListingTxn); \n        }\n\n        this.loadProductList(mobileNumber) ;\n\n\n        // console.log(mobileNumber);\n\n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"dataEntryId\", selectedProduct.transactionId);\n        //         this.props.history.push('/data-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n           \n        // })\n    }\n\n    onChange = (e) => {\n        // this.setState({[e.target.name]: e.target.value});\n        // if(this.state.searchby){\n        //     this.setState({searchedproducts: this.state.products.filter(l => {\n        //         return l.mobileNumber.toLowerCase().match( e.target.value );\n        //     })});\n        // }else{\n        //     this.setState({searchedproducts: this.state.products})\n        // }\n        // if(e.target.value.length > 10){\n        //     this.setState({searchby: e.target.value.substring(0, 10)});\n            \n        // }\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n    }\n\n\n    editProduct(productId) {\n        console.log(\"productid\",productId )\n        \n        window.localStorage.setItem(\"dataEntryId\", productId);\n        window.localStorage.setItem(\"fromSubmit\", 'yes');\n\n        this.props.history.push('/data-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    render(){\n      \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"10px\"}}>\n                {/* <Container  > */}\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} />\n                     */}\n\n                    <Grid syt  container spacing={3} container\n                        direction=\"row\"\n                        justify=\"right\"\n                        alignItems=\"center\">\n                            <Grid item  xs={12} xs={6}>\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Resubmit – Data Entry\n                            </Typography> \n                            {/* <Typography>\n                              Record to be Processed: {this.state.recordToBeProcessed}\n                            </Typography>  */}\n                            </Grid>\n\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n                            \n\n                            <Grid item xs={10} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                          \n                        </Grid>\n\n                \n                \n\n                    <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   style={{background:\"#eeee\"}} */}\n                    <Table  size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            <TableRow >\n                            <TableCell align=\"\">View</TableCell>\n\n                            <TableCell align=\"\">Mobile Number</TableCell>\n\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                {/* <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell> */}\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow  >\n                                    <TableCell align=\"center\" onClick={() => this.editProduct(row.txnId)}  hover key={row.txnId}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    {/* <TableCell align=\"center\">{row.resubmit}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                     */}\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n                                  \n                                </TableRow>\n                            )): \"\"}\n                        </TableBody>\n                    </Table>\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n\n                    </div>\n                    {/* <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, 100]}\n                        component=\"div\"\n                        count={this.state.searchedproducts.length}\n                        rowsPerPage={5}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                \n                {/* </Container> */}\n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n//this.myhooks();\n\nconst handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n    this.setRowsPerPage(parseInt(event.target.value, 10));\n   this.setPage(0);\n  };\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n    ,\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\nexport default DataEntryList;"]},"metadata":{},"sourceType":"module"}