{"ast":null,"code":"import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport { CIRCLE_API_BASE_URL, PORTAL_STORE_API_BASE_URL, STORE_API_BASE_URL, SL_AD_LOGIN_URL, SL_AD_LOGOUT_URL } from \"../../utils/config\";\n\nclass StoreService {\n  login(credentials, key) {\n    //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n    // return axios.post(SL_AD_LOGIN_URL, credentials,  { 'headers': { 'MyServerKey': key }});\n    return axios.post(SL_AD_LOGIN_URL, credentials, '');\n  }\n\n  logout() {\n    //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n    return axios.get(SL_AD_LOGOUT_URL, AuthService.getHeader());\n  }\n\n  fetchStoreById(storeId) {\n    return axios.get(PORTAL_STORE_API_BASE_URL + '/' + storeId, AuthService.getHeader());\n  }\n\n  listStore() {\n    return axios.get(PORTAL_STORE_API_BASE_URL + '?onlyActive=false', AuthService.getHeader());\n  }\n\n  updateStore(store) {\n    return axios.post(\"\" + PORTAL_STORE_API_BASE_URL, store, AuthService.getHeader());\n  }\n\n  markAttendance(attendance) {\n    return axios.post(STORE_API_BASE_URL + '/cro/attendance', attendance, AuthService.getHeader());\n  }\n\n  save(store) {\n    return axios.post(\"\" + PORTAL_STORE_API_BASE_URL, store, AuthService.getHeader());\n  }\n\n  listCircles() {\n    return axios.get(CIRCLE_API_BASE_URL + '/portal?onlyActive=true', AuthService.getHeader());\n  }\n\n}\n\nexport default new StoreService();","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/service/StoreService.js"],"names":["axios","AuthService","CIRCLE_API_BASE_URL","PORTAL_STORE_API_BASE_URL","STORE_API_BASE_URL","SL_AD_LOGIN_URL","SL_AD_LOGOUT_URL","StoreService","login","credentials","key","post","logout","get","getHeader","fetchStoreById","storeId","listStore","updateStore","store","markAttendance","attendance","save","listCircles"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,mBAAR,EAA6BC,yBAA7B,EAAwDC,kBAAxD,EAA2EC,eAA3E,EAA2FC,gBAA3F,QAAkH,oBAAlH;;AAEA,MAAMC,YAAN,CAAmB;AAEfC,EAAAA,KAAK,CAACC,WAAD,EAAcC,GAAd,EAAmB;AAEvB;AACI;AACC,WAAOV,KAAK,CAACW,IAAN,CAAWN,eAAX,EAA4BI,WAA5B,EAAyC,EAAzC,CAAP;AAEL;;AACDG,EAAAA,MAAM,GAAG;AACR;AACK,WAAOZ,KAAK,CAACa,GAAN,CAAUP,gBAAV,EAA4BL,WAAW,CAACa,SAAZ,EAA5B,CAAP;AACL;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,WAAOhB,KAAK,CAACa,GAAN,CAAUV,yBAAyB,GAAG,GAA5B,GAAkCa,OAA5C,EAAqDf,WAAW,CAACa,SAAZ,EAArD,CAAP;AACH;;AAEDG,EAAAA,SAAS,GAAE;AACP,WAAOjB,KAAK,CAACa,GAAN,CAAUV,yBAAyB,GAAG,mBAAtC,EAA2DF,WAAW,CAACa,SAAZ,EAA3D,CAAP;AACH;;AAEDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,WAAOnB,KAAK,CAACW,IAAN,CAAW,KAAKR,yBAAhB,EAA2CgB,KAA3C,EAAkDlB,WAAW,CAACa,SAAZ,EAAlD,CAAP;AACH;;AAEDM,EAAAA,cAAc,CAACC,UAAD,EAAa;AACvB,WAAOrB,KAAK,CAACW,IAAN,CAAWP,kBAAkB,GAAG,iBAAhC,EAAmDiB,UAAnD,EAA+DpB,WAAW,CAACa,SAAZ,EAA/D,CAAP;AACH;;AAEDQ,EAAAA,IAAI,CAACH,KAAD,EAAQ;AACR,WAAOnB,KAAK,CAACW,IAAN,CAAW,KAAKR,yBAAhB,EAA2CgB,KAA3C,EAAkDlB,WAAW,CAACa,SAAZ,EAAlD,CAAP;AACH;;AAEDS,EAAAA,WAAW,GAAG;AACV,WAAOvB,KAAK,CAACa,GAAN,CAAUX,mBAAmB,GAAG,yBAAhC,EAA2DD,WAAW,CAACa,SAAZ,EAA3D,CAAP;AACH;;AApCc;;AAwCnB,eAAe,IAAIP,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nimport AuthService from \"./AuthService\";\nimport {CIRCLE_API_BASE_URL, PORTAL_STORE_API_BASE_URL, STORE_API_BASE_URL,SL_AD_LOGIN_URL,SL_AD_LOGOUT_URL} from \"../../utils/config\";\n\nclass StoreService {\n\n    login(credentials, key) {\n\n     //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n         // return axios.post(SL_AD_LOGIN_URL, credentials,  { 'headers': { 'MyServerKey': key }});\n          return axios.post(SL_AD_LOGIN_URL, credentials, '');\n\n    }\n    logout() {\n     //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n          return axios.get(SL_AD_LOGOUT_URL, AuthService.getHeader());\n    }\n\n    fetchStoreById(storeId) {\n        return axios.get(PORTAL_STORE_API_BASE_URL + '/' + storeId, AuthService.getHeader());\n    }\n\n    listStore(){\n        return axios.get(PORTAL_STORE_API_BASE_URL + '?onlyActive=false', AuthService.getHeader());\n    }\n\n    updateStore(store) {\n        return axios.post(\"\" + PORTAL_STORE_API_BASE_URL, store, AuthService.getHeader());\n    }\n\n    markAttendance(attendance) {\n        return axios.post(STORE_API_BASE_URL + '/cro/attendance', attendance, AuthService.getHeader());\n    }\n\n    save(store) {\n        return axios.post(\"\" + PORTAL_STORE_API_BASE_URL, store, AuthService.getHeader());\n    }\n\n    listCircles() {\n        return axios.get(CIRCLE_API_BASE_URL + '/portal?onlyActive=true', AuthService.getHeader());\n    }\n\n}\n\nexport default new StoreService();\n"]},"metadata":{},"sourceType":"module"}