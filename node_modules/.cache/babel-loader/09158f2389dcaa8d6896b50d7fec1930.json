{"ast":null,"code":"import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\";\nimport AuthService from \"../components/service/AuthService\";\nexport const setPackLoaded = () => async dispatch => {\n  var data = {\n    allPacks: true,\n    portal: true\n  };\n  const response = await performServerAction.post('getPrepaidPacks', data);\n  dispatch({\n    type: actionTypes.SET_PACK_LOADED,\n    payload: response\n  });\n};\nexport const getPackById = id => async dispatch => {\n  try {\n    //add getPrepaidPacksById after / in sprint 7 and 8\n    const response = await performServerAction.post('/', {\n      productId: id\n    }, AuthService.getHeader()); //sprint 8 & 9\n    // const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n    return dispatch({\n      type: actionTypes.GET_PACK_INFO_BY_ID,\n      payload: response\n    });\n  } catch (err) {\n    console.log(err, \"ERRRR\");\n  }\n};\nexport const editPackInfo = updatedInfo => async dispatch => {\n  try {\n    console.log(\"ERROR\", updatedInfo);\n    updatedInfo.activationStatus = String(updatedInfo.activationStatus);\n    updatedInfo.displayOrder = String(updatedInfo.displayOrder);\n    updatedInfo.productId = String(updatedInfo.productId);\n    updatedInfo.validityDays = String(updatedInfo.validityDays);\n    updatedInfo.active = String(updatedInfo.active); // updatedInfo.ftr =  String( updatedInfo.ftr );\n\n    updatedInfo.isFtr = String(updatedInfo.ftr);\n    const response = await performServerAction.post('updatePrepaidPack', updatedInfo, AuthService.getHeader());\n    dispatch({\n      type: actionTypes.EDIT_PACK_INFO,\n      payload: response\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const AddPackInfo = packInfo => async dispatch => {\n  try {\n    console.log(\"ERROR\", packInfo);\n    const response = await performServerAction.post('getPrepaidPacks', {\n      packInfo\n    }, AuthService.getHeader());\n    dispatch({\n      type: actionTypes.EDIT_PACK_INFO,\n      payload: response\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/action/index.js"],"names":["actionTypes","performServerAction","AuthService","setPackLoaded","dispatch","data","allPacks","portal","response","post","type","SET_PACK_LOADED","payload","getPackById","id","productId","getHeader","GET_PACK_INFO_BY_ID","err","console","log","editPackInfo","updatedInfo","activationStatus","String","displayOrder","validityDays","active","isFtr","ftr","EDIT_PACK_INFO","AddPackInfo","packInfo"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n      const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n     // const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };"]},"metadata":{},"sourceType":"module"}