{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/report/Report.js\";\nimport React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\nimport TextField from '@material-ui/core/TextField';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport { CSVLink } from \"react-csv\";\nimport * as moment from 'moment';\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass Report extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.value.includes(\"Select All\")) {\n        this.setState({\n          selectedZone: this.state.listofzones\n        });\n        this.setState({\n          selectAllzone: \"Remove All\"\n        });\n      }\n\n      if (e.target.value.includes(\"Remove All\")) {\n        this.setState({\n          selectedZone: []\n        });\n        this.setState({\n          selectAllzone: \"Select All\"\n        });\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        retrieveTypeAll: false,\n        retrieveType: \"BY_SUBMIT_DATE\"\n      });\n\n      if (e.target.value == 'zoneWiseDetailedReport') {\n        this.setState({\n          showZoneSelection: true\n        });\n      } else {\n        this.setState({\n          showZoneSelection: false\n        });\n      }\n\n      if (e.target.value == 'disconnectionReport' || e.target.value == 'reconnectionReport' || e.target.value == 'dailyActiveRetailers') {\n        this.setState({\n          showSingleDate: true\n        });\n        this.setState({\n          retrieveType: ''\n        });\n      } else {\n        this.setState({\n          showSingleDate: false\n        });\n      }\n\n      if (e.target.value == 'simSwapCount' || e.target.value == 'mpinResetCount' || e.target.value == 'reloadAndBillPayCount' || e.target.value == 'idleRetailers' || e.target.value == 'acquisitionCountReport') {\n        this.setState({\n          retrieveType: ''\n        });\n        this.setState({\n          d1DateRangeFlag: true\n        });\n      } else {\n        this.setState({\n          d1DateRangeFlag: false\n        });\n      }\n\n      if (e.target.value == 'agentStatusReport') {\n        this.setState({\n          retrieveTypeAll: true\n        });\n      }\n\n      if (e.target.value == 'agentWisePerformanceLog' || e.target.value == \"agentAuditReport\" || e.target.value == \"ipacsReadyReport\") {\n        this.setState({\n          retrieveTypeDataEntry: true\n        });\n      } else {\n        this.setState({\n          retrieveTypeDataEntry: false\n        });\n      }\n\n      this.setState({\n        responseFlag: false,\n        dataEntryData: false,\n        generateReportLoader: false,\n        responseFlagMsg: \"\",\n        resetCalander: true\n      });\n    };\n\n    this.onChangeRetriveBy = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.setState({\n        responseFlag: false,\n        dataEntryData: false,\n        generateReportLoader: false,\n        responseFlagMsg: \"\"\n      });\n    };\n\n    this.myCallback = (date, fromDate) => {\n      if (fromDate === \"START_DATE\") {\n        console.log(\"date\", date);\n        this.setState({\n          startDate: new Date(date).getTime(),\n          generateReportLoader: false,\n          responseFlag: false,\n          responseFlagMsg: \"\",\n          dataEntryData: \"\"\n        });\n        var dateObj = new Date(date);\n        dateObj.setMonth(dateObj.getMonth() + 6);\n        dateObj.setHours(23, 59, 59, 59);\n        dateObj.setDate(dateObj.getDate() - 1);\n        var endD = this.state.endDate; //console.log(\"endDate\",  new Date(this.state.endDate) ); \n\n        if (!this.state.endDate) {\n          endD = new Date();\n          endD.setHours(23, 59, 59, 59);\n        }\n\n        console.log(\"start: \" + date + \" | start+6month \" + dateObj, \"  | end date: \" + new Date(endD), endD > dateObj.getTime());\n\n        if (endD > dateObj.getTime()) {\n          this.setState({\n            disabledGenButton: true\n          });\n        } else {\n          this.setState({\n            disabledGenButton: false\n          });\n        }\n      } else if (fromDate === \"END_DATE\") {\n        this.setState({\n          endDate: new Date(date).getTime(),\n          generateReportLoader: false,\n          responseFlag: false,\n          responseFlagMsg: \"\",\n          dataEntryData: \"\"\n        });\n        this.setState({\n          disabledGenButton: false\n        });\n      }\n    };\n\n    this.state = {\n      //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n      products: '',\n      reporttype: '',\n      startDate: \"\",\n      endDate: \"\",\n      month: \"\",\n      year: '',\n      days: '',\n      day: '',\n      numofDays: [],\n      listofYear: [],\n      responseFlag: false,\n      responseFlagMsg: '',\n      listofzones: [],\n      selectedZone: [],\n      zone: '',\n      selectAllzone: 'Select All',\n      reportName: \"Download Report\",\n      generateReportLoader: false,\n      generateReportMsg: \"\",\n      roleCode: \"\",\n      retrieveType: \"BY_SUBMIT_DATE\",\n      showSingleDate: false,\n      retrieveTypeAll: false,\n      resetCalander: false,\n      filenameToGo: \"\",\n      retrieveTypeDataEntry: false,\n      d1DateRangeFlag: false\n    };\n    this.getReportDetails = this.getReportDetails.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeRetriveBy = this.onChangeRetriveBy.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n  }\n\n  dateFormat(date) {\n    return moment.unix(date / 1000).format(\"DD/MM/YYYY\"); // return moment.utc(date).format('DD-MM-YYYY');\n  }\n\n  componentDidMount() {\n    var userDetails = localStorage.getItem(\"userDetails\");\n    userDetails = userDetails && JSON.parse(userDetails);\n    this.setState({\n      roleCode: userDetails.roleCode\n    });\n    var roleCode = userDetails && userDetails.roleCode;\n\n    if (roleCode == \"ADMIN\") {\n      ActivationService.getStaticData(roleCode).then(res => {\n        let data = resolveResponse(res);\n        this.setState({\n          listofzones: data.result && data.result.zones\n        });\n      });\n    }\n\n    for (var i = 2018; i <= new Date().getFullYear(); i++) {\n      this.state.listofYear.push(i);\n    }\n\n    for (var i = 1; i <= 60; i++) {\n      this.state.numofDays.push(i);\n    }\n  }\n\n  getReportDetails() {\n    this.setState({\n      verficationname: \"\",\n      filenameToGo: this.state.reporttype\n    });\n\n    if (!this.state.startDate) {\n      var startd = new Date();\n      startd.setHours(0, 0, 0, 0);\n\n      if (this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport' || this.state.reporttype == 'dailyActiveRetailers' || this.state.reporttype == 'simSwapCount' || this.state.reporttype == 'mpinResetCount' || this.state.reporttype == 'reloadAndBillPayCount' || this.state.reporttype == 'idleRetailers' || this.state.reporttype == 'acquisitionCountReport') {\n        startd.setDate(startd.getDate() - 1);\n      }\n\n      this.state.startDate = startd.getTime();\n      this.setState({\n        startDate: startd.getTime()\n      }, () => {\n        console.log(\"startDate : setting\", this.state.startDate);\n      });\n    } else {\n      var startd = new Date(this.state.startDate);\n      startd.setHours(0, 0, 0, 0);\n      this.setState({\n        startDate: startd.getTime()\n      });\n    }\n\n    if (!this.state.endDate) {\n      var endd = new Date();\n      endd.setHours(23, 59, 59, 59);\n\n      if (this.state.reporttype == 'simSwapCount' || this.state.reporttype == 'mpinResetCount' || this.state.reporttype == 'reloadAndBillPayCount' || this.state.reporttype == 'idleRetailers' || this.state.reporttype == 'acquisitionCountReport') {\n        endd.setDate(endd.getDate() - 1);\n      }\n\n      this.state.endDate = endd.getTime();\n      this.setState({\n        endDate: endd.getTime()\n      }, () => {\n        console.log(\"endDate : setting\", this.state.endDate);\n      });\n    } else {\n      var endd = new Date(this.state.endDate);\n      endd.setHours(23, 59, 59, 59);\n      this.state.endDate = endd.getTime();\n    }\n\n    if (!this.state.reporttype) {\n      Notify.showError(\"First select report type\");\n      return;\n    }\n\n    console.log(\"year\", this.state.year, \"month\", this.state.month);\n\n    if (this.state.reporttype == 'monthlyActiveRetailers') {\n      var firstDate = new Date(\"1 \" + this.state.month + ' ' + this.state.year);\n      firstDate.setHours(0, 0, 0, 0);\n      var startDate = new Date(firstDate.getDate() + ' ' + this.state.month + ' ' + this.state.year);\n      var endd = new Date(firstDate.getFullYear(), firstDate.getMonth() + 1, 0);\n      endd.setHours(23, 59, 59, 59);\n      this.state.startDate = startDate.getTime();\n      this.setState({\n        startDate: startDate.getTime()\n      }, () => {//  console.log(\"startDate : setting\", this.state.startDate);\n      }); //   console.log(\"startDate\", new Date( this.state.startDate ));   \n\n      this.state.endDate = endd.getTime();\n      this.setState({\n        endDate: endd.getTime()\n      }, () => {// console.log(\"endDate : setting\", this.state.endDate);\n      }); //  console.log(\"endDate\", new Date( this.state.endDate ) );   \n    }\n\n    var data = {\n      retrieveType: this.state.retrieveType,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      zones: this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    console.log(\"param data\", data);\n\n    if (this.state.reporttype == 'reloadAndBillPayCount' || this.state.reporttype == 'simSwapCount' || this.state.reporttype == 'mpinResetCount' || this.state.reporttype == 'monthlyActiveRetailers' || this.state.reporttype == 'idleRetailers' || this.state.reporttype == 'acquisitionCountReport') {\n      data = {\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n      };\n    }\n\n    if (this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport' || this.state.reporttype == 'dailyActiveRetailers') {\n      data = {\n        date: this.state.startDate\n      };\n    }\n\n    if (this.state.reporttype == 'retailerOnboardedReport') {\n      data = {\n        range: this.state.day || 0\n      };\n    }\n\n    this.setState({\n      responseFlag: false,\n      responseFlagMsg: '',\n      dataEntryData: false,\n      reportName: \"Download Report\",\n      generateReportLoader: true,\n      generateReportMsg: \"Generating report please wait...\"\n    });\n    AdminService.sentReportToEmail(data, this.state.reporttype).then(res => {\n      let data = resolveResponse(res);\n\n      if (this.state.reporttype == \"agentStatusReport\" && data.result) {\n        if (data.result && data.result.verifications) this.setState({\n          products: data.result.verifications,\n          responseFlag: true,\n          reportName: \"Verification Report\"\n        });\n        if (data.result && data.result.dataEntry) this.setState({\n          dataEntryData: data.result.dataEntry\n        });\n        this.setState({\n          generateReportMsg: \"Ready to Download\",\n          verficationname: \"VerificationReport_of_\"\n        });\n        this.setState({\n          generateReportLoader: false\n        });\n      } else if (data.result && data.result.data && data.result.data.length) {\n        this.setState({\n          generateReportMsg: \"Ready to Download\"\n        });\n        this.setState({\n          products: data.result.data,\n          responseFlag: true\n        });\n\n        if (this.state.reporttype == \"detailedPendingReport\") {\n          this.setState({\n            filenameToGo: \"distributorDetailReport\"\n          });\n        }\n\n        this.setState({\n          generateReportLoader: false\n        });\n      } else {\n        this.setState({\n          generateReportMsg: \"\",\n          generateReportLoader: false\n        });\n        this.setState({\n          responseFlagMsg: \"No Records Found\"\n        });\n      }\n    });\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  render() {\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate: '',\n      showSingleDate: this.state.showSingleDate,\n      resetCalander: this.state.resetCalander,\n      generateReportLoader: this.state.generateReportLoader,\n      d1DateRangeFlag: this.state.d1DateRangeFlag\n    };\n    var adminReports = []; //POST /reports/ftaDeviationReportCsv\n\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"agentStatusReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Agent Status Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"backOfficeReceptionReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Back Office Reception Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"backOfficeReceptionReportWithDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Back Office Reception Report with Details\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"agentWisePerformanceLog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Agent Wise Performance Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"agentAuditReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Agent Audit Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"ipacsReadyReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"IPACS Ready Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"noneComplainceReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"None Compliance Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"omniTransferReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"OMNI Transfer Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"zoneWiseDetailedReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Zone Wise Detailed Report \"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"simSwapReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"SIM Swap Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"disconnectionReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"D-1 Disconnect Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"reconnectionReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"D-1 Re-connection Report\")); //sprint 8 changes\n\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"simSwapCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"D-1 Sim Swap Count Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"mpinResetCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"D-1 Mpin Reset Count Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"reloadAndBillPayCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"D-1 Reload & Bill Pay Count Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"idleRetailers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"D-1 Idle Retailers Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"monthlyActiveRetailers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"D-1 Monthly Active Retailers Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"dailyActiveRetailers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"D-1 Daily Active Retailers Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"acquisitionCountReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"D-1 SUK vs CYN Count Report\"));\n    adminReports.push(React.createElement(MenuItem, {\n      value: \"retailerOnboardedReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"D-1 Retailer Onboarded Report\")); // BY_VERIFICATION_DATE,\n    // BY_DATA_ENTRY_DATE\n\n    var agentStatusRetrieveBy = [];\n    agentStatusRetrieveBy.push(React.createElement(MenuItem, {\n      key: 'BY_VERIFICATION_DATE',\n      value: 'BY_VERIFICATION_DATE',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"By Verification Date\"));\n    agentStatusRetrieveBy.push(React.createElement(MenuItem, {\n      key: 'BY_DATA_ENTRY_DATE',\n      value: 'BY_DATA_ENTRY_DATE',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"By Data Entry Date\"));\n    var retrieveTypeFileName = this.state.retrieveType ? this.state.retrieveType.toLowerCase() + \"_\" : \"\";\n    var downloadfilename = this.state.verficationname + this.state.filenameToGo + \"_\" + retrieveTypeFileName + this.dateFormat(this.state.startDate) + \"_to_\" + this.dateFormat(this.state.endDate) + \".csv\"; //   console.log(\"this.state.reporttype\",this.state.reporttype)\n\n    if (this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport') {\n      downloadfilename = this.state.reporttype + \"_by_verification_date_\" + this.dateFormat(this.state.startDate) + \".csv\";\n    }\n\n    if (this.state.reporttype == 'dailyActiveRetailers') {\n      downloadfilename = this.state.reporttype + \"_report_of_\" + this.dateFormat(this.state.startDate) + \".csv\";\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"Report Download\"), React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 2,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"Active\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Select type of report\"), React.createElement(Select, {\n      name: \"reporttype\",\n      disabled: this.state.generateReportLoader,\n      value: this.state.reporttype,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"distributorLastUploadedData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"Distributor Uploaded Data Status\"), React.createElement(MenuItem, {\n      value: \"detailedPendingReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \"Distributor Detail Report\"), React.createElement(MenuItem, {\n      value: \"rejectReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \" Distributor Reject Data Report\"), React.createElement(MenuItem, {\n      value: \"summaryReportForDistributor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Distributor Summary Report\"), React.createElement(MenuItem, {\n      value: \"ftaDeviationReport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"FTA Deviation Report\"), this.state.roleCode === \"ADMIN\" ? adminReports : \"\"))), this.state.roleCode == \"ADMIN\" && this.state.showZoneSelection ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Select Zone\"), React.createElement(Select, {\n      disabled: this.state.generateReportLoader,\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      multiple: true,\n      name: \"selectedZone\",\n      value: this.state.selectedZone,\n      onChange: this.zoneChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: this.state.selectAllzone,\n      value: this.state.selectAllzone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \" \", this.state.selectAllzone, \"   \")), this.state.listofzones ? this.state.listofzones.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, name)) : \"\"))) : \"\", this.state.reporttype != 'disconnectionReport' && this.state.reporttype != 'reconnectionReport' && this.state.reporttype != 'simSwapCount' && this.state.reporttype != 'mpinResetCount' && this.state.reporttype != 'reloadAndBillPayCount' && this.state.reporttype != 'idleRetailers' && this.state.reporttype != 'monthlyActiveRetailers' && this.state.reporttype != 'dailyActiveRetailers' && this.state.reporttype != 'acquisitionCountReport' && this.state.reporttype != 'retailerOnboardedReport' ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"Retrieve Type\"), React.createElement(Select, {\n      disabled: this.state.generateReportLoader,\n      name: \"retrieveType\",\n      value: this.state.retrieveType,\n      onChange: this.onChangeRetriveBy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, this.state.reporttype != 'simSwapReport' ? React.createElement(MenuItem, {\n      key: 'BY_FTA_DATE',\n      value: 'BY_FTA_DATE',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"By FTA Date\") : \"\", React.createElement(MenuItem, {\n      key: 'BY_SUBMIT_DATE',\n      value: 'BY_SUBMIT_DATE',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \"By Submit Date\"), this.state.retrieveTypeDataEntry ? React.createElement(MenuItem, {\n      key: 'BY_DATA_ENTRY_DATE',\n      value: 'BY_DATA_ENTRY_DATE',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"By Data Entry Date\") : \"\", this.state.retrieveTypeAll ? agentStatusRetrieveBy : \"\"))) : \"\", this.state.reporttype == 'retailerOnboardedReport' ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"Select No. of Days\"), React.createElement(Select, {\n      disabled: this.state.generateReportLoader,\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      name: \"day\",\n      value: this.state.day,\n      onChange: this.onChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, this.state.numofDays ? this.state.numofDays.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, name)) : \"\"))) : \"\", this.state.reporttype != 'monthlyActiveRetailers' && this.state.reporttype != 'retailerOnboardedReport' ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(MaterialUIPickers, {\n      callbackFromParent: dateParam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    })) : \"\", this.state.reporttype == 'monthlyActiveRetailers' ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"Select Year\"), React.createElement(Select, {\n      disabled: this.state.generateReportLoader,\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.onChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, this.state.listofYear ? this.state.listofYear.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, name)) : \"\"))) : \"\", this.state.reporttype == 'monthlyActiveRetailers' ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \"Select Month\"), React.createElement(Select, {\n      disabled: this.state.generateReportLoader,\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      name: \"month\",\n      value: this.state.month,\n      onChange: this.onChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: \"1\",\n      value: \"jan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"January\"), React.createElement(MenuItem, {\n      key: \"2\",\n      value: \"feb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, \"February\"), React.createElement(MenuItem, {\n      key: \"3\",\n      value: \"mar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"March\"), React.createElement(MenuItem, {\n      key: \"4\",\n      value: \"apr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, \"April\"), React.createElement(MenuItem, {\n      key: \"5\",\n      value: \"may\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"May\"), React.createElement(MenuItem, {\n      key: \"6\",\n      value: \"jun\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, \"June \"), React.createElement(MenuItem, {\n      key: \"7\",\n      value: \"jul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, \"July\"), React.createElement(MenuItem, {\n      key: \"8\",\n      value: \"aug\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, \"August\"), React.createElement(MenuItem, {\n      key: \"9\",\n      value: \"sept\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"September\"), React.createElement(MenuItem, {\n      key: \"10\",\n      value: \"oct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, \"October\"), React.createElement(MenuItem, {\n      key: \"11\",\n      value: \"nov\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, \"November\"), React.createElement(MenuItem, {\n      key: \"12\",\n      value: \"dec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, \"December\")))) : \"\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 2,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      item: true,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, !this.state.generateReportLoader ? React.createElement(Button, {\n      disabled: this.state.disabledGenButton,\n      variant: \"contained\",\n      color: \"Primary\",\n      style: {\n        marginLeft: '20px'\n      },\n      onClick: this.getReportDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, \"Generate Report\") : \"\", this.state.generateReportLoader ? React.createElement(Typography, {\n      component: \"h5\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, this.state.generateReportMsg) : \"\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      item: true,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, this.state.responseFlag ? React.createElement(CSVLink, {\n      data: this.state.products //  filename={this.state.verficationname + this.state.reporttype+\"_\"+ this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"}\n      ,\n      filename: downloadfilename,\n      className: \"btn btn-primary\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      style: {\n        color: 'green'\n      },\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, this.state.reportName)) : \"\", this.state.dataEntryData ? React.createElement(CSVLink, {\n      data: this.state.dataEntryData //filename={\"dataEntry.csv\"}\n      ,\n      filename: \"DataEntryReport_of_\" + this.state.reporttype + \"_\" + this.state.retrieveType.toLowerCase() + \"_\" + this.dateFormat(this.state.startDate) + \"_to_\" + this.dateFormat(this.state.endDate) + \".csv\",\n      className: \"btn btn-primary\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      style: {\n        color: 'green'\n      },\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, \"Data Entry Report\")) : \"\", React.createElement(Typography, {\n      component: \"h5\",\n      color: \"error\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, this.state.responseFlagMsg))), React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 2,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, this.state.responseFlag ? React.createElement(Table, {\n      data: this.state.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }) : \"\")))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: '0px'\n  },\n  dateSelect: {\n    minWidth: \"100%\",\n    marginBottom: '0px'\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: '100%',\n    maxWidth: '100%'\n  }\n};\nexport default Report;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/report/Report.js"],"names":["React","useState","AdminService","Typography","Button","Table","Notify","Input","ActivationService","TextField","PostLoginNavBar","resolveResponse","FormControl","Select","InputLabel","Grid","Paper","MenuItem","MaterialUIPickers","DoneSharpIcon","CSVLink","moment","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","Report","Component","constructor","props","zoneChange","e","setState","target","name","value","includes","selectedZone","state","listofzones","selectAllzone","onChange","retrieveTypeAll","retrieveType","showZoneSelection","showSingleDate","d1DateRangeFlag","retrieveTypeDataEntry","responseFlag","dataEntryData","generateReportLoader","responseFlagMsg","resetCalander","onChangeRetriveBy","myCallback","date","fromDate","console","log","startDate","Date","getTime","dateObj","setMonth","getMonth","setHours","setDate","getDate","endD","endDate","disabledGenButton","products","reporttype","month","year","days","day","numofDays","listofYear","zone","reportName","generateReportMsg","roleCode","filenameToGo","getReportDetails","bind","convertBool","dateFormat","unix","format","componentDidMount","userDetails","localStorage","getItem","JSON","parse","getStaticData","then","res","data","result","zones","i","getFullYear","push","verficationname","startd","endd","showError","firstDate","length","range","sentReportToEmail","verifications","dataEntry","flag","render","dateParam","adminReports","agentStatusRetrieveBy","retrieveTypeFileName","toLowerCase","downloadfilename","padding","styles","multiselect","selectStyle","map","marginLeft","color","tableStyle","display","justifyContent","minWidth","marginBottom","dateSelect","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\n\nimport TextField from '@material-ui/core/TextField';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport { CSVLink } from \"react-csv\";\nimport * as moment from 'moment';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n \nclass Report extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n          products:'',\n          reporttype: '',\n            startDate: \"\",\n            endDate: \"\",\n            month: \"\",\n            year: '', \n            days: '',\n            day:'',\n            numofDays : [],\n            listofYear: [], \n            responseFlag: false,\n            responseFlagMsg:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            reportName : \"Download Report\",\n            generateReportLoader:false,\n            generateReportMsg: \"\", \n            roleCode:\"\",\n            retrieveType:\"BY_SUBMIT_DATE\", \n            showSingleDate: false, \n            retrieveTypeAll:false,\n            resetCalander:false,\n            filenameToGo:\"\",\n            retrieveTypeDataEntry:false,\n            d1DateRangeFlag:false\n        };\n        this.getReportDetails = this.getReportDetails.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeRetriveBy = this.onChangeRetriveBy.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n    dateFormat(date){ \n      return  moment.unix(date / 1000).format(\"DD/MM/YYYY\")\n\n       // return moment.utc(date).format('DD-MM-YYYY');\n    }\n\n    componentDidMount() {\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n        this.setState({roleCode: userDetails.roleCode}) ; \n        var roleCode = userDetails && userDetails.roleCode; \n    \n        if(roleCode == \"ADMIN\"){\n            ActivationService.getStaticData(roleCode).then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data.result && data.result.zones}) \n            })  \n        }\n\n        \n        for(var i = 2018; i <= new Date().getFullYear(); i++){\n           this.state.listofYear.push(i); \n        }\n        for(var i = 1; i <= 60; i++){\n            this.state.numofDays.push(i); \n        }\n       \n\n    }\n\n    onChange = e => {\n\n        this.setState({ [e.target.name]: e.target.value, retrieveTypeAll: false,  retrieveType:\"BY_SUBMIT_DATE\" });\n        if(e.target.value == 'zoneWiseDetailedReport'){\n            this.setState({ showZoneSelection: true });\n        }else{\n            this.setState({ showZoneSelection: false });\n        }\n\n        \n        if(e.target.value == 'disconnectionReport' || e.target.value == 'reconnectionReport'||  e.target.value == 'dailyActiveRetailers'){\n            this.setState({ showSingleDate: true });\n            this.setState({  retrieveType: ''});\n        }else{\n            this.setState({ showSingleDate: false });\n        }\n\n        if(e.target.value == 'simSwapCount' || e.target.value == 'mpinResetCount'||  e.target.value == 'reloadAndBillPayCount' ||  e.target.value == 'idleRetailers' ||  e.target.value == 'acquisitionCountReport'){\n            this.setState({  retrieveType: ''});\n            this.setState({ d1DateRangeFlag: true });  \n        }else{\n            this.setState({ d1DateRangeFlag: false });  \n        }\n\n        if(e.target.value == 'agentStatusReport'){\n            this.setState({ retrieveTypeAll: true });\n        }\n\n        if(e.target.value == 'agentWisePerformanceLog' || e.target.value == \"agentAuditReport\"  || e.target.value == \"ipacsReadyReport\"){\n            this.setState({ retrieveTypeDataEntry: true });\n        }else{\n            this.setState({ retrieveTypeDataEntry: false }); \n        }\n\n        this.setState({responseFlag : false, dataEntryData :false, generateReportLoader : false,  responseFlagMsg : \"\", resetCalander:true });\n\n    } \n\n    onChangeRetriveBy = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({responseFlag : false, dataEntryData :false, generateReportLoader : false,  responseFlagMsg : \"\" });\n    } \n\n    getReportDetails() {\n        this.setState({verficationname:\"\", filenameToGo : this.state.reporttype});\n\n        if(!this.state.startDate){\n            var startd = new Date(); \n            startd.setHours(0,0,0,0);\n            if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport' || this.state.reporttype =='dailyActiveRetailers' || this.state.reporttype  == 'simSwapCount' || this.state.reporttype =='mpinResetCount' || this.state.reporttype =='reloadAndBillPayCount' || this.state.reporttype == 'idleRetailers' || this.state.reporttype =='acquisitionCountReport'){\n                startd.setDate(startd.getDate() - 1);\n            }\n            this.state.startDate = startd.getTime();\n            this.setState({ startDate : startd.getTime() }, () => {\n                console.log(\"startDate : setting\", this.state.startDate);\n            }); \n\n        }else{\n            var startd = new Date(this.state.startDate); \n            startd.setHours(0,0,0,0);\n            this.setState({ startDate : startd.getTime() }); \n        }\n      \n        if(!this.state.endDate){\n            var endd = new Date(); \n            endd.setHours(23,59,59,59);   \n            if(this.state.reporttype  == 'simSwapCount' || this.state.reporttype =='mpinResetCount' || this.state.reporttype =='reloadAndBillPayCount' || this.state.reporttype == 'idleRetailers' || this.state.reporttype =='acquisitionCountReport'){\n                endd.setDate(endd.getDate() - 1);\n            } \n            this.state.endDate = endd.getTime();\n            this.setState({ endDate : endd.getTime()  }, () => {\n                console.log(\"endDate : setting\", this.state.endDate);\n            }); \n        }else{\n            var endd = new Date(this.state.endDate); \n            endd.setHours(23,59,59,59);\n            this.state.endDate = endd.getTime();\n        }\n\n          \n        if(!this.state.reporttype){\n            Notify.showError(\"First select report type\");\n            return;\n        }\n\n        console.log(\"year\",this.state.year , \"month\", this.state.month); \n\n\n        if(this.state.reporttype == 'monthlyActiveRetailers'){\n         \n            var firstDate = new Date(\"1 \" + this.state.month + ' ' + this.state.year);\n            firstDate.setHours(0,0,0,0);\n            var startDate =  new  Date(firstDate.getDate()+ ' '+ this.state.month+ ' '+ this.state.year);\n            var endd = new Date(firstDate.getFullYear(), firstDate.getMonth() + 1, 0);\n            endd.setHours(23,59,59,59);  \n            this.state.startDate = startDate.getTime();\n            this.setState({ startDate : startDate.getTime() }, () => {\n              //  console.log(\"startDate : setting\", this.state.startDate);\n            }); \n         //   console.log(\"startDate\", new Date( this.state.startDate ));   \n            this.state.endDate = endd.getTime();\n            this.setState({ endDate : endd.getTime() }, () => {\n               // console.log(\"endDate : setting\", this.state.endDate);\n            }); \n          //  console.log(\"endDate\", new Date( this.state.endDate ) );   \n        }\n\n       \n        var data = {\n               retrieveType: this.state.retrieveType,\n               startDate: this.state.startDate,\n               endDate: this.state.endDate,\n               zones: this.state.selectedZone.length ? this.state.selectedZone : null\n           } \n           console.log(\"param data\" ,data)\n\n        if(this.state.reporttype == 'reloadAndBillPayCount' || this.state.reporttype == 'simSwapCount' || this.state.reporttype == 'mpinResetCount' || this.state.reporttype == 'monthlyActiveRetailers' || this.state.reporttype =='idleRetailers' || this.state.reporttype =='acquisitionCountReport'){\n            data = {\n                startDate: this.state.startDate,\n                endDate: this.state.endDate,\n            }\n           \n        }\n       \n        if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport' || this.state.reporttype == 'dailyActiveRetailers'){\n            data = {\n                date: this.state.startDate,\n            }\n        }\n\n        if(this.state.reporttype == 'retailerOnboardedReport' ){\n            data = {\n                range: this.state.day || 0\n            }\n        }\n       \n        \n\n      this.setState({ responseFlag : false, responseFlagMsg : '', dataEntryData :false, reportName:\"Download Report\", generateReportLoader : true,generateReportMsg : \"Generating report please wait...\" });\n\n        \n        AdminService.sentReportToEmail(data,this.state.reporttype)\n            .then((res) => {\n\n                let data = resolveResponse(res);\n            \n                if(this.state.reporttype == \"agentStatusReport\" && data.result){\n\n                    if(data.result && data.result.verifications)\n                    this.setState({ products: data.result.verifications, responseFlag : true, reportName:\"Verification Report\" });\n                    if(data.result && data.result.dataEntry)\n                    this.setState({ dataEntryData: data.result.dataEntry});\n                    this.setState({ generateReportMsg:  \"Ready to Download\", verficationname:\"VerificationReport_of_\"});\n\n                    this.setState({  generateReportLoader: false});\n\n                }else if(data.result && data.result.data && data.result.data.length ){\n                    this.setState({ generateReportMsg:  \"Ready to Download\"});\n                    this.setState({ products: data.result.data, responseFlag : true});\n\n                    if(this.state.reporttype == \"detailedPendingReport\"){\n                        this.setState({ filenameToGo: \"distributorDetailReport\"});\n                    }\n                    this.setState({  generateReportLoader: false});\n\n                }else{\n                    this.setState({ generateReportMsg:  \"\",  generateReportLoader: false});\n                    this.setState({ responseFlagMsg : \"No Records Found\" });\n                }\n                \n            });\n    }\n\n\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    myCallback = (date, fromDate) => {\n\n        if (fromDate === \"START_DATE\") {\n            console.log(\"date\",date)\n            this.setState({ startDate: new Date(date).getTime(),  generateReportLoader: false, responseFlag:false, responseFlagMsg : \"\", dataEntryData:\"\" });\n       \n            var dateObj = new Date(date);\n            dateObj.setMonth(dateObj.getMonth() + 6);\n            dateObj.setHours(23,59,59,59);\n            dateObj.setDate(dateObj.getDate() - 1);\n           \n            var endD = this.state.endDate; \n            //console.log(\"endDate\",  new Date(this.state.endDate) ); \n            if(!this.state.endDate){\n                 endD = new Date(); \n                 endD.setHours(23,59,59,59);\n            }\n\n            console.log(\"start: \" +date +\" | start+6month \"+ dateObj,   \"  | end date: \"+ new Date(endD), endD > dateObj.getTime() )\n          \n            if(endD > dateObj.getTime()){\n                this.setState({ disabledGenButton: true  });\n            }else{\n                this.setState({ disabledGenButton: false  });\n            }\n            \n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: new Date(date).getTime(), generateReportLoader: false, responseFlag:false, responseFlagMsg : \"\",dataEntryData:\"\" });\n            this.setState({ disabledGenButton: false  });\n        }\n\n    };\n\n    \n\n\n\n\n\n    render() {\n\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '', \n            showSingleDate: this.state.showSingleDate,\n            resetCalander : this.state.resetCalander,\n            generateReportLoader: this.state.generateReportLoader,\n            d1DateRangeFlag: this.state.d1DateRangeFlag\n           \n\n        }\n\n        var adminReports = []; \n\n\n\n        //POST /reports/ftaDeviationReportCsv\n        adminReports.push(<MenuItem value=\"agentStatusReport\">Agent Status Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"backOfficeReceptionReport\">Back Office Reception Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"backOfficeReceptionReportWithDetails\">Back Office Reception Report with Details</MenuItem>); \n        adminReports.push(<MenuItem value=\"agentWisePerformanceLog\">Agent Wise Performance Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"agentAuditReport\">Agent Audit Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"ipacsReadyReport\">IPACS Ready Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"noneComplainceReport\">None Compliance Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"omniTransferReport\">OMNI Transfer Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"zoneWiseDetailedReport\">Zone Wise Detailed Report </MenuItem>);\n        adminReports.push(<MenuItem value=\"simSwapReport\">SIM Swap Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"disconnectionReport\">D-1 Disconnect Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"reconnectionReport\">D-1 Re-connection Report</MenuItem>);\n\n        //sprint 8 changes\n        adminReports.push(<MenuItem value=\"simSwapCount\">D-1 Sim Swap Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"mpinResetCount\">D-1 Mpin Reset Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"reloadAndBillPayCount\">D-1 Reload & Bill Pay Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"idleRetailers\">D-1 Idle Retailers Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"monthlyActiveRetailers\">D-1 Monthly Active Retailers Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"dailyActiveRetailers\">D-1 Daily Active Retailers Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"acquisitionCountReport\">D-1 SUK vs CYN Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"retailerOnboardedReport\">D-1 Retailer Onboarded Report</MenuItem>);\n\n        // BY_VERIFICATION_DATE,\n        // BY_DATA_ENTRY_DATE\n        var agentStatusRetrieveBy = []; \n        agentStatusRetrieveBy.push(<MenuItem key={'BY_VERIFICATION_DATE'} value={'BY_VERIFICATION_DATE'} >By Verification Date</MenuItem>); \n        agentStatusRetrieveBy.push(<MenuItem key={'BY_DATA_ENTRY_DATE'} value={'BY_DATA_ENTRY_DATE'} >By Data Entry Date</MenuItem>); \n       \n        var retrieveTypeFileName = this.state.retrieveType ? this.state.retrieveType.toLowerCase()+\"_\" : \"\"; \n        var downloadfilename = this.state.verficationname + this.state.filenameToGo+\"_\"+ retrieveTypeFileName + this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"; \n\n   //   console.log(\"this.state.reporttype\",this.state.reporttype)\n\n        if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport'){\n            downloadfilename =  this.state.reporttype+\"_by_verification_date_\"+this.dateFormat(this.state.startDate)+\".csv\"; \n        }\n        if(this.state.reporttype == 'dailyActiveRetailers'){\n            downloadfilename =  this.state.reporttype+\"_report_of_\"+this.dateFormat(this.state.startDate)+\".csv\"; \n        }\n\n        \n\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n                <div style={{ padding: \"20px\" }}>\n                    <br />\n                    <Paper style={{ padding: \"40px\" }}>\n\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Report Download\n                        </Typography>\n             \n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={3} >\n                                <FormControl style={styles.multiselect}>\n                                {/* ftaDeviationReport */}\n                                    <InputLabel htmlFor=\"Active\" required={true}>Select type of report</InputLabel>\n                                    <Select name=\"reporttype\" disabled={this.state.generateReportLoader} value={this.state.reporttype} onChange={this.onChange}>\n                                    <MenuItem value=\"distributorLastUploadedData\">Distributor Uploaded Data Status</MenuItem>\n                                    <MenuItem value=\"detailedPendingReport\">Distributor Detail Report</MenuItem>\n                                    <MenuItem value=\"rejectReport\"> Distributor Reject Data Report</MenuItem>\n                                    <MenuItem value=\"summaryReportForDistributor\">Distributor Summary Report</MenuItem>\n                                    <MenuItem value=\"ftaDeviationReport\">FTA Deviation Report</MenuItem>\n                                    \n                                    {this.state.roleCode===\"ADMIN\" ? adminReports : \"\"}\n                                    </Select>\n                                </FormControl>\n\n                            </Grid>\n\n                            {this.state.roleCode==\"ADMIN\" && this.state.showZoneSelection ? \n                            <Grid item xs={12} sm={3}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                    <Select \n                                    disabled={this.state.generateReportLoader}\n                                    labelId=\"demo-mutiple-name-label\"\n                                    id=\"demo-mutiple-name\"\n                                    multiple\n                                    name=\"selectedZone\"\n                                    value={this.state.selectedZone}\n                                    onChange={this.zoneChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                        <b> {this.state.selectAllzone}   </b>                                         \n                                    </MenuItem>\n                                    {this.state.listofzones ? this.state.listofzones.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                          {this.state.reporttype != 'disconnectionReport' && this.state.reporttype != 'reconnectionReport' && this.state.reporttype != 'simSwapCount' && this.state.reporttype != 'mpinResetCount' && this.state.reporttype != 'reloadAndBillPayCount' && this.state.reporttype != 'idleRetailers' &&  this.state.reporttype != 'monthlyActiveRetailers' && this.state.reporttype != 'dailyActiveRetailers' && this.state.reporttype !=  'acquisitionCountReport' &&  this.state.reporttype != 'retailerOnboardedReport'? \n                            <Grid item xs={12} sm={3}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Retrieve Type</InputLabel>\n                                    <Select\n                                    disabled={this.state.generateReportLoader}\n                                    name=\"retrieveType\"\n                                    value={this.state.retrieveType}\n                                    onChange={this.onChangeRetriveBy}\n                                    >\n                                     {this.state.reporttype != 'simSwapReport' ?  \n                                        <MenuItem key={'BY_FTA_DATE'} value={'BY_FTA_DATE'} >\n                                        By FTA Date\n                                    </MenuItem>\n                                    : \"\"} \n                                    <MenuItem key={'BY_SUBMIT_DATE'} value={'BY_SUBMIT_DATE'} >\n                                        By Submit Date\n                                    </MenuItem>\n\n                                    \n                                    {this.state.retrieveTypeDataEntry ?  \n                                        <MenuItem key={'BY_DATA_ENTRY_DATE'} value={'BY_DATA_ENTRY_DATE'} >\n                                            By Data Entry Date\n                                        </MenuItem>\n                                    : \"\"}\n\n                                    {this.state.retrieveTypeAll ? agentStatusRetrieveBy : \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                                {this.state.reporttype =='retailerOnboardedReport' ? \n                                    <Grid item xs={12} sm={3}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select No. of Days</InputLabel>\n                                        <Select \n                                        disabled={this.state.generateReportLoader}\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        \n                                        name=\"day\"\n                                        value={this.state.day}\n                                        onChange={this.onChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.numofDays ? this.state.numofDays.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                    \n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            : \"\"}\n\n                          \n                            {this.state.reporttype != 'monthlyActiveRetailers' && this.state.reporttype != 'retailerOnboardedReport' ? \n                            <Grid item xs={12} sm={3} >\n                                <MaterialUIPickers  callbackFromParent={dateParam} /> \n\n                                </Grid>\n                            : \"\"}\n\n                            {this.state.reporttype =='monthlyActiveRetailers' ? \n                                    <Grid item xs={12} sm={3}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Year</InputLabel>\n                                        <Select \n                                        disabled={this.state.generateReportLoader}\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        \n                                        name=\"year\"\n                                        value={this.state.year}\n                                        onChange={this.onChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofYear ? this.state.listofYear.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                    \n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            : \"\"}\n\n                            {this.state.reporttype =='monthlyActiveRetailers' ? \n                                <Grid item xs={12} sm={3}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Month</InputLabel>\n                                        <Select \n                                        disabled={this.state.generateReportLoader}\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        \n                                        name=\"month\"\n                                        value={this.state.month}\n                                        onChange={this.onChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        <MenuItem key='1' value='jan'>January</MenuItem>\n                                        <MenuItem key='2' value='feb'>February</MenuItem>\n                                        <MenuItem key='3' value='mar'>March</MenuItem>\n                                        <MenuItem key='4' value='apr'>April</MenuItem>\n                                        <MenuItem key='5' value='may'>May</MenuItem>\n                                        <MenuItem key='6' value='jun'>June </MenuItem>\n                                        <MenuItem key='7' value='jul'>July</MenuItem>\n                                        <MenuItem key='8' value='aug'>August</MenuItem>\n                                        <MenuItem key='9' value='sept'>September</MenuItem>\n                                        <MenuItem key='10' value='oct'>October</MenuItem>\n                                        <MenuItem key='11' value='nov'>November</MenuItem>\n                                        <MenuItem key='12' value='dec'>December</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                :\"\"}\n\n                            \n                          \n\n                            </Grid>\n\n\n                        \n\n\n                            {/*                                 \n                            <Grid syt container spacing={4} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                                <Grid item xs={12} sm={8} item alignItems='flex-end'>\n                                    <MaterialUIPickers callbackFromParent={dateParam} />\n                                </Grid>\n                            </Grid> */}\n\n                        \n\n                            \n                            <br />\n                            <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"\">\n\n\n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                \n                                {!this.state.generateReportLoader ? \n                                <Button disabled={this.state.disabledGenButton} variant=\"contained\" color=\"Primary\" style={{ marginLeft: '20px' }} onClick={this.getReportDetails} >Generate Report</Button>\n                                :\"\"}\n                                \n                                {this.state.generateReportLoader ? \n                                <Typography  component=\"h5\" color=\"primary\" gutterBottom>\n                                    {this.state.generateReportMsg}\n                                </Typography>\n                                :\"\"}\n                            </Grid>\n                            <Grid item xs={12} sm={9} item alignItems='flex-end'  >\n                                {this.state.responseFlag ? \n                                <CSVLink data={this.state.products}\n                                  //  filename={this.state.verficationname + this.state.reporttype+\"_\"+ this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"}\n                                    filename={downloadfilename}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        {this.state.reportName}\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n                                {this.state.dataEntryData ? \n                                <CSVLink data={this.state.dataEntryData}\n                                    //filename={\"dataEntry.csv\"}\n                                    filename={\"DataEntryReport_of_\"+this.state.reporttype+\"_\"+this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"} \n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        Data Entry Report\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n\n                                {/* {this.state.responseFlagMsg ?  <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  No Records Found\n                                </Typography> : \"\" } */}\n\n                                <Typography component=\"h5\" color=\"error\" gutterBottom>\n                                  {this.state.responseFlagMsg}\n                                </Typography> \n                            </Grid>\n                        </Grid>\n\n\n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} item >\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={4} item >\n                                <br />\n                                {/* {this.state.responseFlag ?\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        <DoneSharpIcon />  Report have been sent to your email id(s).\n                                        </Typography>\n                                    : \"\"} */}\n                            </Grid>\n                            <Grid item xs={12} sm={4} item >\n\n                           \n\n                            {this.state.responseFlag ? \n                                <Table data={this.state.products}/>\n\n                            :\"\"}\n\n                            \n\n\n                            </Grid>\n\n                        </Grid>\n\n\n\n                    </Paper>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    multiselect: {\n        minWidth: \"100%\",\n        marginBottom: '0px',\n    },\n    dateSelect: {\n        minWidth: \"100%\",\n        marginBottom: '0px',\n    },\n    selectStyle:{\n        // minWidth: '100%',\n          marginBottom: '0px',\n          minWidth: '100%',\n          maxWidth: '100%',\n    }\n}\n\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}