{"ast":null,"code":"import _slicedToArray from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/PostLoginNavbar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { textAlign } from '@material-ui/system';\nimport * as Menu from './LeftMenuBar';\nimport AirtellLogo from './airtellogo.png';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport ActivationService from \"./service/ActivationService\";\nimport { resolveResponse } from \"../utils/ResponseHandler\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  endMenu: {\n    display: 'flex',\n    flexDirection: 'row reverse'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }) //backgroundColor: '#f44336'\n\n  },\n  appBarShift: {\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px'\n  }, theme.mixins.toolbar, {\n    justifyContent: 'flex-end'\n  }),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\nexport default function PostLoginNavBar(props) {\n  const _React$useState = React.useState({\n    acquisitionCount: '',\n    resubmitCount: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function handleClick(e) {\n    console.log(e.target.innerText); //this.props.history.push('/login');\n  }\n\n  const mystyle = {\n    height: \"40px\",\n    width: \"30px\"\n  };\n  var userDetails = localStorage.getItem(\"userDetails\");\n  userDetails = userDetails && JSON.parse(userDetails);\n  var roleCode = userDetails && userDetails.roleCode;\n  var acquisitionCountText = '',\n      resubmitCountText = '';\n\n  if (roleCode == \"DE\" || roleCode == \"BOA\") {\n    acquisitionCountText = \"Acquisition records to be processed: \"; // ACQUISITION RECORDS TO BE PROCESSED:\n\n    resubmitCountText = \"Resubmit records to be processed:  \"; //'RESUBMIT RECORDS TO BE PROCESSED: ';\n  } //  console.log(\"propsss\", props)\n\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    justify: \"space-between\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"SL MITRA Retailer Portal\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, acquisitionCountText, \" \", localStorage.getItem(\"acquisitionCount\") || '')), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      color: \"white\"\n    },\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, resubmitCountText, \" \", localStorage.getItem(\"resubmitCount\") || '')), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"p\",\n    style: {\n      color: \"white\"\n    },\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, userDetails && userDetails.loginName ? userDetails.loginName.toUpperCase() : null))))))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      marginRight: \"73px\",\n      width: \"100px\"\n    },\n    src: AirtellLogo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, theme.direction === 'ltr' ? React.createElement(ChevronLeftIcon, {\n    style: {\n      color: \"gray\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }) : React.createElement(ChevronRightIcon, {\n    style: {\n      color: \"gray\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }), roleCode == \"ADMIN\" ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, Menu.AdminMenuList) : null, roleCode == \"BOA\" ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, Menu.BOAMenuList) : null, roleCode == \"DE\" ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, Menu.DEMenuList) : null, roleCode == \"DIST\" ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, Menu.DISTMenuList) : null, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, Menu.LogoutMenu)), React.createElement(\"main\", {\n    className: clsx(classes.content, {\n      [classes.contentShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  })));\n} // BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/PostLoginNavbar.js"],"names":["React","clsx","Link","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","Grid","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemText","textAlign","Menu","AirtellLogo","NotificationsIcon","Badge","Button","ActivationService","resolveResponse","drawerWidth","useStyles","theme","root","display","endMenu","flexDirection","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PostLoginNavBar","props","useState","acquisitionCount","resubmitCount","values","setValues","classes","open","setOpen","handleDrawerOpen","handleDrawerClose","handleClick","e","console","log","target","innerText","mystyle","height","userDetails","localStorage","getItem","JSON","parse","roleCode","acquisitionCountText","resubmitCountText","color","loginName","toUpperCase","paper","direction","AdminMenuList","BOAMenuList","DEMenuList","DISTMenuList","LogoutMenu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { textAlign } from '@material-ui/system';\nimport * as Menu from './LeftMenuBar';\nimport AirtellLogo from './airtellogo.png';\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport ActivationService from \"./service/ActivationService\";\nimport {resolveResponse} from \"../utils/ResponseHandler\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        acquisitionCount: '',\n        resubmitCount:''\n    });\n    \n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    function handleClick(e) {\n        console.log(e.target.innerText)\n        //this.props.history.push('/login');\n    }\n    const mystyle = {\n        height: \"40px\",\n        width: \"30px\"\n    };\n\n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n     \n    var roleCode = userDetails && userDetails.roleCode; \n\n\n    var acquisitionCountText='', resubmitCountText=''; \n    if(roleCode == \"DE\" || roleCode == \"BOA\"){\n        acquisitionCountText = \"Acquisition records to be processed: \" ; // ACQUISITION RECORDS TO BE PROCESSED:\n        resubmitCountText =  \"Resubmit records to be processed:  \"; //'RESUBMIT RECORDS TO BE PROCESSED: ';\n    }\n\n  //  console.log(\"propsss\", props)\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    {/* <div style={{ width: \"250px\" }}>\n                        <Typography variant=\"h6\" noWrap>\n                            SL MITRA Retailer Portal\n                    </Typography>\n                    </div>\n                    <Grid direction=\"row\" container  justify=\"space-between\"   spacing={10} style={{ paddingLeft: \"10px\", paddingRight: \"10px\"}}>\n                        <Grid item xs={12} sm={1}></Grid>\n                        <Grid item xs={12} sm={3} style={{textAlign:\"right\"}}>\n                            <Typography variant=\"p\" style={{ color: \"white\" }} noWrap>\n                              {userDetails && userDetails.loginName ? userDetails.loginName.toUpperCase() : null}\n                            </Typography> \n                        </Grid>\n                    </Grid> */}\n\n\n                        {/* sprint 7 &  8 changes */}\n                        <Grid\n                                justify=\"space-between\"\n                                container\n                            >\n                        <Grid item >\n                        <Typography variant=\"h6\" noWrap>\n                            SL MITRA Retailer Portal\n                         </Typography>\n                        </Grid>\n\n                        <Grid item >\n\n                        <Grid\n                           \n                            container\n                            direction=\"row\"\n                        >\n\n                            <Grid item >\n                                <Typography style={{ color: \"white\" }} >\n                                {acquisitionCountText} {localStorage.getItem(\"acquisitionCount\") || ''}\n                                </Typography> \n                            </Grid>\n                                <Grid item >\n                                    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                              </Grid>\n\n                            <Grid item >\n                                <Typography style={{ color: \"white\" }} noWrap>\n                                {resubmitCountText} {localStorage.getItem(\"resubmitCount\") || ''}\n                                </Typography> \n                            </Grid>\n                             <Grid item >\n                                    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                              </Grid>\n\n                           \n\n                            <Grid item>\n                                <Typography variant=\"p\" style={{ color: \"white\" }} noWrap>\n                                {userDetails && userDetails.loginName ? userDetails.loginName.toUpperCase() : null}\n                                </Typography> \n                            </Grid>\n\n\n                        </Grid>\n\n\n\n                        </Grid>\n\n                        </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <img style={{ marginRight: \"73px\", width: \"100px\" }} src={AirtellLogo} />\n\n                    {/* <img width=\"40\" style={{ color: \"red\", marginRight:\"130px\"}} src={ 'https://www.pinclipart.com/picdir/middle/498-4988102_36-53k-airtel-logos-of-indian-companies-quiz.png'} /> */}\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                {roleCode == \"ADMIN\" ? <List>{Menu.AdminMenuList}</List> : null}\n                {roleCode == \"BOA\" ? <List>{Menu.BOAMenuList}</List> : null}\n                {roleCode == \"DE\" ? <List>{Menu.DEMenuList}</List> : null}\n                {roleCode == \"DIST\" ? <List>{Menu.DISTMenuList}</List> : null}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n"]},"metadata":{},"sourceType":"module"}