{"ast":null,"code":"import _slicedToArray from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/dataentry/MaterialUIPickers.js\";\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n\n  return date;\n}\n\nexport default function MaterialUIPickers(props) {\n  //console.log(\"startDatestartDate,\",props ); \n  var requiredDate = ''; // The first commit of Material-UI\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedStartDate = _React$useState2[0],\n      setSelectedStartDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Date()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedEndDate = _React$useState4[0],\n      setSelectedEndDate = _React$useState4[1];\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date, \"START_DATE\");\n  };\n\n  const handleEndDateChange = date => {\n    // console.log(date,\"SELECTED_DATE\")\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date, \"END_DATE\");\n  }; //console.log(props)\n  // var date = new Date(); \n  // date.getMonth() - 6; \n  //  var dateObj = new Date(selectedStartDate);\n  //  var requiredDate = dateObj.setMonth(dateObj.getMonth() + 6);\n  // var currDate = new Date();\n  // var back18Month= currDate.setMonth(currDate.getMonth() - 18);\n  // console.log(new Date(back18Month),\"back18Month\");\n  // if(selectedStartDate <  back18Month){\n  //   selectedStartDate = back18Month;\n  // }\n  // if(selectedEndDate <  selectedStartDate){\n  //   selectedEndDate = requiredDate;\n  // }\n  // if(requiredDate > new Date() ) {\n  //   requiredDate = new Date();\n  // }\n\n\n  var date15Years = new Date();\n  date15Years.setFullYear(date15Years.getFullYear() - 15); //  selectedStartDate =  date;\n  // var requiredDate = selectedStartDate.setMonth(selectedStartDate.getMonth() + 6)\n  //  console.log(\"selectedStartDate\",selectedStartDate, new Date()); \n  //  if(selectedStartDate != new Date()){\n  //   selectedStartDate = null; \n  //  }\n\n  var today = new Date();\n\n  if (!props.callbackFromParent.startDate || selectedStartDate && selectedStartDate.getDate() == today.getDate() && selectedStartDate.getFullYear() == today.getFullYear() && selectedStartDate.getMonth() == today.getMonth()) {\n    setSelectedStartDate(null);\n  }\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    required: true //  emptyLabel=\"\"\n    ,\n    margin: \"normal\" //readOnly=\"true\"\n    // disabled=\"true\"\n    ,\n    disableFuture: \"true\" // autoOk={false}\n    ,\n    allowKeyboardControl: \"true\",\n    maxDate: date15Years // minDate={back18Month}\n    // minDateMessage=\"Only 18 months back report can be fatch.\"\n    ,\n    id: \"date-picker-dialog\",\n    label: \"Date of Birth\",\n    format: \"dd/MM/yyyy\",\n    value: selectedStartDate // value={selectedStartDate}\n    ,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/dataentry/MaterialUIPickers.js"],"names":["React","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","addMonths","date","months","d","getDate","setMonth","getMonth","setDate","MaterialUIPickers","props","requiredDate","useState","Date","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","handleStartDateChange","callbackFromParent","myCallback","handleEndDateChange","date15Years","setFullYear","getFullYear","today","startDate"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\n\n\nexport default function MaterialUIPickers(props) {\n  //console.log(\"startDatestartDate,\",props ); \n  var requiredDate ='';\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  var [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const handleStartDateChange = date => {\n     \n     setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n\n  };\n  const handleEndDateChange = date => {\n   // console.log(date,\"SELECTED_DATE\")\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  };\n\n  //console.log(props)\n\n  // var date = new Date(); \n  // date.getMonth() - 6; \n\n  \n  //  var dateObj = new Date(selectedStartDate);\n\n  \n\n  //  var requiredDate = dateObj.setMonth(dateObj.getMonth() + 6);\n\n\n  // var currDate = new Date();\n  // var back18Month= currDate.setMonth(currDate.getMonth() - 18);\n  // console.log(new Date(back18Month),\"back18Month\");\n\n  // if(selectedStartDate <  back18Month){\n  //   selectedStartDate = back18Month;\n  // }\n\n  // if(selectedEndDate <  selectedStartDate){\n  //   selectedEndDate = requiredDate;\n  // }\n\n  // if(requiredDate > new Date() ) {\n  //   requiredDate = new Date();\n  // }\n  var date15Years = new Date(); \n      date15Years.setFullYear( date15Years.getFullYear() - 15 );\n    //  selectedStartDate =  date;\n // var requiredDate = selectedStartDate.setMonth(selectedStartDate.getMonth() + 6)\n\n//  console.log(\"selectedStartDate\",selectedStartDate, new Date()); \n//  if(selectedStartDate != new Date()){\n//   selectedStartDate = null; \n//  }\n\n\nvar today = new Date();\nif(!props.callbackFromParent.startDate || selectedStartDate && selectedStartDate.getDate() == today.getDate() && selectedStartDate.getFullYear() == today.getFullYear() && selectedStartDate.getMonth() == today.getMonth()){\n  setSelectedStartDate(null);\n}\n\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n        required={true}\n        //  emptyLabel=\"\"\n          margin=\"normal\"\n          //readOnly=\"true\"\n          // disabled=\"true\"\n          disableFuture=\"true\"\n         // autoOk={false}\n          allowKeyboardControl=\"true\"\n          maxDate={date15Years}\n         // minDate={back18Month}\n         // minDateMessage=\"Only 18 months back report can be fatch.\"\n          id=\"date-picker-dialog\"\n          label=\"Date of Birth\"\n          format=\"dd/MM/yyyy\"\n          value={ selectedStartDate }\n         // value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        {/* <KeyboardDatePicker\n      \n          disableFuture=\"true\"\n          maxDateMessage=\"Max allowed date range is 6 months.\"\n          minDateMessage=\"End date can't be less than start date.\"\n          minDate={selectedStartDate}\n          maxDate={requiredDate}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        /> */}\n       \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}