{"ast":null,"code":"import _slicedToArray from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/dataentry/CheckboxList.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ActivationService from \"../service/ActivationService\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function CheckboxList(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checked = _React$useState2[0],\n        setChecked = _React$useState2[1]; // console.log('props.rejectionReasons', props);\n\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    alert(newChecked);\n    setChecked(newChecked);\n  };\n\n  var verifyreasons = [\"Customer - Rejection reason 1\", \"Customer - Rejection reason 2\", \"Customer - Rejection reason 3\", \"Customer - Rejection reason 4\", \"Customer - Rejection reason 5\"]; // const userDetails = JSON.parse(localStorage.getItem(\"userDetails\")); \n  // console.log(\"Role\", userDetails.roleCode);\n  // ActivationService.getStaticData(userDetails.roleCode).then(res => {\n  //     let data = resolveResponse(res);\n  //     console.log(\"Static Data vks\", data.result.rejectionReasons);\n  //     verifyreasons  =  data.result.rejectionReasons; \n  // })\n\n  return React.createElement(React.Fragment, null, React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, verifyreasons.map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value);\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"\".concat(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/dataentry/CheckboxList.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","ActivationService","resolveResponse","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","CheckboxList","props","classes","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","alert","verifyreasons","map","labelId","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CheckboxList(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n\n\n // console.log('props.rejectionReasons', props);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    alert(newChecked);\n    setChecked(newChecked);\n\n\n  };\n\n   var verifyreasons = [\"Customer - Rejection reason 1\",\"Customer - Rejection reason 2\",\"Customer - Rejection reason 3\",\"Customer - Rejection reason 4\",\"Customer - Rejection reason 5\"]\n  // const userDetails = JSON.parse(localStorage.getItem(\"userDetails\")); \n  // console.log(\"Role\", userDetails.roleCode);\n  // ActivationService.getStaticData(userDetails.roleCode).then(res => {\n  //     let data = resolveResponse(res);\n  //     console.log(\"Static Data vks\", data.result.rejectionReasons);\n  //     verifyreasons  =  data.result.rejectionReasons; \n  // })\n  \n  return (\n    <>\n   \n    <List className={classes.root}>\n      {  verifyreasons.map(value => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          \n          <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n               \n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={`${value}`} />\n             \n          </ListItem>\n        );\n      })}\n    </List>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}