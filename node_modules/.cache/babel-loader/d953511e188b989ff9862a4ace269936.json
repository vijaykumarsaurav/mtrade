{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/verify/VerifyList.js\";\nimport React, { useState } from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport Grid from '@material-ui/core/Grid';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./Verify.css\";\nimport StickyHeadTable from '../verify/StickyHeadTable';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport MaterialUIPickers from \"./MaterialUIPickers\";\nimport EnhancedTable from './EnhancedTable';\n\nconst handleChangePage = (event, newPage) => {//  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {// this.setRowsPerPage(parseInt(event.target.value, 10));\n  // this.setPage(0);\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass VerifyList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onlockTransectionOnSkip = txn => {\n      var transactionsIds = {\n        transactionsIds: txn\n      };\n      ActivationService.unlockTransectionsSkip(transactionsIds).then(res => {\n        let data = resolveResponse(res);\n\n        if (data.message != 'ok') {\n          Notify.showError(\"Server Error\" + data.message);\n        }\n      });\n    };\n\n    this.onChange = e => {\n      const re = /^[0-9\\b]+$/;\n\n      if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        this.setState({\n          searchby: e.target.value\n        });\n      }\n    };\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      products: [],\n      searchedproducts: '',\n      searchby: '',\n      listofzones: [],\n      selectedZone: [],\n      zone: ''\n    };\n    this.loadProductList = this.loadProductList.bind(this);\n    this.addProduct = this.addProduct.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadProductList(\"\");\n    localStorage.setItem(\"lastUrl\", \"verify\");\n  }\n\n  searchOnDB(mobileNumber) {\n    var verifyListingTxn = localStorage.getItem(\"verifyListingTxn\");\n    verifyListingTxn = verifyListingTxn && verifyListingTxn.split(',');\n    this.onlockTransectionOnSkip(verifyListingTxn);\n    this.loadProductList(mobileNumber); // ActivationService.searchMobileNo(mobileNumber).then(res => {\n    //     let data = resolveResponse(res);\n    //     const selectedProduct = data.result;            \n    //     if(selectedProduct && selectedProduct.transactionId){\n    //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n    //         //window.localStorage.setItem(\"selectedSim\", '');\n    //         this.props.history.push('/verify-edit');\n    //         // this.setState({\n    //         //     });\n    //     }\n    //     // else{\n    //     //     Notify.showError(\"Not Found or already processed\");\n    //     // }\n    // })\n  }\n\n  loadProductList(mobileNumber) {\n    var d = new Date();\n    var endTime = d.getTime();\n    var startTime = endTime - 172800000;\n    var data = {\n      \"endDate\": endTime,\n      \"mobileNumber\": mobileNumber ? mobileNumber : null,\n      \"noOfRecords\": 20,\n      \"role\": \"BOA\",\n      \"startDate\": 0,\n      \"txnId\": 0,\n      \"type\": \"next\",\n      \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n    ActivationService.listDocs(data).then(res => {\n      let data = resolveResponse(res);\n      var activationList = data && data.result && data.result.activationList;\n      this.setState({\n        products: activationList\n      });\n      this.setState({\n        searchedproducts: activationList\n      });\n      var listingIds = activationList && activationList.map(function (val, index) {\n        return val.txnId;\n      });\n\n      if (document.getElementById('showMessage')) {\n        if (activationList == null) {\n          document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n        } else {\n          document.getElementById('showMessage').innerHTML = \"\";\n        }\n      }\n\n      localStorage.setItem(\"verifyListingTxn\", listingIds);\n    });\n    setTimeout(() => {\n      if (this.state.searchedproducts && this.state.searchedproducts.length == 0) {\n        document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n      }\n    }, 7000);\n    ActivationService.getStaticData('BOA').then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        listofzones: data && data.result && data.result.zones\n      });\n    }); // ActivationService.testApi('BOA').then(res => {\n    //     let data = resolveResponse(res);\n    //     this.setState({listofzones: data.result && data.result.zones}) \n    // })\n  }\n\n  addProduct() {\n    this.props.history.push('/add-product');\n  }\n\n  someAction() {\n    alert(\"action happed in other commpornt\");\n  }\n\n  editProduct(productId, sim) {\n    console.log(\"productid, row.sim\", productId, sim);\n    window.localStorage.setItem(\"selectedProductId\", productId);\n    window.localStorage.setItem(\"selectedSim\", sim);\n    this.props.history.push('/verify-edit'); // this.props.history.push({\n    //     pathname: '/edit-doc',\n    //     search: '?query=abc',\n    //     state: { rowdata: productId }\n    //   })\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Document Verification\")), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Select Zone\"), React.createElement(Select, {\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      multiple: true,\n      name: \"selectedZone\",\n      value: this.state.selectedZone,\n      onChange: this.zoneChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.state.listofzones ? this.state.listofzones.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, name)) : \"\"))), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      value: this.state.searchby,\n      label: \"Search by Mobile No.\",\n      style: {\n        width: \"100%\"\n      },\n      name: \"Search by Mobile No.\",\n      name: \"searchby\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      sm: 1,\n      alignItems: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      onClick: () => this.searchOnDB(this.state.searchby),\n      variant: \"contained\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(\"div\", {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\",\n        height: \"550px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        width: \"170px\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"View\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Mobile Number\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"NIC\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"SIM\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"PEF Count\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"NIC Count\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Distributor\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Zone\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"FTA Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Resubmit\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Verified Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Submit Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Resubmit Date\"))), React.createElement(TableBody, {\n      style: {\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, this.state.searchedproducts ? this.state.searchedproducts.map(row => React.createElement(TableRow, {\n      hover: true,\n      key: row.txnId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      onClick: () => this.editProduct(row.txnId, row.sim),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(VisibilityIcon, {\n      style: {\n        cursor: \"hand\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, row.mobileNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, row.nic), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, row.sim), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, row.pefCount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, row.nicCount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, row.distributer), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, row.zone), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, row.ftaDate.substring(0, 10)), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, row.resubmit), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, row.submitDate ? row.submitDate.substring(0, 10) : \"none\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"))) : \"\")), React.createElement(\"div\", {\n      style: {\n        color: \"gray\",\n        fontSize: \"15px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      id: \"showMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \" \")))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  tableRow: {\n    hover: {\n      \"&:hover\": {\n        background: 'green !important'\n      }\n    }\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 340,\n    maxWidth: 340\n  }\n};\nexport default VerifyList;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/verify/VerifyList.js"],"names":["React","useState","ActivationService","Typography","Button","Table","TableHead","TableRow","TableCell","TableBody","Paper","TextField","Notify","InputLabel","FormControl","Select","MenuItem","Input","Grid","VisibilityIcon","PostLoginNavBar","Container","resolveResponse","StickyHeadTable","TablePagination","MaterialUIPickers","EnhancedTable","handleChangePage","event","newPage","handleChangeRowsPerPage","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","VerifyList","Component","constructor","props","onlockTransectionOnSkip","txn","transactionsIds","unlockTransectionsSkip","then","res","data","message","showError","onChange","e","re","target","value","test","length","setState","searchby","zoneChange","name","state","products","searchedproducts","listofzones","selectedZone","zone","loadProductList","bind","addProduct","editProduct","convertBool","componentDidMount","localStorage","setItem","searchOnDB","mobileNumber","verifyListingTxn","getItem","split","d","Date","endTime","getTime","startTime","document","getElementById","innerHTML","listDocs","activationList","result","listingIds","map","val","index","txnId","setTimeout","getStaticData","zones","history","push","someAction","alert","productId","sim","console","log","window","flag","render","padding","overflow","styles","selectStyle","marginLeft","height","whiteSpace","row","cursor","nic","pefCount","nicCount","distributer","ftaDate","substring","resubmit","verifiedDate","submitDate","resubmitDate","color","fontSize","textAlign","tableStyle","display","justifyContent","tableRow","hover","background","marginBottom","minWidth","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n import \"./Verify.css\";\n\nimport StickyHeadTable from '../verify/StickyHeadTable';\n\nimport TablePagination from '@material-ui/core/TablePagination';\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\n\nimport EnhancedTable from './EnhancedTable';\n\n const handleChangePage = (event, newPage) => {\n   //  this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n   // this.setRowsPerPage(parseInt(event.target.value, 10));\n  // this.setPage(0);\n  };\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass VerifyList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts:'',\n            searchby:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\",\"verify\");\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : txn\n        }\n\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }\n         \n            \n       });\n       \n    }\n\n    searchOnDB(mobileNumber) {\n\n        var verifyListingTxn = localStorage.getItem(\"verifyListingTxn\");\n        verifyListingTxn =  verifyListingTxn && verifyListingTxn.split(',');\n        this.onlockTransectionOnSkip(verifyListingTxn); \n\n        this.loadProductList(mobileNumber) ;\n       \n     \n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n        \n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n           \n        // })\n    }\n  \n    \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000; \n\n        var  data =  {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"BOA\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n        \n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList; \n                this.setState({products: activationList})\n                this.setState({searchedproducts: activationList})\n                var listingIds = activationList && activationList.map(function(val, index){\n                return val.txnId\n                });\n\n                if(document.getElementById('showMessage')){\n                    if(activationList == null){\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    }else{\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }    \n                }\n                \n                localStorage.setItem(\"verifyListingTxn\",listingIds);  \n            });\n\n        setTimeout(() => {\n            if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n            }\n        }, 7000);\n\n\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data && data.result && data.result.zones}) \n        })\n\n        // ActivationService.testApi('BOA').then(res => {\n        //     let data = resolveResponse(res);\n        //     this.setState({listofzones: data.result && data.result.zones}) \n        // })\n        \n    }\n\n    onChange = (e) => {\n\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    someAction() {\n      alert(\"action happed in other commpornt\"); \n    }\n\n   \n\n\n    editProduct(productId,sim) {\n        console.log(\"productid, row.sim\",productId, sim  )\n        \n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n      \n\n    render(){\n   \n        return(\n\n            <React.Fragment>\n                <PostLoginNavBar/>\n                \n                <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n               \n                    <Grid syt  container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                    Document Verification  \n                                </Typography> \n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"left\"> \n                                <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                </Grid>\n\n                        \n\n                {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Document Verification   \n                     <input value=\"2019-10-27\" type=\"date\"/> To <input value=\"2019-10-30\" type=\"date\"/> \n                </Typography>\n                \n                <input align=\"center\" type=\"text\" name=\"searchby\" onChange={this.onChange}  />  */}\n\n                \n\n                {/* <MaterialUIPickers/> */}\n\n                \n\n\n              \n\n\n                <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n\n                {/* <Container  > */}\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n                     \n                    {/* <Typography variant=\"h5\" style={styles.tableStyle}>&nbsp;Document Verification</Typography> */}\n                    {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                    <Table size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                <TableCell align=\"\">View</TableCell>\n                                <TableCell align=\"\">Mobile Number</TableCell>\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell>\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow hover   key={row.txnId} >\n                                    <TableCell  align=\"center\" onClick={() => this.editProduct(row.txnId,row.sim)}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\" >{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    <TableCell align=\"center\">{row.resubmit}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n\n\n                                    {/* <TableCell align=\"center\">{this.convertBool(row.showRecent)}</TableCell> */}\n                                  \n\n                                </TableRow>\n                            )):  \"\"}\n                        </TableBody>\n                    </Table>\n\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n     \n                \n                {/* </Container> */}\n\n                </div>\n                {/* <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={10}\n                        rowsPerPage={10}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n    \n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\n\nexport default VerifyList;"]},"metadata":{},"sourceType":"module"}