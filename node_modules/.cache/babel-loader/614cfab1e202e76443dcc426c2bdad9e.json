{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/backoffice/CurrentMSISDNStatus.js\";\nimport React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ActivationService from \"../service/ActivationService\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport SimpleExpansionPanel from './SimpleExpansionPanel';\n\nclass CurrentMSISDNStatus extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      // this.setState({searchby: e.target.value})\n      const re = /^[0-9\\b]+$/;\n\n      if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        this.setState({\n          searchby: e.target.value\n        });\n      }\n    };\n\n    this.state = {\n      products: [],\n      retailerOnboardExcelTemplatePath: \"\",\n      retailerDeleteExcelTemplatePath: \"\",\n      deletefile: '',\n      searchby: '',\n      msisdnDetails: '',\n      uploadResponse: '',\n      // [{laId: \"b0208057\", reason : \"Given Laid already created\"},{laId: \"b0208058\", reason : \"Given Laid already created\"}],\n      deleteResponse: \"\"\n    };\n    this.searchRetailer = this.searchRetailer.bind(this);\n  }\n\n  componentDidMount() {// this.getAdmminStaticData();\n    //    ActivationService.getStaticData('ADMIN').then(res => {\n    //     let data = resolveResponse(res);\n    //     this.setState({listofzones: data.result && data.result.zones}) \n    // })\n  }\n\n  searchRetailer() {\n    if (!this.state.searchby) {\n      Notify.showError(\"Type MSISDN\");\n      return;\n    }\n\n    var userDetails = localStorage.getItem(\"userDetails\");\n    userDetails = userDetails && JSON.parse(userDetails);\n    AdminService.searchMSISDN(this.state.searchby).then(res => {\n      var data = resolveResponse(res, \"\");\n\n      if (data.status === 401) {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n        return;\n      }\n\n      if (data.result && data.result.data) {\n        this.setState({\n          msisdnDetails: data.result.data\n        });\n      } else {\n        // Notify.showError(\"No Such MSISDN found\"); \n        this.setState({\n          msisdnDetails: []\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        padding: \"15px\",\n        position: \"fixed\",\n        width: \"97%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 24,\n      container: true,\n      direction: \"row\",\n      justify: \"right\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"MSISDN Record History  - Search\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      type: \"text\",\n      value: this.state.searchby,\n      label: \" Search MSISDN \",\n      style: {\n        width: \"100%\"\n      },\n      name: \"searchby\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      item: true,\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      startIcon: React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      color: \"\",\n      style: {\n        marginLeft: '20px'\n      },\n      onClick: this.searchRetailer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Search\")))), React.createElement(Table, {\n      style: {\n        marginTop: '100px'\n      },\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        width: \"170px\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Zone \"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"MSISDN\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"NIC No.\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Sim No.\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"FTA Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Submit Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Resubmit Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Verification Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Data Entered Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Omni Transfer Date\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Verify By\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Verifiy Comment\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Verification Status\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Data Entered By\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Distributor Name\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Distributor Number\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Retailer Number\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Omni Status\"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Image Count \"), React.createElement(TableCell, {\n      align: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Ref Number \"))), React.createElement(TableBody, {\n      style: {\n        width: \"\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.msisdnDetails ? this.state.msisdnDetails.map(row => React.createElement(TableRow, {\n      hover: true,\n      key: row.txnId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, row.zone), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, row.msisdnNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, row.nicNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, row.simNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, row.ftaDate), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, row.submitDate), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, row.resubmitDate), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, row.verificationDate), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, row.dataEnteredDate), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, row.omniTransferDate), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, row.verifyBy), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, row.verifiyComment), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, row.verificationStatus), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, row.dataEnteredBy), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, row.distributorName), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, row.distributorNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, row.retailerNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, row.omniStatus), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, row.imageCount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, row.refNumber))) : \"\"))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  }\n};\nexport default CurrentMSISDNStatus;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/backoffice/CurrentMSISDNStatus.js"],"names":["React","useState","AdminService","Typography","Button","Table","TableHead","TableRow","TableCell","TableBody","Notify","ListItem","ListItemText","CloudUploadIcon","DeleteIcon","SearchIcon","PostLoginNavBar","Container","TextField","Link","Grid","Paper","Title","InputLabel","ActivationService","resolveResponse","SimpleExpansionPanel","CurrentMSISDNStatus","Component","constructor","props","onChange","e","re","target","value","test","length","setState","searchby","state","products","retailerOnboardExcelTemplatePath","retailerDeleteExcelTemplatePath","deletefile","msisdnDetails","uploadResponse","deleteResponse","searchRetailer","bind","componentDidMount","showError","userDetails","localStorage","getItem","JSON","parse","searchMSISDN","then","res","data","status","clear","history","push","result","render","padding","position","width","textAlign","marginLeft","marginTop","whiteSpace","map","row","txnId","zone","msisdnNumber","nicNumber","simNumber","ftaDate","submitDate","resubmitDate","verificationDate","dataEnteredDate","omniTransferDate","verifyBy","verifiyComment","verificationStatus","dataEnteredBy","distributorName","distributorNumber","retailerNumber","omniStatus","imageCount","refNumber","styles","tableStyle","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,mBAAN,SAAkC3B,KAAK,CAAC4B,SAAxC,CAAkD;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,QAtBmB,GAsBPC,CAAD,IAAO;AACf;AACC,YAAMC,EAAE,GAAG,YAAX;;AACA,UAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,EAAnB,IAAyBF,EAAE,CAACG,IAAH,CAAQJ,CAAC,CAACE,MAAF,CAASC,KAAjB,KAA2BH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeE,MAAf,IAAyB,EAAjF,EAAqF;AACjF,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEP,CAAC,CAACE,MAAF,CAASC;AAApB,SAAd;AACH;AAEJ,KA7BkB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,gCAAgC,EAAE,EAFzB;AAGTC,MAAAA,+BAA+B,EAAE,EAHxB;AAITC,MAAAA,UAAU,EAAC,EAJF;AAKTL,MAAAA,QAAQ,EAAC,EALA;AAMTM,MAAAA,aAAa,EAAE,EANN;AAOTC,MAAAA,cAAc,EAAE,EAPP;AAOW;AACpBC,MAAAA,cAAc,EAAC;AARN,KAAb;AAaA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAiBDC,EAAAA,iBAAiB,GAAG,CACjB;AACH;AACA;AACA;AACA;AACC;;AAGDF,EAAAA,cAAc,GAAE;AAER,QAAG,CAAC,KAAKR,KAAL,CAAWD,QAAf,EAAwB;AACpB7B,MAAAA,MAAM,CAACyC,SAAP,CAAiB,aAAjB;AACA;AACH;;AAED,QAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAlB;AACAF,IAAAA,WAAW,GAAGA,WAAW,IAAIG,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAA7B;AAEAlD,IAAAA,YAAY,CAACuD,YAAb,CAA0B,KAAKjB,KAAL,CAAWD,QAArC,EAA+CmB,IAA/C,CAAoDC,GAAG,IAAI;AACvD,UAAIC,IAAI,GAAEnC,eAAe,CAACkC,GAAD,EAAM,EAAN,CAAzB;;AAEI,UAAGC,IAAI,CAACC,MAAL,KAAc,GAAjB,EAAqB;AACjBR,QAAAA,YAAY,CAACS,KAAb;AACA,aAAKhC,KAAL,CAAWiC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACA;AACH;;AAED,UAAGJ,IAAI,CAACK,MAAL,IAAeL,IAAI,CAACK,MAAL,CAAYL,IAA9B,EAAmC;AAC/B,aAAKtB,QAAL,CAAc;AAAEO,UAAAA,aAAa,EAAIe,IAAI,CAACK,MAAL,CAAYL;AAA/B,SAAd;AACH,OAFD,MAEK;AACF;AACC,aAAKtB,QAAL,CAAc;AAAEO,UAAAA,aAAa,EAAI;AAAnB,SAAd;AACH;AAEJ,KAhBL;AAoBP;;AASDqB,EAAAA,MAAM,GAAG;AAEL,WAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQA;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACA,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,QAAQ,EAAC,OAA1B;AAAmCC,QAAAA,KAAK,EAAC;AAAzC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,GAAG,MAAT;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,OAAO,EAAE,EAA9B;AAAkC,MAAA,SAAS,MAA3C;AACA,MAAA,SAAS,EAAC,KADV;AAEA,MAAA,OAAO,EAAC,OAFR;AAGA,MAAA,UAAU,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAwD,MAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADA,CAJJ,EAWI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,IAAI,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWD,QAAzC;AAAoD,MAAA,KAAK,EAAC,iBAA1D;AAA4E,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAAnF;AAAsG,MAAA,IAAI,EAAC,UAA3G;AAAsH,MAAA,QAAQ,EAAE,KAAKtC,QAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CAXJ,EAcI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,IAAI,MAA9B;AAA+B,MAAA,KAAK,EAAE;AAACuC,QAAAA,SAAS,EAAC;AAAX,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAkC,MAAA,OAAO,EAAC,WAA1C;AAAsD,MAAA,KAAK,EAAC,EAA5D;AAA+D,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAtE;AAA8F,MAAA,OAAO,EAAE,KAAKvB,cAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAdJ,CAFJ,CAJJ,EA6BI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACwB,QAAAA,SAAS,EAAE;AAAZ,OAAd;AAAqC,oBAAW,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAACH,QAAAA,KAAK,EAAC,OAAP;AAAeI,QAAAA,UAAU,EAAE;AAA3B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,EAOI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,EASI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATJ,EAUI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVJ,EAWI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXJ,EAYI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZJ,EAaI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbJ,EAcI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAdJ,EAeI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAfJ,EAgBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBJ,EAiBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjBJ,EAkBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAlBJ,EAmBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBJ,EAoBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBJ,EAqBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBJ,CADJ,CADR,EA4BQ,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAC,EAAP;AAAUI,QAAAA,UAAU,EAAE;AAAtB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjC,KAAL,CAAWK,aAAX,GAA2B,KAAKL,KAAL,CAAWK,aAAX,CAAyB6B,GAAzB,CAA6BC,GAAG,IACxD,oBAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAkB,MAAA,GAAG,EAAEA,GAAG,CAACC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,GAAG,CAACE,IAA/B,CADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,GAAG,CAACG,YAAhC,CAFJ,EAGI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BH,GAAG,CAACI,SAA/B,CAHJ,EAII,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,GAAG,CAACK,SAA/B,CAJJ,EAKI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BL,GAAG,CAACM,OAA/B,CALJ,EAMI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BN,GAAG,CAACO,UAA/B,CANJ,EAOI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BP,GAAG,CAACQ,YAA/B,CAPJ,EAQI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BR,GAAG,CAACS,gBAA/B,CARJ,EASI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BT,GAAG,CAACU,eAA/B,CATJ,EAWI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BV,GAAG,CAACW,gBAA/B,CAXJ,EAYI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BX,GAAG,CAACY,QAA/B,CAZJ,EAaI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BZ,GAAG,CAACa,cAA/B,CAbJ,EAcI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2Bb,GAAG,CAACc,kBAA/B,CAdJ,EAeI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2Bd,GAAG,CAACe,aAA/B,CAfJ,EAgBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2Bf,GAAG,CAACgB,eAA/B,CAhBJ,EAiBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BhB,GAAG,CAACiB,iBAA/B,CAjBJ,EAkBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BjB,GAAG,CAACkB,cAA/B,CAlBJ,EAmBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BlB,GAAG,CAACmB,UAA/B,CAnBJ,EAoBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BnB,GAAG,CAACoB,UAA/B,CApBJ,EAqBI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BpB,GAAG,CAACqB,SAA/B,CArBJ,CADwB,CAA3B,GAyBI,EA1BT,CA5BR,CA7BJ,CARA,CAFJ;AA8QH;;AAnW6C;;AAuWlD,MAAMC,MAAM,GAAG;AACXC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,cAAc,EAAE;AAFR;AADD,CAAf;AAQA,eAAezE,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport SimpleExpansionPanel from './SimpleExpansionPanel';\n\nclass CurrentMSISDNStatus extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            retailerOnboardExcelTemplatePath: \"\",\n            retailerDeleteExcelTemplatePath: \"\",\n            deletefile:'', \n            searchby:'',\n            msisdnDetails: '',\n            uploadResponse: '', // [{laId: \"b0208057\", reason : \"Given Laid already created\"},{laId: \"b0208058\", reason : \"Given Laid already created\"}],\n            deleteResponse:\"\"\n\n\n        };\n       \n        this.searchRetailer = this.searchRetailer.bind(this);\n    }\n\n  \n\n\n\n    onChange = (e) => {\n       // this.setState({searchby: e.target.value})\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n\n    }\n\n\n\n    componentDidMount() {\n       // this.getAdmminStaticData();\n    //    ActivationService.getStaticData('ADMIN').then(res => {\n    //     let data = resolveResponse(res);\n    //     this.setState({listofzones: data.result && data.result.zones}) \n    // })\n    }\n\n   \n    searchRetailer(){\n       \n            if(!this.state.searchby){\n                Notify.showError(\"Type MSISDN\");\n                return;\n            }\n    \n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n    \n            AdminService.searchMSISDN(this.state.searchby).then(res => {\n                var data =resolveResponse(res, \"\");\n\n                    if(data.status===401){\n                        localStorage.clear();\n                        this.props.history.push(\"/login\");\n                        return;\n                    }\n\n                    if(data.result && data.result.data){\n                        this.setState({ msisdnDetails :  data.result.data })\n                    }else{\n                       // Notify.showError(\"No Such MSISDN found\"); \n                        this.setState({ msisdnDetails :  [] })\n                    }\n\n                });\n        \n              \n \n    }\n\n   \n\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment >\n                <PostLoginNavBar />\n\n\n                \n\n\n\n            <div style={{ padding: \"20px\" }} >\n\n\n                  \n                <Paper style={{padding:\"15px\", position:\"fixed\", width:\"97%\"}} >\n                \n                    <Grid syt  container spacing={24} container\n                    direction=\"row\"\n                    justify=\"right\"\n                    alignItems=\"center\">\n                        <Grid item xs={12} sm={8} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                          {/* Current Status of MSISDN Search   */}\n                          MSISDN Record History  - Search\n                        </Typography> \n                        </Grid>\n\n                        <Grid item xs={12} sm={2} item > \n                                <TextField type=\"text\" value={this.state.searchby } label=\" Search MSISDN \" style={{ width: \"100%\" }} name=\"searchby\" onChange={this.onChange} />\n                        </Grid>\n                        <Grid item xs={12} sm={2} item style={{textAlign:\"left\"}} > \n                            <Button startIcon={<SearchIcon/>} variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={this.searchRetailer} >Search</Button>\n                        </Grid>\n                    </Grid>\n\n                 </Paper>\n                        \n\n                {/* <Paper style={{padding:\"20px\", marginTop: '100px'}} > */}\n                <Table style={{marginTop: '100px'}}  aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                <TableCell align=\"\">Zone </TableCell>\n                                <TableCell align=\"\">MSISDN</TableCell>\n                                <TableCell align=\"\">NIC No.</TableCell>\n                                <TableCell align=\"\">Sim No.</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n                               \n                                <TableCell align=\"\">Verification Date</TableCell>\n                                <TableCell align=\"\">Data Entered Date</TableCell>\n                                <TableCell align=\"\">Omni Transfer Date</TableCell>\n                                <TableCell align=\"\">Verify By</TableCell>\n                                <TableCell align=\"\">Verifiy Comment</TableCell>\n                                <TableCell align=\"\">Verification Status</TableCell>\n                                <TableCell align=\"\">Data Entered By</TableCell>\n                                <TableCell align=\"\">Distributor Name</TableCell>\n                                <TableCell align=\"\">Distributor Number</TableCell>\n                                <TableCell align=\"\">Retailer Number</TableCell>\n                                <TableCell align=\"\">Omni Status</TableCell>\n                                <TableCell align=\"\">Image Count </TableCell>\n                                <TableCell align=\"\">Ref Number </TableCell>\n                                \n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                            {this.state.msisdnDetails ? this.state.msisdnDetails.map(row => (\n                                <TableRow hover   key={row.txnId} >\n                                    <TableCell align=\"center\">{row.zone}</TableCell> \n                                    <TableCell align=\"center\" >{row.msisdnNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.nicNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.simNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate}</TableCell>\n                                    <TableCell align=\"center\">{row.submitDate}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate}</TableCell>\n                                    <TableCell align=\"center\">{row.verificationDate}</TableCell>\n                                    <TableCell align=\"center\">{row.dataEnteredDate}</TableCell>\n\n                                    <TableCell align=\"center\">{row.omniTransferDate}</TableCell>\n                                    <TableCell align=\"center\">{row.verifyBy}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiyComment}</TableCell>\n                                    <TableCell align=\"center\">{row.verificationStatus}</TableCell>\n                                    <TableCell align=\"center\">{row.dataEnteredBy}</TableCell>\n                                    <TableCell align=\"center\">{row.distributorName}</TableCell>\n                                    <TableCell align=\"center\">{row.distributorNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.retailerNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.omniStatus}</TableCell>\n                                    <TableCell align=\"center\">{row.imageCount}</TableCell>\n                                    <TableCell align=\"center\">{row.refNumber}</TableCell>\n\n                                </TableRow>\n                            )):  \"\"}\n                        </TableBody>\n                    </Table>\n\n                          {/* </Paper>  */}\n                          \n                          \n                           {/* {this.state.msisdnDetails ? this.state.msisdnDetails.map(row => (\n                               <>  <br />\n                              <Paper style={{padding:\"20px\"}} >\n                                <Grid syt  container spacing={2} container\n                                    direction=\"row\"\n                                    justify=\"right\"\n                                    alignItems=\"center\">\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Zone\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.zone} />  \n                                        </Grid>\n                         \n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"MSISDN\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.msisdnNumber} />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"NIC Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.nicNumber} />  \n                                        </Grid>\n                                    \n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Sim Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.simNumber} />  \n                                        </Grid>\n                                        \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"FTA Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.ftaDate} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Submit Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.submitDate} />  \n                                        </Grid>\n\n\n                                       \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verification Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verificationDate} />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Data Entered Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.dataEnteredDate} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Resubmit Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.resubmitDate} />  \n                                        </Grid>\n\n                                      \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Omni Transfer Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.omniTransferDate} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verify By\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verifyBy} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verifiy Comment\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verifiyComment} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verification Status\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verificationStatus } />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Data Entered By\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.dataEnteredBy } />  \n                                        </Grid>\n                                        \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Distributor Name\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.distributorName } />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Distributor Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.distributorNumber } />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Retailer Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.retailerNumber } />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Omni Status\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.omniStatus } />  \n                                        </Grid>\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Image Count\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.imageCount } />  \n                                        </Grid>\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Ref Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.refNumber } />  \n                                        </Grid>\n                                    </Grid>\n\n                                </Paper>\n                                </>\n                                \n                            )):  \"\"} */}\n\n                                \n                    </div>\n            {/* </Paper> */}\n\n        \n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n}\n\n\nexport default CurrentMSISDNStatus;"]},"metadata":{},"sourceType":"module"}