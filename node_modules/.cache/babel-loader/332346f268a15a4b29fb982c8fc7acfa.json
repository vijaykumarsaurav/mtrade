{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/login/LoginComponent.js\";\nimport React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport UserService from \"../service/UserService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from '../../utils/ResponseHandler';\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport CryptoJS from 'crypto-js';\nimport LoginNewUI from './LoginNewUI';\n\nclass LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value.trim()\n      });\n    };\n\n    this.login = e => {\n      this.setState({\n        isError: \"\"\n      });\n      e.preventDefault();\n\n      if (!this.state.userName || !this.state.password) {\n        this.setState({\n          isError: \"Olms Id and password is required.\"\n        }); // setTimeout(() => {\n        //     this.setState({ isError: \"\" });\n        // }, 3000);\n        //  Notify.showError(\"Olms Id and password is required.\");\n\n        return;\n      }\n\n      this.setState({\n        isDasable: true\n      });\n      var keynum = Math.floor(Math.random() * 1E16);\n\n      if (keynum.toString().length == 15) {\n        keynum = keynum.toString() + \"9\";\n      }\n\n      var atualkey = (keynum * 69 - 99).toString();\n      atualkey = atualkey.substring(0, 15);\n      var encryptedPass = CryptoJS.AES.encrypt(this.state.password, atualkey).toString(); // console.log( keynum , encryptedPass);\n\n      const loginPayload = {\n        userName: this.state.userName,\n        password: encryptedPass + keynum // this.state.password //\n\n      };\n      UserService.login(loginPayload).then(res => {\n        //  Notify.showError(\"Olms Id and password is required.\");\n        //  alert(JSON.stringify(res));\n        this.setState({\n          isError: res.data.message\n        });\n        var data = resolveResponse(res);\n        console.log(\"resolveResponse\", data.result && data.result.roleCode); // data = res.data; \n\n        this.setState({\n          isDasable: false\n        });\n\n        if (data.result) {\n          window.localStorage.setItem(\"userDetails\", JSON.stringify(data.result));\n          window.localStorage.setItem(\"token\", data.result.token);\n        } // BO agent : BOA\n        // Data Entry : DE\n        // Admin : ADMIN\n        // Distributor : DIST\n\n\n        console.log(this.props.history);\n\n        if (data.result && data.result.roleCode == \"BOA\") {\n          this.props.history.push('/verify');\n          return;\n        } //  window.location.replace( \"#/verify\");  \n\n\n        if (data.result && data.result.roleCode == \"DE\") this.props.history.push('/dataentry');\n        if (data.result && data.result.roleCode == \"ADMIN\") this.props.history.push('/welcome');\n        if (data.result && data.result.roleCode == \"DIST\" || data.result && data.result.roleCode == \"FSE\") this.props.history.push('/distributor');\n      }); // setTimeout(() => {\n      //     this.setState({ isError: \"\" });\n      // }, 3000);\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      isDasable: false,\n      isError: false\n    };\n    this.login = this.login.bind(this);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(LoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(LoginNewUI, {\n      loginProps: {\n        onChange: this.onChange,\n        login: this.login,\n        userName: this.state.userName,\n        password: this.state.password\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      xs: 12,\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.isDasable ? React.createElement(InputLabel, {\n      variant: \"subtitle1\",\n      style: styles.waitMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Please wait...\") : \"\", this.state.isError ? React.createElement(InputLabel, {\n      variant: \"subtitle1\",\n      style: styles.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \", this.state.isError, \" \") : \"\")));\n  }\n\n  componentDidMount() {\n    const token = window.localStorage.getItem(\"token\");\n\n    if (token) {\n      const lastUrl = localStorage.getItem(\"lastUrl\");\n      this.props.history.push('/' + lastUrl);\n    }\n  }\n\n}\n\nconst styles = {\n  formStyle: {\n    display: 'flex',\n    flexFlow: 'row wrap'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  errorMessage: {\n    color: \"red\",\n    marginTop: '11px'\n  },\n  waitMessage: {\n    color: \"gray\",\n    marginTop: '11px'\n  }\n};\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/login/LoginComponent.js"],"names":["React","Typography","TextField","Button","UserService","LoginNavBar","Container","resolveResponse","Notify","Grid","InputLabel","CryptoJS","LoginNewUI","LoginComponent","Component","constructor","props","onChange","e","setState","target","name","value","trim","login","isError","preventDefault","state","userName","password","isDasable","keynum","Math","floor","random","toString","length","atualkey","substring","encryptedPass","AES","encrypt","loginPayload","then","res","data","message","console","log","result","roleCode","window","localStorage","setItem","JSON","stringify","token","history","push","bind","render","styles","waitMessage","errorMessage","componentDidMount","getItem","lastUrl","formStyle","display","flexFlow","label","justifyContent","color","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport UserService from \"../service/UserService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport { resolveResponse } from '../../utils/ResponseHandler';\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport CryptoJS  from 'crypto-js'; \n\nimport LoginNewUI from './LoginNewUI';\n\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n\n    }\n\n    componentDidMount() {\n      const token =   window.localStorage.getItem(\"token\"); \n      if(token){\n        const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('/'+lastUrl);\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n        if(!this.state.userName || !this.state.password){\n            this.setState({ isError: \"Olms Id and password is required.\" });\n\n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n          //  Notify.showError(\"Olms Id and password is required.\");\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n        var keynum = Math.floor(Math.random()*1E16);\n        if(keynum.toString().length == 15){\n            keynum = keynum.toString() + \"9\"; \n        }\n        var atualkey = (keynum * 69-99).toString(); \n        atualkey =  atualkey.substring(0, 15);\n\n       var encryptedPass = CryptoJS.AES.encrypt( this.state.password, atualkey).toString();\n        // console.log( keynum , encryptedPass);\n\n        const loginPayload = {\n            userName:  this.state.userName,\n            password: encryptedPass+keynum // this.state.password //\n\n        };\n        UserService.login(loginPayload)\n            .then(res => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n\n              \n              this.setState({ isError: res.data.message });\n\n                var data = resolveResponse(res);\n                console.log(\"resolveResponse\",data.result && data.result.roleCode); \n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(data.result){\n                    window.localStorage.setItem(\"userDetails\",JSON.stringify(data.result));\n                    window.localStorage.setItem(\"token\",data.result.token)\n                }\n               \n                // BO agent : BOA\n                // Data Entry : DE\n                // Admin : ADMIN\n                // Distributor : DIST\n\n                console.log(this.props.history);\n                if(data.result && data.result.roleCode == \"BOA\"){\n                    this.props.history.push('/verify');\n                    return;\n                }\n              //  window.location.replace( \"#/verify\");  \n\n                if(data.result && data.result.roleCode == \"DE\")\n                this.props.history.push('/dataentry');\n\n                if(data.result && data.result.roleCode == \"ADMIN\")\n                this.props.history.push('/welcome');\n\n                if((data.result && data.result.roleCode== \"DIST\") || (data.result &&  data.result.roleCode== \"FSE\"))\n                this.props.history.push('/distributor');\n                \n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}