{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/banner/BannerList.js\";\nimport React from \"react\";\nimport RetailerAdminService from \"../service/RetailerAdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport ActivationService from \"../service/ActivationService\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass BaneerList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.value.includes(\"Select All\")) {\n        this.setState({\n          selectedZone: this.state.listofzones\n        });\n        this.setState({\n          selectAllzone: \"Remove All\"\n        });\n      }\n\n      if (e.target.value.includes(\"Remove All\")) {\n        this.setState({\n          selectedZone: []\n        });\n        this.setState({\n          selectAllzone: \"Select All\"\n        });\n      }\n    };\n\n    this.addProduct = e => {\n      console.log(this.props);\n      this.props.history.push('/add-banner');\n    };\n\n    this.addProduct = this.addProduct.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.state = {\n      products: [],\n      listofzones: [],\n      selectedZone: [],\n      zone: '',\n      selectAllzone: 'Select All'\n    };\n  }\n\n  componentDidMount() {\n    this.loadBannerList();\n    localStorage.setItem(\"lastUrl\", \"banners\");\n    ActivationService.getStaticData('ADMIN').then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        listofzones: data.result && data.result.zones\n      });\n    });\n  }\n\n  loadBannerList() {\n    var data = {\n      \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    RetailerAdminService.getAllBanner(data).then(res => {\n      let data = resolveResponse(res);\n      console.log(data);\n\n      if (data.result) {\n        this.setState({\n          products: data.result\n        });\n      }\n    }); //    var sampledata =  {\"status\":200,\"message\":\"ok\",\"result\":[{\"title\":\"title2\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman//banner/title2_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title3\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman/banner/title3_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title1\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://xyz.com\",\"createdOn\":null,\"lastModifiedOn\":null}]};\n    //    this.setState({products: sampledata.result});\n  }\n\n  editProduct(productId) {\n    window.localStorage.removeItem(\"selectedBannerId\");\n    window.localStorage.setItem(\"selectedBannerId\", productId);\n    this.props.history.push('/banner-edit');\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  dateFormat(date) {\n    var d = new Date(date);\n    var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n    return fd;\n  }\n\n  render() {\n    console.log(this.props, \"PROPS\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      syt: true,\n      container: true,\n      spacing: 1,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Banner Details\")), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Select Zone\"), React.createElement(Select, {\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      multiple: true,\n      name: \"selectedZone\",\n      value: this.state.selectedZone,\n      onChange: this.zoneChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: this.state.selectAllzone,\n      value: this.state.selectAllzone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" \", this.state.selectAllzone, \"   \")), this.state.listofzones ? this.state.listofzones.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, name)) : \"\"))), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      sm: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      onClick: () => this.loadBannerList(),\n      variant: \"contained\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      sm: 2,\n      alignItems: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.addProduct(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Add Banner\"))), React.createElement(Table, {\n      size: \"small\",\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      style: {\n        width: \"\",\n        whiteSpace: \"nowrap\"\n      },\n      variant: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      variant: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Icon\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Banner Type\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Active\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Category Type\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Publish Date\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Expire Days\"))), React.createElement(TableBody, {\n      style: {\n        width: \"\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.products && this.state.products ? this.state.products.map(row => React.createElement(TableRow, {\n      key: row.productId,\n      onClick: () => this.editProduct(row.bannerId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      style: {\n        width: \"100px\",\n        height: \"50px\"\n      },\n      src: row.imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), \" \"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, row.title), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, row.bannerType), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, row.active ? 'Active' : \"Inactive\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, row.categoryType), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, row.publishDay ? new Date(row.publishDay).toString().substring(0, 15) : \"\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, row.expireDay ? new Date(row.expireDay).toString().substring(0, 15) : \"\"))) : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 300,\n    maxWidth: 300\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    packs: state.packs.packs.data\n  };\n}; //export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\n\n\nexport default BaneerList;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/banner/BannerList.js"],"names":["React","RetailerAdminService","Typography","Button","Table","TableHead","TableRow","TableCell","TableBody","Grid","Paper","CreateIcon","PostLoginNavBar","resolveResponse","connect","setPackLoaded","Spinner","ActivationService","InputLabel","FormControl","Select","MenuItem","Input","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","BaneerList","Component","constructor","props","zoneChange","e","setState","target","name","value","includes","selectedZone","state","listofzones","selectAllzone","addProduct","console","log","history","push","bind","editProduct","convertBool","products","zone","componentDidMount","loadBannerList","localStorage","setItem","getStaticData","then","res","data","result","zones","length","getAllBanner","productId","window","removeItem","flag","dateFormat","date","d","Date","fd","toLocaleDateString","toTimeString","substring","indexOf","render","padding","overflow","styles","selectStyle","map","marginLeft","whiteSpace","row","bannerId","height","imageURL","title","bannerType","active","categoryType","publishDay","toString","expireDay","tableStyle","display","justifyContent","marginBottom","minWidth","maxWidth","mapStateToProps","packs"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport RetailerAdminService from \"../service/RetailerAdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport ActivationService from \"../service/ActivationService\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass BaneerList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n\n        this.state = {\n            products:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n    componentDidMount() {\n        this.loadBannerList();\n        localStorage.setItem(\"lastUrl\",\"banners\");\n        ActivationService.getStaticData('ADMIN').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data.result && data.result.zones}) \n        })\n\n    }\n\n    loadBannerList() {\n\n        var data =  {\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n\n        RetailerAdminService.getAllBanner(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log(data);\n\n                if(data.result){\n                    this.setState({products: data.result});\n                }\n            });\n        //    var sampledata =  {\"status\":200,\"message\":\"ok\",\"result\":[{\"title\":\"title2\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman//banner/title2_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title3\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman/banner/title3_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title1\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://xyz.com\",\"createdOn\":null,\"lastModifiedOn\":null}]};\n        //    this.setState({products: sampledata.result});\n    }\n\n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/add-banner');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n        console.log(this.props,\"PROPS\")\n\n       \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid syt  container spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                    Banner Details\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                            <b> {this.state.selectAllzone}   </b>                                         \n                                          </MenuItem>\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={1}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                 <Button type=\"submit\"  onClick={() => this.loadBannerList()} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} alignItems=\"left\"> \n                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                                Add Banner\n                            </Button>      \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow variant=\"head\">\n                          {/* <TableCell align=\"center\">Edit</TableCell> */}\n\n\n                        <TableCell align=\"center\">Icon</TableCell>\n                        <TableCell align=\"center\">Title</TableCell>\n                        <TableCell align=\"center\">Banner Type</TableCell>\n                        <TableCell align=\"center\">Active</TableCell>\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell align=\"center\">Category Type</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell align=\"center\">Publish Date</TableCell>\n\n                        <TableCell align=\"center\">Expire Days</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                \n                    {this.state.products && this.state.products ? this.state.products.map(row => (\n                        <TableRow key={row.productId} onClick={() => this.editProduct( row.bannerId)}>\n\n                            <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell>\n                            <TableCell align=\"center\">{row.title}</TableCell>\n                            <TableCell align=\"center\">{row.bannerType}</TableCell>\n                            <TableCell align=\"center\">{row.active ? 'Active' : \"Inactive\"}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.categoryType}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.publishDay ? new Date(row.publishDay).toString().substring(0, 15) : \"\"}</TableCell>\n                            <TableCell align=\"center\">{row.expireDay ? new Date(row.expireDay).toString().substring(0, 15): \"\"}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 300,\n          maxWidth: 300,\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default BaneerList;"]},"metadata":{},"sourceType":"module"}