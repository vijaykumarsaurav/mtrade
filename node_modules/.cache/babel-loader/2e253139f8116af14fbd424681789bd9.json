{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/login/RoleManagement.js\";\nimport React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport Grid from '@material-ui/core/Grid';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport $ from 'jquery';\n\nconst handleChangePage = (event, newPage) => {//  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {// this.setRowsPerPage(parseInt(event.target.value, 10));\n  // this.setPage(0);\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass RoleManagement extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); // const re = /^[0-9\\b]+$/;\n      // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n      //     this.setState({ searchby: e.target.value })\n      // }\n    };\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = obj => event => {\n      console.log(\"objid1\", event.target.checked);\n      var roleDetails = this.state.roleDetails;\n\n      for (var i = 0; i < roleDetails.length; i++) {\n        // if(roleDetails[i].id == obj.id && obj.alreadyAssigned == false) {\n        //     roleDetails[i].alreadyAssigned = true; \n        // }else if(roleDetails[i].id == obj.id && obj.alreadyAssigned == true) {\n        //     roleDetails[i].alreadyAssigned = false; \n        // }\n        if (roleDetails[i].id == obj.id) roleDetails[i].alreadyAssigned = event.target.checked;\n      }\n\n      this.setState({\n        roleDetails: roleDetails\n      }); //this.setState({ ...this.state, roleDetails : {...this.state.roleDetails, [obj.alreadyAssigned]: event.target.checked } });\n\n      console.log(this.state.roleDetails);\n    };\n\n    this.state = {\n      products: [],\n      searchedproducts: '',\n      searchby: '',\n      listofzones: [],\n      selectedReasons: {},\n      selectedZone: [],\n      zone: '',\n      addNewEnable: false,\n      roleName: \"\",\n      roleDetails: \"\",\n      selectedRole: false\n    };\n    this.loadProductList = this.loadProductList.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addRole = this.addRole.bind(this);\n    this.showRoleDetails = this.showRoleDetails.bind(this);\n    this.deleteNewRole = this.deleteNewRole.bind(this);\n    this.deleteRole = this.deleteRole.bind(this);\n  }\n\n  componentDidMount() {\n    //  this.loadProductList(\"\");\n    localStorage.setItem(\"lastUrl\", \"role\"); // var roles = {\"status\":200,\"message\":\"ok\",\"result\":[{\"id\":15,\"role\":\"ADMIN\"},{\"id\":16,\"role\":\"BOA\"},{\"id\":1,\"role\":\"CEO\"},{\"id\":8,\"role\":\"CP\"},{\"id\":11,\"role\":\"CSM\"},{\"id\":14,\"role\":\"DE\"},{\"id\":5,\"role\":\"DIST\"},{\"id\":10,\"role\":\"DSA\"},{\"id\":12,\"role\":\"DTH Sales Head\"},{\"id\":9,\"role\":\"FSE\"},{\"id\":6,\"role\":\"RET\"},{\"id\":7,\"role\":\"SMH\"},{\"id\":4,\"role\":\"TM\"},{\"id\":2,\"role\":\"ZBM\"},{\"id\":3,\"role\":\"ZSM\"}]}; \n    // this.setState({ searchedproducts: roles && roles.result })\n\n    AdminService.getListOfRoles().then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        searchedproducts: data && data.result\n      });\n    });\n  }\n\n  showRoleDetails(id) {\n    $(\"#tableId .rolesRow\").css(\"background-color\", \"\");\n    document.getElementById('roleId' + id).style.backgroundColor = \"lightgray\";\n    AdminService.getRoleDetails(id).then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        roleDetails: data && data.result && data.result.authorites\n      }); // this.setState({ selectedRole: true })\n    });\n  }\n\n  searchOnDB(mobileNumber) {//   this.loadProductList(mobileNumber);\n    // AdminService.searchMobileNo(mobileNumber).then(res => {\n    //     let data = resolveResponse(res);\n    //     const selectedProduct = data.result;            \n    //     if(selectedProduct && selectedProduct.transactionId){\n    //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n    //         //window.localStorage.setItem(\"selectedSim\", '');\n    //         this.props.history.push('/verify-edit');\n    //         // this.setState({\n    //         //     });\n    //     }\n    //     // else{\n    //     //     Notify.showError(\"Not Found or already processed\");\n    //     // }\n    // })\n  }\n\n  loadProductList(mobileNumber) {\n    var d = new Date();\n    var endTime = d.getTime();\n    var startTime = endTime - 172800000;\n    var data = {\n      \"endDate\": endTime,\n      \"mobileNumber\": mobileNumber ? mobileNumber : null,\n      \"noOfRecords\": 20,\n      \"role\": \"BOA\",\n      \"startDate\": 0,\n      \"txnId\": 0,\n      \"type\": \"next\",\n      \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n    };\n    document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n    AdminService.listDocs(data).then(res => {\n      let data = resolveResponse(res);\n      var activationList = data && data.result && data.result.activationList;\n      this.setState({\n        products: activationList\n      }); //this.setState({searchedproducts: activationList})\n\n      var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n      this.setState({\n        searchedproducts: roles\n      });\n      var listingIds = activationList && activationList.map(function (val, index) {\n        return val.txnId;\n      });\n\n      if (document.getElementById('showMessage')) {\n        if (activationList == null) {\n          document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n        } else {\n          document.getElementById('showMessage').innerHTML = \"\";\n        }\n      }\n\n      localStorage.setItem(\"verifyListingTxn\", listingIds);\n    });\n  }\n\n  addRole() {\n    this.setState({\n      addNewEnable: true\n    });\n  }\n\n  deleteNewRole() {\n    this.setState({\n      addNewEnable: false\n    });\n    this.setState({\n      roleName: \"\"\n    });\n  }\n\n  deleteRole() {\n    window.confirm(\"Please confirm if you want to delete the role?\");\n    return;\n  }\n\n  someAction() {\n    alert(\"action happed in other commpornt\");\n  }\n\n  editProduct(productId, sim) {\n    console.log(\"productid, row.sim\", productId, sim);\n    window.localStorage.setItem(\"selectedProductId\", productId);\n    window.localStorage.setItem(\"selectedSim\", sim);\n    this.props.history.push('/verify-edit'); // this.props.history.push({\n    //     pathname: '/edit-doc',\n    //     search: '?query=abc',\n    //     state: { rowdata: productId }\n    //   })\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  render() {\n    //onChange={this.handleChange(roleDetails[i].authority)} \n    var roleDetails = this.state.roleDetails;\n    var authorites = [];\n\n    for (var i = 0; i < roleDetails.length; i++) {\n      authorites.push(React.createElement(ListItem, {\n        onChange: this.handleChange(roleDetails[i]),\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \" \", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: roleDetails[i].alreadyAssigned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), \" \", roleDetails[i].authority, \" \"));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Role Management\"))), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\",\n        height: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Table, {\n      id: \"tableId\",\n      size: \"small\",\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        width: \"170px\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Role Name\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Delete\")))), React.createElement(TableBody, {\n      style: {\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, this.state.searchedproducts ? this.state.searchedproducts.map(row => React.createElement(TableRow, {\n      id: \"roleId\" + row.id,\n      className: \"rolesRow\",\n      key: row.txnId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      onClick: () => this.showRoleDetails(row.id),\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, row.role, \" \")), React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.deleteRole(),\n      variant: \"contained\",\n      style: {\n        marginTop: \"12px\",\n        marginLeft: \"5px\"\n      },\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \" \", React.createElement(DeleteForeverIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }))))) : \"\"))), this.state.addNewEnable ? React.createElement(React.Fragment, null, React.createElement(TextField, {\n      label: \"Add New Role\",\n      style: {\n        width: \"525px\"\n      },\n      name: \"roleName\",\n      value: this.state.roleName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.deleteNewRole(),\n      variant: \"contained\",\n      style: {\n        marginTop: \"12px\",\n        marginLeft: \"5px\"\n      },\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Delete\"), \" \") : \"\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Privileges\"), authorites)), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.addRole(),\n      variant: \"contained\",\n      color: \"default\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Add New Role\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \"Update\")))), React.createElement(\"div\", {\n      style: {\n        color: \"gray\",\n        fontSize: \"15px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      id: \"showMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  tableRow: {\n    hover: {\n      \"&:hover\": {\n        background: 'green !important'\n      }\n    }\n  },\n  selectStyle: {\n    // minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 340,\n    maxWidth: 340\n  }\n};\nexport default RoleManagement;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/login/RoleManagement.js"],"names":["React","useState","AdminService","Typography","Button","Table","TableHead","TableRow","TableCell","TableBody","Paper","TextField","Notify","ListItem","ListItemText","Divider","InputLabel","FormControl","Select","MenuItem","Input","Grid","VisibilityIcon","PostLoginNavBar","Container","resolveResponse","DeleteForeverIcon","$","handleChangePage","event","newPage","handleChangeRowsPerPage","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","RoleManagement","Component","constructor","props","onChange","e","setState","target","name","value","zoneChange","handleChange","obj","console","log","checked","roleDetails","state","i","length","id","alreadyAssigned","products","searchedproducts","searchby","listofzones","selectedReasons","selectedZone","zone","addNewEnable","roleName","selectedRole","loadProductList","bind","editProduct","convertBool","addRole","showRoleDetails","deleteNewRole","deleteRole","componentDidMount","localStorage","setItem","getListOfRoles","then","res","data","result","css","document","getElementById","backgroundColor","getRoleDetails","authorites","searchOnDB","mobileNumber","d","Date","endTime","getTime","startTime","innerHTML","listDocs","activationList","roles","listingIds","map","val","index","txnId","window","confirm","someAction","alert","productId","sim","history","push","flag","render","authority","padding","overflow","height","whiteSpace","row","role","marginTop","marginLeft","color","fontSize","textAlign","styles","tableStyle","display","justifyContent","tableRow","hover","background","selectStyle","marginBottom","minWidth","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport $ from 'jquery'; \n\n\nconst handleChangePage = (event, newPage) => {\n    //  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {\n\n    // this.setRowsPerPage(parseInt(event.target.value, 10));\n    // this.setPage(0);\n};\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass RoleManagement extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            searchedproducts: '',\n            searchby: '',\n            listofzones: [],\n            selectedReasons: {},\n            selectedZone: [],\n            zone: '',\n            addNewEnable:false,\n            roleName:\"\",\n            roleDetails:\"\",\n            selectedRole:false\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addRole = this.addRole.bind(this);\n        this.showRoleDetails = this.showRoleDetails.bind(this);\n\n        \n\n        this.deleteNewRole = this.deleteNewRole.bind(this);\n        this.deleteRole = this.deleteRole.bind(this);\n\n        \n\n\n    }\n\n    componentDidMount() {\n      //  this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\", \"role\");\n\n       // var roles = {\"status\":200,\"message\":\"ok\",\"result\":[{\"id\":15,\"role\":\"ADMIN\"},{\"id\":16,\"role\":\"BOA\"},{\"id\":1,\"role\":\"CEO\"},{\"id\":8,\"role\":\"CP\"},{\"id\":11,\"role\":\"CSM\"},{\"id\":14,\"role\":\"DE\"},{\"id\":5,\"role\":\"DIST\"},{\"id\":10,\"role\":\"DSA\"},{\"id\":12,\"role\":\"DTH Sales Head\"},{\"id\":9,\"role\":\"FSE\"},{\"id\":6,\"role\":\"RET\"},{\"id\":7,\"role\":\"SMH\"},{\"id\":4,\"role\":\"TM\"},{\"id\":2,\"role\":\"ZBM\"},{\"id\":3,\"role\":\"ZSM\"}]}; \n       // this.setState({ searchedproducts: roles && roles.result })\n\n        AdminService.getListOfRoles().then(res => {\n            let data = resolveResponse(res);\n            this.setState({ searchedproducts: data && data.result })\n        })\n\n     \n    }\n   \n\n    showRoleDetails(id){\n        $(\"#tableId .rolesRow\").css(\"background-color\", \"\"); \n        document.getElementById('roleId'+id).style.backgroundColor = \"lightgray\"; \n        \n\n        AdminService.getRoleDetails(id).then(res => {\n            let data = resolveResponse(res);\n            this.setState({ roleDetails: data && data.result && data.result.authorites })\n           // this.setState({ selectedRole: true })\n        })\n\n    }\n\n    searchOnDB(mobileNumber) {\n\n     //   this.loadProductList(mobileNumber);\n\n        // AdminService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n\n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n\n        // })\n    }\n\n\n    loadProductList(mobileNumber) {\n\n\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000;\n\n        var data = {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"BOA\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        AdminService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList;\n                this.setState({ products: activationList })\n\n\n\n                //this.setState({searchedproducts: activationList})\n                var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n\n                this.setState({ searchedproducts: roles })\n\n                var listingIds = activationList && activationList.map(function (val, index) {\n                    return val.txnId\n                });\n\n                if (document.getElementById('showMessage')) {\n                    if (activationList == null) {\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    } else {\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }\n                }\n\n                localStorage.setItem(\"verifyListingTxn\", listingIds);\n            });\n\n    \n\n    }\n\n    onChange = (e) => {\n\n    this.setState({ [e.target.name]: e.target.value })\n\n        // const re = /^[0-9\\b]+$/;\n        // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        //     this.setState({ searchby: e.target.value })\n        // }\n\n    }\n\n    zoneChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addRole() {\n        this.setState({ addNewEnable: true }) \n    }\n\n    deleteNewRole(){\n        this.setState({ addNewEnable: false }) \n        this.setState({ roleName: \"\" }) \n\n\n    }\n\n    deleteRole(){\n\n        window.confirm(\"Please confirm if you want to delete the role?\"); \n        return;\n    }\n\n    someAction() {\n        alert(\"action happed in other commpornt\");\n    }\n\n\n\n\n    editProduct(productId, sim) {\n        console.log(\"productid, row.sim\", productId, sim)\n\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n    handleChange = obj => event => {\n\n        console.log(\"objid1\", event.target.checked); \n        var roleDetails = this.state.roleDetails;\n        for (var i = 0; i < roleDetails.length; i++) {\n            // if(roleDetails[i].id == obj.id && obj.alreadyAssigned == false) {\n            //     roleDetails[i].alreadyAssigned = true; \n            // }else if(roleDetails[i].id == obj.id && obj.alreadyAssigned == true) {\n            //     roleDetails[i].alreadyAssigned = false; \n            // }\n\n            if(roleDetails[i].id == obj.id)\n            roleDetails[i].alreadyAssigned =   event.target.checked\n        }\n        this.setState({ roleDetails: roleDetails }) \n\n        //this.setState({ ...this.state, roleDetails : {...this.state.roleDetails, [obj.alreadyAssigned]: event.target.checked } });\n        console.log(this.state.roleDetails); \n\n\n    };\n\n\n    render() {\n\n      //onChange={this.handleChange(roleDetails[i].authority)} \n\n        var roleDetails = this.state.roleDetails;\n        var authorites = [];\n        for (var i = 0; i < roleDetails.length; i++) {\n            authorites.push(<ListItem onChange={this.handleChange(roleDetails[i])} button> <input type=\"checkbox\"  \n            checked={roleDetails[i].alreadyAssigned} /> {roleDetails[i].authority} </ListItem>)\n\n        }\n\n\n\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                    <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n                        <Grid item xs={12} sm={9} >\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                                Role Management\n                                </Typography>\n                        </Grid>\n                        {/* <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid> */}\n\n                        {/* <Grid item xs={2} sm={2}  > \n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid> */}\n                        {/* <Grid item xs={3} sm={3} alignItems=\"left\">\n                            <Button type=\"submit\" onClick={() => this.searchOnDB(this.state.searchby)} variant=\"contained\" style={{ marginLeft: '20px' }} >Add New</Button>\n                        </Grid> */}\n\n                    </Grid>\n\n\n                        {/* <Container  > */}\n                        {/* <EnhancedTable products={this.state.products}/> */}\n\n                        {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n\n                        {/* <Typography variant=\"h5\" style={styles.tableStyle}>&nbsp;Document Verification</Typography> */}\n                        {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n\n                        {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                        <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n\n                                <Grid item xs={12} sm={6} >\n                                <div style={{ padding: \"10px\", overflow: \"auto\", height: \"400px\" }} >\n\n\n                                    <Table id=\"tableId\" size=\"small\" aria-label=\"sticky table\">\n                                        <TableHead >\n                                            <TableRow style={{ width: \"170px\", whiteSpace: \"nowrap\" }}>\n                                                {/* <TableCell align=\"\">View</TableCell> */}\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Role Name\n                                                    </Typography>\n                                                </TableCell>\n\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Delete\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ whiteSpace: \"nowrap\" }}>\n                                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                                <TableRow id={\"roleId\"+row.id} className='rolesRow'  key={row.txnId} >\n                                                   \n                                                   <TableCell    onClick={() => this.showRoleDetails(row.id)}  component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        <ListItem  button>{row.role} </ListItem>\n                                                    </TableCell>\n                                                   \n                                                   \n                                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        <Button onClick={() => this.deleteRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\"> <DeleteForeverIcon/></Button> \n                                                    </TableCell>\n\n                                                </TableRow>\n                                            )) : \"\"}\n                                        </TableBody>\n                                    </Table>\n                                    </div>\n                                    {this.state.addNewEnable ? \n                                    <>\n                                    <TextField label=\"Add New Role\" style={{width: \"525px\"}}  name=\"roleName\" value={this.state.roleName} onChange={this.onChange}/>\n                                    <Button onClick={() => this.deleteNewRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\">Delete</Button> </>\n                                    : \"\"}\n                                    \n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Typography color=\"primary\" gutterBottom>\n                                        Privileges\n                            </Typography>\n                                    {authorites}\n                                </Grid>\n\n\n                            </Grid>\n\n                            \n                        {/* <br />\n                            <Divider /> <br /> */}\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                           \n\n                                <Grid item xs={12} sm={6} >\n\n                                    <Button onClick={() => this.addRole()} variant=\"contained\" color=\"default\"  style={{ marginLeft: '20px' }} >Add New Role</Button>\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} >Update</Button>\n\n\n                                </Grid>\n                            </Grid>\n\n\n\n\n                        </Paper>\n\n\n\n\n                        <div style={{ color: \"gray\", fontSize: \"15px\", textAlign: \"center\" }}> <br /> <span id=\"showMessage\"> </span></div>\n\n                        {/* </Container> */}\n\n              \n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n\n    selectStyle: {\n        // minWidth: '100%',\n        marginBottom: '0px',\n        minWidth: 340,\n        maxWidth: 340,\n    }\n}\n\n\n\nexport default RoleManagement;"]},"metadata":{},"sourceType":"module"}