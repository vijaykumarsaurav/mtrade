{"ast":null,"code":"import _objectSpread from \"/Users/B0208058/Documents/slretailer-web-portal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/banner/BannerAdd.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/AdminService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport ActivationService from \"../service/ActivationService\";\nimport Input from \"@material-ui/core/Input\";\nimport Notify from \"../../utils/Notify\"; //import MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport * as amsConstant from \"../../utils/config\";\nimport md5 from 'md5';\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass BannerAdd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallback = (date, fromDate) => {\n      if (fromDate === \"START_DATE\") {\n        this.setState({\n          publishDate: new Date(date).getTime()\n        });\n      } else if (fromDate === \"END_DATE\") {\n        this.setState({\n          expireDate: new Date(date).getTime()\n        });\n      }\n    };\n\n    this.zoneChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.value.includes(\"Select All\")) {\n        this.setState({\n          selectedZone: this.state.listofzones\n        });\n        this.setState({\n          selectAllzone: \"Remove All\"\n        });\n      }\n\n      if (e.target.value.includes(\"Remove All\")) {\n        this.setState({\n          selectedZone: []\n        });\n        this.setState({\n          selectAllzone: \"Select All\"\n        });\n      }\n    };\n\n    this.savePack = e => {\n      e.preventDefault(); // if(!this.state.title ||!this.state.bannerType || !this.state.order || !this.state.section || !this.state.categoryType || !this.state.category || !this.state.publishDate || !this.state.expireDate || !this.state.active ){\n\n      if (!this.state.title || !this.state.bannerType || !this.state.order) {\n        Notify.showError(\"Missing required fields\");\n        return;\n      }\n\n      var startDateMili = document.getElementById(\"startDateMili\").value;\n      var endDateMili = document.getElementById(\"endDateMili\").value;\n\n      if (startDateMili > endDateMili) {\n        Notify.showError(\"Start date time can't be grater than end date.\");\n        return;\n      }\n\n      if (endDateMili < startDateMili) {\n        Notify.showError(\"End Date time can't be less than start date.\");\n        return;\n      }\n\n      if (!this.state.file) {\n        Notify.showError(\"Missing required image upload\");\n        return;\n      }\n\n      var userDetails = localStorage.getItem(\"userDetails\");\n      userDetails = userDetails && JSON.parse(userDetails);\n      const formData = new FormData();\n      formData.append('file', this.state.file);\n      formData.append('title', this.state.title);\n      formData.append('order', parseInt(this.state.order));\n      formData.append('active', this.state.active == true);\n      formData.append('bannerType', this.state.bannerType);\n      formData.append('link', this.state.link);\n\n      if (this.state.selectedZone && this.state.selectedZone.length) {\n        formData.append('zones', this.state.selectedZone);\n      }\n\n      if (!this.state.publishDate) {\n        this.state.publishDate = new Date().getTime();\n      }\n\n      if (!this.state.expireDate) {\n        this.state.expireDate = new Date().getTime();\n      }\n\n      formData.append('publishDate', this.state.publishDate);\n      formData.append('expireDate', this.state.expireDate);\n      formData.append('categoryType', this.state.categoryType);\n      pack.addBanner(formData).then(res => {\n        var data = resolveResponse(res, \"Baneer saved successfully.\"); // Notify.showSuccess(\"Baneer saved successfully.\");\n\n        console.log(\"Banner Response:\", data);\n        this.props.history.push(\"/banners\");\n      });\n    };\n\n    this.cancel = e => {\n      this.props.history.push(\"/banners\");\n    };\n\n    this.handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.checked\n      }));\n    };\n\n    this.validateUploadFile = file => {\n      const filename = file.name.toString();\n\n      if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n        Notify.showError(\"File name can contain only alphanumeric characters including space and dots\");\n        return false;\n      }\n\n      if (file.type == \"image/png\" || file.type == \"image/jpeg\") {\n        var fileSize = file.size / 1000; //in kb\n\n        if (fileSize >= 100 && fileSize <= 2048) {\n          const fileext = filename.split('.').pop();\n          Object.defineProperty(file, 'name', {\n            writable: true,\n            value: md5(file.name) + \".\" + fileext\n          });\n          return file;\n        } else {\n          Notify.showError(\"File size should be grater than 100KB and less than 2MB\");\n        }\n      } else {\n        Notify.showError(\"Only png and jpeg file allowd.\");\n      }\n\n      return false;\n    };\n\n    this.onChangeFileUpload = e => {\n      const filetoupload = this.validateUploadFile(e.target.files[0]);\n\n      if (filetoupload) {\n        this.setState({\n          [e.target.name]: e.target.files[0],\n          showFileSize: e.target.files[0].size / 1000 + \"KB\",\n          imageURL: URL.createObjectURL(e.target.files[0])\n        });\n      } else {\n        this.setState({\n          [e.target.name]: null,\n          showFileSize: \"\",\n          imageURL: \"\"\n        });\n        e.target.value = null;\n      }\n    };\n\n    this.onChangeHandler = event => {\n      const formData = new FormData();\n      formData.append('file', event.target.files[0]);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post(amsConstant.UPLOAD_IMG_BANNER, formData, config).then(response => {\n        this.setState({\n          imageURL: response.data.result\n        });\n      }).catch(error => {\n        console.log(error, \"ERROR\");\n      });\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.state = {\n      title: '',\n      order: '',\n      active: \"\",\n      bannerType: '',\n      section: '',\n      categoryType: '',\n      category: '',\n      forAndroid: '',\n      forIos: '',\n      forWindows: '',\n      validityDays: \"\",\n      updateTime: '',\n      publishDate: '',\n      expireDate: \"\",\n      updateBy: '',\n      imageURL: '',\n      file: null,\n      link: '',\n      listofzones: [],\n      selectedZone: [],\n      zone: '',\n      showFileSize: \"\",\n      selectAllzone: 'Select All'\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.validateUploadFile = this.validateUploadFile.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.setItem(\"lastUrl\", \"add-banner\");\n    ActivationService.getStaticData('ADMIN').then(res => {\n      let data = resolveResponse(res);\n      this.setState({\n        listofzones: data.result && data.result.zones\n      });\n    });\n  }\n\n  render() {\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate: '',\n      firstLavel: \"Publish Date\",\n      secondLavel: \"End Date\"\n    };\n    console.log(this.state, \"STATE_MATTERS\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      style: styles.textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Banner Details\"), React.createElement(\"form\", {\n      style: styles.formContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Banner Title\",\n      required: true,\n      value: this.state.title,\n      fullWidth: true,\n      name: \"title\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"Connection Type\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Type of Banner\"), React.createElement(Select, {\n      name: \"bannerType\",\n      value: this.state.bannerType,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"prepaid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Prepaid\"), React.createElement(MenuItem, {\n      value: \"postpaid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Postpaid\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Order\"), React.createElement(Select, {\n      name: \"order\",\n      value: this.state.order,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"1\"), React.createElement(MenuItem, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"2\"), React.createElement(MenuItem, {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"3\"), React.createElement(MenuItem, {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"4\"), React.createElement(MenuItem, {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"5\"), React.createElement(MenuItem, {\n      value: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"6\"), React.createElement(MenuItem, {\n      value: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"7\"), React.createElement(MenuItem, {\n      value: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"8\"), React.createElement(MenuItem, {\n      value: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"9\"), React.createElement(MenuItem, {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"10\"), React.createElement(MenuItem, {\n      value: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"11\"), React.createElement(MenuItem, {\n      value: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"12\"), React.createElement(MenuItem, {\n      value: \"13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"13\"), React.createElement(MenuItem, {\n      value: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"14\"), React.createElement(MenuItem, {\n      value: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"15\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"Connection Type\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Category Type\"), React.createElement(Select, {\n      name: \"categoryType\",\n      value: this.state.categoryType,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"Recharge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Recharge\"), React.createElement(MenuItem, {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" Other \")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"Active\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Select, {\n      name: \"active\",\n      value: this.state.active,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Active\"), React.createElement(MenuItem, {\n      value: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"In Active\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Banner Link\",\n      name: \"link\",\n      value: this.state.link,\n      fullWidth: true,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-name-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Select Zone\"), React.createElement(Select, {\n      labelId: \"demo-mutiple-name-label\",\n      id: \"demo-mutiple-name\",\n      multiple: true,\n      name: \"selectedZone\",\n      value: this.state.selectedZone,\n      onChange: this.zoneChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: this.state.selectAllzone,\n      value: this.state.selectAllzone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \" \", this.state.selectAllzone, \"   \")), this.state.listofzones ? this.state.listofzones.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, name)) : \"\"))), React.createElement(MaterialUIPickers, {\n      callbackFromParent: dateParam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"startDateMili\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"endDateMili\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"display-type\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Upload Banner\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: styles.multiselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        marginTop: \"31px\",\n        marginLeft: \"18px\"\n      },\n      type: \"file\",\n      name: \"file\",\n      id: \"bannerImage\" // onChange={this.onChangeHandler}\n      ,\n      onChange: this.onChangeFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Selected File Size: \", this.state.showFileSize, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      title: \"Preview Banner\",\n      style: {\n        width: \"200px\",\n        height: \"100px\"\n      },\n      src: this.state.imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.savePack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        marginLeft: '150px'\n      },\n      onClick: this.cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Cancel\"))))));\n  }\n\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  },\n  selectStyle: {\n    //  minWidth: '100%',\n    marginBottom: '0px',\n    minWidth: 255,\n    maxWidth: 255\n  }\n};\nexport default BannerAdd;","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/banner/BannerAdd.js"],"names":["React","axios","Typography","Button","TextField","pack","PostLoginNavBar","Container","Paper","resolveResponse","ActivationService","Input","Notify","MaterialUIPickers","MenuItem","Grid","FormControl","Select","InputLabel","Checkbox","FormControlLabel","amsConstant","md5","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","BannerAdd","Component","constructor","props","myCallback","date","fromDate","setState","publishDate","Date","getTime","expireDate","zoneChange","e","target","name","value","includes","selectedZone","state","listofzones","selectAllzone","savePack","preventDefault","title","bannerType","order","showError","startDateMili","document","getElementById","endDateMili","file","userDetails","localStorage","getItem","JSON","parse","formData","FormData","append","parseInt","active","link","length","categoryType","addBanner","then","res","data","console","log","history","push","cancel","handleChange","event","checked","validateUploadFile","filename","toString","test","type","fileSize","size","fileext","split","pop","Object","defineProperty","writable","onChangeFileUpload","filetoupload","files","showFileSize","imageURL","URL","createObjectURL","onChangeHandler","config","headers","post","UPLOAD_IMG_BANNER","response","result","catch","error","onChange","section","category","forAndroid","forIos","forWindows","validityDays","updateTime","updateBy","zone","bind","componentDidMount","setItem","getStaticData","zones","render","dateParam","startDate","endDate","firstLavel","secondLavel","padding","styles","textStyle","formContainer","multiselect","selectStyle","map","marginTop","marginLeft","height","display","flexFlow","justifyContent","input","minWidth","marginBottom","chips","flexWrap","chip","margin","maxWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/AdminService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport ActivationService from \"../service/ActivationService\";\nimport Input from \"@material-ui/core/Input\";\n\n\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport  * as amsConstant from \"../../utils/config\";\nimport md5  from 'md5'; \n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n\nclass BannerAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        title: '',\n        order: '',\n        active: \"\",\n        bannerType:'',\n        section:'', \n        categoryType:'', \n        category:'',\n        forAndroid:'',\n        forIos:'', \n        forWindows:'', \n        validityDays:\"\",\n        updateTime:'',\n        publishDate:'',\n        expireDate: \"\",\n        updateBy:'', \n        imageURL:'', \n        file: null,\n        link:'',\n        listofzones:[],\n        selectedZone:[],\n        zone:'',\n        showFileSize: \"\", \n        selectAllzone:'Select All'\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.validateUploadFile = this.validateUploadFile.bind(this);\n\n  }\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ publishDate: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ expireDate: new Date(date).getTime()  });\n    }\n  };\n\n  zoneChange = (e) =>{\n    this.setState({[e.target.name]: e.target.value})\n    \n    if(e.target.value.includes(\"Select All\")){\n      this.setState({selectedZone: this.state.listofzones})\n      this.setState({selectAllzone: \"Remove All\"})\n    }\n\n    if(e.target.value.includes(\"Remove All\")){\n      this.setState({selectedZone: []})\n      this.setState({selectAllzone: \"Select All\"})\n    }\n\n  }\n  \n  componentDidMount() {\n    localStorage.setItem(\"lastUrl\",\"add-banner\");\n\n    ActivationService.getStaticData('ADMIN').then(res => {\n      let data = resolveResponse(res);\n      this.setState({listofzones: data.result && data.result.zones}) \n    })\n\n  }\n\n  render() {\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate:'', \n      firstLavel : \"Publish Date\", \n      secondLavel : \"End Date\"\n    }\n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        \n\n                <Container maxWidth=\"sm\">\n                  <br />\n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h5\" style={styles.textStyle}> Banner Details</Typography>\n                    <form style={styles.formContainer}>\n                    \t\t\t\n                        <TextField label=\"Banner Title\" required={true} value={this.state.title} fullWidth name=\"title\"  onChange={this.onChange}/>\n \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Type of Banner</InputLabel>\n                                <Select name=\"bannerType\" value={this.state.bannerType} onChange={this.onChange}>\n                                    <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                                    <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                                </Select>\n                            </FormControl>                    \n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel  required={true}>Order</InputLabel>\n                                <Select name=\"order\" value={this.state.order} onChange={this.onChange}>\n                                      <MenuItem value=\"1\">1</MenuItem>\n                                      <MenuItem value=\"2\">2</MenuItem>\n                                      <MenuItem value=\"3\">3</MenuItem>\n                                      <MenuItem value=\"4\">4</MenuItem>\n\n                                      <MenuItem value=\"5\">5</MenuItem>\n                                      <MenuItem value=\"6\">6</MenuItem>\n                                      <MenuItem value=\"7\">7</MenuItem>\n                                      <MenuItem value=\"8\">8</MenuItem>\n                                      <MenuItem value=\"9\">9</MenuItem>\n                                      <MenuItem value=\"10\">10</MenuItem>\n                                      <MenuItem value=\"11\">11</MenuItem>\n                                      <MenuItem value=\"12\">12</MenuItem>\n                                      <MenuItem value=\"13\">13</MenuItem>\n                                      <MenuItem value=\"14\">14</MenuItem>\n                                      <MenuItem value=\"15\">15</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                      \n\n                         {/* <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Section</InputLabel>\n                                <Select name=\"section\" value={this.state.section} onChange={this.onChange}>\n                                    <MenuItem value=\"Section1\">Section1</MenuItem>\n                                    <MenuItem value=\"Section2\">Section2</MenuItem>\n                                    <MenuItem value=\"Section3\">Section3</MenuItem>\n                                    <MenuItem value=\"Section4\">Section4</MenuItem>\n\n                                </Select>\n                            </FormControl>                        \n                        </Grid> */}\n\n\n\n                        <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"Connection Type\" required={true}>Category Type</InputLabel>\n                              <Select name=\"categoryType\" value={this.state.categoryType} onChange={this.onChange}>\n                                  <MenuItem value=\"Recharge\">Recharge</MenuItem>\n                                  <MenuItem value=\"Other\"> Other </MenuItem>\n                              </Select>\n                          </FormControl>                   \n                        </Grid>\n\n\n                        {/* <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"\" required={true}>Category</InputLabel>\n                              <Select name=\"category\" value={this.state.category} onChange={this.onChange}>\n                                  <MenuItem value=\"bonus\">Bonus</MenuItem>\n                                  <MenuItem value=\"Bonus\">Other</MenuItem>\n                              </Select>\n                          </FormControl>\n                        </Grid> */}\n                        \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Status</InputLabel>\n                                <Select name=\"active\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"true\">Active</MenuItem>\n                                    <MenuItem value=\"false\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField label=\"Banner Link\" name=\"link\" value={this.state.link} fullWidth  onChange={this.onChange}/>\n                        </Grid>\n\n                        <Grid item xs={10} sm={6}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                          <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                            <b> {this.state.selectAllzone}   </b>                                         \n                                          </MenuItem>\n\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                        {/* <Grid item xs={12} sm={12}>\n                            <InputLabel htmlFor=\"\" required={true}> Select the Devices</InputLabel> \n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forAndroid} name=\"forAndroid\" onChange={this.handleChange('forAndroid')}\n                                            value={this.state.forAndroid} /> } label=\"Android\" color=\"primary\"/>\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forIos} name=\"forIos\" onChange={this.handleChange('forIos')}\n                                            value={this.state.forIos}/> }  label=\"IOS\" />\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forWindows} name=\"forWindows\" onChange={this.handleChange('forWindows')}\n                                            value={this.state.forWindows}/> }  label=\"Windows\" />\n\n                        </Grid> */}\n\n\n                        {/* <TextField label=\"Publish Day\" type=\"number\" multiline rows={1} fullWidth margin=\"none\" min=\"1\" max=\"999\" name=\"priority\" value={this.state.priority} onChange={this.onChangePriority}/> */}\n\n                        {/* <input accept=\"image/*\" style={styles.input} id=\"contained-button-file\" type=\"file\" onChange={this.onProductIconFileChange} /> */}\n                        {/* <label htmlFor=\"contained-button-file\" style={{margin: '15px 20px 0 0', }}>\n                            <Button variant=\"contained\" size=\"large\" component=\"span\">\n                                Upload Product Icon\n                                <CloudUploadIcon />\n                            </Button>\n                        </label> */}\n\n                        {/* <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Validity Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"validityDays\" value={this.state.validityDays} onChange={this.onChange}/>\n                        </Grid> */}\n\n                      \n\n{/*                         \n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Expire Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid> */}\n\n                        \n                      <MaterialUIPickers callbackFromParent={dateParam} />\n                        <input type=\"hidden\" id=\"startDateMili\" /> \n                        <input type=\"hidden\" id=\"endDateMili\" /> \n\n\n                        <Grid  container spacing={1} container direction=\"row\" justify=\"flex-end\">\n\n                            <Grid item xs={12} sm={3}>\n                              <FormControl style={styles.multiselect}>\n                                  <InputLabel htmlFor=\"display-type\" required={true}>Upload Banner</InputLabel>\n                              </FormControl>\n\n                             \n                            </Grid>\n\n                            <Grid item xs={12} sm={9}>\n                                <FormControl style={styles.multiselect}>\n                                  <input\n                                    style={{\n                                      marginTop: \"31px\",\n                                      marginLeft: \"18px\"\n                                    }}\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"bannerImage\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                                  \n                                </FormControl>\n                          \n                               \n                            </Grid>\n\n                          \n                    </Grid>\n                    \n\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                          <Grid item xs={12} sm={6}>\n                                Selected File Size: {this.state.showFileSize}\n                                <br />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <img title=\"Preview Banner\"  style={{width:\"200px\", height:\"100px\"}} src={this.state.imageURL} />\n                          </Grid>\n                      </Grid>\n                    \n\n                    {/* <TextField label=\"Comment\" fullWidth margin=\"normal\" name=\"helpTextImage\" value={this.state.helpTextImage} onChange={this.onChange}/> */}\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                      <Button variant=\"contained\" color=\"primary\"   onClick={this.savePack}>Save</Button>\n                      <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '150px'}} onClick={this.cancel}>Cancel</Button>\n                    </Grid>\n                    \n                  </form>\n                    </Paper>\n                </Container>\n\n\n\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n\n    \n    e.preventDefault();\n   // if(!this.state.title ||!this.state.bannerType || !this.state.order || !this.state.section || !this.state.categoryType || !this.state.category || !this.state.publishDate || !this.state.expireDate || !this.state.active ){\n    if(!this.state.title ||!this.state.bannerType || !this.state.order   ){\n      Notify.showError(\"Missing required fields\");\n        return;\n    }\n\n    var startDateMili =  document.getElementById(\"startDateMili\").value; \n    var endDateMili = document.getElementById(\"endDateMili\").value; \n    if(startDateMili > endDateMili  ){\n      Notify.showError(\"Start date time can't be grater than end date.\");\n      return;\n    }\n\n   if(endDateMili  < startDateMili){\n      Notify.showError(\"End Date time can't be less than start date.\");\n      return;\n    }\n    \n   \n    if(!this.state.file){\n      Notify.showError(\"Missing required image upload\");\n      return;\n    }\n\n    \n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n\n\n    const formData = new FormData();\n    formData.append('file',this.state.file);\n    formData.append('title', this.state.title);\n    formData.append('order', parseInt(this.state.order));\n    formData.append('active', this.state.active == true);\n    formData.append('bannerType', this.state.bannerType);\n\n    formData.append('link', this.state.link);\n    \n    if(this.state.selectedZone && this.state.selectedZone.length){\n      formData.append('zones', this.state.selectedZone);\n    }\n\n    if(!this.state.publishDate){\n      this.state.publishDate = new Date().getTime();\n    }\n\n    if(!this.state.expireDate){\n      this.state.expireDate = new Date().getTime();\n    }\n\n    formData.append('publishDate', this.state.publishDate);\n    formData.append('expireDate', this.state.expireDate);\n    formData.append('categoryType', this.state.categoryType);\n    \n    pack.addBanner(formData).then(res => {\n      var data = resolveResponse(res, \"Baneer saved successfully.\");\n     // Notify.showSuccess(\"Baneer saved successfully.\");\n      console.log(\"Banner Response:\", data); \n      this.props.history.push(\"/banners\");\n\n    });\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/banners\");\n  };\n\n\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.checked });\n  };\n\n\n  validateUploadFile = (file) => {\n    const filename = file.name.toString(); \n\n    if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n        Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n        return false;\n    }\n\n    if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n        var fileSize = file.size / 1000; //in kb\n        if(fileSize >= 100 && fileSize <= 2048){\n          const fileext =  filename.split('.').pop(); \n          Object.defineProperty(file, 'name', {\n            writable: true,\n            value:  md5(file.name) +\".\"+ fileext\n          });\n          return file;\n        }else{\n          Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n        }\n    }else {\n      Notify.showError(\"Only png and jpeg file allowd.\")\n    }\n    return false;\n  }\n\n\n  onChangeFileUpload = e => {\n\n   const filetoupload = this.validateUploadFile(e.target.files[0]); \n    if (filetoupload){\n      this.setState({\n          [e.target.name]: e.target.files[0], \n          showFileSize : e.target.files[0].size / 1000 + \"KB\",\n          imageURL: URL.createObjectURL(e.target.files[0])\n      })\n    }else{\n      this.setState({\n          [e.target.name]: null, \n          showFileSize : \"\",\n          imageURL: \"\"\n      })\n      e.target.value = null;\n\n    }\n  } \n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(amsConstant.UPLOAD_IMG_BANNER,formData,config)\n        .then((response) => {\n    this.setState({\n        imageURL: response.data.result,\n    });\n        }).catch((error) => {\n            console.log(error,\"ERROR\")\n    });\n   \n  };\n\nonChange = e => this.setState({ [e.target.name]: e.target.value });\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  },\n  selectStyle:{\n   //  minWidth: '100%',\n     marginBottom: '0px',\n      minWidth: 255,\n      maxWidth: 255,\n}\n  \n};\n\nexport default BannerAdd;\n"]},"metadata":{},"sourceType":"module"}