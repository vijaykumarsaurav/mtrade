{"ast":null,"code":"import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport * as amsConstant from \"../../utils/config\";\n\nclass ProductService {\n  listProduct() {\n    return axios.get(amsConstant.PRODUCT_API_BASE_URL + '?onlyActive=false', AuthService.getHeader());\n  }\n\n  listActiveProduct() {\n    return axios.get(amsConstant.PRODUCT_API_BASE_URL, AuthService.getHeader());\n  }\n\n  getOne(productId) {\n    return axios.get(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n  }\n\n  updateProduct(product) {\n    return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n  }\n\n  uploadPackImage(formData) {\n    return axios.post(amsConstant.UPLAOD_PACK_IMAGE, formData, AuthService.getHeader());\n  }\n\n  addPack(pack) {\n    return axios.post(amsConstant.SAVE_PACK, pack, AuthService.getHeader());\n  }\n\n  addBanner(pack) {\n    return axios.post(amsConstant.SAVE_BANNER, pack, AuthService.getHeader());\n  }\n\n  updateBanner(pack) {\n    return axios.post(amsConstant.UPDATE_BANNER, pack, AuthService.getHeader());\n  }\n\n  getOneBanner(id) {\n    return axios.get(amsConstant.GET_ONE_BANNER + \"?bannerId=\" + id, AuthService.getHeader());\n  }\n\n  deleteProduct(productId) {\n    return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n  }\n\n  upload(formData) {\n    return axios.post(amsConstant.STORE_API_BASE_URL + '/resource/upload', formData, AuthService.getHeader());\n  }\n\n}\n\nexport default new ProductService();","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/service/PackService.js"],"names":["axios","AuthService","amsConstant","ProductService","listProduct","get","PRODUCT_API_BASE_URL","getHeader","listActiveProduct","getOne","productId","updateProduct","product","post","uploadPackImage","formData","UPLAOD_PACK_IMAGE","addPack","pack","SAVE_PACK","addBanner","SAVE_BANNER","updateBanner","UPDATE_BANNER","getOneBanner","id","GET_ONE_BANNER","deleteProduct","delete","upload","STORE_API_BASE_URL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAQ,KAAKC,WAAb,MAA8B,oBAA9B;;AAEA,MAAMC,cAAN,CAAqB;AAEjBC,EAAAA,WAAW,GAAE;AACT,WAAOJ,KAAK,CAACK,GAAN,CAAUH,WAAW,CAACI,oBAAZ,GAAkC,mBAA5C,EAAiEL,WAAW,CAACM,SAAZ,EAAjE,CAAP;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,WAAOR,KAAK,CAACK,GAAN,CAAUH,WAAW,CAACI,oBAAtB,EAA4CL,WAAW,CAACM,SAAZ,EAA5C,CAAP;AACH;;AAEDE,EAAAA,MAAM,CAACC,SAAD,EAAW;AACb,WAAOV,KAAK,CAACK,GAAN,CAAUH,WAAW,CAACI,oBAAZ,GAAmC,GAAnC,GAAyCI,SAAnD,EAA8DT,WAAW,CAACM,SAAZ,EAA9D,CAAP;AACH;;AAEDI,EAAAA,aAAa,CAACC,OAAD,EAAU;AACnB,WAAOZ,KAAK,CAACa,IAAN,CAAWX,WAAW,CAACI,oBAAvB,EAA6CM,OAA7C,EAAsDX,WAAW,CAACM,SAAZ,EAAtD,CAAP;AACH;;AAGDO,EAAAA,eAAe,CAACC,QAAD,EAAW;AACtB,WAAOf,KAAK,CAACa,IAAN,CAAWX,WAAW,CAACc,iBAAvB,EAA0CD,QAA1C,EAAoDd,WAAW,CAACM,SAAZ,EAApD,CAAP;AACH;;AAEDU,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,WAAOlB,KAAK,CAACa,IAAN,CAAWX,WAAW,CAACiB,SAAvB,EAAkCD,IAAlC,EAAwCjB,WAAW,CAACM,SAAZ,EAAxC,CAAP;AACH;;AAEDa,EAAAA,SAAS,CAACF,IAAD,EAAO;AACZ,WAAOlB,KAAK,CAACa,IAAN,CAAWX,WAAW,CAACmB,WAAvB,EAAoCH,IAApC,EAA0CjB,WAAW,CAACM,SAAZ,EAA1C,CAAP;AACH;;AAEDe,EAAAA,YAAY,CAACJ,IAAD,EAAO;AACf,WAAOlB,KAAK,CAACa,IAAN,CAAWX,WAAW,CAACqB,aAAvB,EAAsCL,IAAtC,EAA4CjB,WAAW,CAACM,SAAZ,EAA5C,CAAP;AACH;;AAIDiB,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,WAAOzB,KAAK,CAACK,GAAN,CAAUH,WAAW,CAACwB,cAAZ,GAA2B,YAA3B,GAAwCD,EAAlD,EAAsDxB,WAAW,CAACM,SAAZ,EAAtD,CAAP;AAEH;;AACDoB,EAAAA,aAAa,CAACjB,SAAD,EAAW;AACpB,WAAOV,KAAK,CAAC4B,MAAN,CAAa1B,WAAW,CAACI,oBAAZ,GAAmC,GAAnC,GAAyCI,SAAtD,EAAiET,WAAW,CAACM,SAAZ,EAAjE,CAAP;AACH;;AAEDsB,EAAAA,MAAM,CAACd,QAAD,EAAU;AACZ,WAAOf,KAAK,CAACa,IAAN,CAAWX,WAAW,CAAC4B,kBAAZ,GAAiC,kBAA5C,EAAgEf,QAAhE,EAA0Ed,WAAW,CAACM,SAAZ,EAA1E,CAAP;AACH;;AA/CgB;;AAmDrB,eAAe,IAAIJ,cAAJ,EAAf","sourcesContent":["import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as amsConstant from \"../../utils/config\";\n\nclass ProductService {\n\n    listProduct(){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL+ '?onlyActive=false', AuthService.getHeader());\n    }\n\n    listActiveProduct(){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL, AuthService.getHeader());\n    }\n\n    getOne(productId){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    updateProduct(product) {\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n    }\n\n\n    uploadPackImage(formData) {\n        return axios.post(amsConstant.UPLAOD_PACK_IMAGE, formData, AuthService.getHeader());\n    }\n\n    addPack(pack) {\n        return axios.post(amsConstant.SAVE_PACK, pack, AuthService.getHeader());\n    }\n\n    addBanner(pack) {\n        return axios.post(amsConstant.SAVE_BANNER, pack, AuthService.getHeader());\n    }\n\n    updateBanner(pack) {\n        return axios.post(amsConstant.UPDATE_BANNER, pack, AuthService.getHeader());\n    }\n\n\n\n    getOneBanner(id) {\n        return axios.get(amsConstant.GET_ONE_BANNER+\"?bannerId=\"+id, AuthService.getHeader());\n\n    }\n    deleteProduct(productId){\n        return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    upload(formData){\n        return axios.post(amsConstant.STORE_API_BASE_URL + '/resource/upload', formData, AuthService.getHeader());\n    }\n\n}\n\nexport default new ProductService();\n"]},"metadata":{},"sourceType":"module"}