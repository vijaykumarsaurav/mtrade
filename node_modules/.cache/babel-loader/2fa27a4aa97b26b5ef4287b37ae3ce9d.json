{"ast":null,"code":"var _jsxFileName = \"/Users/B0208058/Documents/slretailer-web-portal/src/components/pack/RechargePack.js\";\nimport React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport ActivationService from \"../service/ActivationService\";\n\nclass RechargePack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addProduct = e => {\n      console.log(this.props);\n      this.props.history.push('/pack-add');\n    };\n\n    this.addProduct = this.addProduct.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.convertBool = this.convertBool.bind(this);\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadPackList(); //  this.props.setPackLoaded(); \n\n    localStorage.setItem(\"lastUrl\", \"packs\");\n  }\n\n  loadPackList() {\n    var data = {\n      allPacks: true,\n      portal: true\n    };\n    AdminService.listPack(data).then(res => {\n      let data = resolveResponse(res);\n      console.log(data);\n\n      if (data && data.result) {\n        this.setState({\n          products: data.result.data\n        });\n      }\n    });\n  }\n\n  editProduct(productId) {\n    window.localStorage.removeItem(\"selectedProductId\");\n    window.localStorage.setItem(\"selectedProductId\", productId);\n    this.props.history.push('/pack-edit');\n  }\n\n  convertBool(flag) {\n    return flag ? 'Yes' : 'No';\n  }\n\n  dateFormat(date) {\n    return moment.utc(date).format('DD-MM-YYYY HH:mm:ss A');\n  }\n\n  render() {\n    console.log(this.props, \"PROPS\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(PostLoginNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        padding: \"10px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      style: {\n        flex: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Recharge Pack\"), React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondry\",\n      onClick: () => this.addProduct(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Add Pack\")), React.createElement(Table, {\n      size: \"small\",\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      style: {\n        width: \"\",\n        whiteSpace: \"nowrap\"\n      },\n      variant: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      variant: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Icon\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Connection Type\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Pack\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Status\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Validity Days\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Validity Type\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Description\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Start Date/Time\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"End Date/Time\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Display Type\"))), React.createElement(TableBody, {\n      style: {\n        width: \"\",\n        whiteSpace: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.products ? this.state.products.map(row => React.createElement(TableRow, {\n      key: row.productId,\n      onClick: () => this.editProduct(row.productId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      style: {\n        width: \"80px\",\n        height: \"40px\"\n      },\n      src: row.imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), \" \"), React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, row.connectionType), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, row.pack), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, row.amount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, row.active ? 'Active' : 'Inactive'), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, row.validityDays), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, row.validityType), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, row.description), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, row.comment), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.dateFormat(row.startDate)), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.dateFormat(row.endDate)), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, row.displayType))) : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst styles = {\n  tableStyle: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    packs: state.packs.packs.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPackLoaded\n})(RechargePack);","map":{"version":3,"sources":["/Users/B0208058/Documents/slretailer-web-portal/src/components/pack/RechargePack.js"],"names":["React","AdminService","Typography","Button","Table","TableHead","TableRow","TableCell","TableBody","Grid","Paper","CreateIcon","PostLoginNavBar","resolveResponse","connect","setPackLoaded","Spinner","moment","ActivationService","RechargePack","Component","constructor","props","addProduct","e","console","log","history","push","bind","editProduct","convertBool","state","products","componentDidMount","loadPackList","localStorage","setItem","data","allPacks","portal","listPack","then","res","result","setState","productId","window","removeItem","flag","dateFormat","date","utc","format","render","padding","overflow","flex","width","whiteSpace","map","row","height","imageURL","connectionType","pack","amount","active","validityDays","validityType","description","comment","startDate","endDate","displayType","styles","tableStyle","display","justifyContent","mapStateToProps","packs"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport ActivationService from \"../service/ActivationService\";\n\nclass RechargePack extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.state = {\n            products: [],\n        }\n    }\n\n\n    componentDidMount() {\n        this.loadPackList();\n     //  this.props.setPackLoaded(); \n        localStorage.setItem(\"lastUrl\",\"packs\");\n\n    }\n\n    loadPackList() {\n        var data = { allPacks:true, portal: true};\n        AdminService.listPack(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n              console.log(data);\n                if(data && data.result){\n                    this.setState({products: data.result.data})\n                }\n            });\n    }\n\n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/pack-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedProductId\");\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/pack-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){ \n        return moment.utc(date).format('DD-MM-YYYY HH:mm:ss A');\n    }\n  \n\n    render(){\n        console.log(this.props,\"PROPS\")\n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n            <Typography variant=\"h5\" style={{ flex: 0 }} >Recharge Pack</Typography>\n                <Grid  container spacing={24} container\n                direction=\"row\"\n                justify=\"flex-end\"\n                >\n                <Button variant=\"contained\" color=\"secondry\" onClick={() => this.addProduct()}>\n                    Add Pack\n                </Button>      \n                </Grid>\n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow variant=\"head\">\n                          {/* <TableCell align=\"center\">Edit</TableCell> */}\n\n                          <TableCell align=\"center\">Icon</TableCell>\n\n                        {/* <TableCell align=\"center\">ProductId</TableCell> */}\n                        <TableCell align=\"center\">Connection Type</TableCell>\n                        <TableCell align=\"center\">Pack</TableCell>\n                        <TableCell align=\"center\">Amount</TableCell>\n\n                        <TableCell align=\"center\">Status</TableCell>\n                        <TableCell align=\"center\">Validity Days</TableCell>\n                        <TableCell align=\"center\">Validity Type</TableCell>\n                        <TableCell align=\"center\">Description</TableCell>\n                        <TableCell align=\"center\">Comment</TableCell>\n\n                        <TableCell align=\"center\">Start Date/Time</TableCell>\n                        <TableCell align=\"center\">End Date/Time</TableCell>\n\n                        <TableCell align=\"center\">Display Type</TableCell>\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                \n                    { this.state.products ? this.state.products.map(row => (\n                        <TableRow key={row.productId} onClick={() => this.editProduct(row.productId)}>\n                           {/* <TableCell align=\"center\" onClick={() => this.editProduct(row.productId)}><CreateIcon /></TableCell> */}\n\n                           <TableCell align=\"center\"> <img style={{width:\"80px\", height:\"40px\"}} src={row.imageURL} /> </TableCell>\n\n                           {/* <TableCell align=\"center\">{row.productId}</TableCell> */}\n                            <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                {row.connectionType}\n                            </TableCell>\n                            \n                            <TableCell align=\"center\">{row.pack}</TableCell>\n                            <TableCell align=\"center\">{row.amount}</TableCell>\n\n                            <TableCell align=\"center\">{row.active ? 'Active' : 'Inactive'}</TableCell>\n                            <TableCell align=\"center\">{row.validityDays}</TableCell>\n                            <TableCell align=\"center\">{row.validityType}</TableCell>\n                            <TableCell align=\"center\">{row.description}</TableCell>\n                            <TableCell align=\"center\">{row.comment}</TableCell>\n\n                            {/* {row.startDate.substring(0, 10)} */}\n                            <TableCell align=\"center\">{this.dateFormat(row.startDate)}</TableCell>\n                            {/* <TableCell align=\"center\">{row.endDate.substring(0, 10)}</TableCell> */}\n\n                            <TableCell align=\"center\">{this.dateFormat(row.endDate)}</TableCell>\n\n                            <TableCell align=\"center\">{row.displayType}</TableCell>\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(RechargePack);\n"]},"metadata":{},"sourceType":"module"}