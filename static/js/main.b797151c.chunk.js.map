{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/LightChartCom.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/SimpleExpansionPanel.js","components/MyTrade/SimpleExpansionFastMovement.js","components/MyTrade/LiveBidsExpantion.js","components/MyTrade/WatchListTab.js","api.js","action/index.js","components/MyTrade/Chart.js","components/MyTrade/BankNiftyView.js","components/MyTrade/OptionBuyWithSPLevel.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/Home.js","components/MyTrade/NiftyView.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/LightChartDialog.js","components/MyTrade/DeliveryData.js","components/MyTrade/IndexCharts.js","components/MyTrade/FullModel.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/MyTrade/FindFastMovement2.js","components/MyTrade/FindFastMovement3.js","components/MyTrade/LightChartModel.js","components/MyTrade/SlowMotion.js","components/MyTrade/MarketDepth.js","components/MyTrade/Backtest.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","symbol","backDate","allSymbol","count","index","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","Equalizer_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","LightChartCom","setTimeout","chart","LightweightCharts","createChart","getElementById","height","rightPriceScale","scaleMargins","top","bottom","borderVisible","layout","textColor","grid","vertLines","horzLines","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","addHistogramSeries","priceFormat","priceScaleId","volumeSeries","subscribeCrosshairMove","param","getit","seriesPrices","Symbol","iterator","string","change","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","elem","console","log","open","high","low","close","toFixed","err","return","time","toLocaleString","str","innerHTML","smaData","avg","sum","result","len","val","slice","calculateSMA","addLineSeries","lineWidth","direction","paddingLeft","paddingRight","item","fontSize","DialogTitle","withStyles","padding","closeButton","right","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","placeOrder","click","updateOrderList","retrieveOrderBook","orderlist","sort","b","updatetime","getPercentageColor","percent","Math","floor","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","qtyToTake","format1","beginningTime","moment","format","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","candleData","clossest","lowerest","highestHigh","lowestLow","highestsum","reverse","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","orderOption","buyPrice","placeOrderMethod","catch","placeOptionOrder","placeOptionSLMOrder","stopLossTriggerPrice","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","Hidden","xsDown","noWrap","LoadSymbolDetails","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","lib_default","OpenInNew_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DatePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","list","ExpansionPanelDetails","overflowY","map","nc","background","highlisht","TabPanel","react","role","hidden","Box","sx","Typography_Typography","a11yProps","BasicTabs","_props$data","cursor","onSelectItem","autoSearchList","symbolList","onChangeWatchlist","search","handleKeyDown","selectedWatchlist","setValue","searchedSymbolList","gainerList","looserList","borderBottom","Tabs","newValue","Tab","FormControl","htmlFor","Select","MenuItem","onKeyDown","selected","textAlign","sector","performServerAction","baseURL","setPackLoaded","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","allPacks","portal","sent","stop","_x","apply","diffData","putData","totPEOI","totCEOI","diff","dateTime","substring","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MyView","onChangeSelectSymbol","loadPackList","filterOptionChain","actualValue","filereddata","alldata","optionChainDataBN","records","expiryDate","strikePrice","filtered","FilteredBY","handleScroll","scrollcount","onChangeCallLot","calculateCallMargin","CE","lastPrice","totalMargin","Parser","lotSize","buyCallLot","maxLoss","onChangePutLot","calculatePutMargin","PE","buyPutLot","getDataforStrike","sumOfCEoi","sumOfPEoi","openInterest","findSupportResistence","optiondata","PEoi","CEoi","PEoiChange","CEoiChange","changeinOpenInterest","myStrike","startDiff","underlyingValue","showOptionDownside","rem","round","startFrom","endDiff","showOptionUpside","rem2","endTo","totalspeoi","totalsceoi","resdata","AllspTotalOI","selectedSPpcr","allStrikediff","allStrikeChngeDiff","products","stopnview","curnewdata","timestamp","totalCOI","expiry","strike","waitForChainFlag","pcrTableBN","selectOptionStock","niftyLogSize","niftybankLogSize","_this2","SecuritiesInFO","todayTime","setInterval","updatepcr","_this3","getBNcpdata","totOI","newdata","dateFormat","totCEVol","totVol","totPEVol","totChangeINOICall","totChangeINOIPut","totChangeINOIDiff","oldproducts","lastrow","isDuplicate","totCEOIChange","totPEOIChange","totDiffChange","unshift","pcrdata","allPCR","expiryPCR","_React$createElement2","_React$createElement3","_this4","selectStyle","Input","key","expiryDates","labelId","max-height","strikePrices","Paper","overflow","Table","stickyHeader","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","hover","Chart_App","borderLeft","borderRight","colSpan","opdata","impliedVolatility","pChange","buyOption","tableStyle","marginBottom","minWidth","connect","OrderBook","searchSymbolPendingOrder","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","abrupt","createdAt","toLocaleTimeString","buyAt","sellAt","pattenName","pattenNamePending","orderPenidngOptionList","toConsumableArray","deleteInOrderPenidngList","delitem","splice","callBackUpdate","placeOptionSPLevelOver","indexData","spotPrice","isoWeekday","nextExp","updateLTP","_callee2","_loop","_context3","_context2","buyOptionFlag","r","delegateYield","getTradePrice","refreshCandleChartManually","_ref3","_callee3","_context4","failedCount","onChange2","openNewPage","backToPositionPage","autoSearchTemp","fdata","instrumenttype","tick_size","endTime","currentTime","isBetween","intervaltime","findlast5minMovementInterval","gutterBottom","hash","Autocomplete","freeSolo","disableClearable","option","renderInput","params","InputProps","Delete_default","orderPenidngList","optiontype","noOfLot","exp","optionName","optionData","ltpparam","today","slpercentage","perStopTrigerLoss","OptionBuyWithSPLevel","BankNiftyView","Home","onInputChange","showStaticChart","checkOpenEqualToLow","_this$setState4","openEqualHighList","openEqualLowList","closeingEqualHighList","advanceShareCount","declineShareCount","UnchangeShareCount","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","wsClint","firstTime_req","feedToken","send","updateSocketWatch","channel","updateSocket","task","user","acctid","updateSocketDetails","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","_req","orderid","watchList","getTimeFrameValue","timeFrame","chartStaticData","timeDuration","historyData","cdata","d","getTime","volumeSeriesData","loopindex","rsiValues","bblastValue","vwapvalue","max","smaLineSeries","InstrumentHistroy","upsideMoveCount","downMoveCount","totalSum","per","totalPerchentageChange","startingFrom","checkSlowMotionStock","stock","dataDay","resd","histdatad","candleDatad","bigCandleCount","slowMotionStockList","checkSlowMotionCheckLive","_loop2","checkLiveBids","_context5","bidlivedata","biddata","totalBuyQuantity","totalSellQuantity","deliveryToTradedQuantity","liveBidsList","oneHourBullBearCheck","_callee4","_loop3","_context7","_context6","lastCandle","oneHourBullBearCheckList","searchValumeBreakoutStock","_callee5","_loop4","_context9","_context8","volumeSum","findmaxVol","currentCandleVol","firstCandleCloseingPrice","priceGoingHighCount","firstCandleCloseingPriceDownSide","priceGoingLowCount","avgVol","volumeBreakoutlast5CandleList","dailyBasisInfoCheck","startDateforDaily","DSMA","closeingDatadaily","valumeSum","SMA","dailyAvgValume","DSMALastValue","DailyBulishStatus","todayCurrentVolume","volumeCrossedList","slmOrderType","onSelectItemChart","seachSumbol","deleteItemWatchlist","findIndex","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","candleChartDataInside","keyCode","prevState","updateCandleOnkey","selectedKeyRow","sumPercentage","ifNotBought","longExitPriceType","shortExitPriceType","stopScaningFlag","searchFailed","FoundPatternList","fastMovementList","domElement","timeVisible","secondsVisible","tostartInteral","clearInterval","_ref6","upper","middle","lower","j","OrderWatchlist","SimpleExpansionFastMovement_SimpleExpansionPanel","formContainer","textStyle","imgStyle","MuiTextField","footerButton","left","optionChainData","pcrTable","_React$createElement4","paddingTop","indexSymbol","MyDialog_DialogTitle","MyDialog_DialogContent","indexSymbolData","idata","MyDialog_DialogActions","getIndicesStocks","getIndiceStock","toLocaleLowerCase","indexTimeStamp","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","x","y","colors","upward","downward","ApexCharts","querySelector","render","toFixedAmount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","getTodayOrder","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","w3cwebsocket","actiontype","feedtype","jwttoken","apikey","sbin","getHistory","histCandles","positionList","heartbeatReq","exchtime","multipleChartData","longs","longCandles","shorts","shortCandles","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","timediff","candleHistoryInterval","last10Candle","findTweezerTopPatternLive","findTweezerBottomPatternLive","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","secondCandle","diffPer","ttophistCandle","foundData","foundPatternList","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","backTestResult","backTestFlag","rgrangeCount","last4Candle","last5Candle","rangeArr","firstElement","buyentry","sellenty","orderActivated","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","BuyAt","SellAt","brokerageCharges","findNR7PatternLive","showtestdata","last7Candle","last9Candle","stockTesting","_ref4","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","pastPerferm","foundlist","getStoplossFromOrderbook","netqty","stopLoss","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_callee6","_loop5","_ret","_context11","showHighLowWisePer","_context10","v","t0","tagPatternWhichTaken","orderTagToPosition","pattern","calculateTradeExpence","totalbuyvalue","totalsellvalue","buyCharge","sellCharge","turnOver","totalBroker","sst","sstCharge","transCharge","stampDuty","sebiCharge","gstCharge","total","tradeExpence","expenceInfo","getPositionData","_callee7","totalMaxPnL","_context12","getPosition","todayProfitPnL","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","totalExpence","pnl","buyqty","percentPnL","chargeInfo","slData","stopLossAmount","totalTornOver","checkAndPlaceSingleOrder","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","onTrailChange","getNiftyLTP","getBankNiftyLTP","getStopLossPrice","_ref8","_callee8","_context13","slPrice","_x2","_x3","LockedSymbolName","orderData","getOpenPeningOrderId","squareOff","abs","modifyOrderMethod","minTriggerPrice","minSLPrice","get2DecimalNumber","number","getSLAndTriggerPrice","getOptionPercentage","trailPerChange","slPriceData","lastTriggerprice","perchngfromTriggerPrice","getPercentage","firstTimeMove","firstTimeSLMove","nextTimeMove","nextTimeSLMove","positionInterval","bankNiftyInterval","squireInterval","sqrOffbeginningTime","sqrOffendTime","scaninterval","scanendTime","totalDayLoss","dailyLossPer","getNSETopStock","scandata","_loop6","isFound","symbolName","selectedStockInteval","getSelectedStockFromDb","_loop7","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","step","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","totalLongPer","totalLongs","totalLongHighPer","totalShortPer","totalShort","totalShortLowPer","Example","areaData","volumeData","ChartData","areaSeries","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","_ref5","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","index2","autoTradeTopList","indexdata","LineChart_App","LightChartDialog_DialogTitle","LightChartData","selectedSymbol","LightChartDialog_DialogContent","LightChartDialog_DialogActions","onChangeBackDate","getByDateBidHistory","backupData","backupDeleverydata","saveDeliveryData","storeRes","updatebidHistory","storeResData","symbolHist","buyHist","sellHist","lastbuybid","lastsellbid","totalBuyBid","totalSellBid","buybidHistory","sellbidHistory","storeBidData","backupBidata","backupBiddata","dbUpdateTime","saveBidData","quantityTraded","deliveryQuantity","datetime","secDate","averagePrice","bidLivedata","priceChangePer","updatedTime","buyPrice1","buyPrice2","buyPrice3","buyPrice4","buyPrice5","buyQuantity1","buyQuantity2","buyQuantity3","buyQuantity4","buyQuantity5","sellPrice1","sellPrice2","sellPrice3","sellPrice4","sellPrice5","sellQuantity1","sellQuantity2","sellQuantity3","sellQuantity4","sellQuantity5","totalTradedVolume","totalTradedValue","buytosellTime","selltobuyTime","highlightbuy","highlightsell","lastUpdateTime","getDeliveryHistory","getDeliveryDataFromDb","delHistory","getBidDataFromDb","bidHistoty","getBackUpDate","getBackUpdateList","backupDateList","convertToFloat","isNaN","sortByColumn","sortedType","totalStockToWatch","BBBlastType","componentDidMount","find10MinBBBlast","stop10bbSearch","stopSearching","onChangeQty","getRSIBBString","BB","createMultpleChart","div","border","appendChild","legendTitle","chartSize","lightChartData","append","sortTheChart","allchart","createNewArray","childNodes","innerText","findlast5minMovement","updateToLocalStorage","isfound","updateData","findlast5minMovementUpdate","bbvlastvalue","dataltp","RSIValue","nextProps","nextState","fullScreen","FullModel_DialogTitle","FullModel_DialogContent","IndexCharts","DeliveryData","FullModel_DialogActions","updateTokenSymbol","uppercaseNameEQ","uppercaseNameBE","showCandleChartPopUp","isThere","switchToListView","switchToListViewFlag","get5DaysMoveCount","getDeliveryInfo","getDeliveryData","showDeliveryData","showAllChart","sluglist","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","timeVal","slugName","checkSectorApiOther","_loop8","indexStock","stockElement","stockInfo","ltP","iislPercChange","glist","_loop9","llist","finally","ok","FullModel_CustomizedDialogs","clickedIndexName","LightChartDialog_CustomizedDialogs","startSearching","lightcandleChartData","getFullYear","getMonth","getDate","sma","upsidecount","downsidecount","startingRsiupside","startingRsiDownside","volumeUpside","updateMsg","percentChangeList","changePer","macdInput","fastPeriod","slowPeriod","signalPeriod","SimpleMAOscillator","SimpleMASignal","macd","MACD","macdLastValue","signal","macdData","patternName","histogram","LightChartModel_DialogTitle","LightChartModel_DialogContent","LightChartModel_DialogActions","checkSlowMotion","scanUpdate","updateTimeFrameChart","lightChartinfo","stockindex","sectorName","isActivated","midBullishCount","bullishCount","activationTime","activationPrice","update","updatetopage","activationToLtpChange","AtoltpChng","showLightChart","deleteAllScan","LightChartModel_CustomizedDialogs","LiveBid","takeAction","actionList","updateTime","lastUpdateAction","tbq","tsq","ap","bestbuyquantity","bq","bestbuyprice","bp","bestsellquantity","bs","bestsellprice","sp","shortBy","getUpdateIndexData","softedIndexList","isSpeek","convertToDecimal","num","handleChange","lightChartSymbol","NIFTY NEXT 50","NIFTY MIDCAP 50","NIFTY HEALTHCARE","NIFTY OIL AND GAS","NIFTY 100","NIFTY CONSR DURBL","onChangePattern","backTestResultDateRange","dateAndTypeKeys","_this$setState5","stopBacktesting","backTestAnyPattern","enddate","currentMoment","endMoment","runningTest","patternType","backTestNR4","backTestNR4Trail","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","next10Candle","backtestTweezerTop","backtestTweezerBottom","next5thCandle","foundStock","nr4CheckPastPerfommance","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","insideIndex","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","buyExitPricePer","buyExitPriceMinRange","start5thdate","set","hour","minute","end5thdate","insideCandleRes","dateWithWlType","datewisetrades","perChngOnLow","exitPrice","slPer","entryAt","_context14","longData","shortData","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","exitAt","_context16","_context15","_callee9","_context17","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","totalMarketEnd","totalSlHit","MaterialUIDateTimePicker","AppRouter","react_router","path","exact","NiftyView","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","FindFastMovement2","FindFastMovement3","SlowMotion","MarketDepth","Backtest","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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E4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,IAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAA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","file":"static/js/main.b797151c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = localStorage.getItem(\"userTokens\") && JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\n\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n   saveDeliveryData(data) {\n      return axios.post('http://localhost:8081/store_delivery_data', data,  '');\n   } \n\n   saveBidData(data) {\n      return axios.post('http://localhost:8081/store_bid_data', data,  '');\n   } \n\n   getDeliveryDataFromDb(symbol) {\n      return axios.get('http://localhost:8081/get_delivery_data?symbol='+symbol, '');\n   } \n   getBidDataFromDb(backDate,allSymbol,count) {\n      return axios.get('http://localhost:8081/get_bid_data?backDate='+backDate +\"&allSymbol=\"+allSymbol+\"&count=\"+count, '');\n   } \n\n   getBackUpdateList() {\n      return axios.get('http://localhost:8081/get_backup_date_list', '');\n   } \n\n   getPosition(data){\n      return axios.get(apiConstant.getPosition, AuthService.getHeader());\n   }\n\n   getAutoScanStock(){\n      return axios.get(apiConstant.getScannedStocks, '');\n   }\n\n   getNSETopStock(){\n      return axios.get(apiConstant.getNseTopStocks, '');\n   }\n\n   getSelectedStockFromDb(){\n      return axios.get(apiConstant.getSelectedStock, '');\n   }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    checkOtherApi(index){\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n    }\n\n    checkSectorApiOther(index){\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n      }\n\n    \n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices);\n    }\n\n    allIndicesDirectJSON(){\n        return axios.get('http://localhost:8081/nse/get_indices', '');\n        // return axios.get(apiConstant.allIndices2Json);\n     }\n\n     getBNcpdata(symbol){\n         if(symbol == 'NIFTY' || symbol == 'BANKNIFTY'){\n            return axios.get('http://localhost:8081/nse/getOptionChain?symbol='+symbol, '');\n         }else{\n            return axios.get('http://localhost:8081/nse/getOptionChainEquity?symbol='+symbol, '');\n         }\n        \n     }\n\n\n     getDeliveryData(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n     checkLiveBids(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n\n\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"/mtrade/#/home\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Home\" />\n    </ListItem>\n    \n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map2\" />\n    </ListItem>\n\n\n\n    <ListItem button component='a' href={\"/mtrade/#/delivery\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Delivery\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/slow-motion\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Slow Motion\" />\n    </ListItem>\n\n\n   \n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/index-charts\"} >  \n      <ListItemIcon>\n        <EqualizerIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Index Charts\" />\n    </ListItem>\n    \n\n\n  \n\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Watchlist\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map\" />\n    </ListItem>\n  \n\n    <ListItem button component='a' href={\"/mtrade/#/market-depth\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Depth Live\" />\n    </ListItem>\n    \n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem> */}\n\n    <ListItem button component='a' href={\"/mtrade/#/backtest\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Backtest - Research\" />\n    </ListItem>\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport default function LightChartCom(props) {\n\tconst [open, setOpen] = React.useState(false);\n\t// var fileref=document.createElement('script')\n\t// fileref.setAttribute(\"type\",\"text/javascript\")\n\t// fileref.setAttribute(\"src\", 'https://unpkg.com/lightweight-charts@3.4.0/dist/lightweight-charts.standalone.production.js')\n\t// document.getElementsByTagName(\"head\")[0].appendChild(fileref)\n\n\tsetTimeout(() => {\n\n\t\tvar chart = window.LightweightCharts.createChart(document.getElementById('chart'), {\n\t\t\twidth: 600,\n\t\t\theight: 300,\n\t\t\trightPriceScale: {\n\t\t\t\tscaleMargins: {\n\t\t\t\t\ttop: 0.3,\n\t\t\t\t\tbottom: 0.25,\n\t\t\t\t},\n\t\t\t\tborderVisible: false,\n\t\t\t},\n\t\t\tlayout: {\n\t\t\t\tbackgroundColor: 'white',   // '#131722',\n\t\t\t\ttextColor: '#d1d4dc',\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tvertLines: {\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0)',\n\t\t\t\t},\n\t\t\t\thorzLines: {\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\t// var areaSeries = chart.addAreaSeries({\n\t\t// \ttopColor: 'rgba(38,198,218, 0.56)',\n\t\t// \tbottomColor: 'rgba(38,198,218, 0.04)',\n\t\t// \tlineColor: 'rgba(38,198,218, 1)',\n\t\t// \tlineWidth: 2,\n\t\t// });\n\t\t// areaSeries.setData(props.ChartData.areaSeries);\n\n\n\t\tvar candleSeries = chart.addCandlestickSeries({\n\t\t\tupColor: 'green',\n\t\t\tdownColor: 'red',\n\t\t\tborderDownColor: 'red',\n\t\t\tborderUpColor: 'green',\n\t\t\twickDownColor: 'red',\n\t\t\twickUpColor: 'green',\n\t\t});\n\n\t\t//candleSeries.setData(data);\n\t\tvar data = props.chartData && props.chartData.candleSeries;\n\t\tcandleSeries.setData(data);\n\n\n\n\t\tvar volumeSeries = chart.addHistogramSeries({\n\t\t\tcolor: '#26a69a',\n\t\t\tpriceFormat: {\n\t\t\t\ttype: 'volume',\n\t\t\t},\n\t\t\tpriceScaleId: '',\n\t\t\tscaleMargins: {\n\t\t\t\ttop: 0.8,\n\t\t\t\tbottom: 0,\n\t\t\t},\n\t\t});\n\n\t\t//volumeSeries.setData(props.ChartData && props.ChartData.volumeData);\n\t\tvolumeSeries.setData(props.chartData && props.chartData.volumeSeries);\n\n\n\t\tchart.subscribeCrosshairMove((param) => {\n\n\t\t\tvar getit = param.seriesPrices[Symbol.iterator]();\n\n\t\t\tvar string = \"\";\n\t\t\tvar change = \"\";\n\n\t\t\tfor (var elem of getit) {\n\n\t\t\t\tconsole.log(elem);\n\n\t\t\t\tif (typeof elem[1] == 'object') {\n\t\t\t\t\tstring += \" O: <b>\" + elem[1].open + \"</b>\";\n\t\t\t\t\tstring += \" H: <b>\" + elem[1].high + \"</b>\";\n\t\t\t\t\tstring += \" L: <b>\" + elem[1].low + \"</b>\";\n\t\t\t\t\tstring += \" C: <b>\" + elem[1].close + \"</b>\";\n\t\t\t\t\tchange = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n\t\t\t\t\tstring += \" CH: <b>\" + change.toFixed(2) + '%</b>';\n\t\t\t\t} else {\n\t\t\t\t\tstring += \"&nbsp;\" + elem[1].toFixed(2) + \" \";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.time)\n\t\t\t\tstring += \" T: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n\n\n\n\t\t\tconst domElement = document.getElementById('showChartTitle');\n\n\n\t\t\tvar str = \"<span style=color:green>\" + string + \"</span> \";\n\t\t\tif (change < 0)\n\t\t\t\tstr = \"<span style=color:red>\" + string + \"</span> \";\n\n\t\t\tdomElement.innerHTML = str;\n\t\t});\n\n\n\n\n\t\t// var datesForMarkers = [data[data.length - 19], data[data.length - 39]];\n\t\t// var indexOfMinPrice = 0;\n\t\t// for (var i = 1; i < datesForMarkers.length; i++) {\n\t\t// \tif (datesForMarkers[i].high < datesForMarkers[indexOfMinPrice].high) {\n\t\t// \t\tindexOfMinPrice = i;\n\t\t// \t}\n\t\t// }\n\t\t// var markers = [];\n\t\t// for (var i = 0; i < datesForMarkers.length; i++) {\n\t\t// \tif (i !== indexOfMinPrice) {\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'aboveBar', color: '#e91e63', shape: 'arrowDown', text: 'Sell @ ' + Math.floor(datesForMarkers[i].high + 2) });\n\t\t// \t} else {\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'belowBar', color: '#2196F3', shape: 'arrowUp', text: 'Buy @ ' + Math.floor(datesForMarkers[i].low - 2) });\n\t\t// \t}\n\t\t// }\n\t\t// markers.push({ time: data[data.length - 48].time, position: 'aboveBar', color: '#f68410', shape: 'circle', text: 'D' });\n\t\t// candleSeries.setMarkers(markers);\n\n\n\t\tvar smaData = calculateSMA(data, 20);\n\t\tvar smaLine = chart.addLineSeries({\n\t\t\tcolor: 'rgba(4, 111, 232, 1)',\n\t\t\tlineWidth: 2,\n\t\t});\n\t\tsmaLine.setData(smaData);\n\n\n\t\tfunction calculateSMA(data, count) {\n\t\t\tvar avg = function (data) {\n\t\t\t\tvar sum = 0;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tsum += data[i].close;\n\t\t\t\t}\n\t\t\t\treturn sum / data.length;\n\t\t\t};\n\t\t\tvar result = [];\n\t\t\tfor (var i = count - 1, len = data.length; i < len; i++) {\n\t\t\t\tvar val = avg(data.slice(i - count + 1, i));\n\t\t\t\tresult.push({ time: data[i].time, value: val });\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\n\t\t// var minimumPrice = data[0].value;\n\t\t// var maximumPrice = minimumPrice;\n\t\t// for(var i = 1; i < data.length; i++) {\n\t\t//   var price = data[i].value;\n\t\t//   if (price > maximumPrice) {\n\t\t//     maximumPrice = price;\n\t\t//   }\n\t\t//   if (price < minimumPrice) {\n\t\t//     minimumPrice = price;\n\t\t//   }\n\t\t// }\n\t\t// var avgPrice = (maximumPrice + minimumPrice) / 2;\n\n\t\t// var lineWidth = 2;\n\t\t// var minPriceLine = {\n\t\t//   price: minimumPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'min price',\n\t\t// };\n\t\t// var avgPriceLine = {\n\t\t//   price: avgPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'avg price',\n\t\t// };\n\t\t// var maxPriceLine = {\n\t\t//   price: maximumPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'max price',\n\t\t// }\n\n\t\t//candleSeries.createPriceLine(minPriceLine);\n\t\t//candleSeries.createPriceLine(avgPriceLine);\n\t\t//candleSeries.createPriceLine(maxPriceLine);\n\t\t//chart.timeScale().fitContent();\n\n\n\n\t}, 100);\n\n\n\n\treturn (\n\t\t<>\n\n\t\t\t<Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\t\t\t\t<Grid item xs={12} sm={12} >\n\n\t\t\t\t\n\t\t\t\t <div id=\"showChartTitle\" style={{ fontSize: \"12px\" }}> </div>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} sm={12} >\n\t\t\t\t<div id=\"chart\">\n\n\t\t\t\t</div>\n\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t\n\t\t\n\n\t\t</>\n\n\t);\n}","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n        \n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { resolveResponse } from \"./ResponseHandler\";\nimport AdminService from \"../components/service/AdminService\";\nimport TradeConfig from '../components/MyTrade/TradeConfig';\nimport * as moment from 'moment';\nimport Notify from './Notify';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\n\n\nclass CommonOrderMethod {\n\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n              //  this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n              //  this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n\n    // getStockTokenDetails = (SYMBOL) => {\n    //     AdminService.autoCompleteSearch(SYMBOL).then(searchRes => {   \n    //         let searchResdata =  searchRes.data; \n    //         if(SYMBOL){\n    //             var uppercaseName =  SYMBOL.toUpperCase() + \"-EQ\"; \n    //             var found = searchResdata.filter(row => row.name  === SYMBOL && row.symbol === uppercaseName);      \n    //             console.log(\"found\", found); \n    //             if(found.length){ \n    //                return found[0]; \n    //             }\n    //         }\n    //      })\n    // }\n\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n    \n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        // if (isAutomatic != \"Automatic\") {\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n        //         return;\n        //     }\n        // }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n           if(quantity > 0 && sectorItem.qtyToTake ) {\n                quantity = sectorItem.qtyToTake;\n           }           \n           console.log(symbol, \"  quantity can be order \", sectorItem, quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                    \n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n\n\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                            histdata.data.forEach((element, index) => {\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                                closeingData.push(element[4]);\n                                highData.push(element[2]);\n                                lowData.push(element[3]);\n                                openData.push(element[3]);\n                                valumeData.push(element[5]);\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            });\n\n                            var inputRSI = { values: closeingData, period: 14 };\n                            var lastRsiValue = RSI.calculate(inputRSI)\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n        \n                            var inputVWAP = {\n                                open: openData,\n                                high: highData,\n                                low: lowData,\n                                close: closeingData,\n                                volume: valumeData\n                            };\n        \n                            var input = {\n                            period : 20, \n                            values : bbdata,\n                            stdDev : 2\n                            }\n        \n                            var bb = BollingerBands.calculate(input); \n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\n\n                            var bbLastValue = bb[bb.length-1]; \n\n                            \n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                \n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                       \n\n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                    \n                            }\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                          \n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                            }\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption, callback);\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        var callData = {\n                            \"transactiontype\": orderType,//BUY OR SELL\n                            \"tradingsymbol\": symbol,\n                            \"symboltoken\": token,\n                            \"status\": false\n                        }\n                        callback(callData);\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n            }\n        }).catch(function (error) {\n\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n    \n\n    placeOptionOrder = (orderOption) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": orderOption.producttype ? orderOption.producttype : \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": orderOption.exchange ? orderOption.exchange : \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    setTimeout(() => {\n                        this.placeOptionSLMOrder(orderOption);\n                    }, 1000);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n            }\n\n        })\n    }\n\n    placeOptionSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossTriggerPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": \"SELL\", \n            \"exchange\": slmOption.exchange,\n            \"producttype\": slmOption.producttype, \n            \"duration\": \"DAY\",\n            \"price\": slmOption.stopLossPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n\n    \n\n\n\n    placeOrderMethod = (orderOption, callback) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n                callback(callData);\n                return;  \n            }\n\n        })\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n}\n\nexport default new CommonOrderMethod();\n\n   ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\nimport AdminService from \"./service/AdminService\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CommonOrderMethod from \"../utils/CommonMethods\";\nimport Spinner from \"react-spinner-material\";\nimport Notify from '../utils/Notify';\nimport Hidden from '@material-ui/core/Hidden';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        buyFlag: true,\n        sellFlag: true,\n        searchSymbol: \"\",\n\n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const autoSearchList = [];\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n\n    function handleInput(e) {\n        setValues({ ...values, ['searchSymbol']: e.target.value });\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n\n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token']: found[0].token });\n                }\n            }\n        })\n    }\n\n    function handleInputQty(e) {\n        setValues({ ...values, ['qtyToTake']: e.target.value });\n    }\n\n    function callbackAfterOrderDone(order) {\n        setValues({ ...values, ['buyFlag']: order.status });\n        setValues({ ...values, ['sellFlag']: order.status });\n        setValues({ ...values, ['searchSymbol']: '' });\n    }\n\n    function handleClick(type) {\n\n        if (values.token && values.searchSymbol) {\n            if (type == 'BUY') {\n                setValues({ ...values, ['buyFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol,\n                    qtyToTake: values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\n            }\n\n            if (type == 'SELL') {\n                setValues({ ...values, ['sellFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol,\n                    qtyToTake: values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\n            }\n        } else {\n            Notify.showError(\"Type Symbol!!!\");\n        }\n    }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            {/* <Button href={\"/mtrade/#/home\"}>\n                                <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n\n                            </Button> */}\n\n                        </Grid>\n\n                        <Hidden xsDown>\n                        <Grid item  >\n\n                            <Grid\n                                justify=\"space-between\"\n                                container\n                                spacing={2}\n                            >\n\n                                <Grid item  >\n                                    <Typography style={{ marginTop: '20px', fontSize: \"12px\" }} variant=\"h6\" noWrap >\n                                        <span id=\"niftySpid\"  > </span>  &nbsp;&nbsp;  <span id=\"bankniftySpid\" onClick={() => props.LoadSymbolDetails(\"BANKNIFTY\")} > </span>\n                                    </Typography>\n\n                                </Grid>\n\n                                <Grid item>\n                                    <TextField label=\"Type full Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput} />\n                                </Grid>\n                                <Grid item>\n                                    <TextField label=\"Qty\" style={{ width: \"50px\" }} type=\"number\" name=\"qtyToTake\" value={values.qtyToTake} onChange={handleInputQty} />\n                                </Grid>\n                                <Grid item>\n                                    {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\n                                </Grid>\n\n                                <Grid item>\n                                    {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                       \n                            <Grid item >\n\n                                <Grid\n                                    container\n                                    spacing={1}\n                                    direction=\"row\"\n\n                                >\n\n                                    <Grid item>\n                                        <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/index-charts\"}>\n                                            Charts <OpenInNewIcon />\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/delivery\"}>\n                                            Delivery <OpenInNewIcon />\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/sector-heat-map2\"}>\n                                            Hit Map <OpenInNewIcon />\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button variant=\"outlined\" color=\"primary\" target={'_blank'} href={\"/mtrade/#/find-fast-movement\"}>\n                                            Fast Move <OpenInNewIcon />\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                            Position\n                                        </Button>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                            Home\n                                        </Button>\n                                    </Grid>\n\n\n\n\n                                </Grid>\n\n\n\n                            </Grid>\n\n                        </Hidden>\n\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n        {/* KeyboardDateTimePicker */}\n        <KeyboardDatePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n          &nbsp;&nbsp;\n         <KeyboardDatePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={false} >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list.length ? data.list.map((row, i)  => (\n                  <>\n                      {row ? <ListItem  button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", background:row.highlisht ? \"#375a00\": \"\"}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol} /> {row.ltp} ({row.nc}%)\n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '10px'}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol +\" \"+row.orderType} /> <span style={{fontSize: '14px'}}>{row.ltp} ({row.nc}%)  <br /> At {row.foundAt} </span> \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  onClick={() => data.LoadSymbolDetails(row.symbol)} button style={{  padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <p style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '16px'}}  > \n                          \n                          {row.symbol} {row.ltp} ({row.nc}%)   <br /> \n                 \n                          Tot Buy Bids: {row.totalBuyQuantity}    <br />\n                          Tol Sell Bids: {row.totalSellQuantity}    <br />\n                          DeliveryToTraded {row.deliveryToTradedQuantity}% \n                          </p>\n                          \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport \"./ViewStyle.css\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs(props) {\n\n  const { cursor, onSelectItem, autoSearchList, LoadSymbolDetails, symbolList, onChange, onChangeWatchlist, search, handleKeyDown, selectedWatchlist, totalWatchlist } = props.data;\n  const [value, setValue] = React.useState(0);\n\n  var [values, setValues] = React.useState({\n    searchedSymbolList: symbolList, \n    // gainerList : localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n    // looserList : localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],    \n  });\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterWatchlistBySearch = (e) => {\n\n    console.log(\"e.target.value\", e.target.value);\n    if (!e.target.value) {\n      setValue({ searchedSymbolList: symbolList });\n    } else {\n\n      // var foundLive = this.state.listofItem.filter(row => row == e.target.value );\n      // this.setState({ [e.target.name]: e.target.value }); \n      // this.setState({searchedList: foundLive})        \n\n      let matchList = [];\n      for (let i = 0; i < symbolList.length; i++) {\n        let stock = symbolList[i];\n        if (stock && stock.name.includes(e.target.value)) {\n          matchList.push(stock);\n        }\n      }\n      setValue({ searchedSymbolList: matchList });\n    }\n  }\n\n\n  var gainerList =  props.data.gainerList ? props.data.gainerList : []; \n  var looserList =  props.data.looserList ? props.data.looserList : []; \n  \n\n  \n  return (\n    <Box sx={{ width: '100%'}}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" style={{overflowY: 'scroll'}}>\n          <Tab label=\"My WL\" {...a11yProps(0)} />\n          <Tab label={gainerList && gainerList.length + \" Gainner\"} {...a11yProps(1)} />\n          <Tab  label={looserList && looserList.length + \" Looser\"} {...a11yProps(2)} />\n          <Tab label=\"Fevrate\" {...a11yProps(3)} />\n          \n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n\n\n        <div style={{ marginLeft: '5px' }}>\n          <FormControl style={{ width: \"100%\" }} >\n            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n            <Select value={selectedWatchlist} name=\"selectedWatchlist\" onChange={onChangeWatchlist}>\n              <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n              {totalWatchlist && totalWatchlist.map(element => (\n                <MenuItem value={element}>{element}</MenuItem>\n              ))\n              }\n\n            </Select>\n          </FormControl>\n\n\n          <TextField\n            style={{ width: \"100%\" }}\n           // onChange={filterWatchlistBySearch}\n            label={\"Filter Symbol\"}\n            margin=\"normal\"\n            variant=\"standard\"\n            name=\"search\"\n            onKeyDown={handleKeyDown}\n            value={search}\n          />\n\n\n        </div>\n\n\n        <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n          {symbolList && symbolList.length ? symbolList.map((row, i) => (\n            <>\n              <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\n\n                style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                <Button style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.symbol, i)} >\n                 \n                  <div style={{textAlign:\"left\"}}>  {row.name} </div> \n                  &nbsp; &nbsp; &nbsp;\n                  <div style={{textAlign:\"right\"}}>  {row.ltp} ({row.nc}%)  </div>\n                  </Button>\n                 \n\n\n              </ListItem>\n\n            </>\n          )) : ''}\n        </div>\n\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n        {gainerList && gainerList.length ? gainerList.map((row, i) => (\n          <>\n            <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\n\n              style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n              {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n              <Button title={\"Found At: \" + row.foundAt}  style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.name, i)}> {row.name} {row.ltp} ({row.nc}%) {row.sector.split(' ')[1]} </Button>\n\n\n            </ListItem>\n\n          </>\n        )) : ''}\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}> \n        <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n          {looserList && looserList.length ? looserList.map((row, i) => (\n            <>\n              <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\n\n                style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                 <Button title={\"Found At: \" + row.foundAt} style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.name, i)}> {row.name} {row.ltp} ({row.nc}%) {row.sector.split(' ')[1]} </Button>\n\n\n              </ListItem>\n\n            </>\n          )) : ''}\n          </div>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Fevrate list\n      </TabPanel>\n    </Box>\n  );\n}","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n  data.reverse();\n\n  for (let index = data.length - 20; index <  data.length; index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Parser from 'html-react-parser';\n\nimport Chart from \"./Chart\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview: '',\n            curnewdata: '',\n            showOptionUpside: 800,\n            showOptionDownside: 800,\n            timestamp: '',\n            totalCOI: 0,\n            expiry: '',\n            strike: '',\n            FilteredBY: '',\n            AllspTotalOI: [],\n            PEoi: 0,\n            CEoi: 0,\n            waitForChainFlag: true,\n            scrollcount: 0,\n            pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data,\n            optionChainDataBN: JSON.parse(localStorage.getItem('optionChainDataBN')),\n            filtered: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered.data,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'Securities in F&O',\n            selectOptionStock: \"BANKNIFTY\",\n            underlyingValue: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.underlyingValue,\n\n            buyCallLot:1, \n            buyPutLot:1, \n            niftyLogSize : 50, \n            niftybankLogSize : 25, \n            \n\n\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n\n    }\n\n    onChangeSelectSymbol = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.loadPackList();\n        });\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.filterOptionChain(e.target.name, e.target.value);\n        });\n    }\n\n\n   \n\n    filterOptionChain = (name, actualValue) => {\n        //console.log('filtername', name, actualValue); \n        var filereddata = [];\n\n        var alldata = this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.data;\n\n        if (name === 'expiry' && actualValue === 'All') {\n\n            filereddata = alldata;\n        }\n\n        if (name === 'expiry') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.expiryDate === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n        if (name === 'strike') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.strikePrice === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n\n\n        this.setState({ filtered: filereddata, FilteredBY: name + \" \" + actualValue });\n        //  console.log(filereddata); \n    }\n\n    // componentWillUnmount() {\n    //     var tabledata = document.getElementById('tabledata'); \n    //     tabledata.removeEventListener('scroll', this.handleScroll);\n\n    // }\n\n    handleScroll = (data) => {\n\n        var scrollcount = this.state.scrollcount;\n\n        this.setState({ scrollcount: scrollcount += 1 });\n\n    }\n\n    onChangeCallLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculateCallMargin(); \n        });\n    }\n\n    calculateCallMargin =(e)=> {\n        this.state.filtered && this.state.filtered.forEach(element => {\n            if(element.CE && element.CE.lastPrice)  {\n                element.CE.totalMargin = Parser(  this.state.lotSize * this.state.buyCallLot+ \" * \" + element.CE.lastPrice  + \"<br /> <b> \" + (element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.CE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n    \n            }\n         \n        });\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    onChangePutLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculatePutMargin(); \n        });\n    }\n\n    calculatePutMargin =(e)=> {\n\n        this.state.filtered &&  this.state.filtered.forEach(element => {\n            if(element.PE && element.PE.lastPrice)  {\n                element.PE.totalMargin = Parser(  this.state.lotSize * this.state.buyPutLot+ \" * \" + element.PE.lastPrice  + \"<br /> <b> \" + (element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.PE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n\n            }\n        });\n\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    componentDidMount() {\n\n\n       \n\n        this.setState({ SecuritiesInFO: this.state.staticData[this.state.selectedWatchlist] }, function () {\n            // this.state.SecuritiesInFO && this.state.SecuritiesInFO.sort(function (a, b) {\n            //     if(a.name < b.name) { return -1; }\n            //     if(a.name > b.name) { return 1; }\n            //     return 0;\n            // });\n        });\n\n       \n\n\n        // var tabledatachart = document.getElementById('tabledatachart'); \n        // tabledatachart.addEventListener('scroll', this.handleScroll);\n\n        //   this.loadPackList();\n        //   console.log('this.state.optionChainDataBN.records.expiryDates', this.state.optionChainDataBN.records.expiryDates)\n\n\n        if (!JSON.parse(localStorage.getItem('optionDiffdata' + this.state.selectOptionStock)))\n            localStorage.setItem('optionDiffdata'+ this.state.selectOptionStock, JSON.stringify({ data: [] }))\n        else\n            this.setState({ products: JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock)).data })\n        // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n        //  clearInterval(this.state.stopnview)\n\n        if (!JSON.parse(localStorage.getItem('pcrTableBN')))\n            localStorage.setItem('pcrTableBN', JSON.stringify({ data: [] }))\n        else\n            this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n\n\n\n        var todayTime = new Date();\n        if (todayTime.getHours() >= 9 && todayTime.getHours() < 16) {\n            setInterval(() => {\n                this.loadPackList();\n            }, 60000 * 6);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60000 * 6);\n\n        // this.findSupportResistence(this.state.optionChainDataBN ? this.state.optionChainDataBN : \"\");\n\n\n        let lotSize = 25; \n        if(this.state.selectOptionStock == \"NIFTY\")\n         lotSize = 50;\n        if(this.state.selectOptionStock == \"BANKNIFTY\")\n        lotSize = 50;\n\n        this.setState({lotSize :lotSize}, function(){\n            this.calculateCallMargin(); \n            this.calculatePutMargin(); \n        })\n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.data;// this.state.optionChainDataBN && this.state.optionChainDataBN.records.data; \n        var sumOfCEoi = 0, sumOfPEoi = 0;\n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n\n            if (strikePrice === element.strikePrice) {\n\n                if (element.CE && element.CE.openInterest) {\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest;\n                }\n                if (element.PE && element.PE.openInterest) {\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest;\n                }\n\n            }\n        }\n        // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return { strikePrice: strikePrice, sumOfCEoi: sumOfCEoi, sumOfPEoi: sumOfPEoi };\n\n        //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n        // console.log(optiondata);\n        var alldata = optiondata && optiondata.records && optiondata.records.data;\n        // var underlyingValue = optiondata.records && optiondata.records.underlyingValue; \n        var PEoi = 0, CEoi = 0, PEoiChange = 0, CEoiChange = 0;\n        if (alldata) {\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element && element.PE) {\n                    PEoi = PEoi + element.PE.openInterest;\n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest;\n                }\n                if (element && element.CE) {\n                    CEoi = CEoi + element.CE.openInterest;\n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest;\n\n                }\n            }\n        }\n\n\n        //   var allexpiryDates =   optiondata.records.expiryDates; \n        //   var strikePrices =  optiondata.records.strikePrices; \n        //   var fliterExData = [];  \n\n        // for (let index = 0; index < allexpiryDates.length; index++) {\n        //     const element = allexpiryDates[index];\n        //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n        //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n        //             fliterExData.push(alldata[indexJ]); \n        //         } \n        //     }                  \n        // }   \n\n        var myStrike = [];\n\n        let startDiff = this.state.underlyingValue - this.state.showOptionDownside\n        let rem = Math.round(startDiff) % 100;\n        let startFrom = Math.round(startDiff) + 100 - rem;\n\n        let endDiff = this.state.underlyingValue + this.state.showOptionUpside;\n        let rem2 = Math.round(endDiff) % 100;\n        let endTo = Math.round(endDiff) + 100 - rem2;\n\n\n        console.log(this.state.underlyingValue, 'start from', startFrom, 'endto', endTo);\n\n\n        for (let index = startFrom; index <= endTo; index += 100) {\n            myStrike.push(index)\n        }\n\n        myStrike = myStrike.sort(function (a, b) { return b - a });\n\n\n\n        var data = [], totalspeoi = 0, totalsceoi = 0;\n        myStrike.forEach(element => {\n            var resdata = this.getDataforStrike(element);\n            totalspeoi = totalspeoi + resdata.sumOfPEoi;\n            totalsceoi = totalsceoi + resdata.sumOfCEoi;\n\n            data.push(resdata);\n\n            console.log(element, resdata);\n\n\n        });\n        this.setState({ AllspTotalOI: data, selectedSPpcr: (totalspeoi / totalsceoi).toFixed(3), totalspeoi: totalspeoi, totalsceoi: totalsceoi });\n\n        // for (let index = 0; index < alldata.length; index++) {\n        //     const element = alldata[index];\n\n        //     // if(alldata[index].strikePrice ==  14800){\n        //     //     fliterExData.push(element); \n        //     // } \n        //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n        //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n        //             fliterExData.push(element); \n        //         }   \n        //     }\n\n        // }   \n\n        //            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({ CEoi: CEoi, PEoi: PEoi, allStrikediff: PEoi - CEoi, CEoiChange: CEoiChange, PEoiChange: PEoiChange, allStrikeChngeDiff: PEoiChange - CEoiChange });\n    }\n\n\n\n\n\n    loadPackList() {\n\n\n        this.setState({ waitForChainFlag: false });\n\n        AdminService.getBNcpdata(this.state.selectOptionStock)\n            .then((res) => {\n                //     let data = resolveResponse(res);\n\n                var data = res.data && res.data;\n\n\n                localStorage.setItem(\"optionChainDataBN\", JSON.stringify(data));\n\n                // this.findSupportResistence(data);\n\n                // console.log(\"livedata\", data.filtered);\n\n                this.setState({ filtered: data.filtered && data.filtered.data, optionChainDataBN: data });\n\n                if (data.filtered) {\n\n                    var diff = data.filtered.PE.totOI - data.filtered.CE.totOI;\n\n                    var newdata = {\n                        dateTime: this.dateFormat(new Date()),\n                        totCEOI: data.filtered.CE.totOI,\n                        totCEVol: data.filtered.CE.totVol,\n                        totPEOI: data.filtered.PE.totOI,\n                        totPEVol: data.filtered.PE.totVol,\n                        diff: diff,\n                        totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')),\n                        totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')),\n                        totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange'))\n\n                    }\n                    this.setState({ curnewdata: newdata });\n\n\n                    document.getElementById('title').innerHTML = (diff / 100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange')) / 100000).toFixed(2) + \"L \" + this.state.selectOptionStock;\n                    // createData.push(newdata); \n                    if (JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock))) {\n                        var oldproducts = JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock));\n                        // console.log(\"oldproductsindex0\", ); \n                        var lastrow = oldproducts && oldproducts.data[0];\n\n\n                        // oldproducts.data.forEach((data) => {\n                        //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                        //         newdata.isDuplicate = true; \n                        //     }else{\n                        //         newdata.isDuplicate = false;\n                        //     }\n                        // });\n                        if (lastrow) {\n                            newdata.isDuplicate = newdata.diff === lastrow.diff ? true : false\n                            newdata.totCEOIChange = (((newdata.totCEOI - lastrow.totCEOI) * 100) / lastrow.totCEOI).toFixed(3);;\n                            newdata.totPEOIChange = (((newdata.totPEOI - lastrow.totPEOI) * 100) / lastrow.totPEOI).toFixed(3);;\n                            newdata.totDiffChange = (((newdata.diff - lastrow.diff) * 100) / lastrow.diff).toFixed(3);\n                        } else {\n                            newdata.isDuplicate = false\n                            newdata.totCEOIChange = 0;\n                            newdata.totPEOIChange = 0;\n                            newdata.totDiffChange = 0;\n                        }\n\n\n                        oldproducts.data.unshift(newdata);\n\n                        if (data.records) {\n                            oldproducts.timestamp = data.records.timestamp;\n                            oldproducts.underlyingValue = data.records.underlyingValue;\n                        }\n\n                        oldproducts.data.reverse();\n\n                        localStorage.setItem(\"optionDiffdata\" + this.state.selectOptionStock, JSON.stringify(oldproducts));\n\n\n\n                        this.setState({ products: oldproducts.data, underlyingValue: data.records.underlyingValue, timestamp: data.records.timestamp })\n                        this.setState({ waitForChainFlag: true });\n\n                    }\n\n                    //  console.log(\"dddd\", this.state.curnewdata); \n\n\n                }\n\n\n                this.updatepcr()\n                this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n            });\n\n    }\n\n\n    updatepcr() {\n\n\n        var pcrdata = {\n            allPCR: (this.state.PEoi / this.state.CEoi).toFixed(3),\n            expiryPCR: localStorage.getItem('thisWeekPCR'),\n            selectedSPpcr: this.state.selectedSPpcr,\n        }\n\n        if (JSON.parse(localStorage.getItem('pcrTableBN'))) {\n            var pcrTableBN = JSON.parse(localStorage.getItem('pcrTableBN'));\n            pcrTableBN.data.unshift(pcrdata);\n            localStorage.setItem(\"pcrTableBN\", JSON.stringify(pcrTableBN));\n        }\n\n        console.log(pcrdata);\n        this.setState({ pcrTableBN: pcrTableBN })\n    }\n\n\n\n\n    dateFormat(date) {\n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n\n\n\n    render() {\n\n        var totCEOI = 0, totCEVol = 0, totCEOIChange = 0, totCEBUY = 0, totCESell = 0;\n        var totPEOI = 0, totPEVol = 0, totPEOIChange = 0, totPEBUY = 0, totPESell = 0;\n\n        return (\n            <React.Fragment >\n\n                {/* <PostLoginNavBar /> */}\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"selectOptionStock\">Select Symbol</InputLabel>\n                            <Select\n                                id=\"selectOptionStock\"\n                                name=\"selectOptionStock\"\n                                value={this.state.selectOptionStock}\n                                onChange={this.onChangeSelectSymbol}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'NIFTY'} value={'NIFTY'} > {'NIFTY'}</MenuItem>\n                                <MenuItem key={'BANKNIFTY'} value={'BANKNIFTY'} > {'BANKNIFTY'}</MenuItem>\n\n                                {this.state.SecuritiesInFO && this.state.SecuritiesInFO.length ? this.state.SecuritiesInFO.map((row, index) => (\n                                    <MenuItem key={row.name} value={row.name} >\n                                        {row.name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                                id=\"expiry\"\n                                name=\"expiry\"\n                                value={this.state.expiry}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.expiryDates ? this.state.optionChainDataBN.records.expiryDates.map((name, index) => (\n                                    <MenuItem key={name + 'key' + index} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                            <Select\n                                labelId=\"strike\"\n                                id=\"strike\"\n                                max-height={'100%'}\n                                name=\"strike\"\n                                value={this.state.strike}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.strikePrices ? this.state.optionChainDataBN.records.strikePrices.map(name => (\n                                    <MenuItem key={name} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                        {this.state.waitForChainFlag ? <Button variant=\"contained\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button> : <Spinner />}\n                    </Grid>\n\n                    <Grid item xs={6} sm={4}>\n\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            {this.state.selectOptionStock} {this.state.underlyingValue} {this.state.timestamp} \n                            {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                        </Typography>\n\n                        \n                    </Grid>\n\n\n                </Grid>\n\n\n                <Grid item xs={12} sm={12}>\n                    <Paper style={{ padding: \"10px\", overflow: \"auto\" }}>\n\n                        <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={3} sm={3} >\n                                <span> <b>Total </b></span>\n                                <span> PE OI: <b> {(this.state.PEoi / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoi / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikediff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>}\n                                </span>\n                            </Grid>\n\n                            <Grid item xs={3} sm={5} >\n                                <span> <b>Total Chng </b></span>\n                                <span> PE OI: <b>{(this.state.PEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikeChngeDiff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}> {((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>}\n                                </span>\n\n\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>ALL PCR: <b>{(this.state.PEoi / this.state.CEoi).toFixed(3)} </b></span>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>Expire Week PCR: <b>{localStorage.getItem('thisWeekPCR')} </b></span>\n\n                            </Grid>\n\n\n\n                            {/* <Grid item xs={2} sm={2} >\n                            <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                                <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n                            </Typography> \n                        </Grid> */}\n\n\n\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={0} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid id=\"tabledatachart\" item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" size=\"small\">\n                            <TableHead key={2222} variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\"><b>Time</b></TableCell>\n                                    <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                                    <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Call OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody hover style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n\n\n                                {this.state.products ? this.state.products.map(row => (\n                                    <TableRow key={row.dateTime} style={{ background: row.isDuplicate ? \"lightgray\" : \"\" }}>\n                                        <TableCell align=\"center\">{row.dateTime.substring(19, 11)}</TableCell>\n                                        <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color: 'green' }} >BUY</Typography> : <Typography variant=\"body2\" style={{ color: 'red' }} >SELL</Typography>}</TableCell>\n                                        <TableCell align=\"center\">{row.diff} ({(row.diff / 100000).toFixed(2)}L)({row.totDiffChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totDiffChange}%</span> : row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totDiffChange}%</span>}) </TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff / 100000).toFixed(2)}L)</TableCell>\n\n                                        <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totPEOIChange}%</span> : row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totPEOIChange}%</span>})</TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                        <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totCEOIChange}%</span> : row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totCEOIChange}%</span>})</TableCell>\n\n                                        <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                        {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n                    <Grid item xs={4} sm={4} style={{ padding: \"2px\", overflow: \"auto\", height: \"300px\" }}>\n\n                        <Chart diffData={{ data: this.state.products, scrollcount: this.state.scrollcount }} />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead style={{}} variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi / 100000).toFixed(3)}L</b></TableCell>\n                                    <TableCell align=\"center\"><b>Strike Price<br />{this.state.totalspeoi - this.state.totalsceoi}({((this.state.totalspeoi - this.state.totalsceoi) / 100000).toFixed(3)}L) </b> </TableCell>\n                                    <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi / 100000).toFixed(3)}L</b></TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                                {this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                                    <TableRow hover key={row.dateTime} >\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfCEoi} ({(row.sumOfCEoi / 100000).toFixed(2)}L)</TableCell>\n                                        <TableCell align=\"center\">{row.strikePrice}</TableCell>\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfPEoi} ({(row.sumOfPEoi / 100000).toFixed(2)}L)</TableCell>\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\">ALL Pcr</TableCell>\n                                    <TableCell align=\"center\">Expiry Pcr </TableCell>\n                                    <TableCell align=\"center\">Selected Pcr</TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{ whiteSpace: \"nowrap\" }}>\n\n                                {this.state.pcrTableBN && this.state.pcrTableBN.length > 0 && this.state.pcrTableBN ? this.state.pcrTableBN.map(row => (\n                                    <TableRow hover key={row.expiryPCR} >\n                                        <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                        <TableCell align=\"center\">{row.expiryPCR}</TableCell>\n                                        <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                                    </TableRow>\n                                )) : ''}\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={12} style={{ padding: \"2px\", overflow: \"auto\", height: \"900px\" }}>\n\n                        <Table stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n\n                                <TableRow variant=\"head\"  >\n\n                                    <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                                </TableRow>\n                                <TableRow variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n                                    {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n\n\n                                    <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI') / 100000).toFixed(3)}L) </b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                                    {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> STRIKE PRICE</span> </TableCell>\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> Expiry</span> </TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                                    <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n\n\n\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI') / 100000).toFixed(3)}L)</b></TableCell>\n\n\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n\n                                {this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                                    <TableRow hover key={index} style={{ background: opdata.isDuplicate ? \"lightgray\" : \"\" }}>\n\n                                        {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                        {opdata && opdata.CE && opdata.PE && (opdata.strikePrice >= opdata.CE.underlyingValue - this.state.showOptionUpside && opdata.strikePrice <= opdata.CE.underlyingValue + this.state.showOptionDownside) ? <>\n\n                                            <TableCell {...totCEOI = totCEOI + opdata.CE.openInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.CE.change / (opdata.strikePrice - opdata.CE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n\n\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span> : opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>}) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                            \n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyCallLot} onChange={this.onChangeCallLot} name=\"buyCallLot\"  />\n                                             </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.totalMargin} </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.maxLoss} </TableCell>\n\n                                            \n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"CE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyCallLot)}> Call Buy </Button> </TableCell>\n\n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} align=\"center\"><span> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{ borderRight: 'dashed', whiteSpace: \"nowrap\" }} align=\"center\" ><span style={{ paddingLeft: '5px', paddingRight: '5px' }}> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"PE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyPutLot)}>Put Buy </Button> </TableCell>\n                                            <TableCell align=\"center\"> {opdata.PE.maxLoss} </TableCell>\n\n                                            <TableCell align=\"center\"> {opdata.PE.totalMargin} </TableCell>\n\n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyPutLot} onChange={this.onChangePutLot} name=\"buyPutLot\"  />\n                                             </TableCell>\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span> : opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.PE.change / (opdata.strikePrice - opdata.PE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                        </> : \"\"\n                                        }\n\n\n                                    </TableRow>\n\n                                )) : <Spinner />}\n\n\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOI', totCEOI)}><b>{totCEOI}<br />({(totCEOI / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange', totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEVol', totCEVol)}><b>{totCEVol}<br />({(totCEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell colSpan={3} align=\"center\"></TableCell>\n                                    {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                    <TableCell {...localStorage.setItem('thisWeekPCR', (totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                    <TableCell colSpan={5} align=\"center\"></TableCell>\n\n\n                                    {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                    {/* <TableCell colSpan={3} align=\"center\"></TableCell> */}\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEVol', totPEVol)}><b>{totPEVol}<br />({(totPEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange', totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOI', totPEOI)}><b>{totPEOI}<br />({(totPEOI / 100000).toFixed(3)}L)</b> </TableCell>\n\n                                </TableRow>\n\n\n                            </TableBody>\n\n\n                        </Table>\n                    </Grid>\n\n                </Grid>\n\n\n\n\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle: {\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nimport BankNiftyView from './BankNiftyView'\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngOptionList: localStorage.getItem('orderPenidngOptionList') && JSON.parse(localStorage.getItem('orderPenidngOptionList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList:[{\"token\":\"26009\",\"symbol\":\"BANKNIFTY\",\"name\":\"BANKNIFTY\",\"expiry\":\"\",\"strike\":\"-1.000000\",\"lotsize\":\"-1\",\"instrumenttype\":\"\",\"exch_seg\":\"NSE\",\"tick_size\":\"-1.000000\"},{\"token\":\"26000\",\"symbol\":\"NIFTY\",\"name\":\"NIFTY\",\"expiry\":\"\",\"strike\":\"-1.000000\",\"lotsize\":\"-1\",\"instrumenttype\":\"\",\"exch_seg\":\"NSE\",\"tick_size\":\"-1.000000\"}], \n            lastTradedData : {},\n            buyOptionFlag : false \n        \n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngOptionList : [...this.state.orderPenidngOptionList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngOptionList', JSON.stringify(this.state.orderPenidngOptionList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngOptionList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n        var isDeleted = false, delitem =''; \n       var orderPenidngOptionList =  localStorage.getItem('orderPenidngOptionList') && JSON.parse( localStorage.getItem('orderPenidngOptionList')); \n       for (let index = 0; index < this.state.orderPenidngOptionList.length; index++) {\n           const element = orderPenidngOptionList[index];\n           if(row.symbol == element.symbol){\n            delitem = orderPenidngOptionList.splice(index, 1); \n            localStorage.setItem('orderPenidngOptionList', JSON.stringify(orderPenidngOptionList)); \n            this.setState({orderPenidngOptionList : orderPenidngOptionList}); \n            break; \n           }\n       }\n\n       \n       console.log(\"del\", delitem)\n       if(delitem && delitem[0].symbol == row.symbol){\n        return true;\n       }else {\n        return false;\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n       console.log(\"call back called\");\n     // this.deleteInOrderPenidngList(row); \n    }\n\n    placeOptionSPLevelOver=(indexData, spotPrice)=>{\n\n        let today = moment().isoWeekday();\n        today = 3; \n        let strikePrice = 0; \n        let allList = localStorage.getItem('optionChainDataBN') && JSON.parse(localStorage.getItem('optionChainDataBN')); \n        let nextExp = allList[\"records\"][\"expiryDates\"][0]; \n\n        if(indexData.buyAt){\n            if(today == 5 || today == 1){\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 400\n            }\n            else  if(today == 2){\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 300\n            }\n            else  if(today == 3){\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 200\n            }else {\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100) \n            }\n            this.props.buyOption(\"CE\", indexData.symbol, strikePrice, nextExp, 1);  \n        }else if(indexData.sellAt){\n            if(today == 5 || today == 1){\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 400\n            }\n            else  if(today == 2){\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 300\n            }\n            else  if(today == 3){\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 200\n            }else {\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100) \n            }\n            this.props.buyOption(\"PE\", indexData.symbol, strikePrice, nextExp, 1);  \n        }\n\n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngOptionList.length; index++) {\n            const element = this.state.orderPenidngOptionList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngOptionList', JSON.stringify(this.state.orderPenidngOptionList)); \n                    this.setState({orderPenidngOptionList : this.state.orderPenidngOptionList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){ // && !this.state.buyOptionFlag\n                            this.setState({buyOptionFlag: true}, function(){\n                                this.placeOptionSPLevelOver(element, LtpData.ltp); \n                            })\n                        }\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){ // && !this.state.buyOptionFlag\n                            this.setState({buyOptionFlag: true}, function(){\n                                this.placeOptionSPLevelOver(element, LtpData.ltp); \n                            })\n                        }\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 2001; \n            if(this.state.orderPenidngOptionList.length > 10){\n                intervaltime = this.state.orderPenidngOptionList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n       // this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, 2000 ) });\n\n\n        localStorage.setItem('autoSearchTemp',JSON.stringify(this.state.autoSearchList))\n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n          console.log(\"values\", values); \n           console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n    // buyOption =(optiontype ,symbol, strikePrice, expiryDate, noOfLot)=>{\n    //   console.log(optiontype ,symbol, strikePrice, expiryDate); \n    //   let exp = expiryDate.toUpperCase().split('-'); \n    //    exp = exp[0]+exp[1]+exp[2]%1000; \n\n    //   let optionName = symbol + exp + strikePrice + optiontype; \n    //   console.log(optionName); \n\n    //   AdminService.autoCompleteSearch(optionName).then(res => {\n    //     let data = res.data; \n    //     let optionData = data && data[0]; \n    //     console.log(\"optionData\", optionData);\n\n\n    //     if(optionData && optionData.symbol && optionData.symbol ==  optionName){\n    //         var  ltpparam = { \"exchange\":optionData.exch_seg, \"tradingsymbol\": optionData.symbol , \"symboltoken\": optionData.token}; \n\n    //         AdminService.getLTP(ltpparam).then(res => {\n    //             let data = resolveResponse(res, 'noPop');\n    //             var LtpData = data && data.data;\n    //             if(LtpData && LtpData.ltp) {\n                    \n    //                 console.log(\"option ltp\", LtpData);\n\n    //                let quantity = optionData.lotsize * noOfLot;   \n\n    \n    //                let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * 10/100); \n    //                perStopTrigerLoss =  CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss); \n\n    //                let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1/100); \n\n    //                stopLossPrice =  CommonOrderMethod.getMinPriceAllowTick(stopLossPrice); \n\n    \n    //                 let element = {\n    //                     tradingsymbol : optionData.symbol, \n    //                     symboltoken : optionData.token, \n    //                     transactiontype: \"BUY\", \n    //                     ordertype: \"LIMIT\", \n    //                     buyPrice : LtpData.ltp,  \n    //                     producttype : \"CARRYFORWARD\", \n    //                     exchange : optionData.exch_seg,\n    //                     stopLossTriggerPrice: perStopTrigerLoss,\n    //                     stopLossPrice: stopLossPrice,\n    //                     quantity : quantity\n    //                 }        \n    //                 console.log( \"option buy element\", element);\n    //                CommonOrderMethod.placeOptionOrder(element);\n    //             }\n    //         })\n    //     }else{\n    //         Notify.showError(optionName + \" not found\");\n    //     }\n       \n\n    //     //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n    // //    this.setState({ autoSearchList: data });\n    // })\n    // }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n             <Paper style={{ overflow: \"auto\", padding: '5px',  background:\"#f500570a\"}} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Option Buy At Level Watchlist ({this.state.orderPenidngOptionList && this.state.orderPenidngOptionList.length}) \n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                        </Typography> \n\n\n                    </Grid>\n\n                   \n\n                    <Grid item >\n\n                        <Grid container spacing={2}>\n                        <Grid item >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        \n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                         \n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"500px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                    </Grid>\n\n                            \n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngOptionList ? this.state.orderPenidngOptionList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n                <br />\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nimport BankNiftyView from './BankNiftyView'\nimport OptionBuyWithSPLevel from './OptionBuyWithSPLevel'\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList: [], \n            lastTradedData : {}\n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngList : [...this.state.orderPenidngList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n        var isDeleted = false, delitem =''; \n       var orderPenidngList =  localStorage.getItem('orderPenidngList') && JSON.parse( localStorage.getItem('orderPenidngList')); \n       for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n           const element = orderPenidngList[index];\n           if(row.token == element.token){\n            var delitem = orderPenidngList.splice(index, 1); \n            localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList)); \n            this.setState({orderPenidngList : orderPenidngList}); \n            break; \n           }\n       }\n\n       if(delitem[0].token == row.token){\n        return true;\n       }else {\n        return false;\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n       console.log(\"call back called\");\n     // this.deleteInOrderPenidngList(row); \n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n            const element = this.state.orderPenidngList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList)); \n                    this.setState({orderPenidngList : this.state.orderPenidngList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 5000; \n            if(this.state.orderPenidngList.length > 10){\n                intervaltime = this.state.orderPenidngList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n\n\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n    buyOption =(optiontype ,symbol, strikePrice, expiryDate, noOfLot)=>{\n      console.log(optiontype ,symbol, strikePrice, expiryDate); \n      let exp = expiryDate.toUpperCase().split('-'); \n       exp = exp[0]+exp[1]+exp[2]%1000; \n\n      let optionName = symbol + exp + strikePrice + optiontype; \n      console.log(optionName); \n\n      AdminService.autoCompleteSearch(optionName).then(res => {\n        let data = res.data; \n        let optionData = data && data[0]; \n        console.log(\"optionData\", optionData);\n\n\n        if(optionData && optionData.symbol && optionData.symbol ==  optionName){\n            var  ltpparam = { \"exchange\":optionData.exch_seg, \"tradingsymbol\": optionData.symbol , \"symboltoken\": optionData.token}; \n\n            AdminService.getLTP(ltpparam).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if(LtpData && LtpData.ltp) {\n                    \n                    console.log(\"option ltp\", LtpData);\n\n                   let quantity = optionData.lotsize * noOfLot;   \n\n                    let today = moment().isoWeekday();\n                    let slpercentage = 10; \n                    if(today == 2)\n                    slpercentage = 15\n                    else if(today == 3)\n                    slpercentage = 20\n                    else if(today == 4)\n                    slpercentage = 30\n    \n                   let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * slpercentage/100); \n                   perStopTrigerLoss =  CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss); \n\n                   let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1/100); \n\n                   stopLossPrice =  CommonOrderMethod.getMinPriceAllowTick(stopLossPrice); \n\n    \n                    let element = {\n                        tradingsymbol : optionData.symbol, \n                        symboltoken : optionData.token, \n                        transactiontype: \"BUY\", \n                        ordertype: \"LIMIT\", \n                        buyPrice : LtpData.ltp,  \n                        producttype : \"CARRYFORWARD\", \n                        exchange : optionData.exch_seg,\n                        stopLossTriggerPrice: perStopTrigerLoss,\n                        stopLossPrice: stopLossPrice,\n                        quantity : quantity\n                    }        \n                    console.log( \"option buy element\", element);\n                   CommonOrderMethod.placeOptionOrder(element);\n                }\n            })\n        }else{\n            Notify.showError(optionName + \" not found\");\n        }\n       \n\n        //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n    //    this.setState({ autoSearchList: data });\n\n    \n      \n      })\n\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar/> : \"\"}\n\n             <OptionBuyWithSPLevel  buyOption={this.buyOption} />\n\n             <Paper style={{ overflow: \"auto\", padding: '5px',  background:\"#d4ffe0\"}} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Orders Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length}) \n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                        </Typography> \n\n                    </Grid>\n\n                   \n\n                    <Grid item >\n\n                        <Grid container spacing={2}>\n                        <Grid item >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        \n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"500px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                    </Grid>\n\n                            \n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n                <br />\n\n                <Paper style={{ overflow: \"auto\", padding: '5px'}} > \n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                          Option Chain (Equity Derivatives)\n                        </Typography> \n\n\n                    </Grid>\n\n\n                        <BankNiftyView buyOption={this.buyOption} />\n                </Paper>\n\n               \n\n\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { createChart } from 'lightweight-charts';\n\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport SimpleExpansionPanel from \"./SimpleExpansionPanel\";\nimport SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\nimport LiveBidsExpantion from \"./LiveBidsExpantion\";\nimport WatchListTab from \"./WatchListTab\";\nimport OrderWatchlist from './OrderWatchlist';\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            searchFailed: 0,\n            openEqualHighList: [],\n            openEqualLowList: [],\n            closeingEqualHighList: [],\n            chartStaticData: [],\n            volumeCrossedList: [],\n            slowMotionStockList: [],\n            volumeBreakoutlast5CandleList: [],\n            oneHourBullBearCheckList: [],\n            timeFrame: \"FIFTEEN_MINUTE\",\n            cursor: '',\n            advanceShareCount: 0,\n            declineShareCount: 0,\n            UnchangeShareCount: 0,\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList: [], //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //  console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            //    console.log(\"time\", this.state.timeFrame);\n            if (this.state.tradingsymbol) {\n                this.showStaticChart(this.state.symboltoken);\n            }\n        });\n    }\n\n\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n            //    this.updateSocketWatch();\n            this.checkOpenEqualToLow();\n            this.setState({ cursor: '' });\n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n                //      this.updateSocketWatch();\n                //  this.checkOpenEqualToLow();\n                this.setState({ cursor: '' });\n            });\n        }\n    }\n    checkOpenEqualToLow = async () => {\n\n        this.setState({\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: [], closeingEqualHighList: []\n        });\n\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n\n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\": element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if (LtpData) {\n\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\n                    LtpData.nc = change;\n                    LtpData.symbol = element.symbol;\n\n                    this.state.symbolList[index].ltp = LtpData.ltp;\n                    this.state.symbolList[index].nc = change;\n\n                    if (LtpData && LtpData.open == LtpData.low) {\n                        console.log(\"o=l\", LtpData);\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\n                        if (!isfound.length)\n                            this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\n                    }\n                    console.log(element.symbol, \"ltp=newhigh\", LtpData.ltp, (LtpData.high - LtpData.high * 0.5 / 100));\n\n                    if (LtpData && LtpData.ltp >= (LtpData.high - LtpData.high * 0.5 / 100)) {\n                        var isfound = this.state.closeingEqualHighList.filter(row => row.symboltoken == element.token);\n                        if (!isfound.length)\n                            this.setState({ closeingEqualHighList: [...this.state.closeingEqualHighList, LtpData] });\n                    }\n\n                    if (LtpData && LtpData.open == LtpData.high) {\n                        console.log(\"o=h\", LtpData);\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\n                        if (!isfound.length)\n                            this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\n\n                    }\n\n                    if (LtpData.perChange > 0)\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\n                    else if (LtpData.perChange < 0)\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\n                    else\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\n\n\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\n\n                    //   this.dailyBasisInfoCheck(element.token, element);\n\n                    // this.checkSlowMotionStock(element.token, element);\n\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n            //  this.dailyBasisInfoCheck(this.state.symboltoken);\n\n\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n\n\n    makeConnection = (wsClint) => {\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        wsClint.send(firstTime_req);\n        this.updateSocketWatch(wsClint);\n    }\n\n    updateSocketWatch = (wsClint) => {\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n    updateSocketDetails = (wsClint) => {\n        wsClint.onopen = (res) => {\n            this.makeConnection(wsClint);\n            this.updateSocketWatch(wsClint);\n        }\n\n        wsClint.onmessage = (message) => {\n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData = JSON.parse(data);\n            var symbolListArray = this.state.symbolList;\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                var foundLive = liveData.filter(row => row.tk == element.token);\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                    symbolListArray[index].ltp = foundLive[0].ltp;\n                    symbolListArray[index].nc = foundLive[0].nc;\n                    //  console.log(\"ws onmessage: \", foundLive);\n\n                }\n            });\n            symbolListArray && symbolListArray.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n            this.setState({ symbolList: symbolListArray });\n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e);\n        }\n\n        setInterval(() => {\n            //  this.makeConnection();\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n            // console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n        }, 59000);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Home\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 900, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\n\n        // this.checkOpenEqualToLow();\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            // const wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n            // this.updateSocketDetails(wsClint);\n            setInterval(() => {\n                if (this.state.tradingsymbol) {\n                    this.getLTP();\n                    //this.showStaticChart(this.state.symboltoken);\n                }\n                var fastMovementList = localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList'));\n                fastMovementList && fastMovementList.length && fastMovementList.reverse();\n                this.setState({ fastMovementList: fastMovementList })\n            }, 1000);\n\n            setInterval(() => {\n                this.checkSlowMotionCheckLive();\n            }, 5 * 75000);\n\n\n            setInterval(() => {\n                this.searchValumeBreakoutStock();\n            }, 15 * 75000);\n\n\n            var tostartInteral = setInterval(() => {\n                var time = new Date();\n                console.log(\"setinterval \", new Date().toLocaleString());\n                if (time.getMinutes() % 60 === 0) {\n                    setTimeout(() => {\n                        this.oneHourBullBearCheck();\n                    }, 90000);\n                    setInterval(() => {\n                        this.oneHourBullBearCheck();\n                    }, 60000 * 60 + 70000);\n                    clearInterval(tostartInteral);\n                }\n            }, 1000);\n\n        }\n\n\n        setInterval(() => {\n\n\n            this.setState({ gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) })\n            this.setState({ looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) })\n\n\n        }, 1000);\n\n        //  this.oneHourBullBearCheck(); \n\n        // this.checkLiveBids();\n\n    }\n\n    // shouldComponentUpdate(nextProps, nextState){\n    //     return  false //!equals(nextProps, this.props); // equals() is your implementation\n    // }\n\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n\n                    if (transactiontype == \"BUY\") {\n                        this.placeSLMOrder(\"SELL\");\n                    }\n\n                    if (transactiontype == \"SELL\") {\n                        this.placeSLMOrder(\"BUY\");\n                    }\n\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name, i) => {\n        console.log(\"name\", name);\n        var token = '';\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        for (let index = 0; index < watchList.length; index++) {\n            if (watchList[index].symbol === name || watchList[index].name === name) {\n                token = watchList[index].token;\n                console.log(\"name % token\", name, token);\n                this.setState({ tradingsymbol: watchList[index].symbol, symboltoken: watchList[index].token }, function () {\n                    this.setState({ cursor: i }, function () {\n                        this.showStaticChart(token);\n                        // this.getLTP();\n                        // this.dailyBasisInfoCheck(this.state.symboltoken);\n                    });\n                });\n                break;\n            } else {\n                // Notify.showError(name + \" not found!\");\n                console.log(name + \" not found!\");\n            }\n        }\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n\n\n        switch (timeFrame) {\n            // case 'ONE_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"10:05:00\")\n            //         return \"19:00:00\";\n            //     else\n            //         return \"01:00:00\";\n            //     break;\n            // case 'FIVE_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"11:00:00\")\n            //         return \"23:00:00\";\n            //     else\n            //         return \"03:00:00\";\n            //     break;\n            // case 'TEN_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"12:35:00\")\n            //         return \"24:21:00\";\n            //     else\n            //         return \"07:00:00\";\n            //     break;\n            // case 'FIFTEEN_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"14:15:00\")\n            //         return \"28:01:00\";\n            //     else\n            //         return \"10:01:00\";\n            //     break;\n            // case 'THIRTY_MINUTE':\n            //     return \"100:01:00\";\n            //     break;\n            // case 'ONE_HOUR':\n            //     return \"200:01:00\";\n            //     break;\n            // case 'ONE_DAY':\n            //     return \"1000:01:00\";\n            //     break;\n            // default:\n            //     break;\n\n            case 'ONE_MINUTE':\n                return \"720:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"1000:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    calculateSMA = (data, count) => {\n\n        //  console.log(\"smarowdata\", data, count);\n\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n\n    //   calculateBBValue = (data, type ) => {\n\n    //     console.log(\"smarowdata\", data , count); \n\n    //     var result = [];\n    //     for (var i=count - 1, len=data.length; i < len; i++){\n    //       var val = avg(data.slice(i - count + 1, i));\n    //       result.push({ time: data[i].time, value: val});\n    //     }\n    //     return result;\n    //   }\n\n\n\n    showStaticChart = (token) => {\n\n        this.setState({ chartStaticData: '' }, function () {\n            console.log('reset done', token);\n        });\n\n\n\n\n        console.log(\"time in function \", this.state.timeFrame);\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        // var time = moment.duration(\"10:50:00\");\n        // var startDate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n\n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n\n                    this.state.smaLineSeries.setData(smaData);\n\n\n                    this.state.chart.subscribeCrosshairMove((param) => {\n\n                        var getit = param.seriesPrices[Symbol.iterator]();\n\n                        var string = \"\";\n                        var change = \"\";\n\n                        for (var elem of getit) {\n\n                            if (typeof elem[1] == 'object') {\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n                            } else {\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\n                            }\n                        }\n\n                        if (param.time)\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n                        else\n                            string += \" <b>Time: </b>\";\n\n\n                        const domElement = document.getElementById('showChartTitle');\n\n\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\n                        if (change < 0)\n                            str = \"<span style=color:red>\" + string + \"</span> \";\n\n                        domElement.innerHTML = str;\n                    });\n\n\n                });\n\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                        totalSum += per;\n\n                    });\n\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\n\n\n                }\n            }\n        })\n\n\n    }\n\n    checkSlowMotionStock = (token, stock) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n                var bigCandleCount = 0;\n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n\n                    if (element) {\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol, per, element[0]);\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol, per, element[0]);\n\n                        }\n                    }\n                }\n                console.log(\"Totalcount\", stock.symbol, bigCandleCount);\n                if (bigCandleCount <= 15) {\n\n                    stock.bigCandleCount = bigCandleCount;\n\n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                    });\n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async () => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n                    var closeingDatadaily = [], valumeSum = 0;\n\n                    var bigCandleCount = 0, bullishCount = 0;\n\n                    for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\n                        const element = candleDatad[index];\n\n                        if (element) {\n\n                            var per = (element[4] - element[1]) * 100 / element[1];\n                            if (per >= 0.7) {\n                                bigCandleCount += 1;\n                            }\n                            if (per >= 0) {\n                                bullishCount += 1;\n                            }\n\n                        }\n                    }\n                    if (bigCandleCount >= 1) {\n                        row.highlisht = true;\n                        window.document.title = \"SM: \" + row.symbol;\n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\n                    }\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n    checkLiveBids = async () => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n\n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n\n                console.log(\"bid\", resd.data.data);\n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if (resd.data && resd.data.data.length) {\n\n                    let bidlivedata = resd.data.data[0];\n                    let biddata = {\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                        symbol: bidlivedata.symbol,\n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity,\n                        nc: bidlivedata.pChange,\n                        ltp: bidlivedata.lastPrice,\n                    }\n\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function () {\n\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList));\n                    });\n\n\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 100));\n        }\n\n    }\n\n\n    oneHourBullBearCheck = async () => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"04:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'ONE_HOUR',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n                    let lastCandle = '';\n                    if (candleDatad.length > 1) {\n                        lastCandle = candleDatad[candleDatad.length - 2];\n                    } else {\n                        lastCandle = candleDatad[candleDatad.length - 1];\n                    }\n\n\n\n                    if ((lastCandle[1] == lastCandle[3]) && (lastCandle[2] == lastCandle[4])) {\n                        window.document.title = \"Hourly Buy: \" + row.symbol;\n                        console.log(row.name, \"Hourly Buy\", candleDatad[candleDatad.length - 1]);\n                        row.orderType = \" Hourly Buy\";\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Bullish \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n                    if ((lastCandle[1] == lastCandle[2]) && (lastCandle[3] == lastCandle[4])) {\n                        window.document.title = \"Hourly Sell: \" + row.symbol;\n                        console.log(row.name, \"Hourly Sell\", candleDatad[candleDatad.length - 1]);\n                        row.orderType = \" Hourly Sell\";\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Sell \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    searchValumeBreakoutStock = async () => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"60:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIFTEEN_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n\n                    var volumeSum = 0, findmaxVol = candleDatad[0][5];\n                    let currentCandleVol = candleDatad[candleDatad.length - 1][5];\n                    let firstCandleCloseingPrice = candleDatad[0][4], priceGoingHighCount = 0;\n                    let firstCandleCloseingPriceDownSide = candleDatad[0][4], priceGoingLowCount = 0;\n\n                    for (let index = candleDatad.length - 6; index < candleDatad.length - 1; index++) {\n                        const element = candleDatad[index];\n                        if (element) {\n                            volumeSum += element[5];\n                            //  console.log(row.symbol, ' last candle index ',index,   element[0] );\n                            if (findmaxVol < element[5]) {\n                                findmaxVol = element[5];\n                            }\n\n                            if (firstCandleCloseingPrice < element[4]) {\n                                console.log(row.symbol, firstCandleCloseingPrice, 'upside last candle index ', index, element[4]);\n                                firstCandleCloseingPrice = element[4];\n                                priceGoingHighCount += 1;\n                            }\n\n                            if (element[4] < firstCandleCloseingPriceDownSide) {\n                                console.log(row.symbol, firstCandleCloseingPrice, ' downside last candle index ', index, element[4]);\n                                firstCandleCloseingPriceDownSide = element[4];\n                                priceGoingLowCount += 1;\n                            }\n                        }\n\n\n                    }\n                    let avgVol = volumeSum / 5;\n\n                    if (currentCandleVol / findmaxVol > 1.75 && priceGoingHighCount >= 4) {\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType = \" Vol \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time & price incresing\";\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" time of average \", avgVol, currentCandleVol, candleDatad[candleDatad.length - 1][0], findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time and price incresing\");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    if (currentCandleVol / findmaxVol > 1.75 && priceGoingLowCount >= 4) {\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType = \" Vol \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time & price decresing\";\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" time of average \", avgVol, currentCandleVol, candleDatad[candleDatad.length - 1][0], findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time and price decresing \");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    // else if(currentCandleVol > avgVol){\n                    //     row.highlisht =  true; \n                    //     window.document.title = \"VB: \" + row.symbol;\n                    //     console.log(row.symbol, ' avg ', avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0]);\n                    //     this.speckIt('Volume  in ' + row.name + \" crossed average \");\n                    //     this.setState({ volumeBreakoutlast5CandleList: this.state.slowMotionStockList })\n                    // }\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n\n\n\n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if (element) {\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n\n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType,\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    // getHistory = (token) => {\n\n\n    //     this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\n    //     this.setState({ InstrumentHistroy: [] });\n    //     this.getLTP();\n\n\n    //     const format1 = \"YYYY-MM-DD HH:mm\";\n\n    //     var time = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(time);\n    //     // var startdate = moment(this.state.startDate).subtract(time);\n    //     var beginningTime = moment('9:15am', 'h:mma');\n\n    //     var data = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": token,\n    //         \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n    //         \"fromdate\": moment(startdate).format(format1),\n    //         \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n    //     }\n\n    //     AdminService.getHistoryData(data).then(res => {\n    //         let data = resolveResponse(res, 'noPop');\n    //         //    console.log(data); \n    //         if (data && data.data) {\n\n    //             var histCandles = data.data;\n    //             histCandles && histCandles.sort(function (a, b) {\n    //                 return new Date(b[0]) - new Date(a[0]);\n    //             });\n    //             if (histCandles.length > 0) {\n    //                 localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n    //                 this.setState({ InstrumentHistroy: histCandles });\n\n    //             }\n\n    //         }\n    //     })\n    // }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n\n            if (!foundInWatchlist.length) {\n\n                watchlist.push(fdata);\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\n                    this.LoadSymbolDetails(fdata.symbol);\n                });\n\n                this.setState({ symbolList: watchlist }, function () {\n                    //  this.updateSocketWatch();\n                });\n\n            }\n        }\n\n    }\n    onSelectItemChart = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token, seachSumbol: \"\" }, function () {\n                this.getLTP();\n                this.showStaticChart(fdata.token);\n                this.LoadSymbolDetails(fdata.symbol);\n            });\n\n        }\n\n    }\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    handleKeyDown = (e) => {\n\n        console.log(\"key\", e.keyCode);\n        //38 for down and 40 for up key\n        if (e.keyCode === 38 && this.state.cursor > 0) {\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\n        }\n\n        setTimeout(() => {\n            this.updateCandleOnkey();\n        }, 100);\n\n    }\n\n\n    updateCandleOnkey = () => {\n        var selectedKeyRow = localStorage.getItem('selectedKeyRow') && JSON.parse(localStorage.getItem('selectedKeyRow'));\n        if (selectedKeyRow.token && selectedKeyRow.symbol) {\n            this.setState({ tradingsymbol: selectedKeyRow.symbol, symboltoken: selectedKeyRow.token }, function () {\n                this.getLTP();\n                this.showStaticChart(selectedKeyRow.token);\n            });\n\n        }\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar LoadSymbolDetails={this.LoadSymbolDetails} />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n                    <Grid item xs={12} sm={2}>\n\n                        <WatchListTab style={{ position: 'fixed' }} data={{ gainerList: this.state.gainerList, looserList: this.state.looserList, LoadSymbolDetails: this.LoadSymbolDetails, cursor: this.state.cursor, symbolList: this.state.symbolList, totalWatchlist: this.state.totalWatchlist, onChangeWatchlist: this.onChangeWatchlist, selectedWatchlist: this.state.selectedWatchlist, search: this.state.search, handleKeyDown: this.handleKeyDown, onChange: this.onChange, autoSearchList: this.state.autoSearchList, onSelectItem: this.onSelectItem, symbolList: this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }} />\n\n\n                        {/* <Paper>\n                            <Autocomplete\n                                freeSolo\n                                id=\"free-solo-2-demo\"\n                                disableClearable\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                onChange={this.onSelectItem}\n                                //+ ' '+  option.exch_seg\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                    option.symbol\n                                ) : []}\n                                renderInput={(params) => (\n                                    <TextField\n                                        onChange={this.onChange}\n                                        {...params}\n                                        label={\"Search Symbol\"}\n                                        margin=\"normal\"\n                                        variant=\"standard\"\n                                        name=\"search\"\n                                        onKeyDown={this.handleKeyDown}\n                                        value={this.state.search}\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    />\n                                )}\n                            />\n\n                            <div style={{ marginLeft: '10px' }}>\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                    <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                            <MenuItem value={element}>{element}</MenuItem>\n                                        ))\n                                        }\n\n                                    </Select>\n                                </FormControl>\n\n                            </div>\n\n\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map((row, i) => (\n                                    <>\n                                        <ListItem onKeyDown={this.handleKeyDown} button selected={this.state.cursor === i ? 'active' : null}\n\n                                            style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                                            {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                                            <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\n\n\n                                        </ListItem>\n\n                                    </>\n                                )) : ''}\n                            </div>\n\n                        </Paper> */}\n\n\n                        {/* <Typography style={{ fontWeight: 'bold' }}><span style={{ color: \"green\" }}> Advance {this.state.advanceShareCount} </span> <span style={{ color: \"red\" }}> Decline {this.state.declineShareCount} </span> <span> Unchange {this.state.UnchangeShareCount} </span> </Typography> */}\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={8}>\n                        <Paper style={{ padding: \"10px\" }}>\n\n\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                <Grid item xs={10} sm={3}>\n\n                                    {this.state.tradingsymbol ?\n                                        <Typography variant=\"body1\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\n\n                                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\n\n                                        </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\n\n                                    O: {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                    H: {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                    L: {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                    C: {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                                </Grid>\n\n                                <Grid item xs={10} sm={2}>\n\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        disableClearable\n                                        style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                        onChange={this.onSelectItemChart}\n                                        value={this.state.seachSumbol}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange}\n                                                {...params}\n                                                label={\"Search\"}\n                                                margin=\"normal\"\n                                                variant=\"standard\"\n                                                name=\"seachSumbol\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n\n\n                                <Grid item xs={10} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\n                                        <InputLabel htmlFor=\"gender\">Time</InputLabel>\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '3px' }} >\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                            <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\n                                            <MenuItem value={\"DELIVERY\"}>Del</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                                </Grid>\n\n\n                                <Grid item xs={1} sm={2}  >\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                                </Grid>\n\n\n\n                                <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                    <br />\n\n                                    {this.state.InstrumentLTP ?\n                                        <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n\n                                            <div style={{ background: '#bdbdbd' }}>\n                                                <b>  Daily: {this.state.tradingsymbol}</b> <br />\n\n                                                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                                    Daily Avg Price: {this.state.DailyBulishStatus && this.state.DailyBulishStatus.toFixed(0)} {this.state.DailyBulishStatus ? this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                                                </span><br />\n\n\n                                                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                    <b>Daily Avg Volume:</b>  {(this.state.dailyAvgValume / 100000).toFixed(2)}L\n                                                </span><br />\n                                                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                    {this.state.todayCurrentVolume > this.state.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(this.state.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (this.state.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                                                </span>\n                                            </div>\n                                            <br />\n\n\n\n                                            <b>  Intraday: {this.state.timeFrame} : {this.state.tradingsymbol}</b> <br />\n                                            {this.state.bblastValue ? <span item xs={12} sm={12} >\n\n                                                <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.InstrumentLTP.ltp >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\n                                                BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\n                                                <span title=\"Green red mean price running below lower bb band\" style={{ color: this.state.InstrumentLTP.ltp <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\n                                            </span> : \"\"}\n\n                                            <span item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                                VWAP:  {this.state.vwapvalue && this.state.vwapvalue.toFixed(2)}\n                                            </span>\n                                            <br />\n                                            <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\n                                                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                            ))}\n\n\n                                            <br />\n                                            <b>Vol:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\n                                                <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n                                            ))}\n\n                                            <br />  <br />\n\n                                        </Grid>\n                                        : \"\"}\n                                    <Grid item xs={12} sm={!this.state.InstrumentLTP ? 12 : 9}  >\n                                        <div id=\"showChartTitle\">\n\n\n\n                                        </div>\n                                        <div id=\"tvchart\"></div>\n\n                                    </Grid>\n\n\n                                    <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', maxHeight: \"50vh\" }} >\n\n\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> | Total:  <b style={{ color: this.state.totalPerchentageChange > 0 ? \"green\" : 'red' }}>  {this.state.totalPerchentageChange && this.state.totalPerchentageChange.toFixed(2)}% </b> from {this.state.startingFrom} </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                                {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                                {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                    <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                        <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                        <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                        <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                        <TableCell align=\"center\">{row[1]}</TableCell>\n                                                        <TableCell align=\"center\">{row[2]}</TableCell>\n                                                        <TableCell align=\"center\">{row[3]}</TableCell>\n                                                        <TableCell align=\"center\">{row[4]}</TableCell>\n                                                        <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                                    </TableRow>\n                                                )) : ''}\n\n                                            </TableBody>\n                                        </Table>\n                                    </Grid>\n\n\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\n                                    <OrderWatchlist />\n                                </Grid>\n\n\n\n\n                            </Grid>\n                        </Paper>\n                        <br />\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={2}>\n\n\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.closeingEqualHighList, title: \"Strong Closing\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            {/* <Grid item xs={12} sm={12}>\n                                <LiveBidsExpantion data={{ list: this.state.liveBidsList, title: \"Live Bids\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>  */}\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.oneHourBullBearCheckList, title: \"Hourly Bullish/Bearish\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.volumeBreakoutlast5CandleList, title: \"Last 5 bar Volume breakout\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.fastMovementList, title: \"Fast Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.volumeCrossedList, title: \"Average Volume Crossed\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualLowList, title: \"Open = Low : Buy\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualHighList, title: \"Open = High : Sell\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.slowMotionStockList, title: \"Last 5 days no Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n                    </Grid>\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;\n\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            pcrTable : JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data,\n            optionChainData: JSON.parse( localStorage.getItem('optionChainData')),\n            filtered: JSON.parse(localStorage.getItem('optionChainData'))  && JSON.parse(localStorage.getItem('optionChainData')).filtered && JSON.parse(localStorage.getItem('optionChainData')).filtered.data  \n            \n            //JSON.parse(localStorage.getItem('optionChainData')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n    filterOptionChain = (name, actualValue) =>{\n        //console.log('filtername', name, actualValue); \n        var filereddata = []; \n    \n       var alldata =  this.state.optionChainData && this.state.optionChainData.records &&  this.state.optionChainData.records.data; \n\n       if(name === 'expiry' && actualValue === 'All' ) {\n            \n        filereddata =  alldata; \n       }\n     \n        if(name === 'expiry') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.expiryDate === actualValue){\n                    filereddata.push(element); \n                } \n            }   \n        }\n\n        if(name === 'strike') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.strikePrice === actualValue){\n                    filereddata.push(element); \n                } \n            } \n        }\n\n        \n\n        this.setState({filtered : filereddata, FilteredBY: name +\" \"+ actualValue});\n       //  console.log(filereddata); \n    }\n\n\n\n    componentDidMount() {\n\n\n       this.loadPackList();\n   //   console.log('this.state.optionChainData.records.expiryDates', this.state.optionChainData.records.expiryDates)\n\n\n        if(!JSON.parse(localStorage.getItem('cpdata')))\n        localStorage.setItem('cpdata', JSON.stringify( {data : []}) )\n        else\n        this.setState({products:  JSON.parse(localStorage.getItem('cpdata')).data})\n       // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n       //  clearInterval(this.state.stopnview)\n\n       if(!JSON.parse(localStorage.getItem('pcrTable')))\n       localStorage.setItem('pcrTable', JSON.stringify( {data : []}) )\n       else\n       this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')).data})\n     \n\n\n       var todayTime =  new Date(); \n       if(todayTime.getHours()>=9 && todayTime.getHours()< 16 ){\n            setInterval(() => {\n                this.loadPackList();\n            }, 60001 * 2);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60010 * 2);\n\n   //     this.findSupportResistence(this.state.optionChainData); \n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse( localStorage.getItem('optionChainData')).records.data;// this.state.optionChainData && this.state.optionChainData.records.data; \n        var     sumOfCEoi = 0,sumOfPEoi = 0; \n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n            \n            if(strikePrice === element.strikePrice){\n\n                if(element.CE && element.CE.openInterest){\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest; \n                }\n                if(element.PE && element.PE.openInterest){\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest; \n                }\n               \n            }                    \n        }\n       // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return {strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi , sumOfPEoi : sumOfPEoi}; \n\n      //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n           // console.log(optiondata);\n            var alldata =  optiondata && optiondata.records && optiondata.records.data; \n            //var underlyingValue = optiondata && optiondata.records.underlyingValue; \n            var PEoi = 0,CEoi = 0, PEoiChange=0,CEoiChange=0, peStrikePriceByDate=[]  ;\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element &&  element.PE){\n                    PEoi = PEoi + element.PE.openInterest; \n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest; \n                }\n                if(element &&  element.CE){\n                    CEoi = CEoi + element.CE.openInterest; \n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest; \n\n                } \n            }\n\n          var allexpiryDates =   optiondata.records.expiryDates; \n          var strikePrices =  optiondata.records.strikePrices; \n        //  var fliterExData = [];  \n           \n            // for (let index = 0; index < allexpiryDates.length; index++) {\n            //     const element = allexpiryDates[index];\n            //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n            //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n            //             fliterExData.push(alldata[indexJ]); \n            //         } \n            //     }                  \n            // }   \n\n            var myStrike = [14000, 14050, 14100, 14150, 14200, 14050, 14300, 14350, 14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n\n           // myStrike =   myStrike.sort(function(a, b){return b - a});\n       \n          //   var myStrike = [14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n       \n\n\n           // var myStrike = [15200,15250]; \n\n\n            var data  = [], totalspeoi= 0, totalsceoi= 0;\n             myStrike.forEach(element => {\n                var resdata =  this.getDataforStrike(element); \n                totalspeoi = totalspeoi+resdata.sumOfPEoi; \n                totalsceoi = totalsceoi+resdata.sumOfCEoi; \n\n                data.push(resdata); \n             \n               // console.log(element, resdata);\n                \n                 \n             });\n             this.setState({AllspTotalOI : data, selectedSPpcr : (totalspeoi / totalsceoi).toFixed(3), totalspeoi : totalspeoi,  totalsceoi : totalsceoi }); \n\n            // for (let index = 0; index < alldata.length; index++) {\n            //     const element = alldata[index];\n              \n            //     // if(alldata[index].strikePrice ==  14800){\n            //     //     fliterExData.push(element); \n            //     // } \n            //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n            //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n            //             fliterExData.push(element); \n            //         }   \n            //     }\n               \n            // }   \n\n//            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({CEoi: CEoi, PEoi : PEoi, allStrikediff:  PEoi - CEoi, CEoiChange: CEoiChange,PEoiChange: PEoiChange,allStrikeChngeDiff:  PEoiChange - CEoiChange });\n    }\n\n    \n\n\n\n    loadPackList() {\n\n\n        var data = { allPacks:true, portal: true};\n        AdminService.getBNcpdata(\"NIFTY\")\n            .then((res) => {\n        //     let data = resolveResponse(res);\n\n             var data =  res.data && res.data;\n\n             \n           localStorage.setItem(\"optionChainData\",  JSON.stringify( data) );\n\n          // this.findSupportResistence(data); \n\n           // console.log(\"livedata\", data.filtered);\n\n           this.setState({filtered : data.filtered && data.filtered.data , optionChainData: data});\n\n            if(data.filtered){\n\n                var diff =  data.filtered.PE.totOI - data.filtered.CE.totOI; \n\n                var newdata = {\n                    dateTime : this.dateFormat(new Date()), \n                    totCEOI : data.filtered.CE.totOI ,\n                    totCEVol: data.filtered.CE.totVol, \n                    totPEOI: data.filtered.PE.totOI , \n                    totPEVol: data.filtered.PE.totVol, \n                    diff: diff, \n                    totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')), \n                    totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')), \n                    totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange')) \n\n                } \n                this.setState({curnewdata : newdata });\n\n                var resname = ''; \n                if(diff > 0 )\n                 resname = \"BUY\";\n                 else\n                resname = \"SELL\"\n                \n\n                document.getElementById('title').innerHTML=  (diff/100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange'))/100000).toFixed(2) + \"L\" +  \" NIFTY \"; \n               // createData.push(newdata); \n               if(JSON.parse(localStorage.getItem('cpdata'))){\n                var oldproducts = JSON.parse(localStorage.getItem('cpdata')); \n               // console.log(\"oldproductsindex0\", ); \n                var lastrow = oldproducts && oldproducts.data[0]; \n                \n\n                // oldproducts.data.forEach((data) => {\n                //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                //         newdata.isDuplicate = true; \n                //     }else{\n                //         newdata.isDuplicate = false;\n                //     }\n                // });\n                if(lastrow){\n                    newdata.isDuplicate = newdata.diff == lastrow.diff ? true : false\n                    newdata.totCEOIChange = (((newdata.totCEOI-lastrow.totCEOI) * 100)/lastrow.totCEOI).toFixed(3);;\n                    newdata.totPEOIChange =   (((newdata.totPEOI-lastrow.totPEOI) * 100)/lastrow.totPEOI).toFixed(3);;\n                    newdata.totDiffChange =  (((newdata.diff-lastrow.diff) * 100)/lastrow.diff).toFixed(3); \n                }else{\n                    newdata.isDuplicate = false\n                    newdata.totCEOIChange = 0;\n                    newdata.totPEOIChange =  0;\n                    newdata.totDiffChange =  0; \n                }\n                \n\n                oldproducts.data.unshift(newdata);\n\n                if(data.records){\n                    oldproducts.timestamp = data.records.timestamp; \n                    oldproducts.underlyingValue = data.records.underlyingValue; \n                }\n              \n\n                localStorage.setItem(\"cpdata\",  JSON.stringify( oldproducts) );\n\n                this.setState({products: oldproducts.data, underlyingValue : data.records.underlyingValue,timestamp: data.records.timestamp  })\n               }\n               \n             //  console.log(\"dddd\", this.state.curnewdata); \n   \n                 \n            }\n\n\n            this.updatepcr()\n            this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data})\n\n            });\n\n\n\n\n    }\n\n\n    updatepcr(){\n\n\n        var pcrdata =  {\n            allPCR : (this.state.PEoi /this.state.CEoi).toFixed(3), \n            expiryPCR: localStorage.getItem('thisWeekPCR'), \n            selectedSPpcr: this.state.selectedSPpcr, \n         }\n\n         if(JSON.parse(localStorage.getItem('pcrTable'))){\n             var pcrTable = JSON.parse(localStorage.getItem('pcrTable')); \n             pcrTable.data.unshift(pcrdata);\n             localStorage.setItem(\"pcrTable\",  JSON.stringify( pcrTable) );\n         }\n         \n         console.log(pcrdata); \n         this.setState({pcrTable: pcrTable })\n    }\n \n\n    \n\n    dateFormat(date){ \n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n  \n\n\n    render(){\n     \n        var totCEOI = 0, totCEVol = 0,totCEOIChange=0, totCEBUY=0, totCESell=0; \n        var totPEOI = 0, totPEVol = 0,totPEOIChange=0, totPEBUY=0, totPESell=0; \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                    <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        My View({this.state.products && this.state.products.length}) <b> Nifty: {this.state.underlyingValue}</b> at Time: {this.state.timestamp} \n                        {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                    </Typography> \n                </Grid>\n\n                <Grid item xs={2} sm={2} > \n                    <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                            id=\"expiry\"\n                            name=\"expiry\"\n                            value={this.state.expiry}\n                            onChange={this.onChange}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                            {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.expiryDates ? this.state.optionChainData.records.expiryDates.map((name, index) => (\n                                <MenuItem key={name+'key'+index} value={name} >\n                                    {name}\n                                </MenuItem>\n                            )): \"\"}\n                            </Select>\n                        </FormControl>\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} > \n                            <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                                    <Select\n                                    labelId=\"strike\"\n                                    id=\"strike\"\n                                    max-height={'100%'}\n                                    name=\"strike\"\n                                    value={this.state.strike}\n                                    onChange={this.onChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.strikePrices ? this.state.optionChainData.records.strikePrices.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                        </Grid>\n                        <Grid item xs={1} sm={1} style={{paddingTop:'20px',paddingLeft:'20px'}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button>      \n                        </Grid>\n\n                </Grid>\n              \n            \n                <Grid item xs={12} sm={12}>\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}}>\n                   \n                    <Grid container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                        <Grid item xs={3} sm={3} >\n                         \n                         <span>All PUT OI: <b>{this.state.PEoi} ({(this.state.PEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL OI: <b>{this.state.CEoi} ({(this.state.CEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Diff: {\n                             this.state.allStrikediff > 0 ? <b style={{color:'green'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b> } \n                        </span>\n                        </Grid>\n\n                        <Grid item xs={3} sm={3} >\n                \n                        <span>All PUT Chng in OI: <b>{this.state.PEoiChange} ({(this.state.PEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL Chng in  OI: <b>{this.state.CEoiChange} ({(this.state.CEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Chng in Diff: {\n                             this.state.allStrikeChngeDiff > 0 ? <b style={{color:'green'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b> } \n                        </span>\n\n\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} >\n\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>ALL PCR: <b>{(this.state.PEoi /this.state.CEoi).toFixed(3) } </b></span>\n                         </Typography> \n                         </Grid>\n\n                         <Grid item xs={2} sm={2} >\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>Expire Week PCR: <b>{ localStorage.getItem('thisWeekPCR') } </b></span>\n                        </Typography> \n                        </Grid>\n                         \n\n\n                         <Grid item xs={2} sm={2} >\n                         <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                            <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n\n                         </Typography> \n                \n              \n\n                        </Grid>\n\n\n                        \n            </Grid>\n            </Paper>\n            </Grid>\n\n           \n\n\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={0}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n              \n              \n                <Grid item xs={7} sm={7} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                            <TableCell align=\"center\"><b>Time</b></TableCell>\n                            <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                            <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                            <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>                            \n\n                            <TableCell align=\"center\"><b>Call OI</b></TableCell>\n\n                         \n                            <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>                            \n                            \n                            {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody hover style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.products ? this.state.products.map(row => (\n                            <TableRow key={row.dateTime} style={{background: row.isDuplicate ? \"lightgray\":\"\"}}>\n                                <TableCell align=\"center\">{row.dateTime.substring(19,11)}</TableCell>\n                                <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color:'green' }} >BUY</Typography>  : <Typography variant=\"body2\" style={{ color:'red' }} >SELL</Typography> }</TableCell>\n                                <TableCell align=\"center\">{row.diff} ({(row.diff/100000).toFixed(2)}L)({row.totDiffChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totDiffChange}%</span>: row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totDiffChange}%</span> }) </TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff/100000).toFixed(2)}L)</TableCell>\n\n                                <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totPEOIChange}%</span>: row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totPEOIChange}%</span> })</TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totCEOIChange}%</span>: row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold' }} >{row.totCEOIChange}%</span> })</TableCell>\n                              \n                                <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n                \n                            </TableRow>\n                        )):<Spinner/>}\n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={3} sm={3} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }}  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi/100000).toFixed(3)}L</b></TableCell>\n                            <TableCell align=\"center\"><b>Strike Price</b> </TableCell>\n                            <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi/100000).toFixed(3)}L</b></TableCell>\n                           \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                             <TableRow  hover key={row.dateTime} >\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfCEoi} ({(row.sumOfCEoi/100000).toFixed(2)}L)</TableCell>\n                             <TableCell  align=\"center\">{row.strikePrice}</TableCell>\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfPEoi} ({(row.sumOfPEoi/100000).toFixed(2)}L)</TableCell>\n                     \n                         </TableRow>\n                        )):<Spinner/>}\n\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={2} sm={2} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table   id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\">ALL Pcr</TableCell>\n                            <TableCell align=\"center\">Expiry Pcr </TableCell>\n                            <TableCell align=\"center\">Selected Pcr</TableCell>\n                         \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{whiteSpace: \"nowrap\"}}>\n\n                        {this.state.pcrTable && this.state.pcrTable.length>0 && this.state.pcrTable ? this.state.pcrTable.map(row => (\n                            <TableRow  hover key={row.expiryPCR} >\n                                <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                <TableCell  align=\"center\">{row.expiryPCR}</TableCell>\n                                <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                            </TableRow>\n                        )):<Spinner/>}\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"2px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableHead variant=\"head\">\n\n                    <TableRow variant=\"head\"  >\n                        \n                        <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                    </TableRow>\n                    <TableRow variant=\"head\" >\n                    \n                        {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n                     \n\n                        <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI')/100000).toFixed(3)}L) </b></TableCell>\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                        {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> STRIKE PRICE</span> </TableCell>\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> Expiry</span> </TableCell>\n\n                        {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                        <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                        {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI')/100000).toFixed(3)}L)</b></TableCell>\n\n\n                    </TableRow>\n                </TableHead>                   \n                    \n                    <TableBody>\n                    \n                        { this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                            <TableRow hover key={index} style={{background: opdata.isDuplicate ? \"lightgray\":\"\"}}>\n                              \n                                {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                { opdata && opdata.CE && opdata.PE ? <>\n                                            <TableCell {...totCEOI = totCEOI +  opdata.CE.openInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.CE.change/opdata.strikePrice-opdata.CE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> }) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                        \n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }} align=\"center\"><span> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{borderRight: 'dashed', whiteSpace: \"nowrap\"}} align=\"center\" ><span style={{paddingLeft:'5px',paddingRight:'5px'  }}> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.PE.change/opdata.strikePrice-opdata.PE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}}align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n                            <TableRow  variant=\"head\"> \n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOI',totCEOI)}><b>{totCEOI}<br />({(totCEOI/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange',totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEVol',totCEVol)}><b>{totCEVol}<br />({(totCEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n                                {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                <TableCell {...localStorage.setItem('thisWeekPCR',(totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n\n\n                                {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                {/* <TableCell colSpan={3} align=\"center\"></TableCell> */} \n                                <TableCell align=\"center\" {...localStorage.setItem('totPEVol',totPEVol)}><b>{totPEVol}<br />({(totPEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange',totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOI',totPEOI)}><b>{totPEOI}<br />({(totPEOI/100000).toFixed(3)}L)</b> </TableCell>\n\n                            </TableRow>\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n\n                \n          \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TradeConfig from './TradeConfig.json';\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n                this.setState({  fundData :fundsResData.data }); \n                localStorage.setItem(\"netCapital\", fundsResData.data && fundsResData.data.net); \n\n               }\n        })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    Total Capital  :   {TradeConfig.totalCapital }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {TradeConfig.perTradeExposurePer}% \n                    </Typography>\n\n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {(TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100).toFixed(2)}\n                    </Typography>\n\n                    </Paper>\n\n                </Grid>\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.getTodayOrder();\n        }, 10000);\n       \n    }\n\n   \n    cancelOrderOfSame = (orderId,variety) =>  {\n       \n        var data = {\n            \"variety\":variety,\n            \"orderid\":orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n                this.getTodayOrder();\n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.quantity,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n               this.setState({triggerprice : 0}); \n               this.getTodayOrder();\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                         Oders Placed ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\n\n                                \n\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>AvgPrice</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>TriggerPrice</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\n\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\">\n                                        {/* {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity} */}\n                                    {row.quantity}\n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                       </>\n                                     : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\n                                        {row.orderstatus}\n                                        <br />\n\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \n                                       </>\n                                     : ''}\n\n                                    </TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.jwtToken,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode , jwtToken: jwtToken });\n\n            \n        wsClint.onopen  = (res) => {\n\n\n            var firstTime_req =  {\n                \"jwttoken\": this.state.jwtToken,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n           }\n    \n           \n            console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n            wsClint.send(firstTime_req);\n\n            // this.makeConnection();\n            // console.log('connected');\n            // this.updateSocketWatch();\n                \n             setTimeout(function(){\n               this.makeConnection(feedToken ,clientcode);\n             }, 1000);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport OrderWatchlist from './OrderWatchlist';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList: [],\n            autoSearchList: [],\n            InstrumentLTP: {},\n            autoSearchTemp: [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"DELIVERY\",\n            nr4TotalPer: 0,\n            pnlAmountTotal: 0,\n            totalNetProfit: 0,\n            totelActivatedCount: 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting: \"\",\n            perHighLowTotal: 0,\n            netPnLAmountOnHighlowTotal: 0,\n            firstTimeMove : 0.5, \n            firstTimeSLMove: 0.3, \n            nextTimeMove : 0.5, \n            nextTimeSLMove: 0.3, \n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n\n        };\n    }\n    componentDidMount() {\n\n        this.updateOrderList(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1000) })\n              this.setState({bankNiftyInterval :  setInterval(() => {this.getNiftyLTP(); this.getBankNiftyLTP(); }, 30000)}) \n\n            var squireInterval = setInterval(() => {\n                console.log(\"squireoff\", new Date().toLocaleString()); \n                let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n                let sqrOffendTime = moment('3:15pm', 'h:mma');\n                let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n            \n                if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n                    this.state.positionList.forEach((element, i)=> {\n                        if(element.netqty > 0 || element.netqty < 0){\n                            this.squareOff(element);\n                        }\n                        if(this.state.positionList.length == i+1){\n                            clearInterval(squireInterval);\n                            console.log(\"squireInterval ended\"); \n                        }\n                    });\n                } \n            }, 5000);\n\n        } else {\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval);\n            clearInterval(this.state.bankNiftyInterval);\n        }\n\n        var scanendTime = moment('3:30pm', 'h:mma');\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\n            //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n\n\n\n            var tostartInteral =   setInterval(() => {\n                var time = new Date(); \n                if(time.getMinutes() % 15 === 0){\n                    setTimeout(() => {\n                        this.getCandleHistoryAndStore(); \n                    }, 70000);\n                    setInterval(() => {\n                            if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n                            this.getCandleHistoryAndStore(); \n                        }\n                     }, 60000 * 15 + 70000 );  \n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern();\n            }, foundPatternsFromStored.length * 100 + 300000);\n        }\n\n       \n\n       \n        //this.getCandleHistoryAndStore(); \n\n        // this.findNR4PatternLive();\n        //this.findNR7PatternLive();\n\n\n\n        // this.getPositionData();\n        // this.getNSETopStock();\n\n\n        //  this.getMySelectedStock();\n\n\n\n        // setInterval(() => {\n\n        //     var timediff = moment.duration(\"00:50:00\");\n        //     var startdate = moment(new Date()).subtract(timediff);\n\n\n        //     var enddiff = moment.duration(\"00:01:00\");\n        //     var enddate = moment(new Date()).add(enddiff);\n\n\n        //     var data  = {\n        //         \"exchange\": \"NSE\",\n        //         \"symboltoken\": 212,\n        //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n        //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n        //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n        //     }\n\n        //     AdminService.getHistoryData(data).then(res => { \n        //         let histdata = resolveResponse(res,'noPop' );\n        //         var candleData = histdata.data; \n        //         candleData.reverse(); \n        //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n        //     }); \n\n        // }, 1000);\n\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        this.setState({ foundPatternList: backTestResult })\n\n\n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n\n    getCandleHistoryAndStore = async () => {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        const today = moment().isoWeekday();\n        var timediff = '';\n\n\n\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\n            timediff = moment.duration(\"66:00:00\");\n        } else {\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    if (candleData && candleData.length >= 10) {\n                        var last10Candle = candleData.slice(0, 10);\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist, symbol) => {\n\n        //   console.log(\"TweezerTop finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n\n            //\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\n\n                        var ttophistCandle = [];\n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser Top',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: ttophistCandle\n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n\n                        // var msg = new SpeechSynthesisUtterance();\n                        // msg.text = 'twisser top in ' + symbol.toLowerCase();\n                        // window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\n        // console.log(\"TweezerBottom finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var last8candleHigh = candleHist[9][2];\n            var last8candleLow = candleHist[2][3];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n\n            //  \n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n\n\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle = [];\n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser bottom',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: tBophistCandle\n                        }\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n\n                        // var msg = new SpeechSynthesisUtterance();\n                        // msg.text = 'twisser bottom in ' + symbol.toLowerCase();\n                        // window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data; var rgrangeCount = 0;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    var last5Candle = candleData.slice(0, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last5Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0];\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        console.log(index + 1, element.symbol, rgrangeCount);\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n\n                        if (rgrangeCount == 4) {\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\n\n\n                            var firstCandle = last4Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR4',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr4 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 300));\n\n            // var showtestdata = (index + 1);\n\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n            //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last7Candle = candleData.slice(1, 8);\n                    var last9Candle = candleData.slice(0, 9);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last7Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last9Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\n\n\n                        if (rgrangeCount == 7) {\n\n\n                            var firstCandle = last7Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR7',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr7 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol;\n            this.setState({ stockTesting: showtestdata });\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n\n\n    refreshLtpOnFoundPattern = async () => {\n\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\n\n\n        var foundPatternList = this.state.foundPatternList;\n\n        this.setState({ foundPatternList: [] });\n\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        //       foundPatternList.forEach(element => {\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\n            const element = foundPatternList[index];\n\n            if (element && element.pattenName == 'NR4') {\n\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\": element.token,\n                }\n\n                AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                    var LtpData = data && data.data;\n                    //console.log(LtpData);\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\n                    if (LtpData && LtpData.ltp) {\n\n                        var orderActivated = <span> {LtpData.ltp} </span>;\n\n                        if (LtpData.ltp > element.BuyAt) {\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\n                            quantity = Math.floor(10000 / element.BuyAt);\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n\n                        }\n                        if (LtpData.ltp < element.SellAt) {\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n                        }\n\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol: element.symbol,\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\n                            token: element.token,\n                            pattenName: 'NR4',\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(),\n                            BuyAt: element.BuyAt,\n                            SellAt: element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated: orderActivated,\n                            candleChartData: element.candleChartData,\n                            quantity: quantity ? quantity : \"\",\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange: perChange,\n                            todayChange: todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated', foundData);\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\n\n                        var foundlist = this.state.foundPatternList;\n\n                        foundlist.sort(function (a, b) {\n                            return b.perChange - a.perChange;\n                        });\n\n                        this.setState({ foundPatternList: foundlist });\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                    }\n\n                }).catch(error => {\n                    Notify.showError(element.symbol + \" ltd data not found!\");\n                })\n\n            }\n            await new Promise(r => setTimeout(r, 101));\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                if (row.netqty > 0) {\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n                } else if (row.netqty < 0) {\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.sellavgprice) * parseInt(row.netqty)).toFixed(2);\n                }\n                break;\n            }\n        }\n\n        return data;\n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        oderbookData.forEach(element => {\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n            }\n        });\n        return data;\n    }\n    getHighLowPercentage = async () => {\n\n        this.setState({showHighLowWisePer: true});\n\n        if (!this.state.positionList.length) {\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n\n            if (element.producttype == \"DELIVERY\") {\n                return \"\";\n            }\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\": element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                    this.state.positionList[index].high = LtpData.high;\n                    this.state.positionList[index].low = LtpData.low;\n                }\n            })\n            await new Promise(r => setTimeout(r, 125));\n            this.setState({ positionList: this.state.positionList });\n\n        }\n\n    }\n    tagPatternWhichTaken =(token)=> {\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \n       \n       var pattern = ''; \n       for (let index = 0; index < orderTagToPosition.length; index++) {\n           const element = orderTagToPosition[index];\n           if(token == element.token){\n            pattern = element.pattenName; \n            break;\n           }\n        }\n        return pattern\n    //    console.log(\"findpatter\", token, orderTagToPosition);\n    //    orderTagToPosition.forEach(element => {\n    //         if(token == element.token){\n    //             return element.pattenName; \n    //         }\n    //    });\n\n    }\n    calculateTradeExpence =(element)=>{\n\n        var totalbuyvalue =  parseFloat(element.totalbuyvalue) === 0 ? parseFloat(element.totalsellvalue) : parseFloat(element.totalbuyvalue);\n        var buyCharge = parseFloat(totalbuyvalue) * 0.25/100; \n        if(buyCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            buyCharge = 20; \n        }\n        var totalsellvalue =  parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n        var sellCharge = parseFloat(totalsellvalue) * 0.25/100; \n        if(sellCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            sellCharge = 20; \n        }\n        let turnOver = totalbuyvalue + totalsellvalue; \n        let totalBroker = buyCharge+sellCharge;\n\n        let sst = 0.025; //stock intraday\n        if(element.optiontype  == 'CE' || element.optiontype  == 'PE'){\n            sst = 0.05;  \n        }\n\n        let sstCharge = totalsellvalue *  sst/100; \n        let transCharge = turnOver *  0.00335/100; \n        let stampDuty  = totalbuyvalue *   0.003/100; \n        let sebiCharge = turnOver * 10/10000000; \n        let gstCharge = (totalBroker+transCharge+sebiCharge) * 18/100; \n\n        let total = totalBroker+sstCharge+transCharge+stampDuty+sebiCharge+gstCharge; \n\n        var chargeInfo ={\n          tradeExpence:  total,\n          expenceInfo : \"Brokerage: \"+totalBroker.toFixed(2)+ \" \\nSTT: \"+ sstCharge.toFixed(2) + \" \\nTransaction: \"+ transCharge.toFixed(2) + \" \\nStamp Duty: \"+stampDuty.toFixed(2) + \" \\nSebi: \"+sebiCharge.toFixed(2) + \" \\nGST: \" + gstCharge.toFixed(2) + \" \\n\\nTotal: \"+ total.toFixed(2)\n        }\n        return chargeInfo; \n    }\n    getPositionData = async () => {\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0;\n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var positionList = data && data.data;\n            if (positionList && positionList.length > 0) {\n\n\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0, totalExpence=0; \n                positionList.forEach(element => {\n\n                    if (element.producttype == \"DELIVERY\") {\n                        return \"\";\n                    }\n\n                    todayProfitPnL += parseFloat(element.pnl);\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n                    totalQtyTraded += parseInt(element.buyqty);\n                    allbuyavgprice += parseFloat(element.buyavgprice);\n                    allsellavgprice += parseFloat(element.sellavgprice);\n                    if(element.netqty == 0){\n                        let percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice));\n                        element.percentPnL = percentPnL.toFixed(2) + \"%\";\n                        totalPercentage += parseFloat(percentPnL);\n\n                        localStorage.removeItem('firstTimeModify' + element.tradingsymbol)\n                        localStorage.removeItem('lastTriggerprice_' + element.tradingsymbol)\n                    }\n                   \n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \n\n                    let chargeInfo = this.calculateTradeExpence(element);\n                    element.tradeExpence = chargeInfo.tradeExpence.toFixed(2); \n                    element.expenceInfo = chargeInfo.expenceInfo; \n                    totalExpence += chargeInfo.tradeExpence; \n\n                    var slData = this.getStoplossFromOrderbook(element);\n                    if (slData) {\n                        element.stopLoss = slData.stopLoss;\n                        element.stopLossAmount = slData.maxLossAmount;\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\n                    }\n\n\n                });\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\n\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\n                this.setState({ totalExpence: totalExpence.toFixed(2) });\n\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\n\n                \n                positionList.sort(function (a, b) {\n                    return (b.netqty - a.netqty);\n\n                    //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList: positionList });\n\n            }\n        })\n\n    }\n\n    getNSETopStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n                                    console.log(found[0].symbol, \"found\", found);\n                                    localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                    this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    getMySelectedStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getSelectedStockFromDb().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\n                                    selectedStockwatchList.push(found[0]);\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    checkAndPlaceSingleOrder = (stock) => {\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data = res.data;\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\n            console.log(\"stockfound\", found);\n            if (found && found.length) {\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\n            }\n        })\n    }\n\n\n    getStockOnebyOne() {\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            console.log(\"still ok\");\n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    if (scandata && scandata.length > 0) {\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\n                        var isFound = false;\n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\n                                isFound = true;\n                            }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\n                        }\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n            var LtpData = data && data.data;\n            var ltpPrice = LtpData.ltp\n            if (ltpPrice) {\n\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\n                var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken: token,\n                    buyPrice: 0,\n                    quantity: quantity,\n                    stopLossPrice: stopLossPrice\n                }\n\n                if (quantity && stopLossPrice) {\n                    this.placeOrderMethod(orderOption);\n                }\n\n            }\n\n        }).catch((error) => {\n            console.log(symbol, \"not found\", 'error', error);\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //    console.log(data);       \n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n    }\n\n    onTrailChange=(e)=>{\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    getNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"NIFTY\",\n            \"symboltoken\": \"26000\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:green'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:red'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n    getBankNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\": \"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:green'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:red'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n\n    getStopLossPrice = async (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n\n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            if (LtpData && LtpData.ltp) {\n                var ltp = parseFloat(LtpData.ltp);\n                ltp = ltp - (ltp * 0.7 / 100);\n                var slPrice = this.getMinPriceAllowTick(ltp);\n\n                this.setState({ stoploss: slPrice });\n                return slPrice;\n            }\n\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"21:10:00\");\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                            stoploss = this.getMinPriceAllowTick(stoploss);\n\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\n\n                            console.log(symbol, \" LTP \", LtpData.ltp);\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                            console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue);\n\n                            var orderOption = {\n                                transactiontype: 'BUY',\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5) {\n                                this.placeOrderMethod(orderOption);\n                            } else {\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                console.log(symbol + \" its not fullfilled\");\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(symbol + \" candle data emply\");\n                    }\n                })\n\n            }\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    cancelOrderOfSame = (row) => {\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if (data.status && data.message === 'SUCCESS') {\n                console.log(\"cancel order\", data);\n                // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n    }\n\n    squareOff = (row) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\n            \"exchange\": row.exchange,\n            \"ordertype\": \"MARKET\",\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n\n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);\n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                this.cancelOrderOfSame(row);\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n\n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'hey Vijay, ' + slmOption.tradingsymbol;\n                window.speechSynthesis.speak(msg);\n\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    getOpenPeningOrderId = (symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\n                data.orderId = oderbookData[index].orderid\n                data.variety = oderbookData[index].variety\n                break;\n            }\n        }\n        return data;\n    }\n\n    modifyOrderMethod = (row, minTriggerPrice, minSLPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\": row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": minSLPrice ?  parseFloat(minSLPrice) : 0,\n            \"triggerprice\": parseFloat(minTriggerPrice),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n\n\n            if (data.status && data.message === 'SUCCESS') {\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\n                msg.text = row.symbolname + ' modified '; //+ data.message;\n                window.speechSynthesis.speak(msg);\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minTriggerPrice));\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n    get2DecimalNumber =(number)=>{\n        number = parseFloat(number); \n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    getSLAndTriggerPrice =(price)=> {\n        let minTriggerPrice = this.getMinPriceAllowTick(price);\n\n        var minSLPrice = minTriggerPrice - (minTriggerPrice * 1 / 100);\n        minSLPrice = this.getMinPriceAllowTick(minSLPrice);\n\n        let slPriceData = {\n            minTriggerPrice : minTriggerPrice, \n            minSLPrice : minSLPrice\n        }\n        return slPriceData; \n    }\n    getOptionPercentage =(row)=> {\n\n        console.log(\"option per calling\"); \n        var percentChange = 0, trailPerChange = 0; \n\n        row.buyavgprice = parseFloat(row.buyavgprice);\n        percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n        if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 7) {\n\n            var minTriggerPrice = row.buyavgprice + (row.buyavgprice * 3 / 100);\n            let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n            if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                this.modifyOrderMethod(row, slPriceData.minTriggerPrice ,slPriceData.minSLPrice );\n            }\n\n        } else {\n            var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n            var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n            trailPerChange = perchngfromTriggerPrice; \n            if (perchngfromTriggerPrice >= 5) {\n                minTriggerPrice = lastTriggerprice + (lastTriggerprice * 2 / 100);\n                let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                    this.modifyOrderMethod(row, slPriceData.minTriggerPrice, slPriceData.minSLPrice);\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n \n    }\n\n    getPercentage = (row) => {\n\n        var percentChange = 0, trailPerChange = 0; \n        if (row.netqty > 0) {\n            row.buyavgprice = parseFloat(row.buyavgprice);\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= this.state.firstTimeMove) {\n                var minPrice = row.buyavgprice + (row.buyavgprice * this.state.firstTimeSLMove / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                if (perchngfromTriggerPrice >= this.state.nextTimeMove) {\n                    minPrice = lastTriggerprice + (lastTriggerprice * this.state.nextTimeSLMove / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if (row.netqty < 0) {\n\n            row.sellavgprice = parseFloat(row.sellavgprice);\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -Math.abs(this.state.firstTimeMove)) {\n                var minPrice = row.sellavgprice - (row.sellavgprice * this.state.firstTimeSLMove / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.3 / 100));\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                console.log(\"perchngfromTriggerPrice\", perchngfromTriggerPrice);\n                if (perchngfromTriggerPrice <= -Math.abs(this.state.nextTimeMove)  ) {\n                    minPrice = lastTriggerprice - (lastTriggerprice * this.state.nextTimeSLMove / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n\n\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n    }\n\n  \n\n\n    render() {\n  \n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\n                    <Grid item >\n                       <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Positions ({this.state.positionList && this.state.positionList.length})  {new Date().toLocaleString()}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={3} > \n\n                   \n                       Stock Trail%: First Move<input name=\"firstTimeMove\"  type={'number'}  step=\"0.1\" onChange={this.onTrailChange} value={this.state.firstTimeMove}  style={{width:'30px',textAlign:'center'}} /> \n                        SL Move<input name=\"firstTimeSLMove\" step=\"0.1\"  type={'number'}  onChange={this.onTrailChange}  value={this.state.firstTimeSLMove} style={{width:'30px',textAlign:'center'}} /> \n\n                        &nbsp;Next <input name=\"nextTimeMove\" step=\"0.1\"  type={'number'}  onChange={this.onTrailChange} value={this.state.nextTimeMove}  style={{width:'30px',textAlign:'center'}} /> \n                        SL Move<input name=\"nextTimeSLMove\"  step=\"0.1\" type={'number'}  onChange={this.onTrailChange}  value={this.state.nextTimeSLMove} style={{width:'30px',textAlign:'center'}} /> \n                    \n\n                    </Grid>\n\n                    \n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Net Capital  {this.get2DecimalNumber(localStorage.getItem('netCapital'))}  </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\" >\n                            <b> Net Cap P/L </b> <b style={{ color: ((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')) > 0 ? \"green\" : \"red\" }}>{((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')).toFixed(2)}% </b>\n                        </Typography>\n                    </Grid>\n\n                   \n\n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Turnover {this.state.totalTornOver} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item >\n                        <Typography component=\"h3\"  >\n\n                        <b style={{ color: \"red\" }}>Expenses: {this.state.totalExpence} </b>\n\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalExpence) > 0 ? \"green\" : \"red\" }}>{this.state.totalExpence ? (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2) : \"\"} </b>\n                        </Typography>\n                    </Grid>\n                    \n\n                    \n\n\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\n                    </Grid>\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\n                    </Grid>\n                </Grid>\n\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                    <Grid item xs={12} sm={12}>\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Pattern Name</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Expense</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n\n                                        {this.state.showHighLowWisePer ? \n                                        <>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                          </> : \"\"}\n\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\n\n                                            <TableCell align=\"left\">\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                                    {row.tradingsymbol} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\n                                                </Button>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\n                                            <TableCell style={{cursor:'help'}} title={row.expenceInfo} align=\"left\">{row.tradeExpence}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\n\n\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== '0' && row.optiontype  == '' ? this.getPercentage(row) : \"\"}\n                                                {(row.optiontype  == 'CE' || row.optiontype  == 'PE') && row.netqty > 0 ? this.getOptionPercentage(row) : \"\"}  \n                                                {row.percentPnL}\n                                                {/* new Date().toLocaleTimeString() > \"15:15:00\" ? */}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n\n                                        {this.state.showHighLowWisePer ? <>\n                                            <TableCell   align=\"left\">{row.high}</TableCell>\n                                            <TableCell  align=\"left\">{row.low}</TableCell>\n                                          </> : \"\"}\n\n\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\n                                            </TableCell>\n\n                                        </TableRow> : \"\"\n\n                                    )) : ''}\n\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\n\n                                        {/* new Date().toLocaleTimeString() > \"15:15:00\" ?  */}\n                                            {this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\"}\n\n                                        </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                    </TableRow>\n\n\n                                </TableBody>\n                            </Table>\n\n                        </Paper>\n\n\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '250px', overflow: \"auto\" }}>\n                        <OrderBook />\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\n                    </Grid>\n\n\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \n                    <Grid item xs={12} sm={12} >\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n\n\n                            <Grid justify=\"space-between\"\n                                container>\n                                <Grid item  >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\n\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\n                                    </Typography>\n                                </Grid>\n                                <Grid item >\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                        <TableRow hover key={row.symboltoken}>\n\n\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\n                                                {row.pastPerferm ? <>\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                </> : \"\"}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                            <TableCell align=\"left\">{row.time}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n\n\n                        </Paper>\n                    </Grid> \n                    : \"\"}\n\n\n\n                </Grid>\n\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport LightChartCom from \"./LightChartCom\";\n\nimport Chart from \"./Chart\";\n\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n  //  this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {\n      cursor: 0,\n      areaData: [\n        { time: '2018-10-19', value: 54.90 },\n        { time: '2018-10-22', value: 54.98 },\n        { time: '2018-10-23', value: 57.21 },\n        { time: '2018-10-24', value: 57.42 },\n        { time: '2018-10-25', value: 56.43 },\n        { time: '2018-10-26', value: 55.51 },\n        { time: '2018-10-29', value: 56.48 },\n        { time: '2018-10-30', value: 58.18 },\n        { time: '2018-10-31', value: 57.09 },\n        { time: '2018-11-01', value: 56.05 },\n        { time: '2018-11-02', value: 56.63 },\n        { time: '2018-11-05', value: 57.21 },\n        { time: '2018-11-06', value: 57.21 },\n        { time: '2018-11-07', value: 57.65 },\n        { time: '2018-11-08', value: 58.27 },\n        { time: '2018-11-09', value: 58.46 },\n        { time: '2018-11-12', value: 58.72 },\n        { time: '2018-11-13', value: 58.66 },\n        { time: '2018-11-14', value: 58.94 },\n        { time: '2018-11-15', value: 59.08 },\n        { time: '2018-11-16', value: 60.21 },\n        { time: '2018-11-19', value: 60.62 },\n        { time: '2018-11-20', value: 59.46 },\n        { time: '2018-11-21', value: 59.16 },\n        { time: '2018-11-23', value: 58.64 },\n        { time: '2018-11-26', value: 59.17 },\n        { time: '2018-11-27', value: 60.65 },\n        { time: '2018-11-28', value: 60.06 },\n        { time: '2018-11-29', value: 59.45 },\n        { time: '2018-11-30', value: 60.30 },\n        { time: '2018-12-03', value: 58.16 },\n        { time: '2018-12-04', value: 58.09 },\n        { time: '2018-12-06', value: 58.08 },\n        { time: '2018-12-07', value: 57.68 },\n        { time: '2018-12-10', value: 58.27 },\n        { time: '2018-12-11', value: 58.85 },\n        { time: '2018-12-12', value: 57.25 },\n        { time: '2018-12-13', value: 57.09 },\n        { time: '2018-12-14', value: 57.08 },\n        { time: '2018-12-17', value: 55.95 },\n        { time: '2018-12-18', value: 55.65 },\n        { time: '2018-12-19', value: 55.86 },\n        { time: '2018-12-20', value: 55.07 },\n        { time: '2018-12-21', value: 54.92 },\n        { time: '2018-12-24', value: 53.05 },\n        { time: '2018-12-26', value: 54.44 },\n        { time: '2018-12-27', value: 55.15 },\n        { time: '2018-12-28', value: 55.27 },\n        { time: '2018-12-31', value: 56.22 },\n        { time: '2019-01-02', value: 56.02 },\n        { time: '2019-01-03', value: 56.22 },\n        { time: '2019-01-04', value: 56.36 },\n        { time: '2019-01-07', value: 56.72 },\n        { time: '2019-01-08', value: 58.38 },\n        { time: '2019-01-09', value: 57.05 },\n        { time: '2019-01-10', value: 57.60 },\n        { time: '2019-01-11', value: 58.02 },\n        { time: '2019-01-14', value: 58.03 },\n        { time: '2019-01-15', value: 58.10 },\n        { time: '2019-01-16', value: 57.08 },\n        { time: '2019-01-17', value: 56.83 },\n        { time: '2019-01-18', value: 57.09 },\n        { time: '2019-01-22', value: 56.99 },\n        { time: '2019-01-23', value: 57.76 },\n        { time: '2019-01-24', value: 57.07 },\n        { time: '2019-01-25', value: 56.40 },\n        { time: '2019-01-28', value: 55.07 },\n        { time: '2019-01-29', value: 53.28 },\n        { time: '2019-01-30', value: 54.00 },\n        { time: '2019-01-31', value: 55.06 },\n        { time: '2019-02-01', value: 54.55 },\n        { time: '2019-02-04', value: 54.04 },\n        { time: '2019-02-05', value: 54.14 },\n        { time: '2019-02-06', value: 53.79 },\n        { time: '2019-02-07', value: 53.57 },\n        { time: '2019-02-08', value: 53.95 },\n        { time: '2019-02-11', value: 54.05 },\n        { time: '2019-02-12', value: 54.42 },\n        { time: '2019-02-13', value: 54.48 },\n        { time: '2019-02-14', value: 54.03 },\n        { time: '2019-02-15', value: 55.16 },\n        { time: '2019-02-19', value: 55.44 },\n        { time: '2019-02-20', value: 55.76 },\n        { time: '2019-02-21', value: 56.15 },\n        { time: '2019-02-22', value: 56.92 },\n        { time: '2019-02-25', value: 56.78 },\n        { time: '2019-02-26', value: 56.64 },\n        { time: '2019-02-27', value: 56.72 },\n        { time: '2019-02-28', value: 56.92 },\n        { time: '2019-03-01', value: 56.96 },\n        { time: '2019-03-04', value: 56.24 },\n        { time: '2019-03-05', value: 56.08 },\n        { time: '2019-03-06', value: 55.68 },\n        { time: '2019-03-07', value: 56.30 },\n        { time: '2019-03-08', value: 56.53 },\n        { time: '2019-03-11', value: 57.58 },\n        { time: '2019-03-12', value: 57.43 },\n        { time: '2019-03-13', value: 57.66 },\n        { time: '2019-03-14', value: 57.95 },\n        { time: '2019-03-15', value: 58.39 },\n        { time: '2019-03-18', value: 58.07 },\n        { time: '2019-03-19', value: 57.50 },\n        { time: '2019-03-20', value: 57.67 },\n        { time: '2019-03-21', value: 58.29 },\n        { time: '2019-03-22', value: 59.76 },\n        { time: '2019-03-25', value: 60.08 },\n        { time: '2019-03-26', value: 60.63 },\n        { time: '2019-03-27', value: 60.88 },\n        { time: '2019-03-28', value: 59.08 },\n        { time: '2019-03-29', value: 59.13 },\n        { time: '2019-04-01', value: 59.09 },\n        { time: '2019-04-02', value: 58.53 },\n        { time: '2019-04-03', value: 58.87 },\n        { time: '2019-04-04', value: 58.99 },\n        { time: '2019-04-05', value: 59.09 },\n        { time: '2019-04-08', value: 59.13 },\n        { time: '2019-04-09', value: 58.40 },\n        { time: '2019-04-10', value: 58.61 },\n        { time: '2019-04-11', value: 58.56 },\n        { time: '2019-04-12', value: 58.74 },\n        { time: '2019-04-15', value: 58.71 },\n        { time: '2019-04-16', value: 58.79 },\n        { time: '2019-04-17', value: 57.78 },\n        { time: '2019-04-18', value: 58.04 },\n        { time: '2019-04-22', value: 58.37 },\n        { time: '2019-04-23', value: 57.15 },\n        { time: '2019-04-24', value: 57.08 },\n        { time: '2019-04-25', value: 55.85 },\n        { time: '2019-04-26', value: 56.58 },\n        { time: '2019-04-29', value: 56.84 },\n        { time: '2019-04-30', value: 57.19 },\n        { time: '2019-05-01', value: 56.52 },\n        { time: '2019-05-02', value: 56.99 },\n        { time: '2019-05-03', value: 57.24 },\n        { time: '2019-05-06', value: 56.91 },\n        { time: '2019-05-07', value: 56.63 },\n        { time: '2019-05-08', value: 56.38 },\n        { time: '2019-05-09', value: 56.48 },\n        { time: '2019-05-10', value: 56.91 },\n        { time: '2019-05-13', value: 56.75 },\n        { time: '2019-05-14', value: 56.55 },\n        { time: '2019-05-15', value: 56.81 },\n        { time: '2019-05-16', value: 57.38 },\n        { time: '2019-05-17', value: 58.09 },\n        { time: '2019-05-20', value: 59.01 },\n        { time: '2019-05-21', value: 59.50 },\n        { time: '2019-05-22', value: 59.25 },\n        { time: '2019-05-23', value: 58.87 },\n        { time: '2019-05-24', value: 59.32 },\n        { time: '2019-05-28', value: 59.57 },\n      ],\n      volumeData: [\n        { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-22', value: 21737523.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-23', value: 29328713.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-23', value: 11707083.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-24', value: 8755506.00, color: 'rgba(0, 150, 136, 0.8)' },\n      ]\n    }\n  }\n\n\n  render() {\n    const { cursor } = this.state\n\n    return (\n      <Container>\n          \n          <LightChartCom ChartData={{areaSeries: this.state.areaData, volumeData : this.state.volumeData}}/>\n       \n\n      </Container>\n    )\n  }\n}\n\n\n\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        \n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n//     loadIndexesList() {\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n//         AdminService.getAllIndices()\n//             .then((res) => {\n//                 if (res.data) {\n//                     var data = res.data, sectorStockList = [];\n//                     this.setState({ indexTimeStamp: data.timestamp })\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n//                   //  this.setState({sectorList :  softedData});\n                  \n// //                    this.setState({ sectorList: []});\n//                     function sleep(ms) {\n//                         return new Promise(resolve => setTimeout(resolve, ms));\n//                     }\n//                     var updateLtpOnInterval = async (ref, softedData) => {\n\n//                             var middleSector = []; \n//                             for (let i = 0; i < softedData.length; i++) {\n\n//                                 var length = 1;                                     \n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n//                                     softedData[i].stockList = sectorStocks;\n//                                     length = sectorStocks.length; \n//                                     if (sectorStocks && sectorStocks.length) {\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n//                                     }\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n//                                 }else{\n//                                     softedData[i].stockList = sectorStocks;\n//                                     middleSector.push(softedData[i]); \n//                                 }\n\n                                \n                            \n//                                 await sleep(length / 10 * 1500);\n//                             }\n\n\n//                             middleSector.forEach(element => {\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\n//                             });\n//                         }\n//                         updateLtpOnInterval(this, softedData);\n//                 }\n//             })\n//             .catch((reject) => {\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n//                 this.speckIt(\"All Indices API Failed\");\n\n//             })\n\n//         this.setState({ refreshFlag: true });\n\n//     }\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n        \n\n                    var data = res.data && res.data.data, sectorStockList = [];\n                   // this.setState({ indexTimeStamp: data.timestamp })\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\n                  //  this.setState({sectorList :  softedData});\n\n                  console.log(softedData); \n\n                    this.setState({ sectorList: []});  \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1;                                     \n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\n\n                                    if(sectorStocks && sectorStocks.length){\n                                        softedData[i].stockList = sectorStocks;\n                                        length = sectorStocks.length; \n                                        if (sectorStocks && sectorStocks.length) {\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\n                                        }\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                    }\n                                }else{\n                                    if(sectorStocks && sectorStocks.length>=1){\n                                        softedData[i].stockList = sectorStocks;\n                                        middleSector.push(softedData[i]); \n                                    }\n                                  \n                                }\n\n                                await sleep(length / 10 * 150);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n          //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from './LightChartCom';\n\nimport Test from './Test';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n\n  const [open, setOpen] = React.useState(false);\n\n  var [values, setValues] = React.useState({\n    data: [],\n    candledata: {}\n  })\n\n\n\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n\n   \n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightCandleChart\" color=\"primary\" style={{ display: \"none\" }} onClick={handleClickOpen}>\n        Chart\n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} style={{color : props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change > 0 ? \"green\" : \"red\" }}>\n          {props.LightChartData.selectedSymbol}  {props.LightChartData.InstrumentLTP && props.LightChartData.InstrumentLTP.ltp}    ({props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change.toFixed(2)}%) \n          <br />\n\n\n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n          <br />\n\n          {props.LightChartData && props.LightChartData.InstrumentLTP ?\n            <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n\n              <div style={{ background: '#bdbdbd' }}>\n                <b>  Daily: {props.LightChartData.selectedSymbol}</b> <br />\n\n                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                  Daily Avg Price: {props.LightChartData.DailyBulishStatus && props.LightChartData.DailyBulishStatus.toFixed(0)} {props.LightChartData.DailyBulishStatus ? props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                </span><br />\n\n\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  <b>Daily Avg Volume:</b>  {(props.LightChartData.dailyAvgValume / 100000).toFixed(2)}L\n                </span><br />\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  {props.LightChartData.todayCurrentVolume > props.LightChartData.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(props.LightChartData.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (props.LightChartData.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                </span>\n              </div>\n              <br />\n\n\n\n              <b>  Intraday: {props.LightChartData.timeFrame} : {props.LightChartData.tradingsymbol}</b> <br />\n              {props.LightChartData.bblastValue ? <span item xs={12} sm={12} >\n\n                <span title=\"Green color mean price running above upper bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp >= props.LightChartData.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {props.LightChartData.bblastValue.upper.toFixed(2)}</span><br />\n                BB Middle(20 SMA): {props.LightChartData.bblastValue.middle.toFixed(2)}<br />\n                <span title=\"Green red mean price running below lower bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp <= props.LightChartData.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {props.LightChartData.bblastValue.lower.toFixed(2)}</span><br />\n              </span> : \"\"}\n\n              <span item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                VWAP:  {props.LightChartData.vwapvalue && props.LightChartData.vwapvalue.toFixed(2)}\n              </span>\n              <br />\n              <b> RSI: </b>{props.LightChartData.rsiValues && props.LightChartData.rsiValues.map((item, j) => (\n                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n              ))}\n\n\n              <br />\n              <b>Vol:</b> {props.LightChartData.valumeData && props.LightChartData.valumeData.map((item, j) => (\n                <span style={{ color: item > props.LightChartData.dailyAvgValume ? \"green\" : \"\", fontWeight: item > props.LightChartData.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n              ))}\n\n              <br />  <br />\n\n            </Grid>\n            : \"\"}\n\n\n\n          {/* <Grid item xs={12} sm={9}  >\n            <div id=\"showChartTitle\">\n            </div>\n            <div id=\"tvchart\"></div>\n          </Grid> */}\n\n\n            <Grid item xs={12} sm={9}  >\n            {localStorage.getItem('candleChartData') ? <ReactApexChart\n            options={{\n              chart: {\n                type: 'candlestick',\n                height: 350\n              },\n              title: {\n                text: '',\n                align: 'left'\n              },\n              xaxis: {\n                type: 'datetime',\n              },\n              yaxis: {\n                tooltip: {\n                  enabled: true\n                }\n              }\n            }}\n            series={[{\n              data: props.LightChartData.chartStaticData\n\n            }]}\n            type=\"candlestick\"\n            width={500}\n            height={350}\n          /> : \"\"}\n\n\n\n            </Grid>\n\n\n          </Grid>\n\n\n\n          {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n          <Grid item>\n             <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' )}>BUY</Button> \n          </Grid>\n\n          <Grid item>\n            <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={props.LightChartData.qtyToTake} onChange={this.onChangeQty} />\n          </Grid>\n\n          <Grid item >\n            <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked')}>SELL</Button> \n          </Grid>\n          </Grid> */}\n\n          {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n         \n\n\n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n          */}\n          {/* {props.LightChartData.chartStaticData ? <Test ChartData={props.LightChartData} /> : \"\"} */}\n\n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport * as moment from 'moment';\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass OrderBook extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData: [],\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            selectAllzone: 'Select All',\n            triggerprice: 0,\n            price: 0,\n            lotsize: 0,\n            firstTimeFlag: true,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: localStorage.getItem('clickedIndexName') ? localStorage.getItem('clickedIndexName') :  'NIFTY BANK', //decodeURIComponent(window.location.href.split('?')[1].split('=')[1]),\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake: '',\n            BBBlastType: \"BBBlastOnly\",\n            liveBidsList: [],  //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n            sortedType: \"pChange\",\n            backupDeleverydata: [],\n            backupBidata: [],\n            backupDateList: [],\n            backDate : ''\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n\n                    this.setState({ oderbookData: orderlist });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n\n                    // var pendingOrder = orderlist.filter(function(row){\n                    //     return row.status == \"trigger pending\";\n                    // }); \n                    // this.setState({pendingOrder: pendingOrder});\n\n                }\n            });\n    }\n\n    // getDerivedStateFromProps(){\n    //     //console.log(' this.props.indexName', this.props.indexName)\n    //    // this.setState({selectedWatchlist : this.props.indexName }); \n    // }\n\n    componentDidMount() {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            console.log(\"setInterval\");\n            setInterval(() => {\n                this.checkLiveBids();\n            }, 5 * 60000);\n        }\n\n        // setInterval(() => {\n        //     this.checkLiveBids();\n        // }, 5 * 60000);\n\n\n      this.checkLiveBids();\n\n\n        this.getBackUpDate();\n\n        console.log(\"ddd\", this.state.selectedWatchlist);\n    }\n\n\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkLiveBids();\n\n        });\n    }\n\n    onChangeBackDate = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.getByDateBidHistory();\n\n        });\n    }\n\n    backupData = () => {\n        console.log(this.state.backupDeleverydata);\n        AdminService.saveDeliveryData({ backupDeleverydata: this.state.backupDeleverydata }).then(storeRes => {\n            console.log(\"storeRes\", new Date().toLocaleTimeString(), storeRes);\n        });\n    }\n\n    updatebidHistory =(storeResData)=> {\n\n        console.log(\"storeResData\", storeResData);\n\n\n        this.state.liveBidsList.forEach(element => {\n                \n            let symbolHist = storeResData.length &&  storeResData.filter(item => item.symbol == element.symbol); \n\n            \n            let buyHist = [], sellHist=[], lastbuybid=0, lastsellbid=0;  \n            symbolHist.forEach((element , index)=> {\n              \n               if(lastbuybid){\n                   buyHist.push(((element.totalBuyBid - lastbuybid)*100/lastbuybid).toFixed(2)); \n               }\n\n               if(lastsellbid){\n                   sellHist.push(((element.totalSellBid - lastsellbid)*100/lastsellbid).toFixed(2)); \n               }\n               lastbuybid = element.totalBuyBid; \n               lastsellbid = element.totalSellBid; \n              \n            });\n\n            element.buybidHistory = buyHist; \n            element.sellbidHistory = sellHist; \n             \n           });\n\n           this.setState({liveBidsList : this.state.liveBidsList}); \n    }\n\n    storeBidData = () => {\n        console.log(this.state.backupBidata);\n\n        let data = { backupBiddata: this.state.backupBidata, dbUpdateTime: moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\") }; \n        AdminService.saveBidData(data).then(storeRes => {\n            let storeResData = resolveResponse(storeRes, \"noPop\");\n            this.updatebidHistory(storeResData.result); \n        });\n    }\n\n\n    checkLiveBids = async () => {\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ liveBidsList: [], backupDeleverydata: [], backupBidata: [] });\n\n        console.log(\"watchList\", this.state.staticData)\n\n        var delData = [];\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n\n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n\n               // console.log(\"bid\", resd.data.data)\n\n                if (resd.data && resd.data.data.length) {\n                    let bidlivedata = resd.data.data[0];\n                    let biddata = {\n                        quantityTraded: parseFloat(bidlivedata.quantityTraded.split(\",\").join('')),\n                        deliveryQuantity: parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')),\n                        deliveryToTradedQuantity: parseFloat(bidlivedata.deliveryToTradedQuantity.split(\",\").join('')),\n                        symbol: bidlivedata.symbol,\n                        todayChange: bidlivedata.pChange,\n                        ltp: parseFloat(bidlivedata.lastPrice.split(\",\").join('')),\n                        datetime: moment(bidlivedata.secDate).format(\"YYYY-MM-DD HH:mm:ss\"),\n                        averagePrice: parseFloat(bidlivedata.averagePrice.split(\",\").join('')),\n                    }\n                    // delData.push(biddata);\n\n                    let bidLivedata = {\n                        symbol: bidlivedata.symbol,\n                        priceChangePer: bidlivedata.pChange,\n                        ltp: parseFloat(bidlivedata.lastPrice.split(\",\").join('')),\n                        updatedTime: moment(bidlivedata.secDate).format(\"YYYY-MM-DD HH:mm:ss\"),\n                        totalBuyBid: parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) ? parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join(''))  : 0,\n                        totalSellBid: parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) ? parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : 0, \n                   \n                        quantityTraded : bidlivedata.quantityTraded != '-' ? parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : 0, \n                        deliveryToTradedQuantity: parseFloat(bidlivedata.deliveryToTradedQuantity.split(\",\").join('')),  \n                        deliveryQuantity: parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')), \n                 \n                        averagePrice: parseFloat(bidlivedata.averagePrice.split(\",\").join('')),\n                        buyPrice1: parseFloat(bidlivedata.buyPrice1.split(\",\").join('')),\n                        buyPrice2:  parseFloat(bidlivedata.buyPrice2.split(\",\").join('')),\n                        buyPrice3:  parseFloat(bidlivedata.buyPrice3.split(\",\").join('')),\n                        buyPrice4:  parseFloat(bidlivedata.buyPrice4.split(\",\").join('')),\n                        buyPrice5:  parseFloat(bidlivedata.buyPrice5.split(\",\").join('')),\n                        buyQuantity1:  parseFloat(bidlivedata.buyQuantity1.split(\",\").join('')),\n                        buyQuantity2:  parseFloat(bidlivedata.buyQuantity2.split(\",\").join('')),\n                        buyQuantity3:  parseFloat(bidlivedata.buyQuantity3.split(\",\").join('')),\n                        buyQuantity4:  parseFloat(bidlivedata.buyQuantity4.split(\",\").join('')),\n                        buyQuantity5:  parseFloat(bidlivedata.buyQuantity5.split(\",\").join('')),\n\n                        sellPrice1:  parseFloat(bidlivedata.sellPrice1.split(\",\").join('')),\n                        sellPrice2:  parseFloat(bidlivedata.sellPrice2.split(\",\").join('')),\n                        sellPrice3:  parseFloat(bidlivedata.sellPrice3.split(\",\").join('')),\n                        sellPrice4:  parseFloat(bidlivedata.sellPrice4.split(\",\").join('')),\n                        sellPrice5:  parseFloat(bidlivedata.sellPrice5.split(\",\").join('')),\n                        sellQuantity1:  parseFloat(bidlivedata.sellQuantity1.split(\",\").join('')),\n                        sellQuantity2:  parseFloat(bidlivedata.sellQuantity2.split(\",\").join('')),\n                        sellQuantity3:  parseFloat(bidlivedata.sellQuantity3.split(\",\").join('')),\n                        sellQuantity4:  parseFloat(bidlivedata.sellQuantity4.split(\",\").join('')),\n                        sellQuantity5:  parseFloat(bidlivedata.sellQuantity5.split(\",\").join('')),\n                        \n                       \n\n                    }\n\n\n                    this.setState({ backupBidata: [...this.state.backupBidata, bidLivedata] });\n\n                    if (index === watchList.length - 1) {\n                        setTimeout(() => {\n                            console.log(\"last loaggged\")\n                            this.storeBidData();\n                        }, 1000);\n                    }\n\n                    this.setState({ backupDeleverydata: [...this.state.backupDeleverydata, biddata] });\n\n\n                    bidlivedata.quantityTraded = bidlivedata.quantityTraded != '-' ? parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : \"0\";\n                    bidlivedata.deliveryQuantity = bidlivedata.deliveryQuantity != '-' ? parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')) : \"0\";\n\n                    bidlivedata.totalBuyQuantity = bidlivedata.totalBuyQuantity != '-' ? parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) : \"0\";\n\n                    bidlivedata.totalSellQuantity = bidlivedata.totalSellQuantity != '-' ? parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : \"0\";\n                    bidlivedata.totalTradedVolume = bidlivedata.totalTradedVolume != '-' ? parseFloat(bidlivedata.totalTradedVolume.split(\",\").join('')) : \"0\";\n                    bidlivedata.totalTradedValue = bidlivedata.totalTradedValue != '-' ? parseFloat(bidlivedata.totalTradedValue.split(\",\").join('')) : \"0\";\n\n\n                    bidlivedata.buytosellTime = bidlivedata.totalBuyQuantity / bidlivedata.totalSellQuantity;\n                    bidlivedata.selltobuyTime = bidlivedata.totalSellQuantity / bidlivedata.totalBuyQuantity;\n\n                    this.state.liveBidsList.sort(function (a, b) {\n                        return b.pChange - a.pChange;\n                    });\n\n\n                    if (bidlivedata.totalBuyQuantity / bidlivedata.totalSellQuantity > 1.25) {\n                        // CommonMethods.speckIt(bidlivedata.symbol + \" \" + (bidlivedata.totalBuyQuantity / bidlivedata.totalSellQuantity).toFixed(2) + \" time buying\");\n                        bidlivedata.highlightbuy = true;\n                    }\n\n                    if (bidlivedata.totalSellQuantity / bidlivedata.totalBuyQuantity > 1.25) {\n                        //  CommonMethods.speckIt(bidlivedata.symbol + \"  \" + (bidlivedata.totalSellQuantity / bidlivedata.totalBuyQuantity).toFixed(2) + \" time selling\");\n                        bidlivedata.highlightsell = true;\n                    }\n\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, bidlivedata], lastUpdateTime: resd.data.lastUpdateTime }, function () {\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList));\n                        window.document.title = \"Del: \" + this.state.liveBidsList[0].symbol;\n                    });\n\n\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 200));\n        }\n\n        // if(watchList.length == delData.length)\n        // console.log(\"delData\",  delData);\n\n    }\n\n    getDeliveryHistory = () => {\n\n\n        for (let index = 0; index < this.state.liveBidsList.length; index++) {\n            const element = this.state.liveBidsList[index];\n            AdminService.getDeliveryDataFromDb(element.symbol)\n                .then((res) => {\n                    let data = resolveResponse(res, \"noPop\");\n                    console.log(\"hist data\", data.result);\n                    if (data && data.result) {\n                        var result = data.result;\n                        element.delHistory = result;\n                        console.log(element.symbol, result);\n\n                        this.setState({ liveBidsList: this.state.liveBidsList });\n                    }\n                });\n        }\n    }\n\n    getByDateBidHistory = () => {\n        this.setState({ liveBidsList: []});\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        let allSymbol = []; \n        watchList.forEach(element => {\n            allSymbol.push( \"'\" + element.name+\"'\"); \n        });\n\n        AdminService.getBidDataFromDb(this.state.backDate,  allSymbol.join(','), allSymbol.length )\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                console.log(\"hist bidHistoty\",data.result);\n                \n                if (data && data.result) {\n                    var result = data.result;\n                \n                    for (let index = 0; index < result.length; index++) {\n                        const bidlivedata = result[index];\n                        \n                        let data = {\n                            quantityTraded : bidlivedata.quantityTraded,\n                            deliveryQuantity : bidlivedata.deliveryQuantity, \n                            totalBuyQuantity :  bidlivedata.totalBuyBid , \n                            totalSellQuantity : bidlivedata.totalSellBid, \n                            lastPrice : bidlivedata.ltp, \n                            pChange: bidlivedata.priceChangePer,\n                            symbol : bidlivedata.symbol,\n                            updatedTime :bidlivedata.updatedTime \n\n                        }\n\n    \n                        data.buytosellTime = bidlivedata.totalBuyBid / bidlivedata.totalSellBid;\n                        data.selltobuyTime = bidlivedata.totalSellBid / bidlivedata.totalBuyBid;\n    \n                        if (bidlivedata.totalBuyBid / bidlivedata.totalSellBid > 1.25) {\n                            data.highlightbuy = true;\n                        }\n    \n                        if (bidlivedata.totalSellBid / bidlivedata.totalBuyBid > 1.25) {\n                            data.highlightsell = true;\n                        }\n    \n                    \n                        this.setState({ liveBidsList: [...this.state.liveBidsList, data], lastUpdateTime: this.state.backDate }, function () {\n                           \n                            this.state.liveBidsList.sort(function (a, b) {\n                                return b.pChange - a.pChange;\n                            });\n\n                        });\n                    }\n                    this.updatebidHistory(data.bidHistoty); \n                }\n            });\n    }\n\n    getBackUpDate = () => {\n        AdminService.getBackUpdateList()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                console.log(data);\n                if (data && data.result) {\n\n                    let result = [];\n                    data.result.forEach(element => {\n                        if (element.dbUpdateTime) {\n                            result.push(moment(element.dbUpdateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\n                        }\n                    });\n\n                    this.setState({ backupDateList: result }, function () {\n                       // console.log(\"dates\", this.state.backupDateList)\n                    });\n                }\n            });\n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat = (str) => {\n        if (!isNaN(str)) {\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\n        }\n\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn = (type) => {\n\n        this.state.liveBidsList.sort(function (a, b) {\n            return b[type] - a[type];\n        });\n\n        this.setState({ liveBidsList: this.state.liveBidsList, sortedType: type });\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n\n                {window.location.hash === \"#/delivery\" ? <PostLoginNavBar /> : \"\"}\n\n\n                <Grid direction=\"row\" alignItems=\"center\" container>\n                     <Grid item xs={12} sm={12} >\n\n                        <Paper style={{ padding: \"10px\" }} >\n\n                            <Grid justify=\"space-between\"\n                                container spacing={1}>\n\n                                <Grid item xs={12} sm={4} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        {this.state.selectedWatchlist} ({this.state.liveBidsList.length}) updated at {this.state.lastUpdateTime}\n                                    </Typography>\n\n                                    <span>Sorted By:  {this.state.sortedType} </span>\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={3} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkLiveBids()}>Refresh</Button>\n                                </Grid>\n\n                                <Grid item xs={12} sm={1} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.backupData()}>BackUp</Button>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={1} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Back Date</InputLabel>\n                                        <Select value={this.state.backDate} name=\"backDate\" onChange={this.onChangeBackDate}>\n                                            <MenuItem value={\"\"}>{\"Select Date\"}</MenuItem>\n                                            {this.state.backupDateList && this.state.backupDateList.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n                            </Grid>\n\n\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\" >\n\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}>buyTosell</Button>  </TableCell>\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}>sellTobuy</Button>  </TableCell>\n\n\n\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalBuyQuantity\")}> Total Buy Quantity</Button>  </TableCell>\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalSellQuantity\")}> Total Sell Quantity</Button>  </TableCell>\n\n\n\n                                        <TableCell align=\"center\">Average Price</TableCell>\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell>\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\n                                        <TableCell align=\"center\" ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell>\n\n\n\n                                        {/* <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell>\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell> */}\n\n                                        {/* <TableCell  align=\"center\">Day Open</TableCell>\n                                        <TableCell  align=\"center\">Day High</TableCell>\n                                        <TableCell  align=\"center\">Day Low</TableCell>\n                                        <TableCell  align=\"center\">Previous Close</TableCell> */}\n\n\n                                        <TableCell align=\"center\" ><Button onClick={() => this.getDeliveryHistory()}>Delivery History</Button>  </TableCell>\n\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n\n\n                                    {this.state.liveBidsList ? this.state.liveBidsList.map((row, i) => (\n                                        <TableRow hover key={i} style={{ background: this.getPercentageColor(row.pChange) }}>\n\n                                            <TableCell align=\"left\">{row.symbol} {row.lastPrice} ({row.pChange}%)</TableCell>\n                                            <TableCell style={{ background: row.highlightbuy ? \"lightgray\" : \"\" }} align=\"center\">\n                                              \n                                                {row.buytosellTime.toFixed(2)} time buy</TableCell>\n\n                                            <TableCell style={{ background: row.highlightsell ? \"lightgray\" : \"\" }} align=\"center\">\n                                             \n                                                {row.selltobuyTime.toFixed(2)} time sell</TableCell>\n\n                                     \n\n                                            <TableCell align=\"center\" style={{background: \"#eceff1\" }}>\n                                                    {row.buybidHistory &&  row.buybidHistory.map(item => (\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\n                                                    ))}\n                                                <br />\n                                                {row.totalBuyQuantity} {this.convertToFloat(row.totalBuyQuantity)}</TableCell>\n                                            <TableCell align=\"center\" style={{background: \"#eceff1\" }}>\n                                                    {row.sellbidHistory &&  row.sellbidHistory.map(item => (\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\n                                                    ))}\n                                                <br />\n                                                {row.totalSellQuantity} {this.convertToFloat(row.totalSellQuantity)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.averagePrice}</TableCell>\n\n\n                                            <TableCell align=\"center\">{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell>\n                                            <TableCell align=\"center\">{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\n                                            <TableCell align=\"center\">{row.deliveryToTradedQuantity}%</TableCell>\n\n                                            {/* <TableCell align=\"center\">{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell>\n                                            <TableCell align=\"center\">{row.totalTradedValue}L</TableCell> */}\n\n                                            {/* <TableCell  align=\"center\">{row.open}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayHigh}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayLow}</TableCell>\n                                    <TableCell  align=\"center\">{row.previousClose}</TableCell> */}\n\n                                            <TableCell style={{ background: \"#eceff1\" }} align=\"center\">\n\n                                                {row.delHistory && row.delHistory.map(item => (\n                                                    <span> {new Date(item.datetime).toLocaleDateString()}  &nbsp;\n                                                        <span title={\"quantityTraded \" + item.quantityTraded}> {(item.quantityTraded / 100000).toFixed(2)}L  </span>  &nbsp;\n                                                        <span title={\"deliveryToTradedQuantity\"}> {item.deliveryToTradedQuantity}%  </span>  &nbsp;\n                                                        <span title={\"deliveryQuantity \" + item.deliveryQuantity}> {(item.deliveryQuantity / 100000).toFixed(2)}L  </span>  &nbsp;\n                                                        <span style={{ color: item.todayChange > 0 ? \"green\" : \"red\" }}> ({item.todayChange}%)   </span>\n                                                        &nbsp;  <br /></span>\n                                                ))}\n\n                                            </TableCell>\n\n\n                                        </TableRow>\n                                    )) : <Spinner />}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartMultiple from \"./LightChartMultiple\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createChart } from 'lightweight-charts';\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist:  localStorage.getItem('clickedIndexName') ? localStorage.getItem('clickedIndexName') :  'NIFTY BANK',  //decodeURIComponent(window.location.href.split('?')[1].split('=')[1]),\n            totalStockToWatch: 0,\n            chartSize: 300, \n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType: \"BBStrongBreakout\",\n            qtyToTake: '',\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            findlast5minMovement: [],\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\n\n\n        };\n    }\n\n\n    componentDidMount = async () => {\n\n        window.document.title = \"Index Charts\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList && watchList.length });\n        // this.findlast5minMovement(); //one time only\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            //console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 10 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 10 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n        this.find10MinBBBlast();\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    componentWillUnmount() {\n        //  clearInterval(this.state.findlast5minMovementInterval);\n        //        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            this.find10MinBBBlast();\n\n        });\n    }\n    shouldComponentUpdate(flag, nextProps, nextState) {\n        return flag //!equals(nextProps, this.props); // equals() is your implementation\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    // startSearching = () => {\n\n    //     console.log(\"Starting the search\");\n\n    //     var beginningTime = moment('9:15am', 'h:mma');\n    //     var endTime = moment('3:30pm', 'h:mma');\n    //     const friday = 5; // for friday\n    //     var currentTime = moment(new Date(), \"h:mma\");\n    //     const today = moment().isoWeekday();\n    //     //market hours\n\n    //     if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n    //         var intervaltime = 60000;\n    //         if (this.state.totalStockToWatch > 180) {\n    //             intervaltime = this.state.totalStockToWatch * 333;\n    //         }\n    //       //  this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n    //     }\n    // }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                return \"200:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                    return \"1000:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                    return \"1500:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"2160:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"8320:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"15000:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    calculateSMA =(data, count) => {\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n\n    getRSIBBString=(row)=>{\n        var str = ''; \n        if(row.BB){\n            if(row.ltp >= row.BB.upper){\n                str +=  '<span style=\"color:green\">BBupr:' + row.BB.upper+'</span>';\n            }else{\n                str += '<span style=\"color:red\">BBupr:' + row.BB.upper+'</span>';\n            }\n    \n            if(row.ltp <= row.BB.lower){\n                str +=  ' <span style=\"color:green\">BBlwr:' + row.BB.lower+'</span>';\n            }else{\n                str += ' <span style=\"color:red\">BBlwr:' + row.BB.lower+'</span>';\n            }\n        }\n       \n\n        str += \"<br/>RSI:\"; \n        row.RSI.forEach(element => {\n            if(element >= 60){\n                str +=  ' <span style=\"color:green\">' + element+'</span>';\n            }else if(element >= 40 && element <= 59){\n                str +=  ' <span style=\"color:black\">' + element+'</span>';\n            }else{\n                str += ' <span style=\"color:red\">' + element+'</span>';\n            }\n        });\n\n        return str; \n    }\n\n    createMultpleChart = (row) => {\n\n        var div = document.createElement(\"div\");\n        div.style.display = 'block';\n        div.style.padding = 10 + 'px';\n        div.style.marginLeft = 10 + 'px';\n        div.style.marginTop = 10 + 'px';\n        div.style.border =  \"2px solid \"+CommonOrderMethod.getPercentageColor(row.perChange);      \n\n        var legend = document.createElement('div');\n        //legend.className = 'sma-legend';\n        div.appendChild(legend);\n        legend.style.display = 'block';\n        legend.style.left = 3 + 'px';\n        legend.style.top = 3 + 'px';\n\n        if(row.perChange > 0){\n            legend.style.color = 'green';\n        }else{\n            legend.style.color = 'red';\n        }\n\n        legend.innerHTML = row.name + \" \" + row.ltp + \" (\"+ row.perChange +'%) <br />';\n\n\n        var legendTitle = document.createElement('div');\n        //legend.className = 'sma-legend';\n        div.appendChild(legendTitle);\n//        legendTitle.style.display = 'block';\n        legendTitle.style.fontSize = '10px';\n\n\n        //  const domElement = document.getElementById('tvchart');\n        //   document.getElementById('tvchart').innerHTML = '';\n\n\n        const chart = createChart(div, { width: this.state.chartSize, height: this.state.chartSize, timeVisible: true, secondsVisible: true });\n\n        \n        var candleSeries = chart.addCandlestickSeries({\n            upColor: 'green',\n            downColor: 'red',\n            borderDownColor: 'red',\n            borderUpColor: 'green',\n            wickDownColor: 'red',\n            wickUpColor: 'green',\n        });\n\n        candleSeries.setData(row.lightChartData);\n\n        var smaData = this.calculateSMA(row.lightChartData, 20);\n\t\tvar smaLine = chart.addLineSeries({\n\t\t\tcolor: 'rgba(4, 111, 232, 1)',\n\t\t\tlineWidth: 2,\n\t\t});\n\t\tsmaLine.setData(smaData);\n        \n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n        volumeSeries.setData(row.volumeSeriesData);\n        var legend = document.createElement('div');\n        //legend.className = 'sma-legend';\n        div.append(legend);\n        legend.style.display = 'block';\n\n        legend.innerHTML =  this.getRSIBBString(row); \n        document.getElementById(\"allchart\") && document.getElementById(\"allchart\").append(div);\n\n\n        chart.subscribeCrosshairMove((param) => {\n\n\t\t\tvar getit = param.seriesPrices[Symbol.iterator]();\n\n\t\t\tvar string = \"\";\n\t\t\tvar change = \"\";\n\n\t\t\tfor (var elem of getit) {\n\n\t\t\t\t//console.log(elem);\n\t\t\t\tif (typeof elem[1] == 'object') {\n\t\t\t\t\tstring += \" O: <b>\" + elem[1].open + \"</b>\";\n\t\t\t\t\tstring += \" H: <b>\" + elem[1].high + \"</b>\";\n\t\t\t\t\tstring += \" L: <b>\" + elem[1].low + \"</b>\";\n\t\t\t\t\tstring += \" C: <b>\" + elem[1].close + \"</b>\";\n\t\t\t\t\tchange = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n\t\t\t\t\tstring += \" CH: <b>\" + change.toFixed(2) + '%</b><br />';\n\t\t\t\t} else {\n\t\t\t\t\tstring += \" \" + elem[1].toFixed(2) + \" \";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.time)\n\t\t\t\tstring += \" Time:<b> \" + new Date(param.time).toLocaleString()+ \"</b>\" ;\n\n\t\t\tvar str = \"<span style=color:green>\" + string + \"</span> \";\n\t\t\tif (change < 0)\n\t\t\t\tstr = \"<span style=color:red>\" + string + \"</span> \";\n\n             legendTitle.innerHTML = str;\n\t\t});\n    \n        this.sortTheChart(); \n    }\n\n    \n\n    sortTheChart =()=> {\n       \n        let allchart = document.getElementById(\"allchart\");\n        let createNewArray = []; \n        function getItem(name){\n                document.querySelector('#allchart').childNodes.forEach(function(e){\n                    if(e.innerText && e.innerText.split(' ')[0] == name){ \n                        console.log(\"item\",name, e.innerText.split(' ')[0], e)\n                        allchart.appendChild(e); \n                        createNewArray.push(e);   \n                     //   return e; \n                    }\n                }) \n        }\n\n        for (let index = 0; index < this.state.findlast5minMovement.length; index++) {\n            const element = this.state.findlast5minMovement[index];\n            let item = getItem(element.name); \n        }\n\n    }\n\n\n    updateToLocalStorage = (row) => {\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n        console.log(\"isfound\", isfound);\n        if (!isfound.length) {\n            var updateData = {\n                token: row.token,\n                foundAt: foundAt,\n                ltp: row.ltp,\n                symbol: row.symbol,\n                nc: row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData);\n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\n            return true;\n\n        } else {\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n       \n        if(document.getElementById(\"allchart\")){\n            document.getElementById(\"allchart\").innerHTML = ''\n        } \n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"gainerList\") {\n            watchList = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList'));\n        }\n        if (this.state.selectedWatchlist == \"looserList\") {\n            watchList = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList'));\n        }\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        this.setState({ totalStockToWatch: watchList && watchList.length });\n\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n\n                this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n                var time = moment.duration(\"1000:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n                var startDate = moment(new Date()).subtract(timeDuration);\n\n                var data = {\n                    \"exchange\": watchList[index].exch_seg,\n                    \"symboltoken\": watchList[index].token,\n                    \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                    \"fromdate\": moment(startDate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata);\n\n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data;\n                        var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                        candleData.forEach((element, loopindex) => {\n\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                            vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                            closeingData.push(element[4]);\n                            highData.push(element[2]);\n                            lowData.push(element[3]);\n                            openData.push(element[3]);\n                            valumeData.push(element[5]);\n                            bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n\n                        });\n\n                        // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                        var sma = SMA.calculate({ period: 20, values: closeingData });\n                        //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                        var inputRSI = { values: closeingData, period: 14 };\n                        var lastRsiValue = RSI.calculate(inputRSI);\n\n                        // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                        // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                        var inputVWAP = {\n                            open: openData,\n                            high: highData,\n                            low: lowData,\n                            close: closeingData,\n                            volume: valumeData\n                        };\n\n                        var input = {\n                            period: 20,\n                            values: bbdata,\n                            stdDev: 2\n\n                        }\n\n                        var bb = BollingerBands.calculate(input);\n\n                        var vwapdata = VWAP.calculate(inputVWAP);\n                        //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n                      //  console.log(watchList[index].symbol, \"vwap daa\", VWAP.calculate(inputVWAP));\n\n                        var bbvlastvalue = bb[bb.length - 1];\n                        if (bbvlastvalue) {\n                            bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                            bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                            bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                        }\n\n                        const lightChartData = candleData.map(d => {\n                            return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                        });\n\n\n                        var dataltp = {\n                            \"exchange\": \"NSE\",\n                            \"tradingsymbol\": watchList[index].symbol,\n                            \"symboltoken\": watchList[index].token,\n                        }\n\n                        AdminService.getLTP(dataltp).then(res => {\n                            let data = resolveResponse(res, 'noPop');\n                            var LtpData = data && data.data;\n                            //console.log(LtpData);\n                            if (LtpData && LtpData.ltp) {\n                                let data = {\n                                    symbol: watchList[index].symbol,\n                                    token: watchList[index].token,\n                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                    RSI: lastRsiValue.slice(Math.max(lastRsiValue.length - 8, 1)),\n                                    valumeData: valumeData.slice(Math.max(valumeData.length - 8, 1)),\n                                    VWAP: vwapdata[vwapdata.length - 1], //vwap(vwapdata),\n                                    BB: bbvlastvalue,\n                                    candleChartData: candleChartData,\n                                    foundAt: candleData && new Date(candleData[candleData.length - 1][0]).toLocaleString(),\n                                    name: watchList[index].name,\n                                    lightChartData: lightChartData,\n                                    volumeSeriesData: volumeSeriesData\n                                }\n\n                                data.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\n                                data.ltp = LtpData.ltp;\n\n\n\n                                this.setState({ findlast5minMovement: [...this.state.findlast5minMovement, data] }, function(){\n                                  \n                                    this.state.findlast5minMovement && this.state.findlast5minMovement.sort(function (a, b) {\n                                        return b.perChange - a.perChange;\n                                    });\n                                    this.createMultpleChart(data);\n                                    \n                                });\n                                                                \n                              \n                            }\n                        });\n\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(watchList[index].symbol, \"  emply candle found\");\n                    }\n                })\n\n                await new Promise(r => setTimeout(r, 600));\n            }\n        } else {\n            Notify.showError(\"No Stock Found\")\n        }\n\n\n    }\n\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n        console.log(\"order executed\", order);\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n\n                 {window.location.hash === \"#/index-charts\" ? <PostLoginNavBar /> : \"\"}\n\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp; {this.state.selectedWatchlist} Stocks ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Chart Size</InputLabel>\n                            <Select value={this.state.chartSize} name=\"chartSize\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={250}>{'250px'}</MenuItem>\n                                <MenuItem value={300}>{'300px'}</MenuItem>\n                                <MenuItem value={350}>{'350px'}</MenuItem>\n                                <MenuItem value={450}>{'450px'}</MenuItem>\n                                <MenuItem value={550}>{'550px'}</MenuItem>\n                                <MenuItem value={650}>{'650px'}</MenuItem>\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"gainerList\"}>{\"Gainer List (\" +  this.state.gainerList.length +\")\"}</MenuItem>\n                                <MenuItem value={\"looserList\"}>{\"Looser List (\" +  this.state.looserList.length +\")\"}</MenuItem>\n\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    \n                    {/* \n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n       \n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n\n\n\n                            </Select>\n                        </FormControl>\n                    </Grid> */}\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n\n                <Grid container spacing={2} style={{padding:'10px'}} id=\"allchart\" >\n\n\n                    {/* {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.name} {row.ltp} {row.perChange ? \"(\" + row.perChange + \"%\" + \")\" : \"\"} <span> &nbsp;&nbsp;  {row.foundAt}</span></Typography>\n\n                            \n                                {row.candleChartData.length > 0 ? <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 350\n                                          },\n                                          title: {\n                                            text: 'CandleStick Chart',\n                                            align: 'left'\n                                          },\n                                          xaxis: {\n                                            type: 'datetime',\n                                          },\n                                          yaxis: {\n                                            tooltip: {\n                                              enabled: true\n                                            }\n                                          }\n                                       \n                                    }}\n                                   \n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 100, 1))\n                                    },\n                                    ]}\n\n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                /> : \"\"}\n\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={12} >\n                                        BB {row.BB ? <>\n                                            &nbsp; <span style={{ color: row.ltp >= row.BB && row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB && row.BB.upper}</span>\n                                            &nbsp; <span style={{ color: row.ltp >= row.BB.middle ? \"green\" : \"red\", fontWeight: \"bold\" }}>Middle: {row.BB && row.BB.middle}</span>\n                                            &nbsp; <span style={{ color: row.ltp <= row.BB && row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB && row.BB.lower}</span>\n\n                                        </> : \"\"}\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={12}>\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} </span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} </span>\n                                        ))}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        Volume: {row.valumeData.map((item, j) => (\n                                            <span> {(item / 100000).toFixed(2)}L </span>\n                                        ))}\n                                    </Grid>\n\n\n\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                        <TextField style={{ marginTop: '-15px' }} label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''} */}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport DeliveryData from \"./DeliveryData\";\nimport IndexCharts from \"./IndexCharts\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n  //console.log('props.indexName',props)\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"fullModelId\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog fullScreen onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} onClick={handleClose}>\n        <Button fullWidth={true} autoFocus onClick={handleClose} color=\"primary\">\n            {localStorage.getItem('clickedIndexName') } {localStorage.getItem('clickedIndexType')}\n         </Button>\n        \n         \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n            {localStorage.getItem('clickedIndexType') == 'Charts' ?  <IndexCharts /> : <DeliveryData /> }\n            \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LightChartDialog from './LightChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport FullModel from './FullModel';\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            sluglist: {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n                //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                // 'NIFTY NEXT 50': 'juniorNifty',\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\n            },\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0,\n            refreshFlagCandle: true,\n            switchToListViewFlag: true,\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || [],\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\n            timeFrame: \"FIFTEEN_MINUTE\"\n\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        window.document.title = \"Hit Map2\";\n\n\n        this.loadIndexesList();\n\n\n        var tokens = localStorage.getItem(\"userTokens\") && JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = localStorage.getItem(\"userProfile\") && JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    updateTokenSymbol = (gainerList) => {\n\n        var gainerList = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [];\n\n        for (let index = 0; index < gainerList.length; index++) {\n            const element = gainerList[index];\n\n\n\n            if(!element.token && !element.symbol){\n                AdminService.autoCompleteSearch(element.name).then(searchRes => {\n                    let searchResdata = searchRes.data;\n                    if (searchResdata.length) {\n                        var uppercaseNameEQ = element.name.toUpperCase() + \"-EQ\";\n                        var uppercaseNameBE = element.name.toUpperCase() + \"-BE\";\n                        var found = searchResdata.filter(row => row.name === element.name && (row.symbol === uppercaseNameEQ || row.symbol === uppercaseNameBE));\n                        if (found.length) {\n                            element.symbol = found[0].symbol;\n                            element.token = found[0].token;\n                            element.exch_seg = found[0].exch_seg; \n                            localStorage.setItem('gainerList', JSON.stringify(gainerList));\n                        }\n                    }\n                });\n            }\n\n            \n        }\n\n        var looserList = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [];\n\n        for (let index = 0; index < looserList.length; index++) {\n            const element = looserList[index];\n            if(!element.token && !element.symbol){\n                AdminService.autoCompleteSearch(element.name).then(searchRes => {\n                    let searchResdata = searchRes.data;\n                    if (searchResdata.length) {\n                        var uppercaseNameEQ = element.name.toUpperCase() + \"-EQ\";\n                        var uppercaseNameBE = element.name.toUpperCase() + \"-BE\";\n                        var found = searchResdata.filter(row => row.name === element.name && (row.symbol === uppercaseNameEQ || row.symbol === uppercaseNameBE));\n                        if (found.length) {\n                            element.symbol = found[0].symbol;\n                            element.token = found[0].token;\n                            element.exch_seg = found[0].exch_seg; \n                            localStorage.setItem('looserList', JSON.stringify(looserList));\n                        }\n                    }\n                });\n            }\n          \n        }\n\n    }\n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n                    var softedData = res.data && res.data.data;\n                    softedData.sort(function (a, b) {\n                        return b.percChange - a.percChange;\n                    });\n\n\n                    this.setState({ indexTimeStamp: softedData[0].timeVal });\n\n                    var gainerList = [], looserList = [];\n\n                    for (let index = 0; index < softedData.length; index++) {\n                        const element = softedData[index];\n                        var slugName = this.state.sluglist[element.indexName];\n                        console.log(\"element\", slugName, element.percChange);\n\n                        if (slugName) {\n                            console.log(\"secName\", element.indexName, slugName);\n                            AdminService.checkSectorApiOther(slugName).then(res => {\n                                console.log(element.indexName, res.data.data);\n                                softedData[index].stockList = res.data && res.data.data;\n                                softedData[index].time = res.data && res.data.time;\n                                this.setState({ sectorList: softedData });\n\n                                if (element.percChange >= 0.75 || (softedData[index].indexName == \"NIFTY 50\" && element.percChange >= 0.25)) {\n\n                                    for (let indexStock = 0; indexStock < res.data.data.length - 5; indexStock++) {\n                                        const stockElement = res.data.data[indexStock];\n                                        var stockInfo = {\n                                            name: stockElement.symbol,\n                                            ltp: stockElement.ltP,\n                                            nc: stockElement.iislPercChange,\n                                            sector: softedData[index].indexName,\n                                            foundAt: new Date().toLocaleString()\n                                        }\n\n                                        let glist = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [];\n                                        var isfound = glist.filter(row => row.name == stockElement.symbol);\n\n                                        console.log(stockElement.symbol, isfound);\n                                        if (!isfound.length) {\n                                            gainerList.push(stockInfo);\n                                            localStorage.setItem('gainerList', JSON.stringify(gainerList));\n                                        }\n\n                                    }\n                                }\n                                if (element.percChange <= -0.75 || (softedData[index].indexName == \"NIFTY 50\" && element.percChange <= -0.25)) {\n\n                                    var sectorStock = res.data.data;\n                                    sectorStock.reverse();\n\n                                    for (let indexStock = 0; indexStock < res.data.data.length - 5; indexStock++) {\n                                        const stockElement = res.data.data[indexStock];\n                                        var stockInfo = {\n                                            name: stockElement.symbol,\n                                            ltp: stockElement.ltP,\n                                            nc: stockElement.iislPercChange,\n                                            sector: softedData[index].indexName,\n                                            foundAt: new Date().toLocaleString()\n                                        }\n\n                                        let llist = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [];\n\n                                        var isfound = llist.filter(row => row.name == stockElement.symbol);\n\n                                        console.log(\"looseer\", stockElement.symbol, isfound);\n                                        if (!isfound.length) {\n                                            looserList.push(stockInfo);\n                                            localStorage.setItem('looserList', JSON.stringify(looserList));\n                                        }\n                                    }\n                                }\n\n                            }).catch(error => {\n                                // Notify.showError(element.indexName + \"fail to get stockdata\"); \n                                console.log(\"list fetch error\", error)\n                            })\n                        }\n\n\n                    }\n\n\n                }\n            })\n            .catch((reject) => {\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                //      this.speckIt(\"All Indices API Failed\");\n\n            }).finally((ok) => {\n\n\n                setTimeout(() => {\n                    this.updateTokenSymbol(\"ok\");\n                }, 5000);\n\n\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({ stockUpdate: index });\n\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n        // this.refreshSectorCandleManually(index); \n        //  this.checkLast5MinMovement(index); \n\n\n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\n\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"19:00:00\";\n                else\n                    return \"01:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"23:00:00\";\n                else\n                    return \"03:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"24:21:00\";\n                else\n                    return \"07:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"28:01:00\";\n                else\n                    return \"10:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"100:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if (element) {\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n\n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                    //   this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n\n\n    showCandleChartPopUp = (symbol) => {\n\n\n        // //  candleData  = candleData && candleData.reverse();\n\n        // // localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        // localStorage.setItem('cadleChartSymbol', symbol);\n        // // localStorage.setItem('candlePriceShow', price);\n        // // localStorage.setItem('candleChangeShow', change);\n        // // localStorage.setItem('vwapDataChart', vwapDataChart);\n\n        // document.getElementById('showCandleChart').click();\n\n\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var isThere = watchList.filter(row => row.name === symbol);\n        if (isThere && isThere.length) {\n\n            let stock = isThere[0];\n\n\n\n            this.dailyBasisInfoCheck(stock.token);\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n            // var beginningTime = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": stock.token,\n                \"interval\": this.state.timeFrame,  //'FIVE_MINUTE',\n                \"fromdate\": moment(beginningTime).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let historyData = resolveResponse(res, 'noPop');\n                console.log(\"candledata\", historyData);\n                if (historyData && historyData.data) {\n\n                    var data = historyData.data;\n\n                    const cdata = data.map(d => {\n                        return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                    });\n\n\n\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                    data.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n                        volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                    });\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var rsiValues = RSI.calculate(inputRSI);\n\n                    console.log(stock.symbol, \"Rsi\", inputRSI, rsiValues);\n                    console.log(stock.symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var data = {\n                        \"exchange\": stock.exch_seg,\n                        \"tradingsymbol\": stock.symbol,\n                        \"symboltoken\": stock.token,\n                    }\n                    AdminService.getLTP(data).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n\n                        LtpData.change = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n\n                        this.showCandleChart(candleChartData, stock.symbol, LtpData.ltp, LtpData.change);\n\n\n                        // this.setState({InstrumentLTP: LtpData , selectedSymbol : stock.symbol,  chartStaticData: candleChartData, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n\n                        //     document.getElementById('showLightCandleChart').click();\n                        // });\n\n\n                    })\n\n                }\n            })\n        }\n\n\n\n\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber = (number) => {\n\n        if (number) {\n            return number.toFixed(2);\n        } else {\n            return number;\n        }\n    }\n    switchToListView = () => {\n        this.setState({ switchToListViewFlag: !this.state.switchToListViewFlag });\n    }\n\n    get5DaysMoveCount = (symbol) => {\n        var isThere = this.state.slowMotionStockList.filter(row => row.name === symbol);\n        if (isThere.length) {\n            return \"SM: \" + isThere[0].bigCandleCount;\n        } else {\n            return '';\n        }\n    }\n\n    getDeliveryInfo = (symbol) => {\n\n        AdminService.getDeliveryData(symbol).then(resd => {\n            if (resd && resd.data && resd.data.length)\n                return \"D2T%: \" + resd.data[0].deliveryToTradedQuantity;\n        });\n\n    }\n    showDeliveryData=(indexName)=>{\n     //  window.open('#/delivery?indexName='+indexName,'_blank');\n       \n      // this.setState({clickedIndexName : indexName})\n       localStorage.setItem('clickedIndexName', indexName); \n       localStorage.setItem('clickedIndexType', \"Depth\"); \n       document.getElementById('fullModelId').click();\n    }\n    showAllChart =(indexName)=> {\n        localStorage.setItem('clickedIndexName', indexName); \n        localStorage.setItem('clickedIndexType', \"Charts\"); \n        document.getElementById('fullModelId').click();\n        //window.open('#/index-charts?indexName='+indexName,'_blank');\n    }\n    render() {\n\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n        //         return b.nc - a.nc;\n        //     });\n        // });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n                <FullModel indexName={this.state.clickedIndexName} />\n                <LightChartDialog LightChartData={{ InstrumentLTP: this.state.InstrumentLTP, DailyBulishStatus: this.state.DailyBulishStatus, todayCurrentVolume: this.state.todayCurrentVolume, selectedSymbol: this.state.selectedSymbol, chartStaticData: this.state.chartStaticData, bblastValue: this.state.bblastValue, vwapvalue: this.state.vwapvalue, rsiValues: this.state.rsiValues, valumeData: this.state.valumeData }} />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={6} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\n                            &nbsp;\n                            <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button>\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n                            <Button onClick={() => this.switchToListView()}>switch to list view</Button>\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={{ minWidth: '100%' }} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChange} >\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    {!this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\n                        indexdata.stockList ? <Grid item xs={12} sm={3}>\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Button>\n                            &nbsp;\n\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                <ShowChartIcon />\n                            </Button> */}\n\n                                <Typography variant=\"body1\" >\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13, 8)}\n                                </Typography>\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\n                                                </Typography>\n\n\n                                                {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                    <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ?\n                                                    <Typography >\n                                                        {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                        &nbsp;\n                                                        {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                    </Typography>\n                                                    : \"\"}\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                options={{\n                                                    chart: {\n                                                        type: 'candlestick',\n                                                        //  height: 40\n\n                                                    },\n                                                    title: {\n                                                        text: '',\n                                                        align: 'left'\n                                                    },\n                                                    xaxis: {\n                                                        type: 'datetime',\n                                                    },\n                                                    yaxis: {\n                                                        tooltip: {\n                                                            enabled: true\n                                                        }\n                                                    }\n                                                }}\n                                                series={[{\n                                                    data: sectorItem.candleChartData\n\n                                                }]}\n                                                type=\"candlestick\"\n                                    \n                                            /> : \"\"} */}\n\n\n                                                {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\n                                                </Grid>\n                                            </Grid>\n                                            */}\n\n\n                                            </Paper>\n\n\n                                        </Grid>\n                                    ))\n                                    }\n                                </Grid>\n\n                            </Paper>\n                        </Grid> : \"\"\n\n                    )) : \"\"}\n\n\n                    <Table id=\"tabledata\" aria-label=\"a dense table\" stickyHeader size=\"small\" >\n                        <TableBody hover style={{ whiteSpace: \"nowrap\" }} >\n\n\n                            {this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                                indexdata.stockList ? <TableRow hover={true} key={index}>\n                                    <TableCell style={{ background: '#0068ff45' }} >\n                                           <Button style={{ background: this.getPercentageColor(indexdata.percChange) }} variant=\"contained\"   onClick={() => this.showAllChart(indexdata.indexName )}>\n                                            {indexdata.indexName + \" \" + indexdata.last}({indexdata.percChange}%)<EqualizerIcon />\n                                          </Button>\n                                          &nbsp;\n                                          <Button variant=\"contained\"   onClick={() => this.showDeliveryData(indexdata.indexName )}>\n                                            Depth\n                                          </Button>\n                                    </TableCell>\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <TableCell style={{ textAlign: \"left\", }}  >\n                                              <Button  onClick={() => this.showCandleChartPopUp(sectorItem.symbol)}>\n                                                    <span style={{ background: this.getPercentageColor(sectorItem.iislPercChange) }}>  <b>{i + 1}.</b> {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%) </span>\n                                                    <span title=\"last 5 days 5min big movement  maximum count\">&nbsp;{this.get5DaysMoveCount(sectorItem.symbol)}  </span>\n\n                                                    {/* <span title=\"Delivery Info\">&nbsp;{this.getDeliveryInfo(sectorItem.symbol)}  </span>  */}\n                                                    \n                                                </Button>\n\n\n                                        </TableCell>\n                                    ))\n                                    }\n\n                                </TableRow>\n                                    : \"\"\n\n                            )) : ''}\n\n\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Fast Movement\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 5 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 5 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n      \n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n\n        if(!isfound.length){\n\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  ); \n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            var upsidecount = 0, downsidecount = 0, startingRsiupside = lastRsiValue[2], startingRsiDownside = lastRsiValue[2];\n                            lastRsiValue.forEach((element, i) => {\n                                if (i > 2 && element >= 55 && element <= 65) {\n                                    if (startingRsiupside <= element) {\n                                        startingRsiupside = element;\n                                        upsidecount += 1;\n                                    }\n                                }\n\n                                if (i > 2 && element >= 35 && element <= 45) {\n                                    if (element <= startingRsiDownside) {\n                                        startingRsiDownside = element;\n                                        downsidecount += 1;\n                                    }\n                                }\n                            });\n\n                            var volumeUpside = valumeData[2], volUpCount =0;                          \n                            valumeData.forEach((element, i) => {\n                                if (i > 2 && volumeUpside < element) {\n                                    volumeUpside = element;\n                                    volUpCount += 1;\n                                }\n                            });\n\n                            console.log(watchList[index].symbol, \"valumeData\", valumeData, );\n\n                            console.log(watchList[index].symbol, \"last continue rsi\", upsidecount);\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" RSI rising :\" + upsidecount });\n                        \n\n                            if (upsidecount >= 2 || downsidecount >= 2) {\n                                if (this.state.BBBlastType == 'BBBlastOnly') {\n                                    if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                        let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"BUY\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM: Buy \" + watchList[index].symbol;\n                                    }\n                                    if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                       let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"SELL\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                    }\n                                } else {\n\n                                    let timeDuration = this.getTimeFrameValue('ONE_DAY');\n                                    var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n                                    var startDateforDaily = moment(new Date()).subtract(time);\n                                    var dataDay = {\n                                        \"exchange\": watchList[index].exch_seg,\n                                        \"symboltoken\": watchList[index].token,\n                                        \"interval\": 'ONE_DAY',\n                                        \"fromdate\": moment(startDateforDaily).format(format1),\n                                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                                    }\n                                    AdminService.getHistoryData(dataDay).then(resd => {\n                                        let histdatad = resolveResponse(resd, 'noPop');\n                                        var DSMA = '';\n                                        if (histdatad && histdatad.data && histdatad.data.length) {\n                                            var candleDatad = histdatad.data;\n                                            var closeingDatadaily = [];\n                                            candleDatad.forEach((element, loopindex) => {\n                                                closeingDatadaily.push(element[4]);\n                                            });\n\n                                            DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n\n                                            var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                                            console.log(watchList[index].symbol, \"DSMA\", DSMALastValue);\n\n                                            if (LtpData.ltp > DSMALastValue && bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                \n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"BUY\",\n                                                    name: watchList[index].name,\n                                                    \n                                                }; \n                                                \n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB  buy');\n                                                window.document.title = \"FM: Buy \" + watchList[index].symbol;\n\n                                            }\n                                            if (LtpData.ltp < DSMALastValue && bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"SELL\",\n                                                    name: watchList[index].name,\n                                                }\n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB sell');\n                                                window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                            }\n                                        }\n\n\n                                    });\n\n                                }\n                            }\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n                                    \n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands, MACD } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType: \"BBStrongBreakout\",\n            qtyToTake: '',\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"FM2\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 2 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 2 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage = (row) => {\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n        console.log(\"isfound\", isfound);\n        if (!isfound.length) {\n            var updateData = {\n                token: row.token,\n                foundAt: foundAt,\n                ltp: row.ltp,\n                symbol: row.symbol,\n                nc: row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData);\n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\n            return true;\n\n        } else {\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], lightcandleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear(), month: new Date(element[0]).getMonth(), day: new Date(element[0]).getDate() }\n\n                        //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y: (element[2] + element[3] + element[4]) / 3\n                        });\n\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n\n                    var macdInput = {\n                        values: closeingData,\n                        fastPeriod: 12,\n                        slowPeriod: 26,\n                        signalPeriod: 9,\n                        SimpleMAOscillator: false,\n                        SimpleMASignal: false\n                    }\n\n                    let macd = MACD.calculate(macdInput);\n                    let macdLastValue = macd[macd.length - 1];\n\n\n                    // MACD: -3.5573380320065553\n                    // histogram: -0.7420963576240767\n                    // signal: -2.8152416743824786\n\n                    if (macdLastValue && macdLastValue.MACD >= macdLastValue.signal) {\n                        console.log(\"macd\", watchList[index].symbol, macdLastValue);\n                    }\n\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \n                            // valumeData.forEach((element, i) => {\n                            //     if (i > 2 && volumeUpside < element) {\n                            //         volumeUpside = element;\n                            //         volUpCount += 1;\n                            //     }\n                            // });\n\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\" });\n\n                            let isFound = false;\n\n                            if (this.state.BBBlastType == 'BBStrongBreakout') {\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length - 1][2] == candleData[candleData.length - 1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\n                                        orderType: \"BUY\",\n                                        name: watchList[index].name,\n                                    }\n\n                                    if (this.updateToLocalStorage(data)) {\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" BUY Eligible\" });\n                                    }\n\n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length - 1][3] == candleData[candleData.length - 1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\n                                        orderType: \"SELL\",\n                                        name: watchList[index].name,\n                                    }\n                                    if (this.updateToLocalStorage(data)) {\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" SELL Eligible\" });\n                                    }\n\n                                } else {\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Not Eligible\" });\n                                }\n                            }\n\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                {/* <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem> */}\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n\n\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n\n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ? <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    },\n                                        // {\n                                        //     name: 'line',\n                                        //     type: 'line',\n                                        //     data: [\n                                        //         row.lightcandleChartData\n                                        //     ]\n                                        //   }\n\n                                    ]}\n\n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n\n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                        <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands, MACD } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n    super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType: \"selectAll\",\n            qtyToTake: '',\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"FM2\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 2 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 2 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage = (row) => {\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n        console.log(\"isfound\", isfound);\n        if (!isfound.length) {\n            var updateData = {\n                token: row.token,\n                foundAt: foundAt,\n                ltp: row.ltp,\n                symbol: row.symbol,\n                nc: row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData);\n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\n            return true;\n\n        } else {\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], lightcandleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear(), month: new Date(element[0]).getMonth(), day: new Date(element[0]).getDate() }\n\n                        //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y: (element[2] + element[3] + element[4]) / 3\n                        });\n\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n\n                    var macdInput = {\n                        values: closeingData,\n                        fastPeriod: 12,\n                        slowPeriod: 26,\n                        signalPeriod: 9,\n                        SimpleMAOscillator: false,\n                        SimpleMASignal: false\n                    }\n\n                    let macd = MACD.calculate(macdInput);\n                    let macdLastValue = macd[macd.length - 1];\n\n\n                    // MACD: -3.5573380320065553\n                    // histogram: -0.7420963576240767\n                    // signal: -2.8152416743824786\n\n                    if (macdLastValue && macdLastValue.MACD >= macdLastValue.signal) {\n                        console.log(\"macd\", watchList[index].symbol, macdLastValue);\n                    }\n\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \n                            // valumeData.forEach((element, i) => {\n                            //     if (i > 2 && volumeUpside < element) {\n                            //         volumeUpside = element;\n                            //         volUpCount += 1;\n                            //     }\n                            // });\n\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\" });\n\n                            let isFound = false;\n\n                            if (this.state.BBBlastType == 'selectAll'  || this.state.BBBlastType == 'macdCrossOver') {\n\n                                if (macdLastValue && macdLastValue.MACD >= macdLastValue.signal) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\n                                        orderType: \"BUY\",\n                                        name: watchList[index].name,\n                                        macdData : macd.slice(Math.max(macd.length - 6, 1)), \n                                        patternName: \"MACD Cossed Up\"\n                                    }\n\n                                    if (this.updateToLocalStorage(data)) {\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' macd  buy');\n                                        window.document.title = \"macd: Buy \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" BUY Eligible\" });\n                                    }\n\n                                } else if (macdLastValue && macdLastValue.MACD <= macdLastValue.signal) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\n                                        orderType: \"SELL\",\n                                        name: watchList[index].name,\n                                        macdData : macd.slice(Math.max(macd.length - 6, 1)),\n                                        patternName: \"MACD Cossed Down\"\n\n                                    }\n                                    if (this.updateToLocalStorage(data)) {\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' macd sell');\n                                        window.document.title = \"macd: Sell \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" SELL Eligible\" });\n                                    }\n\n                                } else {\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Not Eligible\" });\n                                }\n                            }\n\n                            if (this.state.BBBlastType == 'selectAll'  || this.state.BBBlastType == 'BBStrongBreakout') {\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length - 1][2] == candleData[candleData.length - 1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\n                                        orderType: \"BUY\",\n                                        name: watchList[index].name,\n                                        patternName: \"BB Strong Buy\"\n\n                                    }\n\n                                    if (this.updateToLocalStorage(data)) {\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" BUY Eligible\" });\n                                    }\n\n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length - 1][3] == candleData[candleData.length - 1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\n                                        orderType: \"SELL\",\n                                        name: watchList[index].name,\n                                        patternName: \"BB Strong Sell\"\n\n                                    }\n                                    if (this.updateToLocalStorage(data)) {\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" SELL Eligible\" });\n                                    }\n\n                                } else {\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Not Eligible\" });\n                                }\n                            }\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                {/* <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem> */}\n                                <MenuItem value={'selectAll'}>{'Select All'}</MenuItem>\n\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n                                <MenuItem value={'macdCrossOver'}>{'Macd Cross Over'}</MenuItem>\n\n\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b> &nbsp;&nbsp; {row.patternName}</Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n\n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ? <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    },\n                                        // {\n                                        //     name: 'line',\n                                        //     type: 'line',\n                                        //     data: [\n                                        //         row.lightcandleChartData\n                                        //     ]\n                                        //   }\n\n                                    ]}\n\n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n\n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        MACD: {row.macdData.map((item, j) => (\n                                            <span> {item.MACD && item.MACD.toFixed(2)} &nbsp;</span>\n                                        ))}\n                                        <br />\n                                        MACD Signal: {row.macdData.map((item, j) => (\n                                            <span> {item.signal && item.signal.toFixed(2)} &nbsp;</span>\n                                        ))}\n                                        <br />\n                                        MACD histogram: {row.macdData.map((item, j) => (\n                                            <span> {item.histogram && item.histogram.toFixed(2)} &nbsp;</span>\n                                        ))}\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                        <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n  var lightChartData = props.chartData.chartStaticData; //localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\n \n  console.log('lightChartData', lightChartData); \n\n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {},\n    timeFrame: \"FIVE_MINUTE\"\n})\n\n\n  const handleTimeFrame = (e) => {\n    console.log(e.target.value);\n    props.chartData.updateTimeFrameChart(lightChartData.token,e.target.value );\n\n    setValues({timeFrame: e.target.value}); \n  };\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n      \n\n{/* \n        <FormControl style={{minWidth: '10%', }} >\n            <Select value={values.timeFrame} name=\"timeFrame\" onChange={handleTimeFrame}>\n                <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n            </Select>\n        </FormControl> */}\n\n        &nbsp;\n         \n        {lightChartData.name}   {lightChartData.ltp}  ({lightChartData.change}%)\n\n        \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        \n        <LightChartCom chartData={{candleSeries:lightChartData.lightChartData, volumeSeries: lightChartData.volumeSeriesData}}/>\n       \n\n\n        </DialogContent>\n        <DialogActions>\n\n\n       \n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport * as moment from 'moment';\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport Parser from 'html-react-parser';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nimport ChartDialog from './ChartDialog';\nimport LightChartModel from './LightChartModel';\n\n\n\nclass OrderBook extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData: [],\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            selectAllzone: 'Select All',\n            triggerprice: 0,\n            price: 0,\n            lotsize: 0,\n            firstTimeFlag: true,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            qtyToTake: '',\n            BBBlastType: \"BBBlastOnly\",\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            sortedType: \"isActivated\",\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || []\n\n        }\n    }\n\n\n\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            var tostartInteral = setInterval(() => {\n                var time = new Date();\n                if (time.getMinutes() % 5 === 0) {\n                    setTimeout(() => {\n                        this.checkSlowMotionCheckLive();\n                    }, 70000);\n                    setInterval(() => {\n                        this.checkSlowMotionCheckLive();\n                        this.activationToLtpChange();\n                    }, 60000 * 5 + 70000);\n                    clearInterval(tostartInteral);\n                }\n            }, 1000);\n\n        }\n\n    }\n\n\n\n    onChangeWatchlist = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkSlowMotion();\n\n        });\n    }\n\n\n    checkSlowMotion = async () => {\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n\n\n        this.setState({ scanUpdate: \"\" });\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n\n            var isfound = this.state.slowMotionStockList.filter(item => item.token == row.token);\n            if (!isfound.length) {\n                this.checkSlowMotionStock(row.token, row, index + 1);\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n        }\n\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                return \"720:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                    return \"2160:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                    return \"2160:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"2160:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"8760:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    updateTimeFrameChart=(token, timeFrame)=>{\n\n        console.log( token,timeFrame );\n\n        let time = this.getTimeFrameValue(timeFrame);\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": timeFrame,\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\n\n                for (let index = 0; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n                }\n\n                const lightChartData = candleDatad.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n   \n\n                var lightChartinfo = localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\n\n                lightChartinfo.lightChartData = lightChartData; \n                lightChartinfo.volumeSeriesData = volumeSeriesData; \n               // localStorage.setItem('lightChartData', JSON.stringify(lightChartinfo)); \n\n                this.setState({chartStaticData: lightChartinfo});\n            }\n\n     \n        });\n  }\n\n\n\n    checkSlowMotionStock = (token, stock, stockindex) => {\n        var beginningTime = moment('9:15am', 'h:mma');\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\n\n                var bigCandleCount = 0;\n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n\n                    if (element) {\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                    }\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                }\n\n\n                console.log(\"Totalcount\", stock.name, bigCandleCount, volumeSeriesData);\n\n                this.setState({ scanUpdate: \"Scan: \" + stockindex + \". \" + stock.name + \" maxCount: \" + bigCandleCount })\n\n                if (bigCandleCount <= 15) {\n\n                    var isfound = this.state.slowMotionStockList.filter(item => item.token == token);\n                    if (!isfound.length) {\n                        stock.bigCandleCount = bigCandleCount;\n                        stock.sectorName = this.state.selectedWatchlist;\n\n                        var candleChartData = []; \n                        candleDatad.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        const lightChartData = candleDatad.map(d => {\n                            return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                        });\n        \n\n\n                       // stock.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1));  \n                        stock.candleChartData = candleChartData;  \n                        stock.lightChartData =  lightChartData; \n                        stock.volumeSeriesData =  volumeSeriesData;\n\n                        this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\n                         //   localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                        });\n                    }\n        \n\n                   \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async () => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            if (!row.isActivated) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var time = moment.duration(\"50:00:00\");  //22:00:00\" for last day  2hours \n                var startDate = moment(new Date()).subtract(time);\n                var beginningTime = moment('9:15am', 'h:mma');\n\n                var dataDay = {\n                    \"exchange\": 'NSE',\n                    \"symboltoken\": row.token,\n                    \"interval\": 'FIVE_MINUTE',\n                    \"fromdate\": moment(startDate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n                AdminService.getHistoryData(dataDay).then(resd => {\n                    let histdatad = resolveResponse(resd, 'noPop');\n                    var DSMA = '';\n                    if (histdatad && histdatad.data && histdatad.data.length) {\n                        var candleDatad = histdatad.data;\n                        var closeingDatadaily = [], valumeSum = 0;\n\n                        var bigCandleCount = 0, midBullishCount = 0, bullishCount = 0, activationTime = \"\", activationPrice = 0;\n\n                        for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\n                            const element = candleDatad[index];\n\n                            if (element) {\n                                var per = (element[4] - element[1]) * 100 / element[1];\n                                if (per >= 1) {\n                                    bigCandleCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0.5) {\n                                    midBullishCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0) {\n                                    bullishCount += 1;\n                                }\n                            }\n                        }\n\n                        var candleChartData = [];\n                        candleDatad.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        //row.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1)); \n                        row.candleChartData = candleChartData; \n                        \n                        \n                        let update = Parser(\"Update: \" + (index + 1) + \".\" + row.name + \" large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b>\" ); \n                \n                        this.setState({ scanUpdate:  update})\n                        console.log(row.symbol, bigCandleCount, midBullishCount, bullishCount);\n\n                        let updatetopage = \"large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b> at \" + new Date(candleDatad[candleDatad.length-1][0]).toLocaleTimeString(); \n\n                        row.update = updatetopage; \n\n                        if (bigCandleCount >= 1 || (midBullishCount >= 1 && bullishCount >= 2)) {\n\n                            row.isActivated = true;\n                            row.activationTime = activationTime;\n                            row.activationPrice = activationPrice;\n\n                            window.document.title = \"SM: \" + row.symbol;\n                            console.log('hey, slow motion stock' + row.symbol + \" broken\");\n\n                            this.speckIt('hey, slow motion stock' + row.symbol + \" broken\");\n                            this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                                this.sortByColumn(\"isActivated\");\n                                //localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                            })\n                            \n                        }\n\n                       \n\n                    }\n\n                });\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n\n        }\n\n    }\n\n    activationToLtpChange = async() => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": row.symbol,\n                \"symboltoken\": row.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                   row.ltp = LtpData.ltp;\n                   row.change = ((LtpData.ltp -  LtpData.close)*100/LtpData.close).toFixed(2);\n\n                   if(row.activationPrice){\n                    row.AtoltpChng = ((LtpData.ltp-row.activationPrice)*100/row.activationPrice).toFixed(2); \n                   }\n              \n                   this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                    })\n                }\n\n            })\n\n            await new Promise(r => setTimeout(r, 125));\n        }\n    }\n\n\n    showLightChart = (row) => {\n\n\n        console.log(\"row\",row)\n        \n        if(row.lightChartData.length>0){\n            localStorage.setItem('lightChartData', JSON.stringify(row));\n            this.setState({chartStaticData: row}, function(){\n                document.getElementById('showLightChart').click();\n            });\n        }\n       \n    }\n\n    \n\n\n    deleteAllScan = () => {\n\n        if(window.confirm(\"Are you sure to delete all scan stocks?\")){\n            this.setState({ slowMotionStockList: []})\n            localStorage.setItem(\"slowMotionStockList\",[]);\n        }\n     \n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat = (str) => {\n        if (!isNaN(str)) {\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\n        }\n\n\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn = (type) => {\n\n        this.state.slowMotionStockList.sort(function (a, b) {\n            if (type == \"isActivated\" && a.isActivated) {\n                return (a.isActivated === b.isActivated) ? 0 : a ? -1 : 1;\n            } else {\n                return b[type] - a[type];\n            }\n        });\n\n        this.setState({ slowMotionStockList: this.state.slowMotionStockList, sortedType: type });\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n\n\n                {window.location.hash !== \"#/position\" ? <PostLoginNavBar /> : \"\"}\n\n\n                <ChartDialog />\n\n                {this.state.chartStaticData ? \n                <LightChartModel chartData={{updateTimeFrameChart : this.updateTimeFrameChart, chartStaticData : this.state.chartStaticData}} /> \n                : \"\"}\n                <Grid direction=\"row\" alignItems=\"center\" container>\n                    <Grid item xs={12} sm={12} >\n\n                        <Paper style={{ padding: \"10px\" }} >\n\n                            <Grid justify=\"space-between\"\n                                container spacing={1}>\n\n                                <Grid item xs={12} sm={4} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                      Slow Motion ({this.state.slowMotionStockList.length})  <DeleteIcon  onClick={() => this.deleteAllScan()}/>  found at {new Date().toLocaleString()}\n                                    </Typography>\n                                    {this.state.sortedType ? <> <b> Sorted By: </b> {this.state.sortedType}  </> : \"\"}\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n\n                                <Grid item xs={12} sm={4} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotion()}>Scan</Button>\n                            \n                                    {this.state.scanUpdate ? <>{this.state.scanUpdate}  </> : \"\"}\n                                    </Grid>\n\n                                <Grid item xs={12} sm={2} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotionCheckLive()}>Refresh</Button>\n                                </Grid>\n\n                                \n\n                            </Grid>\n\n\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\">\n                                        <TableCell align=\"left\">Sr.</TableCell>\n\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pchange\")}>Symbol</Button> </TableCell>\n                                        <TableCell align=\"center\">Sector</TableCell>\n\n                                        <TableCell align=\"center\">Max Count</TableCell>\n\n\n\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"isActivated\")}>Is Activated</Button></TableCell>\n                                        <TableCell align=\"center\">Activate Time</TableCell>\n                                        <TableCell align=\"center\">Activation Price</TableCell>\n                                        <TableCell align=\"center\">Last Update</TableCell>\n                                        <TableCell align=\"center\"><Button onClick={() => this.activationToLtpChange()}>A.toLtpChng</Button></TableCell>\n\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n\n\n\n                                    {this.state.slowMotionStockList ? this.state.slowMotionStockList.map((row, i) => (\n                                        <TableRow hover key={i} style={{ background: row.isActivated ? \"lightgray\" : \"\" }}>\n                                            <TableCell align=\"left\">{i + 1}</TableCell>\n\n                                            <TableCell align=\"left\"> <Button size=\"small\" variant=\"contained\" style={{ color: !row.change ? '' : row.change > 0 ? 'green' : 'red' }} onClick={() => this.showLightChart(row)}> {row.name} {row.ltp}  {row.change ? \"(\" + row.change+ \"%)\" : \"\" }  <EqualizerIcon /> </Button></TableCell>\n\n\n                                            \n                                            <TableCell align=\"center\">{row.sectorName}</TableCell>\n                                            <TableCell align=\"center\">{row.bigCandleCount}</TableCell>\n\n                                            <TableCell align=\"center\">{row.isActivated ? \"Yes\" : \"No\"}</TableCell>\n                                            <TableCell align=\"center\">{row.activationTime}</TableCell>\n                                            <TableCell align=\"center\">{row.activationPrice}</TableCell>\n                                            <TableCell align=\"center\">{row.update ? Parser(row.update): \"\"}</TableCell>\n                                            <TableCell align=\"center\">{row.ltp} {row.AtoltpChng ? \"(\" + row.AtoltpChng+ \"%)\" : \"\" }</TableCell>\n\n                                        </TableRow> \n                                    )) : <Spinner />}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { w3cwebsocket } from 'websocket';\n//import ChartDialog from './ChartDialog';\nimport pako from 'pako';\nimport AdminService from \"../service/AdminService\";\nimport Notify from \"../../utils/Notify\";\nimport { createChart } from 'lightweight-charts';\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n// import vwap from 'vwap';\n// import { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n// import SimpleExpansionPanel from \"./SimpleExpansionPanel\";\n// import SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\n// import LiveBidsExpantion from \"./LiveBidsExpantion\";\n// import WatchListTab from \"./WatchListTab\"; \n// import OrderWatchlist from './OrderWatchlist';\n\n\nclass LiveBid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\n            symbolList :  [],\n            actionList : localStorage.getItem('actionList') && JSON.parse(localStorage.getItem('actionList')) || [],\n            timeFrame: \"FIFTEEN_MINUTE\",\n            softedIndexList:[],\n            cursor: '',\n            isSpeek: localStorage.getItem('isSpeek') === 'true' ? true : false, \n            sortedType: \"pChange\", \n            sluglist: {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n                //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                 'NIFTY NEXT 50': 'juniorNifty',\n                 'NIFTY MIDCAP 50': 'niftyMidcap50',\n                 'NIFTY HEALTHCARE': \"notfound\",\n                 'NIFTY OIL AND GAS':\"notfound\",\n                 'NIFTY 100':\"notfound\", \n                 'NIFTY CONSR DURBL':'notfond'\n            },\n        };\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    makeConnection = (wsClint) => {\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        wsClint.send(firstTime_req);\n        this.updateSocketWatch(wsClint);\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n      //  console.log(newarray.join(''))\n        return newarray.join('');\n    }\n\n   \n\n    updateSocketWatch = (wsClint) => {\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n    \n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n    takeAction =(symbol,   action )=>{\n        let isfound =  this.state.actionList.length && this.state.actionList.filter(item => item.symbol === symbol); \n        if(!isfound.length){\n            let data = {symbol:symbol, action:action, updateTime: new Date().toLocaleTimeString() }; \n            this.setState({actionList: [...this.state.actionList , data]}, function(){\n                localStorage.setItem('actionList', JSON.stringify(this.state.actionList) ); \n                this.speckIt(symbol +\" \" + action); \n\n                console.log(data.symbol +\" \" + data.action + \" \"+data.updateTime); \n                this.setState({lastUpdateAction: data.symbol +\" \" + data.action + \" \"+data.updateTime }); \n            }); \n        }\n    }\n    updateSocketDetails = (wsClint) => {\n        wsClint.onopen = (res) => {\n            this.makeConnection(wsClint);\n            this.updateSocketWatch(wsClint);\n        }\n        wsClint.onmessage = (message) => {\n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData = JSON.parse(data);\n        \n            var symbolListArray = this.state.symbolList;\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                var foundLive = liveData.filter(row => row.tk == element.token);\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n               //     console.log(foundLive[0]); \n\n                    symbolListArray[index].ltp = foundLive[0].ltp;\n                    symbolListArray[index].pChange = foundLive[0].nc;\n                    symbolListArray[index].totalBuyQuantity = foundLive[0].tbq;\n                    symbolListArray[index].totalSellQuantity = foundLive[0].tsq;\n                    symbolListArray[index].totalTradedVolume = foundLive[0].v;\n                    symbolListArray[index].averagePrice = foundLive[0].ap;\n\n                    symbolListArray[index].bestbuyquantity = foundLive[0].bq;\n                    symbolListArray[index].bestbuyprice = foundLive[0].bp;\n                    symbolListArray[index].bestsellquantity = foundLive[0].bs;\n                    symbolListArray[index].bestsellprice = foundLive[0].sp;\n                   \n                    // symbolListArray[index].upperCircuitLimit = foundLive[0].ucl;\n                    // symbolListArray[index].lowerCircuitLimit = foundLive[0].lcl;\n\n                    symbolListArray[index].buytosellTime = (foundLive[0].tbq / foundLive[0].tsq).toFixed(2);\n                    symbolListArray[index].selltobuyTime =  (foundLive[0].tsq / foundLive[0].tbq).toFixed(2); \n                    \n                    if (foundLive[0].tbq / foundLive[0].tsq > 2) {\n                        symbolListArray[index].highlightbuy = true;\n                        this.takeAction(element.symbol, ' buying') \n                    }else{\n                        symbolListArray[index].highlightbuy = false;\n                    }\n\n                    if (foundLive[0].tsq / foundLive[0].tbq > 2) {\n                        symbolListArray[index].highlightsell = true;\n                        this.takeAction(element.symbol, ' selling')\n\n                    }else{\n                        symbolListArray[index].highlightsell = false;\n                    }\n\n                    //console.log(\"ws onmessage: \", foundLive);\n                }\n            });\n\n            console.log(\"sortby\",this.state.sortedType)\n            let shortBy = this.state.sortedType; \n            symbolListArray && symbolListArray.sort(function (a, b) {\n                return b[shortBy] - a[shortBy] ;\n            });\n            this.setState({ symbolList: symbolListArray });\n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e);\n        }\n\n        setInterval(() => {\n            //  this.makeConnection();\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n             console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n        }, 59000);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"WS Bid Live\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode }, function(){\n            this.wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n            this.updateSocketDetails(this.wsClint);  \n        });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 550, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\n\n        this.getUpdateIndexData()\n\n        setInterval(() => {\n            if(this.state.token){\n                this.showStaticChart();\n            }\n        }, 1000);\n       \n    }\n\n    getUpdateIndexData=()=>{\n        this.setState({softedIndexList : []})\n        AdminService.allIndicesDirectJSON()\n        .then((res) => {\n\n            if (res.data) {\n\n                var softedData = res.data && res.data.data;\n                softedData.sort(function (a, b) {\n                    return b.percChange - a.percChange;\n                });\n\n                for (let index = 0; index < softedData.length; index++) {\n                    const element = softedData[index];\n                    var slugName = this.state.sluglist[element.indexName];\n                    if (slugName) {\n                        this.setState({ softedIndexList: [...this.state.softedIndexList ,element] });\n                    }\n                }\n              \n                this.makeConnection(this.wsClint)\n              //  this.updateSocketWatch(this.wsClint);\n            }\n        })\n        .catch((reject) => {\n         // Notify.showError(\"All Indices API Failed\");\n        }).finally((ok) => {\n        })\n    }\n\n    speckIt = (text) => {\n        if(this.state.isSpeek){\n            var msg = new SpeechSynthesisUtterance();\n            msg.text = text.toString();\n            window.speechSynthesis.speak(msg);\n        }\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            var watchList = this.state.staticData[this.state.selectedWatchlist];\n            this.setState({ symbolList: watchList},()=> this.updateSocketWatch(this.wsClint));\n        });\n    }\n    sortByColumn = (type) => {\n        this.state.symbolList.sort(function (a, b) {\n            return b[type] - a[type];\n        });\n        this.setState({ symbolList: this.state.symbolList, sortedType: type });\n    }\n\n    // checkLiveBids = async () => {\n    //     var watchList = this.state.staticData[this.state.selectedWatchlist];\n    //     this.setState({ symbolList: watchList});\n    // }\n    // getLTP = (symbol, token) => {\n    //     var data = {\n    //         \"exchange\": \"NSE\",\n    //         \"tradingsymbol\": symbol,\n    //         \"symboltoken\": token,\n    //     }\n    //     AdminService.getLTP(data).then(res => {\n    //         let data = resolveResponse(res, 'noPop');\n    //         var LtpData = data && data.data;\n\n    //         if (LtpData && LtpData.ltp)\n    //             this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close) });\n    //     })\n    // } \n    \n    convertToDecimal=(num)=>{\n        if (!isNaN(num)) {\n            \n            return num.toFixed(2);\n        }else{\n            return num; \n        }\n    }\n\n\n    convertToFloat = (str) => {\n        if (!isNaN(str)) {\n            return \"(\" + ((str / 100000).toFixed(2)) + \"L)\";\n        }\n    }\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            //    console.log(\"time\", this.state.timeFrame);\n            this.showStaticChart();\n        });\n    }\n    handleKeyDown = (e, token) => {\n\n        console.log(\"key\", e, token);\n        //38 for down and 40 for up key\n        if (e.keyCode === 38 && this.state.cursor > 0) {\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\n        }  \n\n        setTimeout(() => {\n            this.showStaticChart();\n        }, 100);\n\n    }\n    handleChange = (event) => {\n\n        localStorage.setItem('isSpeek', event.target.checked);\n        this.setState({isSpeek :  event.target.checked},()=>{\n            console.log(\"isSpeek\", this.state.isSpeek, event.target.checked);\n        })\n      \n      };\n    calculateSMA = (data, count) => {\n\n        //  console.log(\"smarowdata\", data, count);\n\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n    showStaticChart = (token, symbol) => {\n\n        //console.log('token, symbol', token, symbol)\n\n        if(token)\n        this.setState({ chartStaticData: '' , lightChartSymbol :symbol, token : token }, function () {\n            console.log('reset done', token);\n        });\n        \n        const format1 = \"YYYY-MM-DD HH:mm\";\n        let beginningTime = moment('9:15am', 'h:mma');    \n\n        if(this.state.timeFrame == 'ONE_MINUTE'){\n              var time = moment.duration(\"00:60:00\");\n              beginningTime = moment(new Date()).subtract(time);\n        }\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token || this.state.token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(beginningTime).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n   \n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n             //   console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n              //  console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                // console.log(token, \"Rsi\", inputRSI, rsiValues);\n                // console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n\n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n\n                    this.state.smaLineSeries.setData(smaData);\n\n\n                    this.state.chart.subscribeCrosshairMove((param) => {\n\n                        var getit = param.seriesPrices[Symbol.iterator]();\n\n                        var string = \"\";\n                        var change = \"\";\n\n                        for (var elem of getit) {\n\n                            if (typeof elem[1] == 'object') {\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n                            } else {\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\n                            }\n                        }\n\n                        if (param.time)\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n                        else\n                            string += \" <b>Time: </b>\";\n\n\n                        const domElement = document.getElementById('showChartTitle');\n\n\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\n                        if (change < 0)\n                            str = \"<span style=color:red>\" + string + \"</span> \";\n\n                        domElement.innerHTML = str;\n                    });\n\n\n                });\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                        totalSum += per;\n\n                    });\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount });\n                }\n            }\n        })\n\n\n    }\n\n    render() {\n\n        // if(this.state.softedIndexList.length == 0)  {\n        //     this.setState({softedIndexList  : this.state.totalWatchlist})\n        // }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar LoadSymbolDetails ={this.LoadSymbolDetails} />\n                {/* <ChartDialog /> */}\n                \n                <Grid direction=\"row\"  container>\n                     <Grid item xs={6} sm={6} >\n\n                        <Paper style={{ padding: \"10px\" }} >\n\n                            <Grid justify=\"space-between\"\n                                container spacing={1}>\n\n                                <Grid item xs={12} sm={4} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                      WS Bid Live  {this.state.selectedWatchlist} ({this.state.symbolList.length})  \n                                      \n                                      \n                                    </Typography>\n\n                                    <span>Sorted By:  {this.state.sortedType} </span> <br />\n                                    <span>Update: {this.state.lastUpdateAction} </span> \n\n                                   \n                                    \n                                    {/* <input onKeyDown={this.handleKeyDown} /> */}\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            {/* <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem> */}\n\n                                            {this.state.softedIndexList && this.state.softedIndexList.map(element => (\n                                                <MenuItem style={{color: element.percChange>0 ? \"green\": \"red\"}} value={element.indexName}>{element.indexName} ({element.percChange}%)</MenuItem>\n                                            ))\n                                            }\n                                            <MenuItem value={\"Securities in F&O\"}>{\"Securities in F&O\"}</MenuItem>\n                                     \n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={3} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.getUpdateIndexData()}>Refresh</Button>\n                                    \n                                       <FormGroup>\n                                        <FormControlLabel\n                                        control={<Switch checked={this.state.isSpeek} onChange={this.handleChange} aria-label=\"Speek ON/OFF\" />}\n                                        label={this.state.isSpeek ? 'Speak Yes'  : 'Speak No'}\n                                        />\n                                    </FormGroup>\n                                </Grid>\n\n                                {/* <Grid item xs={12} sm={1} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.backupData()}>BackUp</Button>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={1} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Back Date</InputLabel>\n                                        <Select value={this.state.backDate} name=\"backDate\" onChange={this.onChangeBackDate}>\n                                            <MenuItem value={\"\"}>{\"Select Date\"}</MenuItem>\n                                            {this.state.backupDateList && this.state.backupDateList.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid> */}\n\n\n\n                            </Grid>\n\n\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\" >\n\n                                        {/* <TableCell >US Limit</TableCell>\n                                        <TableCell >LS Limit</TableCell> */}\n\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}>buyTosell(x)</Button>  </TableCell>\n                                        <TableCell  ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}>sellTobuy(x)</Button>  </TableCell> */}\n\n                                        <TableCell  ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}> Total Buy Quantity</Button>  </TableCell>\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pChange\")}> Symbol </Button> </TableCell>\n                                        <TableCell >VWAP Price</TableCell>\n\n                                        <TableCell ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}> Total Sell Quantity</Button>  </TableCell>\n\n                                        {/* <TableCell ><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell> */}\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\n                                        <TableCell  ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell> */}\n\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell> */}\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell> */}\n\n                                        {/* <TableCell  >Day Open</TableCell>\n                                        <TableCell  >Day High</TableCell>\n                                        <TableCell  >Day Low</TableCell>\n                                        <TableCell  >Previous Close</TableCell> */}\n\n\n                                        {/* <TableCell  ><Button onClick={() => this.getDeliveryHistory()}>Delivery History</Button>  </TableCell> */}\n\n{/* \n                                        <TableCell >Best Buy Qty</TableCell>\n                                        <TableCell >Best Buy Price</TableCell>\n                                        <TableCell >Best Sell Qty</TableCell>\n                                        <TableCell >Best Sell Price</TableCell> */}\n\n\n                                    </TableRow>\n                                </TableHead>\n\n                                </Table>\n                                <div style={{overflow:\"auto\", maxHeight:\"720px\"}}> \n                                <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n                                <TableBody>\n                                \n\n                               \n\n\n                                    {this.state.symbolList ? this.state.symbolList.map((row, i) => (\n                                        <TableRow selected={this.state.cursor === i ? 'active' : null} \n                                            // onKeyDown={(e) => this.handleKeyDown(e)}\n                                         style={{cursor:\"pointer\"}} hover key={i} onClick={() => this.showStaticChart(row.token, row.symbol)}>\n\n                                            {/* <TableCell >{row.upperCircuitLimit}</TableCell>\n                                            <TableCell >{row.lowerCircuitLimit}</TableCell> */}\n\n                                            {/* <TableCell style={{ background: row.highlightbuy ? \"lightgray\" : \"\" }} >\n                                                {row.buytosellTime ? row.buytosellTime +\" time buy\" : \"\"}\n                                            </TableCell>\n                                            <TableCell style={{ background: row.highlightsell ? \"lightgray\" : \"\" }} >\n                                                {row.selltobuyTime ? row.selltobuyTime+\" time sell\" : \"\"} \n                                            </TableCell> */}\n\n                                            <TableCell  style={{ background: row.highlightbuy ? \"#FFFF00\" : \"\" }}  >\n                                                    {/* {row.buybidHistory &&  row.buybidHistory.map(item => (\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\n                                                    ))} */}\n                                                {row.buytosellTime ? `Buy ${row.buytosellTime} times` : \"\"}\n\n                                                &nbsp; {row.totalBuyQuantity} {this.convertToFloat(row.totalBuyQuantity)}\n\n                                            </TableCell>\n                                            <TableCell align=\"left\" style={{ background: this.getPercentageColor(row.pChange)  }} >    {row.name} {row.ltp} {row.pChange ? `(${row.pChange}%)` : \"\"} </TableCell>\n                                            <TableCell style={{height:'25px', background: row.ltp ? row.ltp >= row.averagePrice ? \"green\" : \"red\" : \"white\"}}>{row.averagePrice}</TableCell>\n\n\n                                            <TableCell style={{ background: row.highlightsell ? \"#FFFF00\" : \"\" }}>\n                                                    {/* {row.sellbidHistory &&  row.sellbidHistory.map(item => (\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\n                                                    ))} */}\n                                            {row.selltobuyTime ? `Sell ${row.selltobuyTime} times` : \"\"} \n\n                                            &nbsp; {row.totalSellQuantity} {this.convertToFloat(row.totalSellQuantity)}\n                                  \n                                            </TableCell>\n\n\n                                            {/* <TableCell >{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell> */}\n                                            {/* <TableCell >{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\n                                            <TableCell >{row.deliveryToTradedQuantity}%</TableCell> */}\n\n                                            {/* <TableCell >{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell> */}\n                                            {/* <TableCell >{row.totalTradedValue}L</TableCell> */}\n\n                                            {/* <TableCell  >{row.open}</TableCell>\n                                                <TableCell  >{row.dayHigh}</TableCell>\n                                                <TableCell  >{row.dayLow}</TableCell>\n                                                <TableCell  >{row.previousClose}</TableCell> */}\n\n                                            {/* <TableCell style={{ background: \"#eceff1\" }} >\n\n                                                {row.delHistory && row.delHistory.map(item => (\n                                                    <span> {new Date(item.datetime).toLocaleDateString()}  &nbsp;\n                                                        <span title={\"quantityTraded \" + item.quantityTraded}> {(item.quantityTraded / 100000)}L  </span>  &nbsp;\n                                                        <span title={\"deliveryToTradedQuantity\"}> {item.deliveryToTradedQuantity}%  </span>  &nbsp;\n                                                        <span title={\"deliveryQuantity \" + item.deliveryQuantity}> {(item.deliveryQuantity / 100000)}L  </span>  &nbsp;\n                                                        <span style={{ color: item.todayChange > 0 ? \"green\" : \"red\" }}> ({item.todayChange}%)   </span>\n                                                        &nbsp;  <br /></span>\n                                                ))}\n\n                                            </TableCell> */}\n\n                                            {/* <TableCell >{row.bestbuyquantity}</TableCell>\n                                            <TableCell >{row.bestbuyprice}</TableCell>\n                                            <TableCell >{row.bestsellquantity}</TableCell>\n                                            <TableCell >{row.bestsellprice}</TableCell> */}\n\n                                               \n\n                                        </TableRow>\n                                    )) : <Spinner />}\n                                 \n                                    </TableBody>\n\n                             \n                            </Table>\n                            </div>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n\n                        <Paper style={{ padding: \"10px\" }}>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                \n                                <Grid item xs={12} sm={12}  >\n\n                                    <Grid  spacing={1} direction=\"row\" alignItems=\"center\" container>\n                                        <Grid item xs={12} sm={10} > \n                                         <Typography><b> {this.state.lightChartSymbol} </b></Typography>\n\n                                         </Grid>\n                                        \n\n                                        <Grid item xs={12} sm={2} > \n                                         <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                        </FormControl>\n                                    \n\n                                         </Grid>\n                                       \n                                    </Grid>\n                                    \n\n                                        \n\n                                    <div id=\"showChartTitle\"></div>\n                                    <div id=\"tvchart\"></div>\n                                </Grid>\n\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"40vh\" }} >\n                                <Typography> Candle Data </Typography>\n\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                                </TableRow>\n                                            )) : ''}\n\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    }\n};\n\nexport default LiveBid;\n\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { createChart } from 'lightweight-charts';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"NR4\",  //NR4ForNextDay  NR4_SameDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            backTestResultDateRange: [],\n            searchFailed: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            cursor: '',\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n \n        };\n        this.myCallback = this.myCallback.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //  console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            //    console.log(\"time\", this.state.timeFrame);\n            if (this.state.tradingsymbol) {\n                this.showStaticChart(this.state.symboltoken);\n            }\n        });\n    }\n\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value == 'NR4_Daywide_daterage') {\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\n\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n            this.setState({ cursor: '' });\n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n                //      this.updateSocketWatch();\n                //  this.checkOpenEqualToLow();\n                this.setState({ cursor: '' });\n            });\n        }\n    }\n    checkOpenEqualToLow = async () => {\n\n        this.setState({\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: [], closeingEqualHighList: []\n        });\n\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n\n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\": element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if (LtpData) {\n\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\n                    LtpData.nc = change;\n                    LtpData.symbol = element.symbol;\n\n                    this.state.symbolList[index].ltp = LtpData.ltp;\n                    this.state.symbolList[index].nc = change;\n\n                    if (LtpData && LtpData.open == LtpData.low) {\n                        console.log(\"o=l\", LtpData);\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\n                        if (!isfound.length)\n                            this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\n                    }\n                    console.log(element.symbol, \"ltp=newhigh\", LtpData.ltp, (LtpData.high - LtpData.high * 0.5 / 100));\n\n                    if (LtpData && LtpData.ltp >= (LtpData.high - LtpData.high * 0.5 / 100)) {\n                        var isfound = this.state.closeingEqualHighList.filter(row => row.symboltoken == element.token);\n                        if (!isfound.length)\n                            this.setState({ closeingEqualHighList: [...this.state.closeingEqualHighList, LtpData] });\n                    }\n\n                    if (LtpData && LtpData.open == LtpData.high) {\n                        console.log(\"o=h\", LtpData);\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\n                        if (!isfound.length)\n                            this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\n\n                    }\n\n                    if (LtpData.perChange > 0)\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\n                    else if (LtpData.perChange < 0)\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\n                    else\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\n\n\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\n\n                    //   this.dailyBasisInfoCheck(element.token, element);\n\n                    // this.checkSlowMotionStock(element.token, element);\n\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n            //  this.dailyBasisInfoCheck(this.state.symboltoken);\n\n\n        })\n    }\n  \n\n\n    componentDidMount() {\n\n        window.document.title = \"Backtest\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 550, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4Trail') {\n            this.backTestNR4Trail();\n            return;\n        }\n\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment = startdate;\n            const endMoment = enddate;\n\n\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if (this.state.stopScaningFlag) {\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n\n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(0, 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var foundStock = {\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                symbol: element.symbol,\n                                token: element.token,\n                                pattenName: \"NR4\",\n                                SellAt: sellenty,\n                                high: firstCandle[2],\n                                low: firstCandle[3],\n                                BuyAt: buyentry,\n                                candleChartData: candleChartData,\n                                close: firstCandle[4]\n                            }\n\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    }\n\n\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (candle5min[2] < buyHighest) {\n                    buyHighest = candle5min[3];\n                }\n\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[3] < buyentry) {\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange);\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if (!buyEntryFlag && perChange >= 1) {\n\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2]);\n\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            }\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\n\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (buyHighest < histdataInside[index][2]) {\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[2] > buyentry) {\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n\n\n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if (!buyEntryFlag) {\n\n                    if (firstTimeTrail && perChange >= 0.7) {\n                        trailCount += 1;\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\n                        longTradeFound.sellEntyPrice = minPrice;\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\n                        firstTimeTrail = false;\n                    } else {\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\n\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\n\n                        if (perchngfromTriggerPrice > 0.7) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\n\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\n                            break;\n                        }\n\n                    }\n\n\n\n\n\n\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\n                        break;\n                    }\n\n                }\n\n\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            } //candle loop end\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": element.token,\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                            }\n\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\n                                histdataInside = histdataInside && histdataInside.data;\n\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n\n                            }).catch(error => {\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\n                            });\n\n\n\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[2] > buyentry) {\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                            //     sumPercentage += perChng;\n\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[2],\n                            //         stopLoss: firstCandle[3],\n                            //         buyExitPrice: buyentry,\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\n                            //         candleChartData : candleChartData,\n                            //     }\n                            //     if (Math.floor(10000 / firstCandle[2])){ \n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n                            // }\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[3] < sellenty) {\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                            //     sumPercentage += perChng;\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: sellenty,\n                            //         stopLoss: firstCandle[2],\n                            //         buyExitPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[3],\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\n                            //         candleChartData : candleChartData\n                            //     }\n                            //     if(Math.floor(10000 / firstCandle[3])){\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n\n\n                            // }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            var currentDate = date.format('DD-MM-YYYY');\n\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\n\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                sumPercentage += perChng;\n\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[2],\n                                    stopLoss: firstCandle[3],\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[2])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n\n                                }\n\n                            }\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                sumPercentage += perChng;\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: sellenty,\n                                    stopLoss: firstCandle[2],\n                                    buyExitPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[3],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[3])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\n\n                                }\n\n\n                            }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    }\n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            if (this.state.stopScaningFlag) {\n                this.setState({stopScaningFlag : false})\n                break;\n            }\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                                var stopLoss = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                                if (next5thCandle[2] > buyentry) {\n\n                                    let exitPrice = next5thCandle[this.state.longExitPriceType], exitStatus = \"Market End\";  \n                                    if(next5thCandle[this.state.longExitPriceType] <= stopLoss){\n                                        exitPrice = stopLoss; \n                                        exitStatus = \"SL Hit\";\n                                    }\n\n\n                                    var perChng = (exitPrice - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n                                    let slPer = ((buyentry-stopLoss)*100/buyentry).toFixed(2); \n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        sellEntyPrice: exitPrice,\n                                        stopLoss: `${stopLoss} (${slPer}%)`,\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        entryAt:  firstCandle[0],\n                                        squareOffAt: next5thCandle[0],\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData,\n                                        exitStatus : exitStatus\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                                var stopLoss = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    let exitPrice = next5thCandle[this.state.longExitPriceType], exitStatus = \"Market End\";  \n                                    if(next5thCandle[this.state.longExitPriceType] >= stopLoss){\n                                        exitPrice =  stopLoss; \n                                        exitStatus = \"SL Hit\";\n                                    }\n                                    \n                                    var perChng = (sellenty - exitPrice) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n                                    let slPer = ((stopLoss-sellenty)*100/stopLoss).toFixed(2); \n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss:  `${stopLoss} (${slPer}%)`,\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: exitPrice,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        entryAt:  firstCandle[0],\n                                        squareOffAt: next5thCandle[0],\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData,\n                                        exitStatus : \"Market End\"\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n    \n    backTestNR4Trail = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            if (this.state.stopScaningFlag) {\n                this.setState({stopScaningFlag : false})\n                break;\n            }\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        entryAt:  firstCandle[0],\n                                        squareOffAt: next5thCandle[0],\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        entryAt:  firstCandle[0],\n                                        squareOffAt: next5thCandle[0],\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n    \n\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\n        var longCandles = [], shortCandles = [];\n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata);\n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                longCandles.push(longData);\n\n                                totalLongs += 1;\n                                totalLongPer += perChng;\n                                totalLongHighPer += perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                shortCandles.push(shortData);\n\n                                totalShort += 1;\n                                totalShortPer += perChng;\n                                totalShortLowPer += perChngOnLow;\n\n                            }\n\n\n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs: totalLongs,\n                    totalShort: totalShort,\n                    totalLongPer: totalLongPer.toFixed(2),\n                    totalShortPer: totalShortPer.toFixed(2),\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\n                }\n                if (foundStock)\n                    foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles;\n                foundStock.shortCandles = shortCandles;\n\n\n                console.log(\"foundStock\", foundStock);\n                if (Math.floor(10000 / firstCandle[4])) {\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n\n\n\n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n\n\n        switch (timeFrame) {\n            // case 'ONE_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"10:05:00\")\n            //         return \"19:00:00\";\n            //     else\n            //         return \"01:00:00\";\n            //     break;\n            // case 'FIVE_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"11:00:00\")\n            //         return \"23:00:00\";\n            //     else\n            //         return \"03:00:00\";\n            //     break;\n            // case 'TEN_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"12:35:00\")\n            //         return \"24:21:00\";\n            //     else\n            //         return \"07:00:00\";\n            //     break;\n            // case 'FIFTEEN_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"14:15:00\")\n            //         return \"28:01:00\";\n            //     else\n            //         return \"10:01:00\";\n            //     break;\n            // case 'THIRTY_MINUTE':\n            //     return \"100:01:00\";\n            //     break;\n            // case 'ONE_HOUR':\n            //     return \"200:01:00\";\n            //     break;\n            // case 'ONE_DAY':\n            //     return \"1000:01:00\";\n            //     break;\n            // default:\n            //     break;\n\n            case 'ONE_MINUTE':\n                return \"720:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"1000:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    calculateSMA = (data, count) => {\n\n        //  console.log(\"smarowdata\", data, count);\n\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n\n    //   calculateBBValue = (data, type ) => {\n\n    //     console.log(\"smarowdata\", data , count); \n\n    //     var result = [];\n    //     for (var i=count - 1, len=data.length; i < len; i++){\n    //       var val = avg(data.slice(i - count + 1, i));\n    //       result.push({ time: data[i].time, value: val});\n    //     }\n    //     return result;\n    //   }\n\n\n\n    showStaticChart = (token, symbol, entryAt, exitAt) => {\n\n        \n\n        console.log('token, symbol, entryAt, exitAt', token, symbol, entryAt, exitAt)\n\n        this.setState({ chartStaticData: '' , lightChartSymbol :symbol }, function () {\n            console.log('reset done', token);\n        });\n\n    //     console.log(\"time in function \", this.state.timeFrame);\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n    //     // var time = moment.duration(\"10:50:00\");\n    //     // var startDate = moment(new Date()).subtract(time);\n    //     // var startdate = moment(this.state.startDate).subtract(time);\n    //     var beginningTime = moment('9:15am', 'h:mma');\n\n    //     let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n    //     var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n    //    // var startDate = moment(new Date(foundAt)).set()\n     \n       var startDate = moment(entryAt).set(\"hour\", '09').set(\"minute\", '15');\n        var enddate = moment(exitAt).set(\"hour\", '15').set(\"minute\", '30');\n\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n\n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n\n                    this.state.smaLineSeries.setData(smaData);\n\n\n                    this.state.chart.subscribeCrosshairMove((param) => {\n\n                        var getit = param.seriesPrices[Symbol.iterator]();\n\n                        var string = \"\";\n                        var change = \"\";\n\n                        for (var elem of getit) {\n\n                            if (typeof elem[1] == 'object') {\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n                            } else {\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\n                            }\n                        }\n\n                        if (param.time)\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n                        else\n                            string += \" <b>Time: </b>\";\n\n\n                        const domElement = document.getElementById('showChartTitle');\n\n\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\n                        if (change < 0)\n                            str = \"<span style=color:red>\" + string + \"</span> \";\n\n                        domElement.innerHTML = str;\n                    });\n\n\n                });\n\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                        totalSum += per;\n\n                    });\n\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\n\n\n                }\n            }\n        })\n\n\n    }\n\n    checkSlowMotionStock = (token, stock) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n                var bigCandleCount = 0;\n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n\n                    if (element) {\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol, per, element[0]);\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol, per, element[0]);\n\n                        }\n                    }\n                }\n                console.log(\"Totalcount\", stock.symbol, bigCandleCount);\n                if (bigCandleCount <= 15) {\n\n                    stock.bigCandleCount = bigCandleCount;\n\n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                    });\n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async () => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n                    var closeingDatadaily = [], valumeSum = 0;\n\n                    var bigCandleCount = 0, bullishCount = 0;\n\n                    for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\n                        const element = candleDatad[index];\n\n                        if (element) {\n\n                            var per = (element[4] - element[1]) * 100 / element[1];\n                            if (per >= 0.7) {\n                                bigCandleCount += 1;\n                            }\n                            if (per >= 0) {\n                                bullishCount += 1;\n                            }\n\n                        }\n                    }\n                    if (bigCandleCount >= 1) {\n                        row.highlisht = true;\n                        window.document.title = \"SM: \" + row.symbol;\n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\n                    }\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n    checkLiveBids = async () => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n\n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n\n                console.log(\"bid\", resd.data.data);\n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if (resd.data && resd.data.data.length) {\n\n                    let bidlivedata = resd.data.data[0];\n                    let biddata = {\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                        symbol: bidlivedata.symbol,\n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity,\n                        nc: bidlivedata.pChange,\n                        ltp: bidlivedata.lastPrice,\n                    }\n\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function () {\n\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList));\n                    });\n\n\n                }\n\n            });\n            await new Promise(r => setTimeout(r, 100));\n        }\n\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n\n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if (element) {\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n\n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n   \n   \n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n  \n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    handleKeyDown = (e) => {\n\n        console.log(\"key\", e.keyCode);\n        //38 for down and 40 for up key\n        if (e.keyCode === 38 && this.state.cursor > 0) {\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\n        }\n\n        setTimeout(() => {\n            this.updateCandleOnkey();\n        }, 100);\n\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0, totalMarketEnd = 0, totalSlHit =0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar  />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n\n\n                    <Grid item xs={12} sm={8}>\n\n\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest1</Typography>\n\n                           \n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                \n\n                                <Grid item xs={12} sm={2}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                            <MenuItem value={\"NR4\"}>Narrow Range 4 - Day SL</MenuItem>\n                                            <MenuItem value={\"NR4Trail\"}>Narrow Range 4 - Trail</MenuItem>\n\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={4}>\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={4} style={{ marginTop: '5px' }}>\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop Scaning</Button> &nbsp;  {this.state.stockTesting} {this.state.runningTest}  </Button>   </>}\n                                    &nbsp; Failed: {this.state.searchFailed}\n\n                                </Grid>\n\n\n                            </Grid>\n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                <Grid item xs={12} sm={12}>\n\n\n                                <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow style={{ background: \"lightgray\" }}>\n\n                                        <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n\n                                        {/* <TableCell style={{ color: \"#e66e6e\" }} ><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                        <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n\n                                        <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                        <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n\n\n\n                                        <TableCell  >T.Trades: {this.state.backTestResult && this.state.backTestResult.length} &nbsp; W: {localStorage.getItem('totalWin')} L: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                        <TableCell   colSpan={2}>Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                        <TableCell  colSpan={2}> MarketEnd: {localStorage.getItem('totalMarketEnd')} SLHit: {localStorage.getItem('totalSlHit')}</TableCell>\n\n                                        <TableCell  colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                        <TableCell  colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n\n\n                                    </TableRow>\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" >CPnl% </TableCell>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" >Charges</TableCell>\n                                <TableCell className=\"TableHeadFormat\" >Net PnL %</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" >CNetPnL </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLPnL% </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLNet PnL</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" >EntryTaken</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" >SquiredOffAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" >ExitStatus</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" >Buy</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" >Sell(Qty)</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >High/Low</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" >StopLoss</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" >Day Chart </TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                </Table>\n\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ? \n                                        <div style={{overflow:\"auto\", maxHeight:\"550px\"}}> \n\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                      \n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                <TableRow hover key={i}  >\n\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                    {/* <TableCell style={{ color: \"gray\" }}  {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n        */}\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }}  > {tradetotal.toFixed(2)}</TableCell>\n\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }}  >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                    <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                    <TableCell  style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt.substr(0, 18)}</TableCell>\n                                                    <TableCell >{row.squareOffAt.substr(0, 10)}</TableCell>\n\n                                                    <TableCell {...totalMarketEnd += row.exitStatus ==='Market End' ? 1 : 0}{...totalSlHit += row.exitStatus ==='SL Hit' ? 1 : 0} >{row.exitStatus}</TableCell>\n\n                                                    <TableCell >{row.buyExitPrice}</TableCell>\n\n                                                    <TableCell  {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                    <TableCell title=\"High on long side | Low in short side\" >{row.highAndLow}</TableCell>\n\n\n                                                    <TableCell >{row.stopLoss}</TableCell>\n                                                    <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showStaticChart(row.token, row.symbol, row.entryAt, row.squareOffAt)}>Day<ShowChartIcon /> </Button></TableCell>\n\n\n                                                </TableRow>\n\n\n\n                                            )) : ''}\n                                           \n\n                                            <TableRow style={{ background: \"lightgray\" }} >\n\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} ><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                <TableCell  > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                <TableCell >{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                <TableCell >{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)} {localStorage.setItem('totalMarketEnd', totalMarketEnd)} {localStorage.setItem('totalSlHit', totalSlHit)} </TableCell>\n\n\n                                                <TableCell  > </TableCell>\n                                                <TableCell > </TableCell>\n\n                                                <TableCell > </TableCell>\n                                                <TableCell > </TableCell>\n                                                <TableCell > </TableCell>\n                                                <TableCell > </TableCell>\n\n\n\n\n                                            </TableRow>\n                                        </TableBody>\n\n\n                                        </Table>\n                                        </div>\n                                    \n\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" > {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\n                                                    </TableRow>\n\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" > CPnL% </TableCell>\n\n                                                        {/* <TableCell className=\"TableHeadFormat\" >Charges</TableCell>\n                        <TableCell className=\"TableHeadFormat\" >Net PnL %</TableCell> */}\n\n                                                        <TableCell className=\"TableHeadFormat\" >CNetPnL </TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLPnL% </TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLNet PnL</TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" >FoundAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" >Buy</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" >Sell(Qty)</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >High/Low</TableCell>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" >SquiredOffAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" >StopLoss</TableCell>\n                                                        {/* <TableCell className=\"TableHeadFormat\" >Sr. </TableCell> */}\n\n\n                                                    </TableRow>\n\n                                                </TableHead>\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n\n                                                        <TableRow hover key={i}  >\n\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                            {/* <TableCell style={{ color: \"gray\" }}  {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                        */}\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }}  > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }}  >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                            <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                            <TableCell  style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                            <TableCell >{row.buyExitPrice}</TableCell>\n\n                                                            <TableCell  {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                            <TableCell title=\"High on long side | Low in short side\" >{row.highAndLow}</TableCell>\n\n                                                            <TableCell >{row.squareOffAt}</TableCell>\n\n                                                            <TableCell >{row.stopLoss}</TableCell>\n                                                            {/* <TableCell >{i + 1}</TableCell> */}\n\n                                                        </TableRow>\n\n\n                                                    ))}\n\n\n\n                                                    <TableRow style={{ background: \"lightgray\" }} >\n\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} ><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                        <TableCell  > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                        <TableCell >{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                        <TableCell ></TableCell>\n\n\n                                                        <TableCell  > </TableCell>\n                                                        <TableCell > </TableCell>\n\n                                                        <TableCell > </TableCell>\n                                                        <TableCell > </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                </TableBody>\n                                            </Table>\n\n\n\n                                        )) : ''}\n\n                                    </>\n\n                                        : \"\"}\n\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\n                                        </Typography>\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                    <TableCell className=\"TableHeadFormat\" >Sr </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" >Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" >FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" >Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" >BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" >SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" >High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" >Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" >Close</TableCell>\n\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                    <TableRow hover key={i}  >\n                                                        <TableCell >{i + 1}</TableCell>\n                                                        <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                        <TableCell >{row.foundAt.substr(0, 16)}</TableCell>\n                                                        <TableCell  title=\"based on last one 6 month\">\n\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                                </>\n                                                            ))}\n\n                                                            <br />\n\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n\n\n                                                                </>\n                                                            ))}\n\n                                                        </TableCell>\n\n\n                                                        <TableCell >{row.BuyAt}</TableCell>\n                                                        <TableCell >{row.SellAt}</TableCell>\n                                                        <TableCell >{row.high}</TableCell>\n                                                        <TableCell >{row.low}</TableCell>\n                                                        <TableCell >{row.close}</TableCell>\n\n\n                                                    </TableRow>\n\n\n\n                                                )) : ''}\n\n                                            </TableBody>\n\n                                        </Table>\n\n                                        : \"\"}\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n\n                        <Paper style={{ padding: \"10px\" }}>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                \n                                <Grid item xs={12} sm={12}  >\n                                    <Grid  spacing={1} direction=\"row\" alignItems=\"center\" container>\n                                        <Grid item xs={12} sm={2} > \n                                         <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                        </FormControl>\n                                    \n\n                                         </Grid>\n                                         <Grid item xs={12} sm={10} > \n                                         <Typography>Same Day Chart:  {this.state.lightChartSymbol}</Typography>\n\n                                         </Grid>\n                                        \n                                    </Grid>\n                                    \n\n                                        \n\n                                    <div id=\"showChartTitle\"></div>\n                                    <div id=\"tvchart\"></div>\n                                </Grid>\n\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"40vh\" }} >\n                                <Typography> Candle Data </Typography>\n\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >Timestamp</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >Open</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >High</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >Low</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >Close </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" >Volume</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                    <TableCell >{this.state.tradingsymbol}</TableCell>\n                                                    <TableCell >{new Date(row[0]).toLocaleString()}</TableCell>\n                                                    <TableCell > <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                    <TableCell >{row[1]}</TableCell>\n                                                    <TableCell >{row[2]}</TableCell>\n                                                    <TableCell >{row[3]}</TableCell>\n                                                    <TableCell >{row[4]}</TableCell>\n                                                    <TableCell >{row[5]}</TableCell>\n\n                                                </TableRow>\n                                            )) : ''}\n\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;\n\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\nimport NiftyView from \"./MyTrade/NiftyView\";\nimport BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\nimport Test from \"./MyTrade/Test\";\n\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\n\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\nimport FindFastMovement2 from \"./MyTrade/FindFastMovement2\";\nimport FindFastMovement3 from \"./MyTrade/FindFastMovement3\";\n\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\nimport DeliveryData from \"./MyTrade/DeliveryData\";\nimport SlowMotion from \"./MyTrade/SlowMotion\";\nimport IndexCharts from \"./MyTrade/IndexCharts\";\nimport MarketDepth from \"./MyTrade/MarketDepth\";\nimport Backtest from \"./MyTrade/Backtest\";\n\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    <Route path=\"/nifty-view\" component={NiftyView}/>\n                    <Route path=\"/bn-view\" component={BankNiftyView}/>\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\n\n\n                    \n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n                    <Route path=\"/find-fast-movement2\" component={FindFastMovement2}/>\n                    <Route path=\"/find-fast-movement3\" component={FindFastMovement3}/>\n\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\n                    <Route path=\"/delivery\" component={DeliveryData}/>\n                    <Route path=\"/slow-motion\" component={SlowMotion}/>\n\n                    <Route path=\"/index-charts\" component={IndexCharts}/>\n                    <Route path=\"/market-depth\" component={MarketDepth}/>\n                    <Route path=\"/backtest\" component={Backtest}/>\n\n                    \n                    <Route path=\"/test\" component={Test}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}