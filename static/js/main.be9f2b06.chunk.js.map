{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/LightChartCom.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/SimpleExpansionPanel.js","components/MyTrade/SimpleExpansionFastMovement.js","components/MyTrade/LiveBidsExpantion.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/NiftyView.js","components/MyTrade/Chart.js","components/MyTrade/BankNiftyView.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/LightChartDialog.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/MyTrade/FindFastMovement2.js","components/MyTrade/DeliveryData.js","components/MyTrade/LightChartModel.js","components/MyTrade/SlowMotion.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","symbol","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","LightChartCom","setTimeout","chart","LightweightCharts","createChart","getElementById","height","rightPriceScale","scaleMargins","top","bottom","borderVisible","layout","textColor","grid","vertLines","horzLines","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","addHistogramSeries","priceFormat","priceScaleId","volumeSeries","subscribeCrosshairMove","param","getit","seriesPrices","Symbol","iterator","string","change","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","elem","console","log","open","high","low","close","toFixed","err","return","time","toLocaleString","str","innerHTML","smaData","count","avg","sum","result","len","val","slice","calculateSMA","addLineSeries","lineWidth","direction","paddingLeft","paddingRight","item","fontSize","DialogTitle","withStyles","padding","closeButton","right","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","placeOrder","click","getStockTokenDetails","SYMBOL","updateOrderList","retrieveOrderBook","orderlist","sort","b","updatetime","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","Math","floor","qtyToTake","format1","beginningTime","moment","format","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","candleData","clossest","lowerest","highestHigh","lowestLow","highestsum","reverse","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","orderOption","buyPrice","placeOrderMethod","catch","placeOptionOrder","placeOptionSLMOrder","stopLossTriggerPrice","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","noWrap","LoadSymbolDetails","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","lib_default","OpenInNew_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","list","ExpansionPanelDetails","overflowY","map","nc","background","highlisht","totalBuyQuantity","totalSellQuantity","deliveryToTradedQuantity","Home","autoSearchList","onInputChange","showStaticChart","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","checkOpenEqualToLow","cursor","asyncToGenerator","regenerator_default","mark","_callee","_this$setState5","_loop","wrap","_context2","prev","openEqualHighList","openEqualLowList","_context","toConsumableArray","advanceShareCount","declineShareCount","UnchangeShareCount","r","stop","delegateYield","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","wsClint","firstTime_req","feedToken","send","updateSocketWatch","channel","updateSocket","task","user","acctid","selectedWatchlist","updateSocketDetails","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","setInterval","_req","stopBacktesting","stopScaningFlag","backTestAnyPattern","_callee2","enddate","currentMoment","endMoment","watchList","runningTest","_loop2","_context4","backTestResult","backTestFlag","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","_context3","index2","last10Candle","next10Candle","toLocaleTimeString","backtestTweezerTop","backtestTweezerBottom","stockTesting","_callee3","_loop3","_context6","FoundPatternList","_context5","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","sellenty","foundStock","pattenName","SellAt","BuyAt","nr4CheckPastPerfommance","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","stopLoss","brokerageCharges","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee4","sumPercentage","_loop4","_context8","searchFailed","_context7","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref5","_callee5","_loop5","_context10","_context9","dateWithWlType","datewisetrades","perChngOnLow","_x","apply","_callee6","_loop6","_context12","_context11","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","round","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","orderid","getTimeFrameValue","timeFrame","chartStaticData","dailyBasisInfoCheck","timeDuration","historyData","cdata","d","volumeSeriesData","loopindex","rsiValues","bblastValue","vwapvalue","max","smaLineSeries","InstrumentHistroy","upsideMoveCount","downMoveCount","totalSum","per","totalPerchentageChange","startingFrom","checkSlowMotionStock","stock","dataDay","resd","histdatad","candleDatad","bigCandleCount","slowMotionStockList","checkSlowMotionCheckLive","_callee7","_loop7","_context14","_context13","checkLiveBids","_callee8","_context15","bidlivedata","biddata","pChange","lastPrice","liveBidsList","oneHourBullBearCheck","_callee9","_loop8","_context17","_context16","lastCandle","oneHourBullBearCheckList","searchValumeBreakoutStock","_callee10","_loop9","_context19","_context18","volumeSum","findmaxVol","currentCandleVol","firstCandleCloseingPrice","priceGoingHighCount","firstCandleCloseingPriceDownSide","priceGoingLowCount","avgVol","volumeBreakoutlast5CandleList","startDateforDaily","DSMA","closeingDatadaily","valumeSum","SMA","dailyAvgValume","DSMALastValue","DailyBulishStatus","todayCurrentVolume","volumeCrossedList","slmOrderType","onSelectItem","autoSearchTemp","fdata","onSelectItemChart","seachSumbol","getPercentageColor","percent","deleteItemWatchlist","findIndex","splice","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","handleKeyDown","keyCode","prevState","updateCandleOnkey","selectedKeyRow","ifNotBought","fastMovementList","_this2","domElement","timeVisible","secondsVisible","endTime","currentTime","isoWeekday","isBetween","tostartInteral","clearInterval","_this3","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Paper","Autocomplete","freeSolo","disableClearable","option","renderInput","params","onKeyDown","search","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","selected","textAlign","upper","middle","lower","j","Table","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","key","MaterialUIDateTimePicker","colSpan","hover","Equalizer_default","gutterBottom","LiveBidsExpantion_SimpleExpansionPanel","SimpleExpansionFastMovement_SimpleExpansionPanel","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","MenuProps","PaperProps","ITEM_HEIGHT","MyView","filterOptionChain","actualValue","filereddata","alldata","optionChainData","records","expiryDate","strikePrice","filtered","FilteredBY","getDataforStrike","sumOfCEoi","sumOfPEoi","CE","openInterest","PE","findSupportResistence","optiondata","PEoi","CEoi","PEoiChange","CEoiChange","changeinOpenInterest","expiryDates","strikePrices","totalspeoi","totalsceoi","resdata","AllspTotalOI","selectedSPpcr","allStrikediff","allStrikeChngeDiff","products","stopnview","curnewdata","underlyingValue","timestamp","totalCOI","expiry","strike","pcrTable","loadPackList","todayTime","updatepcr","getBNcpdata","diff","totOI","newdata","dateTime","dateFormat","totCEOI","totCEVol","totVol","totPEOI","totPEVol","totChangeINOICall","totChangeINOIPut","totChangeINOIDiff","oldproducts","lastrow","isDuplicate","totCEOIChange","totPEOIChange","totDiffChange","pcrdata","allPCR","expiryPCR","_React$createElement2","_React$createElement3","_React$createElement4","_this4","Input","labelId","max-height","paddingTop","overflow","stickyHeader","substring","borderLeft","borderRight","opdata","impliedVolatility","tableStyle","connect","diffData","putData","onChangeSelectSymbol","optionChainDataBN","handleScroll","scrollcount","onChangeCallLot","calculateCallMargin","totalMargin","Parser","lotSize","buyCallLot","maxLoss","onChangePutLot","calculatePutMargin","buyPutLot","myStrike","startDiff","showOptionDownside","rem","startFrom","endDiff","showOptionUpside","rem2","endTo","waitForChainFlag","pcrTableBN","selectOptionStock","niftyLogSize","niftybankLogSize","SecuritiesInFO","Chart_App","buyOption","indexSymbol","MyDialog_DialogTitle","MyDialog_DialogContent","indexSymbolData","idata","MyDialog_DialogActions","getIndicesStocks","getIndiceStock","toLocaleLowerCase","indexTimeStamp","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","x","y","colors","upward","downward","ApexCharts","querySelector","render","toFixedAmount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","OrderBook","getTodayOrder","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","hash","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","w3cwebsocket","actiontype","feedtype","jwttoken","apikey","sbin","getHistory","histCandles","positionList","heartbeatReq","exchtime","searchSymbolPendingOrder","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","createdAt","buyAt","sellAt","pattenNamePending","orderPenidngList","deleteInOrderPenidngList","delitem","callBackUpdate","updateLTP","getTradePrice","refreshCandleChartManually","_ref3","failedCount","onChange2","openNewPage","backToPositionPage","optiontype","noOfLot","exp","optionName","optionData","ltpparam","perStopTrigerLoss","intervaltime","findlast5minMovementInterval","Delete_default","BankNiftyView","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","today","timediff","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","foundData","foundPatternList","toLowerCase","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","findNR7PatternLive","showtestdata","last7Candle","last9Candle","_ref4","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","netqty","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_ret","showHighLowWisePer","v","tagPatternWhichTaken","orderTagToPosition","pattern","calculateTradeExpence","totalbuyvalue","totalsellvalue","buyCharge","sellCharge","turnOver","totalBroker","sst","sstCharge","transCharge","stampDuty","sebiCharge","gstCharge","total","tradeExpence","expenceInfo","getPositionData","totalMaxPnL","getPosition","todayProfitPnL","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","totalExpence","pnl","buyqty","percentPnL","chargeInfo","slData","stopLossAmount","totalTornOver","checkAndPlaceSingleOrder","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","getNiftyLTP","getBankNiftyLTP","getStopLossPrice","_ref8","slPrice","_x2","_x3","LockedSymbolName","orderData","getOpenPeningOrderId","squareOff","abs","modifyOrderMethod","minTriggerPrice","minSLPrice","get2DecimalNumber","number","getSLAndTriggerPrice","getOptionPercentage","trailPerChange","slPriceData","getPercentage","positionInterval","bankNiftyInterval","squireInterval","sqrOffbeginningTime","sqrOffendTime","scaninterval","scanendTime","totalDayLoss","dailyLossPer","getNSETopStock","scandata","isFound","symbolName","selectedStockInteval","getSelectedStockFromDb","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","OrderWatchlist","Example","areaData","volumeData","ChartData","areaSeries","readCsv","parsedList","newJsonList","addtowatchlist","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","indexData","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","LightChartDialog_DialogTitle","LightChartData","selectedSymbol","LightChartDialog_DialogContent","LightChartDialog_DialogActions","showCandleChartPopUp","isThere","switchToListView","switchToListViewFlag","get5DaysMoveCount","getDeliveryInfo","getDeliveryData","sluglist","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","timeVal","slugName","checkSectorApiOther","LightChartDialog_CustomizedDialogs","iislPercChange","ltP","stopSearching","stop10bbSearch","onChangeQty","find10MinBBBlast","startSearching","totalStockToWatch","findlast5minMovement","updateToLocalStorage","isfound","updateData","findlast5minMovementUpdate","lightcandleChartData","getFullYear","getMonth","getDate","sma","bbvlastvalue","dataltp","upsidecount","downsidecount","startingRsiupside","startingRsiDownside","volumeUpside","BBBlastType","RSIValue","BB","updateMsg","percentChangeList","changePer","quantityTraded","deliveryQuantity","totalTradedVolume","totalTradedValue","highlight","lastUpdateTime","convertToFloat","isNaN","sortByColumn","sortedType","averagePrice","dayHigh","dayLow","previousClose","lightChartData","LightChartModel_DialogTitle","LightChartModel_DialogContent","LightChartModel_DialogActions","checkSlowMotion","scanUpdate","updateTimeFrameChart","lightChartinfo","stockindex","sectorName","isActivated","midBullishCount","bullishCount","activationTime","activationPrice","update","updatetopage","activationToLtpChange","AtoltpChng","showLightChart","deleteAllScan","LightChartModel_CustomizedDialogs","AppRouter","react_router","path","exact","NiftyView","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","FindFastMovement2","DeliveryData","SlowMotion","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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AAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,IAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,MAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,OAC7B,CAAE2M,KAAM,aAAc3M,MAAO,QAE/BytC,WAAY,CACV,CAAE9gC,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,QAAYI,MAAO,wBAChD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,QAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,QAAYI,MAAO,0BAChD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,QAAYI,MAAO,0BAChD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,0BACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,MAAO,wBACjD,CAAEuM,KAAM,aAAc3M,MAAO,SAAaI,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","file":"static/js/main.be9f2b06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\n\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    checkOtherApi(index){\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n    }\n\n    checkSectorApiOther(index){\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n      }\n\n    \n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices);\n    }\n\n    allIndicesDirectJSON(){\n        return axios.get('http://localhost:8081/nse/get_indices', '');\n        // return axios.get(apiConstant.allIndices2Json);\n     }\n\n     getBNcpdata(symbol){\n         if(symbol == 'NIFTY' || symbol == 'BANKNIFTY'){\n            return axios.get('http://localhost:8081/nse/getOptionChain?symbol='+symbol, '');\n         }else{\n            return axios.get('http://localhost:8081/nse/getOptionChainEquity?symbol='+symbol, '');\n         }\n        \n     }\n\n\n     getDeliveryData(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n     checkLiveBids(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n\n\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map2\" />\n    </ListItem>\n\n\n\n    <ListItem button component='a' href={\"/mtrade/#/delivery\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Delivery\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/slow-motion\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Slow Motion\" />\n    </ListItem>\n\n\n   \n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Watchlist\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map\" />\n    </ListItem>\n  \n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem> */}\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport default function LightChartCom(props) {\n\tconst [open, setOpen] = React.useState(false);\n\t// var fileref=document.createElement('script')\n\t// fileref.setAttribute(\"type\",\"text/javascript\")\n\t// fileref.setAttribute(\"src\", 'https://unpkg.com/lightweight-charts@3.4.0/dist/lightweight-charts.standalone.production.js')\n\t// document.getElementsByTagName(\"head\")[0].appendChild(fileref)\n\n\tsetTimeout(() => {\n\n\t\tvar chart = window.LightweightCharts.createChart(document.getElementById('chart'), {\n\t\t\twidth: 600,\n\t\t\theight: 300,\n\t\t\trightPriceScale: {\n\t\t\t\tscaleMargins: {\n\t\t\t\t\ttop: 0.3,\n\t\t\t\t\tbottom: 0.25,\n\t\t\t\t},\n\t\t\t\tborderVisible: false,\n\t\t\t},\n\t\t\tlayout: {\n\t\t\t\tbackgroundColor: 'white',   // '#131722',\n\t\t\t\ttextColor: '#d1d4dc',\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tvertLines: {\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0)',\n\t\t\t\t},\n\t\t\t\thorzLines: {\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\t// var areaSeries = chart.addAreaSeries({\n\t\t// \ttopColor: 'rgba(38,198,218, 0.56)',\n\t\t// \tbottomColor: 'rgba(38,198,218, 0.04)',\n\t\t// \tlineColor: 'rgba(38,198,218, 1)',\n\t\t// \tlineWidth: 2,\n\t\t// });\n\t\t// areaSeries.setData(props.ChartData.areaSeries);\n\n\n\t\tvar candleSeries = chart.addCandlestickSeries({\n\t\t\tupColor: 'green',\n\t\t\tdownColor: 'red',\n\t\t\tborderDownColor: 'red',\n\t\t\tborderUpColor: 'green',\n\t\t\twickDownColor: 'red',\n\t\t\twickUpColor: 'green',\n\t\t});\n\n\t\t//candleSeries.setData(data);\n\t\tvar data = props.chartData && props.chartData.candleSeries;\n\t\tcandleSeries.setData(data);\n\n\n\n\t\tvar volumeSeries = chart.addHistogramSeries({\n\t\t\tcolor: '#26a69a',\n\t\t\tpriceFormat: {\n\t\t\t\ttype: 'volume',\n\t\t\t},\n\t\t\tpriceScaleId: '',\n\t\t\tscaleMargins: {\n\t\t\t\ttop: 0.8,\n\t\t\t\tbottom: 0,\n\t\t\t},\n\t\t});\n\n\t\t//volumeSeries.setData(props.ChartData && props.ChartData.volumeData);\n\t\tvolumeSeries.setData(props.chartData && props.chartData.volumeSeries);\n\n\n\t\tchart.subscribeCrosshairMove((param) => {\n\n\t\t\tvar getit = param.seriesPrices[Symbol.iterator]();\n\n\t\t\tvar string = \"\";\n\t\t\tvar change = \"\";\n\n\t\t\tfor (var elem of getit) {\n\n\t\t\t\tconsole.log(elem);\n\n\t\t\t\tif (typeof elem[1] == 'object') {\n\t\t\t\t\tstring += \" O: <b>\" + elem[1].open + \"</b>\";\n\t\t\t\t\tstring += \" H: <b>\" + elem[1].high + \"</b>\";\n\t\t\t\t\tstring += \" L: <b>\" + elem[1].low + \"</b>\";\n\t\t\t\t\tstring += \" C: <b>\" + elem[1].close + \"</b>\";\n\t\t\t\t\tchange = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n\t\t\t\t\tstring += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n\t\t\t\t} else {\n\t\t\t\t\tstring += \"&nbsp;\" + elem[1].toFixed(2) + \" \";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.time)\n\t\t\t\tstring += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n\n\n\n\t\t\tconst domElement = document.getElementById('showChartTitle');\n\n\n\t\t\tvar str = \"<span style=color:green>\" + string + \"</span> \";\n\t\t\tif (change < 0)\n\t\t\t\tstr = \"<span style=color:red>\" + string + \"</span> \";\n\n\t\t\tdomElement.innerHTML = str;\n\t\t});\n\n\n\n\n\t\t// var datesForMarkers = [data[data.length - 19], data[data.length - 39]];\n\t\t// var indexOfMinPrice = 0;\n\t\t// for (var i = 1; i < datesForMarkers.length; i++) {\n\t\t// \tif (datesForMarkers[i].high < datesForMarkers[indexOfMinPrice].high) {\n\t\t// \t\tindexOfMinPrice = i;\n\t\t// \t}\n\t\t// }\n\t\t// var markers = [];\n\t\t// for (var i = 0; i < datesForMarkers.length; i++) {\n\t\t// \tif (i !== indexOfMinPrice) {\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'aboveBar', color: '#e91e63', shape: 'arrowDown', text: 'Sell @ ' + Math.floor(datesForMarkers[i].high + 2) });\n\t\t// \t} else {\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'belowBar', color: '#2196F3', shape: 'arrowUp', text: 'Buy @ ' + Math.floor(datesForMarkers[i].low - 2) });\n\t\t// \t}\n\t\t// }\n\t\t// markers.push({ time: data[data.length - 48].time, position: 'aboveBar', color: '#f68410', shape: 'circle', text: 'D' });\n\t\t// candleSeries.setMarkers(markers);\n\n\n\t\tvar smaData = calculateSMA(data, 20);\n\t\tvar smaLine = chart.addLineSeries({\n\t\t\tcolor: 'rgba(4, 111, 232, 1)',\n\t\t\tlineWidth: 2,\n\t\t});\n\t\tsmaLine.setData(smaData);\n\n\n\t\tfunction calculateSMA(data, count) {\n\t\t\tvar avg = function (data) {\n\t\t\t\tvar sum = 0;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tsum += data[i].close;\n\t\t\t\t}\n\t\t\t\treturn sum / data.length;\n\t\t\t};\n\t\t\tvar result = [];\n\t\t\tfor (var i = count - 1, len = data.length; i < len; i++) {\n\t\t\t\tvar val = avg(data.slice(i - count + 1, i));\n\t\t\t\tresult.push({ time: data[i].time, value: val });\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\n\t\t// var minimumPrice = data[0].value;\n\t\t// var maximumPrice = minimumPrice;\n\t\t// for(var i = 1; i < data.length; i++) {\n\t\t//   var price = data[i].value;\n\t\t//   if (price > maximumPrice) {\n\t\t//     maximumPrice = price;\n\t\t//   }\n\t\t//   if (price < minimumPrice) {\n\t\t//     minimumPrice = price;\n\t\t//   }\n\t\t// }\n\t\t// var avgPrice = (maximumPrice + minimumPrice) / 2;\n\n\t\t// var lineWidth = 2;\n\t\t// var minPriceLine = {\n\t\t//   price: minimumPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'min price',\n\t\t// };\n\t\t// var avgPriceLine = {\n\t\t//   price: avgPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'avg price',\n\t\t// };\n\t\t// var maxPriceLine = {\n\t\t//   price: maximumPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'max price',\n\t\t// }\n\n\t\t//candleSeries.createPriceLine(minPriceLine);\n\t\t//candleSeries.createPriceLine(avgPriceLine);\n\t\t//candleSeries.createPriceLine(maxPriceLine);\n\t\t//chart.timeScale().fitContent();\n\n\n\n\t}, 100);\n\n\n\n\treturn (\n\t\t<>\n\n\t\t\t<Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\t\t\t\t<Grid item xs={12} sm={12} >\n\n\t\t\t\t\n\t\t\t\t <div id=\"showChartTitle\" style={{ fontSize: \"12px\" }}> </div>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} sm={12} >\n\t\t\t\t<div id=\"chart\">\n\n\t\t\t\t</div>\n\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t\n\t\t\n\n\t\t</>\n\n\t);\n}","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n        \n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { resolveResponse } from \"./ResponseHandler\";\nimport AdminService from \"../components/service/AdminService\";\nimport TradeConfig from '../components/MyTrade/TradeConfig';\nimport * as moment from 'moment';\nimport Notify from './Notify';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\n\n\nclass CommonOrderMethod {\n\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n              //  this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n              //  this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n\n    getStockTokenDetails = (SYMBOL) => {\n        // AdminService.autoCompleteSearch(e.target.value).then(searchRes => {   \n        //     let searchResdata =  searchRes.data; \n        //     if(e.target.value){\n        //         var uppercaseName =  e.target.value.toUpperCase() + \"-EQ\"; \n        //         var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.symbol === uppercaseName);      \n        //       //  console.log(\"found\", found[0] && found[0].symbol); \n        //         if(found.length){ \n        //             setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token'] : found[0].token });    \n        //         }\n        //     }\n\n        //  })\n    }\n\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        // if (isAutomatic != \"Automatic\") {\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n        //         return;\n        //     }\n        // }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n           if(quantity > 0 && sectorItem.qtyToTake ) {\n                quantity = sectorItem.qtyToTake;\n           }           \n           console.log(symbol, \"  quantity can be order \", sectorItem, quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                    \n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n\n\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                            histdata.data.forEach((element, index) => {\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                                closeingData.push(element[4]);\n                                highData.push(element[2]);\n                                lowData.push(element[3]);\n                                openData.push(element[3]);\n                                valumeData.push(element[5]);\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            });\n\n                            var inputRSI = { values: closeingData, period: 14 };\n                            var lastRsiValue = RSI.calculate(inputRSI)\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n        \n                            var inputVWAP = {\n                                open: openData,\n                                high: highData,\n                                low: lowData,\n                                close: closeingData,\n                                volume: valumeData\n                            };\n        \n                            var input = {\n                            period : 20, \n                            values : bbdata,\n                            stdDev : 2\n                            }\n        \n                            var bb = BollingerBands.calculate(input); \n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\n\n                            var bbLastValue = bb[bb.length-1]; \n\n                            \n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                \n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                       \n\n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                    \n                            }\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                          \n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                            }\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption, callback);\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        var callData = {\n                            \"transactiontype\": orderType,//BUY OR SELL\n                            \"tradingsymbol\": symbol,\n                            \"symboltoken\": token,\n                            \"status\": false\n                        }\n                        callback(callData);\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n            }\n        }).catch(function (error) {\n\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n    \n\n    placeOptionOrder = (orderOption) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": orderOption.producttype ? orderOption.producttype : \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": orderOption.exchange ? orderOption.exchange : \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n        this.placeOptionSLMOrder(orderOption);\n\n\n        // AdminService.placeOrder(data).then(res => {\n        //     let data = resolveResponse(res);\n        //     //  console.log(data);   \n        //     if (data.status && data.message === 'SUCCESS') {\n        //         if (orderOption.stopLossPrice) {\n        //             setTimeout(() => {\n        //                 this.placeOptionSLMOrder(orderOption);\n        //             }, 1000);\n        //         }\n        //         this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n        //         var callData = {\n        //             \"token\": orderOption.symboltoken,\n        //             \"status\": true\n        //         }\n        //     }\n\n        // })\n    }\n\n    placeOptionSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossTriggerPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": \"SELL\", \n            \"exchange\": slmOption.exchange,\n            \"producttype\": slmOption.producttype, \n            \"duration\": \"DAY\",\n            \"price\": slmOption.stopLossPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n\n    \n\n\n\n    placeOrderMethod = (orderOption, callback) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n                callback(callData);\n                return;  \n            }\n\n        })\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n}\n\nexport default new CommonOrderMethod();\n\n   ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\nimport AdminService from \"./service/AdminService\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CommonOrderMethod from \"../utils/CommonMethods\";\nimport Spinner from \"react-spinner-material\";\nimport Notify from '../utils/Notify';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        buyFlag: true,\n        sellFlag: true,\n        searchSymbol: \"\",\n\n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const autoSearchList = [];\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n\n    function handleInput(e) {\n        setValues({ ...values, ['searchSymbol']: e.target.value });\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n\n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token']: found[0].token });\n                }\n            }\n        })\n    }\n\n    function handleInputQty(e) {\n        setValues({ ...values, ['qtyToTake']: e.target.value });\n    }\n\n    function callbackAfterOrderDone(order) {\n        setValues({ ...values, ['buyFlag']: order.status });\n        setValues({ ...values, ['sellFlag']: order.status });\n        setValues({ ...values, ['searchSymbol']: '' });\n    }\n\n    function handleClick(type) {\n\n        if (values.token && values.searchSymbol) {\n            if (type == 'BUY') {\n                setValues({ ...values, ['buyFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol, \n                    qtyToTake : values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\n            }\n\n            if (type == 'SELL') {\n                setValues({ ...values, ['sellFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol,\n                    qtyToTake : values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\n            }\n        } else {\n            Notify.showError(\"Type Symbol!!!\");\n        }\n    }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            {/* <Button href={\"/mtrade/#/home\"}>\n                                <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n\n                            </Button> */}\n\n                        </Grid>\n\n\n                        <Grid item  >\n\n                            <Grid\n                                justify=\"space-between\"\n                                container\n                                spacing={2}\n                            >\n\n                                <Grid item  >\n                                    <Typography style={{  marginTop: '20px',fontSize:\"12px\" }}  variant=\"h6\" noWrap >\n                                       <span id=\"niftySpid\" onClick={() => props.LoadSymbolDetails(\"NIFTY\")}  > </span>  &nbsp;&nbsp;  <span id=\"bankniftySpid\" onClick={() => props.LoadSymbolDetails(\"BANKNIFTY\")} > </span>  \n                                     </Typography> \n                                    \n                                </Grid>\n\n                                <Grid item>\n                                    <TextField label=\"Type full Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput} />\n                                </Grid>\n                                <Grid item>\n                                    <TextField label=\"Qty\" style={{width:\"50px\"}} type=\"number\" name=\"qtyToTake\" value={values.qtyToTake} onChange={handleInputQty} />\n                                </Grid>\n                                <Grid item>\n                                    {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\n                                </Grid>\n\n                                <Grid item>\n                                    {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                               \n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/order-watchlist\"}>\n                                        Option <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/sector-heat-map2\"}>\n                                        Hit Map <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" target={'_blank'} href={\"/mtrade/#/find-fast-movement\"}>\n                                        Fast Move <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n\n                                {/* <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid> */}\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                               \n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position \n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={false} >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list.length ? data.list.map((row, i)  => (\n                  <>\n                      {row ? <ListItem  button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", background:row.highlisht ? \"#375a00\": \"\"}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol} /> {row.ltp} ({row.nc}%)\n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '10px'}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol +\" \"+row.orderType} /> <span style={{fontSize: '14px'}}>{row.ltp} ({row.nc}%)  <br /> At {row.foundAt} </span> \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  onClick={() => data.LoadSymbolDetails(row.symbol)} button style={{  padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <p style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '16px'}}  > \n                          \n                          {row.symbol} {row.ltp} ({row.nc}%)   <br /> \n                 \n                          Tot Buy Bids: {row.totalBuyQuantity}    <br />\n                          Tol Sell Bids: {row.totalSellQuantity}    <br />\n                          DeliveryToTraded {row.deliveryToTradedQuantity}% \n                          </p>\n                          \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { createChart } from 'lightweight-charts';\nimport Input from \"@material-ui/core/Input\";\n\nimport { w3cwebsocket } from 'websocket';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport LightChartCom from \"./LightChartCom\";\nimport SimpleExpansionPanel from \"./SimpleExpansionPanel\";\nimport SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\nimport LiveBidsExpantion from \"./LiveBidsExpantion\";\n\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"\",  //NR4ForNextDay  NR4_SameDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            backTestResultDateRange: [],\n            searchFailed: 0,\n            openEqualHighList: [],\n            openEqualLowList: [],\n            chartStaticData: [],\n            volumeCrossedList: [],\n            slowMotionStockList: [],\n            volumeBreakoutlast5CandleList: [], \n            oneHourBullBearCheckList: [],\n            timeFrame: \"FIFTEEN_MINUTE\",\n            cursor: '',\n            advanceShareCount: 0,\n            declineShareCount: 0,\n            UnchangeShareCount: 0,\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList :  [] //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n          //  console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n        //    console.log(\"time\", this.state.timeFrame);\n            if (this.state.tradingsymbol) {\n                this.showStaticChart(this.state.symboltoken);\n            }\n        });\n\n\n    }\n\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value == 'NR4_Daywide_daterage') {\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\n\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n            //    this.updateSocketWatch();\n            this.checkOpenEqualToLow();\n            this.setState({ cursor: '' });\n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n                //      this.updateSocketWatch();\n                this.checkOpenEqualToLow();\n                this.setState({ cursor: '' });\n            });\n        }\n    }\n    checkOpenEqualToLow = async () => {\n\n        this.setState({\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: []\n        });\n\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n\n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\": element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if (LtpData) {\n\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    LtpData.nc = change;\n                    LtpData.symbol = element.symbol; \n                    \n                    this.state.symbolList[index].ltp = LtpData.ltp;\n                    this.state.symbolList[index].nc =change; \n\n                    if (LtpData && LtpData.open == LtpData.low) {\n                        console.log(\"o=l\", LtpData);\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\n                        if(!isfound.length)\n                        this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\n                    }\n\n                    if (LtpData && LtpData.open == LtpData.high) {\n                        console.log(\"o=h\", LtpData);\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\n                        if(!isfound.length)\n                        this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\n\n                    }\n\n                    if (LtpData.perChange > 0)\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\n                    else if (LtpData.perChange < 0)\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\n                    else\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\n\n\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\n\n                 //   this.dailyBasisInfoCheck(element.token, element);\n\n                   // this.checkSlowMotionStock(element.token, element);\n\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n\n\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n\n\n    makeConnection = (wsClint) => {\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        wsClint.send(firstTime_req);\n        this.updateSocketWatch(wsClint);\n    }\n\n    updateSocketWatch = (wsClint) => {\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n    updateSocketDetails = (wsClint) => {\n        wsClint.onopen = (res) => {\n            this.makeConnection(wsClint);\n            this.updateSocketWatch(wsClint);\n        }\n\n        wsClint.onmessage = (message) => {\n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData = JSON.parse(data);\n            var symbolListArray = this.state.symbolList;\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                var foundLive = liveData.filter(row => row.tk == element.token);\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                    symbolListArray[index].ltp = foundLive[0].ltp;\n                    symbolListArray[index].nc = foundLive[0].nc;\n                    //  console.log(\"ws onmessage: \", foundLive);\n\n                }\n            });\n            symbolListArray && symbolListArray.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n            this.setState({ symbolList: symbolListArray });\n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e);\n        }\n\n        setInterval(() => {\n            //  this.makeConnection();\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n            // console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n        }, 59000);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Home\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 900, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\n\n        this.checkOpenEqualToLow();\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            // const wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n            // this.updateSocketDetails(wsClint);\n            setInterval(() => {\n                if (this.state.tradingsymbol) {\n                    this.getLTP();\n                    //this.showStaticChart(this.state.symboltoken);\n                }\n                var fastMovementList  = localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')); \n                fastMovementList && fastMovementList.length && fastMovementList.reverse(); \n                this.setState({fastMovementList :fastMovementList })\n            }, 1000);\n           \n            setInterval(() => {\n                this.checkSlowMotionCheckLive(); \n             }, 5*75000);\n\n           \n             setInterval(() => {\n                this.searchValumeBreakoutStock(); \n            }, 15*75000);\n          \n\n             var tostartInteral =   setInterval(() => {\n                var time = new Date();\n                console.log(\"setinterval \", new Date().toLocaleString()); \n                if(time.getMinutes() % 60 === 0){\n                    setTimeout(() => {\n                        this.oneHourBullBearCheck(); \n                    }, 90000);\n                    setInterval(() => {\n                        this.oneHourBullBearCheck(); \n                     }, 60000 * 60 + 70000 );  \n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n            \n        }     \n        \n        this.oneHourBullBearCheck(); \n\n       // this.checkLiveBids();\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment = startdate;\n            const endMoment = enddate;\n\n\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if (this.state.stopScaningFlag) {\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n\n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(0, 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var foundStock = {\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                symbol: element.symbol,\n                                token: element.token,\n                                pattenName: \"NR4\",\n                                SellAt: sellenty,\n                                high: firstCandle[2],\n                                low: firstCandle[3],\n                                BuyAt: buyentry,\n                                candleChartData: candleChartData,\n                                close: firstCandle[4]\n                            }\n\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    }\n\n\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (candle5min[2] < buyHighest) {\n                    buyHighest = candle5min[3];\n                }\n\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[3] < buyentry) {\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange);\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if (!buyEntryFlag && perChange >= 1) {\n\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2]);\n\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            }\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\n\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (buyHighest < histdataInside[index][2]) {\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[2] > buyentry) {\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n\n\n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if (!buyEntryFlag) {\n\n                    if (firstTimeTrail && perChange >= 0.7) {\n                        trailCount += 1;\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\n                        longTradeFound.sellEntyPrice = minPrice;\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\n                        firstTimeTrail = false;\n                    } else {\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\n\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\n\n                        if (perchngfromTriggerPrice > 0.7) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\n\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\n                            break;\n                        }\n\n                    }\n\n\n\n\n\n\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\n                        break;\n                    }\n\n                }\n\n\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            } //candle loop end\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": element.token,\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                            }\n\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\n                                histdataInside = histdataInside && histdataInside.data;\n\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n\n                            }).catch(error => {\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\n                            });\n\n\n\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[2] > buyentry) {\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                            //     sumPercentage += perChng;\n\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[2],\n                            //         stopLoss: firstCandle[3],\n                            //         buyExitPrice: buyentry,\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\n                            //         candleChartData : candleChartData,\n                            //     }\n                            //     if (Math.floor(10000 / firstCandle[2])){ \n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n                            // }\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[3] < sellenty) {\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                            //     sumPercentage += perChng;\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: sellenty,\n                            //         stopLoss: firstCandle[2],\n                            //         buyExitPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[3],\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\n                            //         candleChartData : candleChartData\n                            //     }\n                            //     if(Math.floor(10000 / firstCandle[3])){\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n\n\n                            // }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            var currentDate = date.format('DD-MM-YYYY');\n\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\n\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                sumPercentage += perChng;\n\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[2],\n                                    stopLoss: firstCandle[3],\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[2])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n\n                                }\n\n                            }\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                sumPercentage += perChng;\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: sellenty,\n                                    stopLoss: firstCandle[2],\n                                    buyExitPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[3],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[3])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\n\n                                }\n\n\n                            }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    }\n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\n        var longCandles = [], shortCandles = [];\n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata);\n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                longCandles.push(longData);\n\n                                totalLongs += 1;\n                                totalLongPer += perChng;\n                                totalLongHighPer += perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                shortCandles.push(shortData);\n\n                                totalShort += 1;\n                                totalShortPer += perChng;\n                                totalShortLowPer += perChngOnLow;\n\n                            }\n\n\n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs: totalLongs,\n                    totalShort: totalShort,\n                    totalLongPer: totalLongPer.toFixed(2),\n                    totalShortPer: totalShortPer.toFixed(2),\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\n                }\n                if (foundStock)\n                    foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles;\n                foundStock.shortCandles = shortCandles;\n\n\n                console.log(\"foundStock\", foundStock);\n                if (Math.floor(10000 / firstCandle[4])) {\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n\n\n\n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n\n                    if (transactiontype == \"BUY\") {\n                        this.placeSLMOrder(\"SELL\");\n                    }\n\n                    if (transactiontype == \"SELL\") {\n                        this.placeSLMOrder(\"BUY\");\n                    }\n\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name, i) => {\n\n        console.log(\"name\", name);\n        var token = '';\n\n         var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n\n        for (let index = 0; index < watchList.length; index++) {\n\n            if (watchList[index].symbol === name) {\n               \n                token = watchList[index].token;\n\n                console.log(\"name % token\", name,token );\n                this.setState({ tradingsymbol: name, symboltoken:watchList[index].token },function(){\n                    this.setState({ cursor: i }, function () {\n                        this.getLTP();\n                        this.showStaticChart(token);\n                    });\n                });\n                break;\n            }\n        }\n\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"19:00:00\";\n                else\n                    return \"01:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"23:00:00\";\n                else\n                    return \"03:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"24:21:00\";\n                else\n                    return \"07:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"28:01:00\";\n                else\n                    return \"10:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"100:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    calculateSMA = (data, count) => {\n\n      //  console.log(\"smarowdata\", data, count);\n\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n\n    //   calculateBBValue = (data, type ) => {\n\n    //     console.log(\"smarowdata\", data , count); \n\n    //     var result = [];\n    //     for (var i=count - 1, len=data.length; i < len; i++){\n    //       var val = avg(data.slice(i - count + 1, i));\n    //       result.push({ time: data[i].time, value: val});\n    //     }\n    //     return result;\n    //   }\n\n\n\n    showStaticChart = (token) => {\n\n        this.setState({ chartStaticData: '' }, function () {\n            console.log('reset done', token);\n        });\n\n        this.dailyBasisInfoCheck(token);\n\n\n        console.log(\"time in function \", this.state.timeFrame);\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        // var time = moment.duration(\"10:50:00\");\n        // var startDate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n\n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n\n                    this.state.smaLineSeries.setData(smaData);\n\n\n                    this.state.chart.subscribeCrosshairMove((param) => {\n\n                        var getit = param.seriesPrices[Symbol.iterator]();\n\n                        var string = \"\";\n                        var change = \"\";\n\n                        for (var elem of getit) {\n\n                            if (typeof elem[1] == 'object') {\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n                            } else {\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\n                            }\n                        }\n\n                        if (param.time)\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n                        else\n                            string += \" <b>Time: </b>\";\n\n\n                        const domElement = document.getElementById('showChartTitle');\n\n\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\n                        if (change < 0)\n                            str = \"<span style=color:red>\" + string + \"</span> \";\n\n                        domElement.innerHTML = str;\n                    });\n\n\n                });\n\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                        totalSum += per;\n\n                    });\n\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\n\n                }\n            }\n        })\n\n\n    }\n\n    checkSlowMotionStock = (token, stock) => {\n    \n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n                var bigCandleCount = 0; \n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    \n                    if(element){\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol,  per , element[0]);\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol,  per , element[0]);\n\n                        }\n                    }\n                }\n                console.log(\"Totalcount\", stock.symbol,  bigCandleCount);\n                if(bigCandleCount <= 15){\n\n                    stock.bigCandleCount = bigCandleCount; \n                    \n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function(){\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList)); \n                    }); \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async() => {\n    \n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n                    var closeingDatadaily = [], valumeSum = 0;\n    \n                    var bigCandleCount = 0, bullishCount = 0; \n    \n                    for (let index = candleDatad.length-3; index < candleDatad.length; index++) {\n                        const element = candleDatad[index];\n                        \n                        if(element){\n    \n                            var per = (element[4] - element[1]) * 100 / element[1];\n                            if (per >= 0.7) {\n                                bigCandleCount += 1;\n                            } \n                            if (per >= 0) {\n                                bullishCount += 1;\n                            }\n    \n                        }\n                    }\n                    if(bigCandleCount >= 1){\n                        row.highlisht =  true; \n                        window.document.title = \"SM: \" + row.symbol; \n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\n                    }\n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n    checkLiveBids = async() => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n          \n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n                \n                console.log(\"bid\",resd.data.data ); \n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if(resd.data && resd.data.data.length){\n\n                    let bidlivedata = resd.data.data[0]; \n                    let biddata = {\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                        symbol : bidlivedata.symbol, \n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity, \n                        nc : bidlivedata.pChange, \n                        ltp : bidlivedata.lastPrice, \n                    }\n    \n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function(){\n\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList)); \n                    });\n    \n        \n                }\n                \n            });\n            await new Promise(r => setTimeout(r, 100));  \n        }\n   \n    }\n\n\n    oneHourBullBearCheck = async() => {\n    \n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"02:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'ONE_HOUR',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n    \n                    let lastCandle = candleDatad[candleDatad.length-1];\n\n                    \n                    if((lastCandle[1] == lastCandle[3]) && (lastCandle[2] == lastCandle[4])){\n                        window.document.title = \"Hourly Buy: \" + row.symbol;\n                        console.log(row.name, \"Hourly Buy\",  candleDatad[candleDatad.length-1]); \n                        row.orderType =  \" Hourly Buy\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Bullish \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n                    if((lastCandle[1] == lastCandle[2]) && (lastCandle[3] == lastCandle[4])){\n                        window.document.title = \"Hourly Sell: \" + row.symbol;\n                        console.log(row.name, \"Hourly Sell\",  candleDatad[candleDatad.length-1]); \n                        row.orderType =  \" Hourly Sell\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Sell \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n               \n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n\n    searchValumeBreakoutStock = async() => {\n    \n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"60:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIFTEEN_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n    \n                    var  volumeSum = 0, findmaxVol = candleDatad[0][5]; \n                    let currentCandleVol =  candleDatad[candleDatad.length-1][5]; \n                    let firstCandleCloseingPrice = candleDatad[0][4], priceGoingHighCount=0;  \n                    let firstCandleCloseingPriceDownSide = candleDatad[0][4], priceGoingLowCount=0;  \n\n                    for (let index = candleDatad.length-6; index < candleDatad.length-1; index++) {\n                        const element = candleDatad[index];\n                        if(element){\n                            volumeSum += element[5];  \n                            //  console.log(row.symbol, ' last candle index ',index,   element[0] );\n                              if(findmaxVol < element[5]){\n                                  findmaxVol = element[5]; \n                              }\n      \n                              if(firstCandleCloseingPrice < element[4]){\n                                 console.log(row.symbol, firstCandleCloseingPrice , 'upside last candle index ',index,   element[4] );\n                                  firstCandleCloseingPrice = element[4]; \n                                  priceGoingHighCount += 1; \n                              }\n      \n                              if(element[4] < firstCandleCloseingPriceDownSide){\n                                  console.log(row.symbol, firstCandleCloseingPrice , ' downside last candle index ',index,   element[4] );\n                                  firstCandleCloseingPriceDownSide = element[4]; \n                                  priceGoingLowCount += 1; \n                               }\n                        }\n                       \n\n                    }\n                    let avgVol = volumeSum/5;\n\n                    if(currentCandleVol/findmaxVol > 1.75 && priceGoingHighCount >= 4){\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType =  \" Vol \" + (currentCandleVol/findmaxVol).toFixed(2) + \" Time & price incresing\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" time of average \", avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0],  findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" Time and price incresing\");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    if(currentCandleVol/findmaxVol > 1.75 && priceGoingLowCount >= 4){\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType =  \" Vol \" + (currentCandleVol/findmaxVol).toFixed(2) + \" Time & price decresing\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" time of average \", avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0],  findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" Time and price decresing \");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    // else if(currentCandleVol > avgVol){\n                    //     row.highlisht =  true; \n                    //     window.document.title = \"VB: \" + row.symbol;\n                    //     console.log(row.symbol, ' avg ', avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0]);\n                    //     this.speckIt('Volume  in ' + row.name + \" crossed average \");\n                    //     this.setState({ volumeBreakoutlast5CandleList: this.state.slowMotionStockList })\n                    // }\n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n\n\n\n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if(element){\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n                  \n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType,\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    // getHistory = (token) => {\n\n\n    //     this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\n    //     this.setState({ InstrumentHistroy: [] });\n    //     this.getLTP();\n\n\n    //     const format1 = \"YYYY-MM-DD HH:mm\";\n\n    //     var time = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(time);\n    //     // var startdate = moment(this.state.startDate).subtract(time);\n    //     var beginningTime = moment('9:15am', 'h:mma');\n\n    //     var data = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": token,\n    //         \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n    //         \"fromdate\": moment(startdate).format(format1),\n    //         \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n    //     }\n\n    //     AdminService.getHistoryData(data).then(res => {\n    //         let data = resolveResponse(res, 'noPop');\n    //         //    console.log(data); \n    //         if (data && data.data) {\n\n    //             var histCandles = data.data;\n    //             histCandles && histCandles.sort(function (a, b) {\n    //                 return new Date(b[0]) - new Date(a[0]);\n    //             });\n    //             if (histCandles.length > 0) {\n    //                 localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n    //                 this.setState({ InstrumentHistroy: histCandles });\n\n    //             }\n\n    //         }\n    //     })\n    // }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n\n            if (!foundInWatchlist.length) {\n\n                watchlist.push(fdata);\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\n                    this.LoadSymbolDetails(fdata.symbol);\n                });\n\n                this.setState({ symbolList: watchlist }, function () {\n                    //  this.updateSocketWatch();\n                });\n\n            }\n        }\n\n    }\n    onSelectItemChart = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token, seachSumbol: \"\" }, function () {\n                this.getLTP();\n                this.showStaticChart(fdata.token);\n                this.LoadSymbolDetails(fdata.symbol);\n            });\n\n        }\n\n    }\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    handleKeyDown = (e) => {\n\n        console.log(\"key\", e.keyCode);\n        //38 for down and 40 for up key\n        if (e.keyCode === 38 && this.state.cursor > 0) {\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\n        }\n\n        setTimeout(() => {\n            this.updateCandleOnkey();\n        }, 100);\n\n    }\n\n\n    updateCandleOnkey = () => {\n        var selectedKeyRow = localStorage.getItem('selectedKeyRow') && JSON.parse(localStorage.getItem('selectedKeyRow'));\n        if (selectedKeyRow.token && selectedKeyRow.symbol) {\n            this.setState({ tradingsymbol: selectedKeyRow.symbol, symboltoken: selectedKeyRow.token }, function () {\n                this.getLTP();\n                this.showStaticChart(selectedKeyRow.token);\n            });\n\n        }\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar   LoadSymbolDetails ={this.LoadSymbolDetails} />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n                    <Grid item xs={12} sm={2}  >\n                        <Paper>\n                            <Autocomplete\n                                freeSolo\n                                id=\"free-solo-2-demo\"\n                                disableClearable\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                onChange={this.onSelectItem}\n                                //+ ' '+  option.exch_seg\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                    option.symbol\n                                ) : []}\n                                renderInput={(params) => (\n                                    <TextField\n                                        onChange={this.onChange}\n                                        {...params}\n                                        label={\"Search Symbol\"}\n                                        margin=\"normal\"\n                                        variant=\"standard\"\n                                        name=\"search\"\n                                        onKeyDown={this.handleKeyDown}\n                                        value={this.state.search}\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    />\n                                )}\n                            />\n\n                            <div style={{ marginLeft: '10px' }}>\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                    <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                            <MenuItem value={element}>{element}</MenuItem>\n                                        ))\n                                        }\n\n                                    </Select>\n                                </FormControl>\n\n                            </div>\n\n\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map((row, i) => (\n                                    <>\n                                        <ListItem onKeyDown={this.handleKeyDown} button selected={this.state.cursor === i ? 'active' : null}\n\n                                            style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                                            {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                                            <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\n\n\n                                        </ListItem>\n\n                                    </>\n                                )) : ''}\n                            </div>\n\n                            {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n                        </Paper>\n                        <Typography style={{ fontWeight: 'bold' }}><span style={{ color: \"green\" }}> Advance {this.state.advanceShareCount} </span> <span style={{ color: \"red\" }}> Decline {this.state.declineShareCount} </span> <span> Unchange {this.state.UnchangeShareCount} </span> </Typography>\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={8}>\n                        <Paper style={{ padding: \"10px\" }}>\n\n\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                <Grid item xs={10} sm={3}>\n\n                                    {this.state.tradingsymbol ?\n                                        <Typography variant=\"body1\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\n\n                                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\n\n                                        </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\n\n                                    O: {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                    H: {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                    L: {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                    C: {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                                </Grid>\n\n                                <Grid item xs={10} sm={2}>\n\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        disableClearable\n                                        style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                        onChange={this.onSelectItemChart}\n                                        value={this.state.seachSumbol}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange}\n                                                {...params}\n                                                label={\"Search\"}\n                                                margin=\"normal\"\n                                                variant=\"standard\"\n                                                name=\"seachSumbol\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n\n\n                                <Grid item xs={10} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\n                                        <InputLabel htmlFor=\"gender\">Time</InputLabel>\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '3px' }} >\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                            <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\n                                            <MenuItem value={\"DELIVERY\"}>Del</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                                </Grid>\n\n\n                                <Grid item xs={1} sm={2}  >\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                                </Grid>\n\n\n\n                                <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                         <br />\n\n                                    {this.state.InstrumentLTP ? \n                                    <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n                                          \n                                        <div style={{ background: '#bdbdbd' }}>\n                                            <b>  Daily: {this.state.tradingsymbol}</b> <br />\n\n                                            <span title=\"20SMA\" item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                                Daily Avg Price: {this.state.DailyBulishStatus && this.state.DailyBulishStatus.toFixed(0)} {this.state.DailyBulishStatus ? this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                                            </span><br />\n\n\n                                            <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                <b>Daily Avg Volume:</b>  {(this.state.dailyAvgValume / 100000).toFixed(2)}L\n                                            </span><br />\n                                            <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                {this.state.todayCurrentVolume > this.state.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(this.state.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (this.state.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                                            </span>\n                                        </div>\n                                        <br />\n\n\n\n                                        <b>  Intraday: {this.state.timeFrame} : {this.state.tradingsymbol}</b> <br />\n                                        {this.state.bblastValue ? <span item xs={12} sm={12} >\n\n                                            <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.InstrumentLTP.ltp >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\n                                            BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\n                                            <span title=\"Green red mean price running below lower bb band\" style={{ color: this.state.InstrumentLTP.ltp <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\n                                        </span> : \"\"}\n\n                                        <span item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                            VWAP:  {this.state.vwapvalue && this.state.vwapvalue.toFixed(2)}\n                                        </span>\n                                        <br />\n                                        <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                        <br />\n                                        <b>Vol:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\n                                            <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n                                        ))}\n\n                                        <br />  <br />\n\n                                    </Grid>\n                                    : \"\"}\n                                    <Grid item xs={12} sm={9}  >\n                                        <div id=\"showChartTitle\">\n\n\n\n                                        </div>\n                                        <div id=\"tvchart\"></div>\n\n                                    </Grid>\n\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"50vh\" }} >\n\n\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> | Total:  <b style={{ color: this.state.totalPerchentageChange > 0 ? \"green\" : 'red' }}>  {this.state.totalPerchentageChange && this.state.totalPerchentageChange.toFixed(2)}% </b> from {this.state.startingFrom} </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                                </TableRow>\n                                            )) : ''}\n\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                        <br />\n\n\n\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest</Typography>\n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                            <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={4}>\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={6} style={{ marginTop: '28px' }}>\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </>}\n                                    SearchFailed:{this.state.searchFailed}\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12}>\n\n\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ? <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{ background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n        <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n\n\n\n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n\n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                <TableRow hover key={i}  >\n\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n        */}\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                    <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                    <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                    <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                </TableRow>\n\n\n\n                                            )) : ''}\n\n\n                                            <TableRow style={{ background: \"lightgray\" }} >\n\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                                <TableCell align=\"left\" > </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                        : \"\"}\n\n\n\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\n                                                    </TableRow>\n\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                    </TableRow>\n\n                                                </TableHead>\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n\n                                                        <TableRow hover key={i}  >\n\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                        */}\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                            <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                            <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                        </TableRow>\n\n\n                                                    ))}\n\n\n\n                                                    <TableRow style={{ background: \"lightgray\" }} >\n\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                        <TableCell align=\"left\"></TableCell>\n\n\n                                                        <TableCell align=\"left\" > </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n                                                        <TableCell align=\"left\"> </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                </TableBody>\n                                            </Table>\n\n\n\n                                        )) : ''}\n\n                                    </>\n\n                                        : \"\"}\n\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\n                                        </Typography>\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                    <TableRow hover key={i}  >\n                                                        <TableCell align=\"center\">{i + 1}</TableCell>\n                                                        <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                        <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                        <TableCell align=\"left\" title=\"based on last one 6 month\">\n\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                                </>\n                                                            ))}\n\n                                                            <br />\n\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n\n\n                                                                </>\n                                                            ))}\n\n                                                        </TableCell>\n\n\n                                                        <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.high}</TableCell>\n                                                        <TableCell align=\"left\">{row.low}</TableCell>\n                                                        <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                                    </TableRow>\n\n\n\n                                                )) : ''}\n\n                                            </TableBody>\n\n                                        </Table>\n\n                                        : \"\"}\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={2}>\n\n\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n                       \n\n                            <Grid item xs={12} sm={12}>\n                                <LiveBidsExpantion data={{ list: this.state.liveBidsList, title: \"Live Bids\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n                        \n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.oneHourBullBearCheckList, title: \"Hourly Bullish/Bearish\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n\n                        \n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.volumeBreakoutlast5CandleList, title: \"Last 5 bar Volume breakout\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.fastMovementList, title: \"Fast Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.volumeCrossedList, title: \"Average Volume Crossed\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualLowList, title: \"Open = Low : Buy\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualHighList, title: \"Open = High : Sell\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.slowMotionStockList, title: \"Last 5 days no Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n                    </Grid>\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            pcrTable : JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data,\n            optionChainData: JSON.parse( localStorage.getItem('optionChainData')),\n            filtered: JSON.parse(localStorage.getItem('optionChainData'))  && JSON.parse(localStorage.getItem('optionChainData')).filtered && JSON.parse(localStorage.getItem('optionChainData')).filtered.data  \n            \n            //JSON.parse(localStorage.getItem('optionChainData')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n    filterOptionChain = (name, actualValue) =>{\n        //console.log('filtername', name, actualValue); \n        var filereddata = []; \n    \n       var alldata =  this.state.optionChainData && this.state.optionChainData.records &&  this.state.optionChainData.records.data; \n\n       if(name === 'expiry' && actualValue === 'All' ) {\n            \n        filereddata =  alldata; \n       }\n     \n        if(name === 'expiry') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.expiryDate === actualValue){\n                    filereddata.push(element); \n                } \n            }   \n        }\n\n        if(name === 'strike') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.strikePrice === actualValue){\n                    filereddata.push(element); \n                } \n            } \n        }\n\n        \n\n        this.setState({filtered : filereddata, FilteredBY: name +\" \"+ actualValue});\n       //  console.log(filereddata); \n    }\n\n\n\n    componentDidMount() {\n\n\n       this.loadPackList();\n   //   console.log('this.state.optionChainData.records.expiryDates', this.state.optionChainData.records.expiryDates)\n\n\n        if(!JSON.parse(localStorage.getItem('cpdata')))\n        localStorage.setItem('cpdata', JSON.stringify( {data : []}) )\n        else\n        this.setState({products:  JSON.parse(localStorage.getItem('cpdata')).data})\n       // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n       //  clearInterval(this.state.stopnview)\n\n       if(!JSON.parse(localStorage.getItem('pcrTable')))\n       localStorage.setItem('pcrTable', JSON.stringify( {data : []}) )\n       else\n       this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')).data})\n     \n\n\n       var todayTime =  new Date(); \n       if(todayTime.getHours()>=9 && todayTime.getHours()< 16 ){\n            setInterval(() => {\n                this.loadPackList();\n            }, 60001 * 2);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60010 * 2);\n\n   //     this.findSupportResistence(this.state.optionChainData); \n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse( localStorage.getItem('optionChainData')).records.data;// this.state.optionChainData && this.state.optionChainData.records.data; \n        var     sumOfCEoi = 0,sumOfPEoi = 0; \n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n            \n            if(strikePrice === element.strikePrice){\n\n                if(element.CE && element.CE.openInterest){\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest; \n                }\n                if(element.PE && element.PE.openInterest){\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest; \n                }\n               \n            }                    \n        }\n       // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return {strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi , sumOfPEoi : sumOfPEoi}; \n\n      //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n           // console.log(optiondata);\n            var alldata =  optiondata && optiondata.records && optiondata.records.data; \n            //var underlyingValue = optiondata && optiondata.records.underlyingValue; \n            var PEoi = 0,CEoi = 0, PEoiChange=0,CEoiChange=0, peStrikePriceByDate=[]  ;\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element &&  element.PE){\n                    PEoi = PEoi + element.PE.openInterest; \n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest; \n                }\n                if(element &&  element.CE){\n                    CEoi = CEoi + element.CE.openInterest; \n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest; \n\n                } \n            }\n\n          var allexpiryDates =   optiondata.records.expiryDates; \n          var strikePrices =  optiondata.records.strikePrices; \n        //  var fliterExData = [];  \n           \n            // for (let index = 0; index < allexpiryDates.length; index++) {\n            //     const element = allexpiryDates[index];\n            //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n            //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n            //             fliterExData.push(alldata[indexJ]); \n            //         } \n            //     }                  \n            // }   \n\n            var myStrike = [14000, 14050, 14100, 14150, 14200, 14050, 14300, 14350, 14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n\n           // myStrike =   myStrike.sort(function(a, b){return b - a});\n       \n          //   var myStrike = [14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n       \n\n\n           // var myStrike = [15200,15250]; \n\n\n            var data  = [], totalspeoi= 0, totalsceoi= 0;\n             myStrike.forEach(element => {\n                var resdata =  this.getDataforStrike(element); \n                totalspeoi = totalspeoi+resdata.sumOfPEoi; \n                totalsceoi = totalsceoi+resdata.sumOfCEoi; \n\n                data.push(resdata); \n             \n               // console.log(element, resdata);\n                \n                 \n             });\n             this.setState({AllspTotalOI : data, selectedSPpcr : (totalspeoi / totalsceoi).toFixed(3), totalspeoi : totalspeoi,  totalsceoi : totalsceoi }); \n\n            // for (let index = 0; index < alldata.length; index++) {\n            //     const element = alldata[index];\n              \n            //     // if(alldata[index].strikePrice ==  14800){\n            //     //     fliterExData.push(element); \n            //     // } \n            //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n            //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n            //             fliterExData.push(element); \n            //         }   \n            //     }\n               \n            // }   \n\n//            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({CEoi: CEoi, PEoi : PEoi, allStrikediff:  PEoi - CEoi, CEoiChange: CEoiChange,PEoiChange: PEoiChange,allStrikeChngeDiff:  PEoiChange - CEoiChange });\n    }\n\n    \n\n\n\n    loadPackList() {\n\n\n        var data = { allPacks:true, portal: true};\n        AdminService.getBNcpdata(\"NIFTY\")\n            .then((res) => {\n        //     let data = resolveResponse(res);\n\n             var data =  res.data && res.data;\n\n             \n           localStorage.setItem(\"optionChainData\",  JSON.stringify( data) );\n\n          // this.findSupportResistence(data); \n\n           // console.log(\"livedata\", data.filtered);\n\n           this.setState({filtered : data.filtered && data.filtered.data , optionChainData: data});\n\n            if(data.filtered){\n\n                var diff =  data.filtered.PE.totOI - data.filtered.CE.totOI; \n\n                var newdata = {\n                    dateTime : this.dateFormat(new Date()), \n                    totCEOI : data.filtered.CE.totOI ,\n                    totCEVol: data.filtered.CE.totVol, \n                    totPEOI: data.filtered.PE.totOI , \n                    totPEVol: data.filtered.PE.totVol, \n                    diff: diff, \n                    totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')), \n                    totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')), \n                    totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange')) \n\n                } \n                this.setState({curnewdata : newdata });\n\n                var resname = ''; \n                if(diff > 0 )\n                 resname = \"BUY\";\n                 else\n                resname = \"SELL\"\n                \n\n                document.getElementById('title').innerHTML=  (diff/100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange'))/100000).toFixed(2) + \"L\" +  \" NIFTY \"; \n               // createData.push(newdata); \n               if(JSON.parse(localStorage.getItem('cpdata'))){\n                var oldproducts = JSON.parse(localStorage.getItem('cpdata')); \n               // console.log(\"oldproductsindex0\", ); \n                var lastrow = oldproducts && oldproducts.data[0]; \n                \n\n                // oldproducts.data.forEach((data) => {\n                //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                //         newdata.isDuplicate = true; \n                //     }else{\n                //         newdata.isDuplicate = false;\n                //     }\n                // });\n                if(lastrow){\n                    newdata.isDuplicate = newdata.diff == lastrow.diff ? true : false\n                    newdata.totCEOIChange = (((newdata.totCEOI-lastrow.totCEOI) * 100)/lastrow.totCEOI).toFixed(3);;\n                    newdata.totPEOIChange =   (((newdata.totPEOI-lastrow.totPEOI) * 100)/lastrow.totPEOI).toFixed(3);;\n                    newdata.totDiffChange =  (((newdata.diff-lastrow.diff) * 100)/lastrow.diff).toFixed(3); \n                }else{\n                    newdata.isDuplicate = false\n                    newdata.totCEOIChange = 0;\n                    newdata.totPEOIChange =  0;\n                    newdata.totDiffChange =  0; \n                }\n                \n\n                oldproducts.data.unshift(newdata);\n\n                if(data.records){\n                    oldproducts.timestamp = data.records.timestamp; \n                    oldproducts.underlyingValue = data.records.underlyingValue; \n                }\n              \n\n                localStorage.setItem(\"cpdata\",  JSON.stringify( oldproducts) );\n\n                this.setState({products: oldproducts.data, underlyingValue : data.records.underlyingValue,timestamp: data.records.timestamp  })\n               }\n               \n             //  console.log(\"dddd\", this.state.curnewdata); \n   \n                 \n            }\n\n\n            this.updatepcr()\n            this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data})\n\n            });\n\n\n\n\n    }\n\n\n    updatepcr(){\n\n\n        var pcrdata =  {\n            allPCR : (this.state.PEoi /this.state.CEoi).toFixed(3), \n            expiryPCR: localStorage.getItem('thisWeekPCR'), \n            selectedSPpcr: this.state.selectedSPpcr, \n         }\n\n         if(JSON.parse(localStorage.getItem('pcrTable'))){\n             var pcrTable = JSON.parse(localStorage.getItem('pcrTable')); \n             pcrTable.data.unshift(pcrdata);\n             localStorage.setItem(\"pcrTable\",  JSON.stringify( pcrTable) );\n         }\n         \n         console.log(pcrdata); \n         this.setState({pcrTable: pcrTable })\n    }\n \n\n    \n\n    dateFormat(date){ \n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n  \n\n\n    render(){\n     \n        var totCEOI = 0, totCEVol = 0,totCEOIChange=0, totCEBUY=0, totCESell=0; \n        var totPEOI = 0, totPEVol = 0,totPEOIChange=0, totPEBUY=0, totPESell=0; \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                    <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        My View({this.state.products && this.state.products.length}) <b> Nifty: {this.state.underlyingValue}</b> at Time: {this.state.timestamp} \n                        {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                    </Typography> \n                </Grid>\n\n                <Grid item xs={2} sm={2} > \n                    <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                            id=\"expiry\"\n                            name=\"expiry\"\n                            value={this.state.expiry}\n                            onChange={this.onChange}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                            {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.expiryDates ? this.state.optionChainData.records.expiryDates.map((name, index) => (\n                                <MenuItem key={name+'key'+index} value={name} >\n                                    {name}\n                                </MenuItem>\n                            )): \"\"}\n                            </Select>\n                        </FormControl>\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} > \n                            <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                                    <Select\n                                    labelId=\"strike\"\n                                    id=\"strike\"\n                                    max-height={'100%'}\n                                    name=\"strike\"\n                                    value={this.state.strike}\n                                    onChange={this.onChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.strikePrices ? this.state.optionChainData.records.strikePrices.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                        </Grid>\n                        <Grid item xs={1} sm={1} style={{paddingTop:'20px',paddingLeft:'20px'}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button>      \n                        </Grid>\n\n                </Grid>\n              \n            \n                <Grid item xs={12} sm={12}>\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}}>\n                   \n                    <Grid container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                        <Grid item xs={3} sm={3} >\n                         \n                         <span>All PUT OI: <b>{this.state.PEoi} ({(this.state.PEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL OI: <b>{this.state.CEoi} ({(this.state.CEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Diff: {\n                             this.state.allStrikediff > 0 ? <b style={{color:'green'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b> } \n                        </span>\n                        </Grid>\n\n                        <Grid item xs={3} sm={3} >\n                \n                        <span>All PUT Chng in OI: <b>{this.state.PEoiChange} ({(this.state.PEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL Chng in  OI: <b>{this.state.CEoiChange} ({(this.state.CEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Chng in Diff: {\n                             this.state.allStrikeChngeDiff > 0 ? <b style={{color:'green'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b> } \n                        </span>\n\n\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} >\n\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>ALL PCR: <b>{(this.state.PEoi /this.state.CEoi).toFixed(3) } </b></span>\n                         </Typography> \n                         </Grid>\n\n                         <Grid item xs={2} sm={2} >\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>Expire Week PCR: <b>{ localStorage.getItem('thisWeekPCR') } </b></span>\n                        </Typography> \n                        </Grid>\n                         \n\n\n                         <Grid item xs={2} sm={2} >\n                         <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                            <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n\n                         </Typography> \n                \n              \n\n                        </Grid>\n\n\n                        \n            </Grid>\n            </Paper>\n            </Grid>\n\n           \n\n\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={0}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n              \n              \n                <Grid item xs={7} sm={7} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                            <TableCell align=\"center\"><b>Time</b></TableCell>\n                            <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                            <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                            <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>                            \n\n                            <TableCell align=\"center\"><b>Call OI</b></TableCell>\n\n                         \n                            <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>                            \n                            \n                            {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody hover style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.products ? this.state.products.map(row => (\n                            <TableRow key={row.dateTime} style={{background: row.isDuplicate ? \"lightgray\":\"\"}}>\n                                <TableCell align=\"center\">{row.dateTime.substring(19,11)}</TableCell>\n                                <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color:'green' }} >BUY</Typography>  : <Typography variant=\"body2\" style={{ color:'red' }} >SELL</Typography> }</TableCell>\n                                <TableCell align=\"center\">{row.diff} ({(row.diff/100000).toFixed(2)}L)({row.totDiffChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totDiffChange}%</span>: row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totDiffChange}%</span> }) </TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff/100000).toFixed(2)}L)</TableCell>\n\n                                <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totPEOIChange}%</span>: row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totPEOIChange}%</span> })</TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totCEOIChange}%</span>: row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold' }} >{row.totCEOIChange}%</span> })</TableCell>\n                              \n                                <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n                \n                            </TableRow>\n                        )):<Spinner/>}\n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={3} sm={3} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }}  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi/100000).toFixed(3)}L</b></TableCell>\n                            <TableCell align=\"center\"><b>Strike Price</b> </TableCell>\n                            <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi/100000).toFixed(3)}L</b></TableCell>\n                           \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                             <TableRow  hover key={row.dateTime} >\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfCEoi} ({(row.sumOfCEoi/100000).toFixed(2)}L)</TableCell>\n                             <TableCell  align=\"center\">{row.strikePrice}</TableCell>\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfPEoi} ({(row.sumOfPEoi/100000).toFixed(2)}L)</TableCell>\n                     \n                         </TableRow>\n                        )):<Spinner/>}\n\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={2} sm={2} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table   id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\">ALL Pcr</TableCell>\n                            <TableCell align=\"center\">Expiry Pcr </TableCell>\n                            <TableCell align=\"center\">Selected Pcr</TableCell>\n                         \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{whiteSpace: \"nowrap\"}}>\n\n                        {this.state.pcrTable && this.state.pcrTable.length>0 && this.state.pcrTable ? this.state.pcrTable.map(row => (\n                            <TableRow  hover key={row.expiryPCR} >\n                                <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                <TableCell  align=\"center\">{row.expiryPCR}</TableCell>\n                                <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                            </TableRow>\n                        )):<Spinner/>}\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"2px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableHead variant=\"head\">\n\n                    <TableRow variant=\"head\"  >\n                        \n                        <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                    </TableRow>\n                    <TableRow variant=\"head\" >\n                    \n                        {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n                     \n\n                        <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI')/100000).toFixed(3)}L) </b></TableCell>\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                        {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> STRIKE PRICE</span> </TableCell>\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> Expiry</span> </TableCell>\n\n                        {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                        <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                        {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI')/100000).toFixed(3)}L)</b></TableCell>\n\n\n                    </TableRow>\n                </TableHead>                   \n                    \n                    <TableBody>\n                    \n                        { this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                            <TableRow hover key={index} style={{background: opdata.isDuplicate ? \"lightgray\":\"\"}}>\n                              \n                                {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                { opdata && opdata.CE && opdata.PE ? <>\n                                            <TableCell {...totCEOI = totCEOI +  opdata.CE.openInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.CE.change/opdata.strikePrice-opdata.CE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> }) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                        \n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }} align=\"center\"><span> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{borderRight: 'dashed', whiteSpace: \"nowrap\"}} align=\"center\" ><span style={{paddingLeft:'5px',paddingRight:'5px'  }}> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.PE.change/opdata.strikePrice-opdata.PE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}}align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n                            <TableRow  variant=\"head\"> \n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOI',totCEOI)}><b>{totCEOI}<br />({(totCEOI/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange',totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEVol',totCEVol)}><b>{totCEVol}<br />({(totCEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n                                {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                <TableCell {...localStorage.setItem('thisWeekPCR',(totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n\n\n                                {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                {/* <TableCell colSpan={3} align=\"center\"></TableCell> */} \n                                <TableCell align=\"center\" {...localStorage.setItem('totPEVol',totPEVol)}><b>{totPEVol}<br />({(totPEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange',totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOI',totPEOI)}><b>{totPEOI}<br />({(totPEOI/100000).toFixed(3)}L)</b> </TableCell>\n\n                            </TableRow>\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n\n                \n          \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n  data.reverse();\n\n  for (let index = data.length - 20; index <  data.length; index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Parser from 'html-react-parser';\n\nimport Chart from \"./Chart\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview: '',\n            curnewdata: '',\n            showOptionUpside: 800,\n            showOptionDownside: 800,\n            timestamp: '',\n            totalCOI: 0,\n            expiry: '',\n            strike: '',\n            FilteredBY: '',\n            AllspTotalOI: [],\n            PEoi: 0,\n            CEoi: 0,\n            waitForChainFlag: true,\n            scrollcount: 0,\n            pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data,\n            optionChainDataBN: JSON.parse(localStorage.getItem('optionChainDataBN')),\n            filtered: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered.data,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'Securities in F&O',\n            selectOptionStock: \"NIFTY\",\n            underlyingValue: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.underlyingValue,\n\n            buyCallLot:1, \n            buyPutLot:1, \n            niftyLogSize : 50, \n            niftybankLogSize : 25, \n            \n\n\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n\n    }\n\n    onChangeSelectSymbol = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.loadPackList();\n        });\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.filterOptionChain(e.target.name, e.target.value);\n        });\n    }\n\n\n   \n\n    filterOptionChain = (name, actualValue) => {\n        //console.log('filtername', name, actualValue); \n        var filereddata = [];\n\n        var alldata = this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.data;\n\n        if (name === 'expiry' && actualValue === 'All') {\n\n            filereddata = alldata;\n        }\n\n        if (name === 'expiry') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.expiryDate === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n        if (name === 'strike') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.strikePrice === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n\n\n        this.setState({ filtered: filereddata, FilteredBY: name + \" \" + actualValue });\n        //  console.log(filereddata); \n    }\n\n    // componentWillUnmount() {\n    //     var tabledata = document.getElementById('tabledata'); \n    //     tabledata.removeEventListener('scroll', this.handleScroll);\n\n    // }\n\n    handleScroll = (data) => {\n\n        var scrollcount = this.state.scrollcount;\n\n        this.setState({ scrollcount: scrollcount += 1 });\n\n    }\n\n    onChangeCallLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculateCallMargin(); \n        });\n    }\n\n    calculateCallMargin =(e)=> {\n        this.state.filtered.forEach(element => {\n            if(element.CE && element.CE.lastPrice)  {\n                element.CE.totalMargin = Parser(  this.state.lotSize * this.state.buyCallLot+ \" * \" + element.CE.lastPrice  + \"<br /> <b> \" + (element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.CE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n    \n            }\n         \n        });\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    onChangePutLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculatePutMargin(); \n        });\n    }\n\n    calculatePutMargin =(e)=> {\n\n        this.state.filtered.forEach(element => {\n            if(element.PE && element.PE.lastPrice)  {\n                element.PE.totalMargin = Parser(  this.state.lotSize * this.state.buyPutLot+ \" * \" + element.PE.lastPrice  + \"<br /> <b> \" + (element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.PE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n\n            }\n        });\n\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    componentDidMount() {\n\n\n       \n\n        this.setState({ SecuritiesInFO: this.state.staticData[this.state.selectedWatchlist] }, function () {\n            // this.state.SecuritiesInFO && this.state.SecuritiesInFO.sort(function (a, b) {\n            //     if(a.name < b.name) { return -1; }\n            //     if(a.name > b.name) { return 1; }\n            //     return 0;\n            // });\n        });\n\n       \n\n\n        // var tabledatachart = document.getElementById('tabledatachart'); \n        // tabledatachart.addEventListener('scroll', this.handleScroll);\n\n        //   this.loadPackList();\n        //   console.log('this.state.optionChainDataBN.records.expiryDates', this.state.optionChainDataBN.records.expiryDates)\n\n\n        if (!JSON.parse(localStorage.getItem('optionDiffdata' + this.state.selectOptionStock)))\n            localStorage.setItem('optionDiffdata'+ this.state.selectOptionStock, JSON.stringify({ data: [] }))\n        else\n            this.setState({ products: JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock)).data })\n        // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n        //  clearInterval(this.state.stopnview)\n\n        if (!JSON.parse(localStorage.getItem('pcrTableBN')))\n            localStorage.setItem('pcrTableBN', JSON.stringify({ data: [] }))\n        else\n            this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n\n\n\n        var todayTime = new Date();\n        if (todayTime.getHours() >= 9 && todayTime.getHours() < 16) {\n            setInterval(() => {\n                this.loadPackList();\n            }, 60000 * 6);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60000 * 6);\n\n        // this.findSupportResistence(this.state.optionChainDataBN ? this.state.optionChainDataBN : \"\");\n\n\n        let lotSize = 25; \n        if(this.state.selectOptionStock == \"NIFTY\")\n         lotSize = 50;\n        if(this.state.selectOptionStock == \"BANKNIFTY\")\n        lotSize = 50;\n\n        this.setState({lotSize :lotSize}, function(){\n            this.calculateCallMargin(); \n            this.calculatePutMargin(); \n        })\n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.data;// this.state.optionChainDataBN && this.state.optionChainDataBN.records.data; \n        var sumOfCEoi = 0, sumOfPEoi = 0;\n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n\n            if (strikePrice === element.strikePrice) {\n\n                if (element.CE && element.CE.openInterest) {\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest;\n                }\n                if (element.PE && element.PE.openInterest) {\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest;\n                }\n\n            }\n        }\n        // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return { strikePrice: strikePrice, sumOfCEoi: sumOfCEoi, sumOfPEoi: sumOfPEoi };\n\n        //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n        // console.log(optiondata);\n        var alldata = optiondata && optiondata.records && optiondata.records.data;\n        // var underlyingValue = optiondata.records && optiondata.records.underlyingValue; \n        var PEoi = 0, CEoi = 0, PEoiChange = 0, CEoiChange = 0;\n        if (alldata) {\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element && element.PE) {\n                    PEoi = PEoi + element.PE.openInterest;\n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest;\n                }\n                if (element && element.CE) {\n                    CEoi = CEoi + element.CE.openInterest;\n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest;\n\n                }\n            }\n        }\n\n\n        //   var allexpiryDates =   optiondata.records.expiryDates; \n        //   var strikePrices =  optiondata.records.strikePrices; \n        //   var fliterExData = [];  \n\n        // for (let index = 0; index < allexpiryDates.length; index++) {\n        //     const element = allexpiryDates[index];\n        //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n        //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n        //             fliterExData.push(alldata[indexJ]); \n        //         } \n        //     }                  \n        // }   \n\n        var myStrike = [];\n\n        let startDiff = this.state.underlyingValue - this.state.showOptionDownside\n        let rem = Math.round(startDiff) % 100;\n        let startFrom = Math.round(startDiff) + 100 - rem;\n\n        let endDiff = this.state.underlyingValue + this.state.showOptionUpside;\n        let rem2 = Math.round(endDiff) % 100;\n        let endTo = Math.round(endDiff) + 100 - rem2;\n\n\n        console.log(this.state.underlyingValue, 'start from', startFrom, 'endto', endTo);\n\n\n        for (let index = startFrom; index <= endTo; index += 100) {\n            myStrike.push(index)\n        }\n\n        myStrike = myStrike.sort(function (a, b) { return b - a });\n\n\n\n        var data = [], totalspeoi = 0, totalsceoi = 0;\n        myStrike.forEach(element => {\n            var resdata = this.getDataforStrike(element);\n            totalspeoi = totalspeoi + resdata.sumOfPEoi;\n            totalsceoi = totalsceoi + resdata.sumOfCEoi;\n\n            data.push(resdata);\n\n            console.log(element, resdata);\n\n\n        });\n        this.setState({ AllspTotalOI: data, selectedSPpcr: (totalspeoi / totalsceoi).toFixed(3), totalspeoi: totalspeoi, totalsceoi: totalsceoi });\n\n        // for (let index = 0; index < alldata.length; index++) {\n        //     const element = alldata[index];\n\n        //     // if(alldata[index].strikePrice ==  14800){\n        //     //     fliterExData.push(element); \n        //     // } \n        //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n        //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n        //             fliterExData.push(element); \n        //         }   \n        //     }\n\n        // }   \n\n        //            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({ CEoi: CEoi, PEoi: PEoi, allStrikediff: PEoi - CEoi, CEoiChange: CEoiChange, PEoiChange: PEoiChange, allStrikeChngeDiff: PEoiChange - CEoiChange });\n    }\n\n\n\n\n\n    loadPackList() {\n\n\n        this.setState({ waitForChainFlag: false });\n\n        AdminService.getBNcpdata(this.state.selectOptionStock)\n            .then((res) => {\n                //     let data = resolveResponse(res);\n\n                var data = res.data && res.data;\n\n\n                localStorage.setItem(\"optionChainDataBN\", JSON.stringify(data));\n\n                // this.findSupportResistence(data);\n\n                // console.log(\"livedata\", data.filtered);\n\n                this.setState({ filtered: data.filtered && data.filtered.data, optionChainDataBN: data });\n\n                if (data.filtered) {\n\n                    var diff = data.filtered.PE.totOI - data.filtered.CE.totOI;\n\n                    var newdata = {\n                        dateTime: this.dateFormat(new Date()),\n                        totCEOI: data.filtered.CE.totOI,\n                        totCEVol: data.filtered.CE.totVol,\n                        totPEOI: data.filtered.PE.totOI,\n                        totPEVol: data.filtered.PE.totVol,\n                        diff: diff,\n                        totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')),\n                        totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')),\n                        totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange'))\n\n                    }\n                    this.setState({ curnewdata: newdata });\n\n\n                    document.getElementById('title').innerHTML = (diff / 100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange')) / 100000).toFixed(2) + \"L \" + this.state.selectOptionStock;\n                    // createData.push(newdata); \n                    if (JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock))) {\n                        var oldproducts = JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock));\n                        // console.log(\"oldproductsindex0\", ); \n                        var lastrow = oldproducts && oldproducts.data[0];\n\n\n                        // oldproducts.data.forEach((data) => {\n                        //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                        //         newdata.isDuplicate = true; \n                        //     }else{\n                        //         newdata.isDuplicate = false;\n                        //     }\n                        // });\n                        if (lastrow) {\n                            newdata.isDuplicate = newdata.diff === lastrow.diff ? true : false\n                            newdata.totCEOIChange = (((newdata.totCEOI - lastrow.totCEOI) * 100) / lastrow.totCEOI).toFixed(3);;\n                            newdata.totPEOIChange = (((newdata.totPEOI - lastrow.totPEOI) * 100) / lastrow.totPEOI).toFixed(3);;\n                            newdata.totDiffChange = (((newdata.diff - lastrow.diff) * 100) / lastrow.diff).toFixed(3);\n                        } else {\n                            newdata.isDuplicate = false\n                            newdata.totCEOIChange = 0;\n                            newdata.totPEOIChange = 0;\n                            newdata.totDiffChange = 0;\n                        }\n\n\n                        oldproducts.data.unshift(newdata);\n\n                        if (data.records) {\n                            oldproducts.timestamp = data.records.timestamp;\n                            oldproducts.underlyingValue = data.records.underlyingValue;\n                        }\n\n                        oldproducts.data.reverse();\n\n                        localStorage.setItem(\"optionDiffdata\" + this.state.selectOptionStock, JSON.stringify(oldproducts));\n\n\n\n                        this.setState({ products: oldproducts.data, underlyingValue: data.records.underlyingValue, timestamp: data.records.timestamp })\n                        this.setState({ waitForChainFlag: true });\n\n                    }\n\n                    //  console.log(\"dddd\", this.state.curnewdata); \n\n\n                }\n\n\n                this.updatepcr()\n                this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n            });\n\n    }\n\n\n    updatepcr() {\n\n\n        var pcrdata = {\n            allPCR: (this.state.PEoi / this.state.CEoi).toFixed(3),\n            expiryPCR: localStorage.getItem('thisWeekPCR'),\n            selectedSPpcr: this.state.selectedSPpcr,\n        }\n\n        if (JSON.parse(localStorage.getItem('pcrTableBN'))) {\n            var pcrTableBN = JSON.parse(localStorage.getItem('pcrTableBN'));\n            pcrTableBN.data.unshift(pcrdata);\n            localStorage.setItem(\"pcrTableBN\", JSON.stringify(pcrTableBN));\n        }\n\n        console.log(pcrdata);\n        this.setState({ pcrTableBN: pcrTableBN })\n    }\n\n\n\n\n    dateFormat(date) {\n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n\n\n\n    render() {\n\n        var totCEOI = 0, totCEVol = 0, totCEOIChange = 0, totCEBUY = 0, totCESell = 0;\n        var totPEOI = 0, totPEVol = 0, totPEOIChange = 0, totPEBUY = 0, totPESell = 0;\n\n        return (\n            <React.Fragment >\n\n                {/* <PostLoginNavBar /> */}\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"selectOptionStock\">Select Symbol</InputLabel>\n                            <Select\n                                id=\"selectOptionStock\"\n                                name=\"selectOptionStock\"\n                                value={this.state.selectOptionStock}\n                                onChange={this.onChangeSelectSymbol}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'NIFTY'} value={'NIFTY'} > {'NIFTY'}</MenuItem>\n                                <MenuItem key={'BANKNIFTY'} value={'BANKNIFTY'} > {'BANKNIFTY'}</MenuItem>\n\n                                {this.state.SecuritiesInFO && this.state.SecuritiesInFO.length ? this.state.SecuritiesInFO.map((row, index) => (\n                                    <MenuItem key={row.name} value={row.name} >\n                                        {row.name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                                id=\"expiry\"\n                                name=\"expiry\"\n                                value={this.state.expiry}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.expiryDates ? this.state.optionChainDataBN.records.expiryDates.map((name, index) => (\n                                    <MenuItem key={name + 'key' + index} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                            <Select\n                                labelId=\"strike\"\n                                id=\"strike\"\n                                max-height={'100%'}\n                                name=\"strike\"\n                                value={this.state.strike}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.strikePrices ? this.state.optionChainDataBN.records.strikePrices.map(name => (\n                                    <MenuItem key={name} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                        {this.state.waitForChainFlag ? <Button variant=\"contained\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button> : <Spinner />}\n                    </Grid>\n\n                    <Grid item xs={6} sm={4}>\n\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            {this.state.selectOptionStock} {this.state.underlyingValue} {this.state.timestamp}\n                            {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                        </Typography>\n                    </Grid>\n\n\n                </Grid>\n\n\n                <Grid item xs={12} sm={12}>\n                    <Paper style={{ padding: \"10px\", overflow: \"auto\" }}>\n\n                        <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={3} sm={3} >\n                                <span> <b>Total </b></span>\n                                <span> PE OI: <b> {(this.state.PEoi / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoi / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikediff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>}\n                                </span>\n                            </Grid>\n\n                            <Grid item xs={3} sm={5} >\n                                <span> <b>Total Chng </b></span>\n                                <span> PE OI: <b>{(this.state.PEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikeChngeDiff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}> {((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>}\n                                </span>\n\n\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>ALL PCR: <b>{(this.state.PEoi / this.state.CEoi).toFixed(3)} </b></span>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>Expire Week PCR: <b>{localStorage.getItem('thisWeekPCR')} </b></span>\n\n                            </Grid>\n\n\n\n                            {/* <Grid item xs={2} sm={2} >\n                            <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                                <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n                            </Typography> \n                        </Grid> */}\n\n\n\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={0} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid id=\"tabledatachart\" item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" size=\"small\">\n                            <TableHead key={2222} variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\"><b>Time</b></TableCell>\n                                    <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                                    <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Call OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody hover style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n\n\n                                {this.state.products ? this.state.products.map(row => (\n                                    <TableRow key={row.dateTime} style={{ background: row.isDuplicate ? \"lightgray\" : \"\" }}>\n                                        <TableCell align=\"center\">{row.dateTime.substring(19, 11)}</TableCell>\n                                        <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color: 'green' }} >BUY</Typography> : <Typography variant=\"body2\" style={{ color: 'red' }} >SELL</Typography>}</TableCell>\n                                        <TableCell align=\"center\">{row.diff} ({(row.diff / 100000).toFixed(2)}L)({row.totDiffChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totDiffChange}%</span> : row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totDiffChange}%</span>}) </TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff / 100000).toFixed(2)}L)</TableCell>\n\n                                        <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totPEOIChange}%</span> : row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totPEOIChange}%</span>})</TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                        <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totCEOIChange}%</span> : row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totCEOIChange}%</span>})</TableCell>\n\n                                        <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                        {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n                    <Grid item xs={4} sm={4} style={{ padding: \"2px\", overflow: \"auto\", height: \"300px\" }}>\n\n                        <Chart diffData={{ data: this.state.products, scrollcount: this.state.scrollcount }} />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead style={{}} variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi / 100000).toFixed(3)}L</b></TableCell>\n                                    <TableCell align=\"center\"><b>Strike Price<br />{this.state.totalspeoi - this.state.totalsceoi}({((this.state.totalspeoi - this.state.totalsceoi) / 100000).toFixed(3)}L) </b> </TableCell>\n                                    <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi / 100000).toFixed(3)}L</b></TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                                {this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                                    <TableRow hover key={row.dateTime} >\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfCEoi} ({(row.sumOfCEoi / 100000).toFixed(2)}L)</TableCell>\n                                        <TableCell align=\"center\">{row.strikePrice}</TableCell>\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfPEoi} ({(row.sumOfPEoi / 100000).toFixed(2)}L)</TableCell>\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\">ALL Pcr</TableCell>\n                                    <TableCell align=\"center\">Expiry Pcr </TableCell>\n                                    <TableCell align=\"center\">Selected Pcr</TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{ whiteSpace: \"nowrap\" }}>\n\n                                {this.state.pcrTableBN && this.state.pcrTableBN.length > 0 && this.state.pcrTableBN ? this.state.pcrTableBN.map(row => (\n                                    <TableRow hover key={row.expiryPCR} >\n                                        <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                        <TableCell align=\"center\">{row.expiryPCR}</TableCell>\n                                        <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                                    </TableRow>\n                                )) : ''}\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={12} style={{ padding: \"2px\", overflow: \"auto\", height: \"900px\" }}>\n\n                        <Table stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n\n                                <TableRow variant=\"head\"  >\n\n                                    <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                                </TableRow>\n                                <TableRow variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n                                    {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n\n\n                                    <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI') / 100000).toFixed(3)}L) </b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                                    {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> STRIKE PRICE</span> </TableCell>\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> Expiry</span> </TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                                    <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n\n\n\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI') / 100000).toFixed(3)}L)</b></TableCell>\n\n\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n\n                                {this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                                    <TableRow hover key={index} style={{ background: opdata.isDuplicate ? \"lightgray\" : \"\" }}>\n\n                                        {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                        {opdata && opdata.CE && opdata.PE && (opdata.strikePrice >= opdata.CE.underlyingValue - this.state.showOptionUpside && opdata.strikePrice <= opdata.CE.underlyingValue + this.state.showOptionDownside) ? <>\n\n                                            <TableCell {...totCEOI = totCEOI + opdata.CE.openInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.CE.change / (opdata.strikePrice - opdata.CE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n\n\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span> : opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>}) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                            \n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyCallLot} onChange={this.onChangeCallLot} name=\"buyCallLot\"  />\n                                             </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.totalMargin} </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.maxLoss} </TableCell>\n\n                                            \n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"CE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyCallLot)}> Call Buy </Button> </TableCell>\n\n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} align=\"center\"><span> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{ borderRight: 'dashed', whiteSpace: \"nowrap\" }} align=\"center\" ><span style={{ paddingLeft: '5px', paddingRight: '5px' }}> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"PE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyPutLot)}>Put Buy </Button> </TableCell>\n                                            <TableCell align=\"center\"> {opdata.PE.maxLoss} </TableCell>\n\n                                            <TableCell align=\"center\"> {opdata.PE.totalMargin} </TableCell>\n\n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyPutLot} onChange={this.onChangePutLot} name=\"buyPutLot\"  />\n                                             </TableCell>\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span> : opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.PE.change / (opdata.strikePrice - opdata.PE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                        </> : \"\"\n                                        }\n\n\n                                    </TableRow>\n\n                                )) : <Spinner />}\n\n\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOI', totCEOI)}><b>{totCEOI}<br />({(totCEOI / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange', totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEVol', totCEVol)}><b>{totCEVol}<br />({(totCEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell colSpan={3} align=\"center\"></TableCell>\n                                    {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                    <TableCell {...localStorage.setItem('thisWeekPCR', (totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                    <TableCell colSpan={5} align=\"center\"></TableCell>\n\n\n                                    {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                    {/* <TableCell colSpan={3} align=\"center\"></TableCell> */}\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEVol', totPEVol)}><b>{totPEVol}<br />({(totPEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange', totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOI', totPEOI)}><b>{totPEOI}<br />({(totPEOI / 100000).toFixed(3)}L)</b> </TableCell>\n\n                                </TableRow>\n\n\n                            </TableBody>\n\n\n                        </Table>\n                    </Grid>\n\n                </Grid>\n\n\n\n\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle: {\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TradeConfig from './TradeConfig.json';\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n                this.setState({  fundData :fundsResData.data }); \n                localStorage.setItem(\"netCapital\", fundsResData.data && fundsResData.data.net); \n\n               }\n        })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    Total Capital  :   {TradeConfig.totalCapital }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {TradeConfig.perTradeExposurePer}% \n                    </Typography>\n\n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {(TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100).toFixed(2)}\n                    </Typography>\n\n                    </Paper>\n\n                </Grid>\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.getTodayOrder();\n        }, 10000);\n       \n    }\n\n   \n    cancelOrderOfSame = (orderId,variety) =>  {\n       \n        var data = {\n            \"variety\":variety,\n            \"orderid\":orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n                this.getTodayOrder();\n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n               this.setState({triggerprice : 0}); \n               this.getTodayOrder();\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                         Oders Placed ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\n\n                                \n\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>AvgPrice</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>TriggerPrice</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\n\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\">\n                                        {/* {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity} */}\n                                    {row.quantity}\n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                       </>\n                                     : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\n                                        {row.orderstatus}\n                                        <br />\n\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \n                                       </>\n                                     : ''}\n\n                                    </TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.jwtToken,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode , jwtToken: jwtToken });\n\n            \n        wsClint.onopen  = (res) => {\n\n\n            var firstTime_req =  {\n                \"jwttoken\": this.state.jwtToken,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n           }\n    \n           \n            console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n            wsClint.send(firstTime_req);\n\n            // this.makeConnection();\n            // console.log('connected');\n            // this.updateSocketWatch();\n                \n             setTimeout(function(){\n               this.makeConnection(feedToken ,clientcode);\n             }, 1000);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nimport SymbolOptions from './BankNiftyView'\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList: [], \n            lastTradedData : {}\n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngList : [...this.state.orderPenidngList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n        var isDeleted = false, delitem =''; \n       var orderPenidngList =  localStorage.getItem('orderPenidngList') && JSON.parse( localStorage.getItem('orderPenidngList')); \n       for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n           const element = orderPenidngList[index];\n           if(row.token == element.token){\n            var delitem = orderPenidngList.splice(index, 1); \n            localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList)); \n            this.setState({orderPenidngList : orderPenidngList}); \n            break; \n           }\n       }\n\n       if(delitem[0].token == row.token){\n        return true;\n       }else {\n        return false;\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n       console.log(\"call back called\");\n     // this.deleteInOrderPenidngList(row); \n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n            const element = this.state.orderPenidngList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList)); \n                    this.setState({orderPenidngList : this.state.orderPenidngList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 2000; \n            if(this.state.orderPenidngList.length > 10){\n                intervaltime = this.state.orderPenidngList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n\n\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n    buyOption =(optiontype ,symbol, strikePrice, expiryDate, noOfLot)=>{\n      console.log(optiontype ,symbol, strikePrice, expiryDate); \n      let exp = expiryDate.toUpperCase().split('-'); \n       exp = exp[0]+exp[1]+exp[2]%1000; \n\n      let optionName = symbol + exp + strikePrice + optiontype; \n      console.log(optionName); \n\n      AdminService.autoCompleteSearch(optionName).then(res => {\n        let data = res.data; \n        let optionData = data && data[0]; \n        console.log(\"optionData\", optionData);\n\n\n        if(optionData && optionData.symbol && optionData.symbol ==  optionName){\n            var  ltpparam = { \"exchange\":optionData.exch_seg, \"tradingsymbol\": optionData.symbol , \"symboltoken\": optionData.token}; \n\n            AdminService.getLTP(ltpparam).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if(LtpData && LtpData.ltp) {\n                    \n                    console.log(\"option ltp\", LtpData);\n\n                   let quantity = optionData.lotsize * noOfLot;   \n\n    \n                   let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * 10/100); \n                   perStopTrigerLoss =  CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss); \n\n                   let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1/100); \n\n                   stopLossPrice =  CommonOrderMethod.getMinPriceAllowTick(stopLossPrice); \n\n    \n                    let element = {\n                        tradingsymbol : optionData.symbol, \n                        symboltoken : optionData.token, \n                        transactiontype: \"BUY\", \n                        ordertype: \"LIMIT\", \n                        buyPrice : LtpData.ltp,  \n                        producttype : \"CARRYFORWARD\", \n                        exchange : optionData.exch_seg,\n                        stopLossTriggerPrice: perStopTrigerLoss,\n                        stopLossPrice: stopLossPrice,\n                        quantity : quantity\n                    }        \n                    console.log( \"option buy element\", element);\n                   CommonOrderMethod.placeOptionOrder(element);\n                }\n            })\n        }else{\n            Notify.showError(optionName + \" not found\");\n        }\n\n\n       \n\n\n\n       \n\n        //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n    //    this.setState({ autoSearchList: data });\n\n    \n      \n    })\n\n\n\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar/> : \"\"}\n\n             <Paper style={{ overflow: \"auto\", padding: '5px',  background:\"#f500570a\"}} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Orders Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length}) \n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                        </Typography> \n\n\n                    </Grid>\n\n                   \n\n                    <Grid item >\n\n                        <Grid container spacing={2}>\n                        <Grid item >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        \n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"500px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                    </Grid>\n\n                            \n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n                <br />\n\n                <Paper style={{ overflow: \"auto\", padding: '5px'}} > \n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                          Option Chain (Equity Derivatives)\n                        </Typography> \n\n\n                    </Grid>\n\n\n                        <SymbolOptions buyOption={this.buyOption} />\n                </Paper>\n\n               \n\n\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport OrderWatchlist from './OrderWatchlist';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList: [],\n            autoSearchList: [],\n            InstrumentLTP: {},\n            autoSearchTemp: [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"DELIVERY\",\n            nr4TotalPer: 0,\n            pnlAmountTotal: 0,\n            totalNetProfit: 0,\n            totelActivatedCount: 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting: \"\",\n            perHighLowTotal: 0,\n            netPnLAmountOnHighlowTotal: 0,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n\n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1000) })\n              this.setState({bankNiftyInterval :  setInterval(() => {this.getNiftyLTP(); this.getBankNiftyLTP(); }, 30000)}) \n\n            var squireInterval = setInterval(() => {\n                console.log(\"squireoff\", new Date().toLocaleString()); \n                let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n                let sqrOffendTime = moment('3:15pm', 'h:mma');\n                let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n            \n                if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n                    this.state.positionList.forEach((element, i)=> {\n                        if(element.netqty > 0 || element.netqty < 0){\n                            this.squareOff(element);\n                        }\n                        if(this.state.positionList.length == i+1){\n                            clearInterval(squireInterval);\n                            console.log(\"squireInterval ended\"); \n                        }\n                    });\n                } \n            }, 5000);\n\n        } else {\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval);\n            clearInterval(this.state.bankNiftyInterval);\n        }\n\n        var scanendTime = moment('3:30pm', 'h:mma');\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\n            //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n\n\n\n            // var tostartInteral =   setInterval(() => {\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 15 === 0){\n            //         setTimeout(() => {\n            //             this.getCandleHistoryAndStore(); \n            //         }, 70000);\n            //         setInterval(() => {\n            //                 if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n            //                 this.getCandleHistoryAndStore(); \n            //             }\n            //          }, 60000 * 15 + 70000 );  \n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern();\n            }, foundPatternsFromStored.length * 100 + 300000);\n        }\n\n       \n\n       \n        //this.getCandleHistoryAndStore(); \n\n        // this.findNR4PatternLive();\n        //this.findNR7PatternLive();\n\n\n\n        // this.getPositionData();\n        // this.getNSETopStock();\n\n\n        //  this.getMySelectedStock();\n\n\n\n        // setInterval(() => {\n\n        //     var timediff = moment.duration(\"00:50:00\");\n        //     var startdate = moment(new Date()).subtract(timediff);\n\n\n        //     var enddiff = moment.duration(\"00:01:00\");\n        //     var enddate = moment(new Date()).add(enddiff);\n\n\n        //     var data  = {\n        //         \"exchange\": \"NSE\",\n        //         \"symboltoken\": 212,\n        //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n        //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n        //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n        //     }\n\n        //     AdminService.getHistoryData(data).then(res => { \n        //         let histdata = resolveResponse(res,'noPop' );\n        //         var candleData = histdata.data; \n        //         candleData.reverse(); \n        //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n        //     }); \n\n        // }, 1000);\n\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        this.setState({ foundPatternList: backTestResult })\n\n\n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n\n    getCandleHistoryAndStore = async () => {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        const today = moment().isoWeekday();\n        var timediff = '';\n\n\n\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\n            timediff = moment.duration(\"66:00:00\");\n        } else {\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    if (candleData && candleData.length >= 10) {\n                        var last10Candle = candleData.slice(0, 10);\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist, symbol) => {\n\n        //   console.log(\"TweezerTop finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n\n            //\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\n\n                        var ttophistCandle = [];\n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser Top',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: ttophistCandle\n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\n        // console.log(\"TweezerBottom finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var last8candleHigh = candleHist[9][2];\n            var last8candleLow = candleHist[2][3];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n\n            //  \n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n\n\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle = [];\n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser bottom',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: tBophistCandle\n                        }\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data; var rgrangeCount = 0;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    var last5Candle = candleData.slice(0, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last5Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0];\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        console.log(index + 1, element.symbol, rgrangeCount);\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n\n                        if (rgrangeCount == 4) {\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\n\n\n                            var firstCandle = last4Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR4',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr4 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 300));\n\n            // var showtestdata = (index + 1);\n\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n            //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last7Candle = candleData.slice(1, 8);\n                    var last9Candle = candleData.slice(0, 9);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last7Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last9Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\n\n\n                        if (rgrangeCount == 7) {\n\n\n                            var firstCandle = last7Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR7',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr7 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol;\n            this.setState({ stockTesting: showtestdata });\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n\n\n    refreshLtpOnFoundPattern = async () => {\n\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\n\n\n        var foundPatternList = this.state.foundPatternList;\n\n        this.setState({ foundPatternList: [] });\n\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        //       foundPatternList.forEach(element => {\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\n            const element = foundPatternList[index];\n\n            if (element && element.pattenName == 'NR4') {\n\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\": element.token,\n                }\n\n                AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                    var LtpData = data && data.data;\n                    //console.log(LtpData);\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\n                    if (LtpData && LtpData.ltp) {\n\n                        var orderActivated = <span> {LtpData.ltp} </span>;\n\n                        if (LtpData.ltp > element.BuyAt) {\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\n                            quantity = Math.floor(10000 / element.BuyAt);\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n\n                        }\n                        if (LtpData.ltp < element.SellAt) {\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n                        }\n\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol: element.symbol,\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\n                            token: element.token,\n                            pattenName: 'NR4',\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(),\n                            BuyAt: element.BuyAt,\n                            SellAt: element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated: orderActivated,\n                            candleChartData: element.candleChartData,\n                            quantity: quantity ? quantity : \"\",\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange: perChange,\n                            todayChange: todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated', foundData);\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\n\n                        var foundlist = this.state.foundPatternList;\n\n                        foundlist.sort(function (a, b) {\n                            return b.perChange - a.perChange;\n                        });\n\n                        this.setState({ foundPatternList: foundlist });\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                    }\n\n                }).catch(error => {\n                    Notify.showError(element.symbol + \" ltd data not found!\");\n                })\n\n            }\n            await new Promise(r => setTimeout(r, 101));\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                if (row.netqty > 0) {\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n                } else if (row.netqty < 0) {\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.sellavgprice) * parseInt(row.netqty)).toFixed(2);\n                }\n                break;\n            }\n        }\n\n        return data;\n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        oderbookData.forEach(element => {\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n            }\n        });\n        return data;\n    }\n    getHighLowPercentage = async () => {\n\n        this.setState({showHighLowWisePer: true});\n\n        if (!this.state.positionList.length) {\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n\n            if (element.producttype == \"DELIVERY\") {\n                return \"\";\n            }\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\": element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                    this.state.positionList[index].high = LtpData.high;\n                    this.state.positionList[index].low = LtpData.low;\n                }\n            })\n            await new Promise(r => setTimeout(r, 125));\n            this.setState({ positionList: this.state.positionList });\n\n        }\n\n    }\n    tagPatternWhichTaken =(token)=> {\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \n       \n       var pattern = ''; \n       for (let index = 0; index < orderTagToPosition.length; index++) {\n           const element = orderTagToPosition[index];\n           if(token == element.token){\n            pattern = element.pattenName; \n            break;\n           }\n        }\n        return pattern\n    //    console.log(\"findpatter\", token, orderTagToPosition);\n    //    orderTagToPosition.forEach(element => {\n    //         if(token == element.token){\n    //             return element.pattenName; \n    //         }\n    //    });\n\n    }\n    calculateTradeExpence =(element)=>{\n\n        var totalbuyvalue =  parseFloat(element.totalbuyvalue) === 0 ? parseFloat(element.totalsellvalue) : parseFloat(element.totalbuyvalue);\n        var buyCharge = parseFloat(totalbuyvalue) * 0.25/100; \n        if(buyCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            buyCharge = 20; \n        }\n        var totalsellvalue =  parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n        var sellCharge = parseFloat(totalsellvalue) * 0.25/100; \n        if(sellCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            sellCharge = 20; \n        }\n        let turnOver = totalbuyvalue + totalsellvalue; \n        let totalBroker = buyCharge+sellCharge;\n\n        let sst = 0.025; //stock intraday\n        if(element.optiontype  == 'CE' || element.optiontype  == 'PE'){\n            sst = 0.05;  \n        }\n\n        let sstCharge = totalsellvalue *  sst/100; \n        let transCharge = turnOver *  0.00335/100; \n        let stampDuty  = totalbuyvalue *   0.003/100; \n        let sebiCharge = turnOver * 10/10000000; \n        let gstCharge = (totalBroker+transCharge+sebiCharge) * 18/100; \n\n        let total = totalBroker+sstCharge+transCharge+stampDuty+sebiCharge+gstCharge; \n\n        var chargeInfo ={\n          tradeExpence:  total,\n          expenceInfo : \"Brokerage: \"+totalBroker.toFixed(2)+ \" \\nSTT: \"+ sstCharge.toFixed(2) + \" \\nTransaction: \"+ transCharge.toFixed(2) + \" \\nStamp Duty: \"+stampDuty.toFixed(2) + \" \\nSebi: \"+sebiCharge.toFixed(2) + \" \\nGST: \" + gstCharge.toFixed(2) + \" \\n\\nTotal: \"+ total.toFixed(2)\n        }\n        return chargeInfo; \n    }\n    getPositionData = async () => {\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0;\n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var positionList = data && data.data;\n            if (positionList && positionList.length > 0) {\n\n\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0, totalExpence=0; \n                positionList.forEach(element => {\n\n                    if (element.producttype == \"DELIVERY\") {\n                        return \"\";\n                    }\n\n                    todayProfitPnL += parseFloat(element.pnl);\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n                    totalQtyTraded += parseInt(element.buyqty);\n                    allbuyavgprice += parseFloat(element.buyavgprice);\n                    allsellavgprice += parseFloat(element.sellavgprice);\n                    if(element.netqty == 0){\n                        let percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice));\n                        element.percentPnL = percentPnL.toFixed(2) + \"%\";\n                        totalPercentage += parseFloat(percentPnL);\n\n                        localStorage.removeItem('firstTimeModify' + element.tradingsymbol)\n                        localStorage.removeItem('lastTriggerprice_' + element.tradingsymbol)\n                    }\n                   \n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \n\n                    let chargeInfo = this.calculateTradeExpence(element);\n                    element.tradeExpence = chargeInfo.tradeExpence.toFixed(2); \n                    element.expenceInfo = chargeInfo.expenceInfo; \n                    totalExpence += chargeInfo.tradeExpence; \n\n                    var slData = this.getStoplossFromOrderbook(element);\n                    if (slData) {\n                        element.stopLoss = slData.stopLoss;\n                        element.stopLossAmount = slData.maxLossAmount;\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\n                    }\n\n\n                });\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\n\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\n                this.setState({ totalExpence: totalExpence.toFixed(2) });\n\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\n\n                \n                positionList.sort(function (a, b) {\n                    return (b.netqty - a.netqty);\n\n                    //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList: positionList });\n\n            }\n        })\n\n    }\n\n    getNSETopStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n                                    console.log(found[0].symbol, \"found\", found);\n                                    localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                    this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    getMySelectedStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getSelectedStockFromDb().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\n                                    selectedStockwatchList.push(found[0]);\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    checkAndPlaceSingleOrder = (stock) => {\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data = res.data;\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\n            console.log(\"stockfound\", found);\n            if (found && found.length) {\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\n            }\n        })\n    }\n\n\n    getStockOnebyOne() {\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            console.log(\"still ok\");\n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    if (scandata && scandata.length > 0) {\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\n                        var isFound = false;\n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\n                                isFound = true;\n                            }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\n                        }\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n            var LtpData = data && data.data;\n            var ltpPrice = LtpData.ltp\n            if (ltpPrice) {\n\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\n                var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken: token,\n                    buyPrice: 0,\n                    quantity: quantity,\n                    stopLossPrice: stopLossPrice\n                }\n\n                if (quantity && stopLossPrice) {\n                    this.placeOrderMethod(orderOption);\n                }\n\n            }\n\n        }).catch((error) => {\n            console.log(symbol, \"not found\", 'error', error);\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //    console.log(data);       \n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n    }\n\n\n    getNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"NIFTY\",\n            \"symboltoken\": \"26000\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:green'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:red'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n    getBankNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\": \"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:green'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:red'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n\n    getStopLossPrice = async (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n\n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            if (LtpData && LtpData.ltp) {\n                var ltp = parseFloat(LtpData.ltp);\n                ltp = ltp - (ltp * 0.7 / 100);\n                var slPrice = this.getMinPriceAllowTick(ltp);\n\n                this.setState({ stoploss: slPrice });\n                return slPrice;\n            }\n\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"21:10:00\");\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                            stoploss = this.getMinPriceAllowTick(stoploss);\n\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\n\n                            console.log(symbol, \" LTP \", LtpData.ltp);\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                            console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue);\n\n                            var orderOption = {\n                                transactiontype: 'BUY',\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5) {\n                                this.placeOrderMethod(orderOption);\n                            } else {\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                console.log(symbol + \" its not fullfilled\");\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(symbol + \" candle data emply\");\n                    }\n                })\n\n            }\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    cancelOrderOfSame = (row) => {\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if (data.status && data.message === 'SUCCESS') {\n                console.log(\"cancel order\", data);\n                // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n    }\n\n    squareOff = (row) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\n            \"exchange\": row.exchange,\n            \"ordertype\": \"MARKET\",\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n\n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);\n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                this.cancelOrderOfSame(row);\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n\n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'hey Vijay, ' + slmOption.tradingsymbol;\n                window.speechSynthesis.speak(msg);\n\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    getOpenPeningOrderId = (symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\n                data.orderId = oderbookData[index].orderid\n                data.variety = oderbookData[index].variety\n                break;\n            }\n        }\n        return data;\n    }\n\n    modifyOrderMethod = (row, minTriggerPrice, minSLPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\": row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": minSLPrice ?  parseFloat(minSLPrice) : 0,\n            \"triggerprice\": parseFloat(minTriggerPrice),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n\n\n            if (data.status && data.message === 'SUCCESS') {\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\n                msg.text = row.symbolname + ' modified ' + data.message;\n                window.speechSynthesis.speak(msg);\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minTriggerPrice));\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n    get2DecimalNumber =(number)=>{\n        number = parseFloat(number); \n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    getSLAndTriggerPrice =(price)=> {\n        let minTriggerPrice = this.getMinPriceAllowTick(price);\n\n        var minSLPrice = minTriggerPrice - (minTriggerPrice * 1 / 100);\n        minSLPrice = this.getMinPriceAllowTick(minSLPrice);\n\n        let slPriceData = {\n            minTriggerPrice : minTriggerPrice, \n            minSLPrice : minSLPrice\n        }\n        return slPriceData; \n    }\n    getOptionPercentage =(row)=> {\n\n        console.log(\"option per calling\"); \n        var percentChange = 0, trailPerChange = 0; \n\n        row.buyavgprice = parseFloat(row.buyavgprice);\n        percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n        if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 5) {\n\n            var minTriggerPrice = row.buyavgprice + (row.buyavgprice * 1 / 100);\n            let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n            if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                this.modifyOrderMethod(row, slPriceData.minTriggerPrice ,slPriceData.minSLPrice );\n            }\n\n        } else {\n            var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n            var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n            trailPerChange = perchngfromTriggerPrice; \n            if (perchngfromTriggerPrice >= 5) {\n                minTriggerPrice = lastTriggerprice + (lastTriggerprice * 1 / 100);\n                let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                    this.modifyOrderMethod(row, slPriceData.minTriggerPrice, slPriceData.minSLPrice);\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n \n    }\n\n    \n    getPercentage = (row) => {\n\n        var percentChange = 0, trailPerChange = 0; \n\n        if (row.netqty > 0) {\n            row.buyavgprice = parseFloat(row.buyavgprice);\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 0.3) {\n                var minPrice = row.buyavgprice + (row.buyavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                if (perchngfromTriggerPrice >= 0.3) {\n                    minPrice = lastTriggerprice + (lastTriggerprice * 0.10/ 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if (row.netqty < 0) {\n\n            row.sellavgprice = parseFloat(row.sellavgprice);\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -0.3) {\n                var minPrice = row.sellavgprice - (row.sellavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.25 / 100));\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                console.log(\"perchngfromTriggerPrice\", perchngfromTriggerPrice);\n                if (perchngfromTriggerPrice <= -0.5) {\n                    minPrice = lastTriggerprice - (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n    }\n\n  \n\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\n                    <Grid item >\n                       <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Positions ({this.state.positionList && this.state.positionList.length}) \n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={3} >\n                        <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                        </Typography>\n                    </Grid>\n\n                    \n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Net Capital  {this.get2DecimalNumber(localStorage.getItem('netCapital'))}  </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\" >\n                            <b> Net Cap P/L </b> <b style={{ color: ((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')) > 0 ? \"green\" : \"red\" }}>{((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')).toFixed(2)}% </b>\n                        </Typography>\n                    </Grid>\n\n                   \n\n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Turnover {this.state.totalTornOver} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item >\n                        <Typography component=\"h3\"  >\n\n                        <b style={{ color: \"red\" }}>Expenses: {this.state.totalExpence} </b>\n\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalExpence) > 0 ? \"green\" : \"red\" }}>{this.state.totalExpence ? (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2) : \"\"} </b>\n                        </Typography>\n                    </Grid>\n                    \n\n                    \n\n\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\n                    </Grid>\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\n                    </Grid>\n                </Grid>\n\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                    <Grid item xs={12} sm={12}>\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Pattern Name</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Expense</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n\n                                        {this.state.showHighLowWisePer ? \n                                        <>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                          </> : \"\"}\n\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\n\n                                            <TableCell align=\"left\">\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                                    {row.tradingsymbol} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\n                                                </Button>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\n                                            <TableCell style={{cursor:'help'}} title={row.expenceInfo} align=\"left\">{row.tradeExpence}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\n\n\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== '0' && row.optiontype  == '' ? this.getPercentage(row) : \"\"}\n                                                {(row.optiontype  == 'CE' || row.optiontype  == 'PE') && row.netqty > 0 ? this.getOptionPercentage(row) : \"\"}  \n                                                {row.percentPnL}\n                                                {/* new Date().toLocaleTimeString() > \"15:15:00\" ? */}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n\n                                        {this.state.showHighLowWisePer ? <>\n                                            <TableCell   align=\"left\">{row.high}</TableCell>\n                                            <TableCell  align=\"left\">{row.low}</TableCell>\n                                          </> : \"\"}\n\n\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\n                                            </TableCell>\n\n                                        </TableRow> : \"\"\n\n                                    )) : ''}\n\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\n\n                                        {/* new Date().toLocaleTimeString() > \"15:15:00\" ?  */}\n                                            {this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\"}\n\n                                        </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                    </TableRow>\n\n\n                                </TableBody>\n                            </Table>\n\n                        </Paper>\n\n\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '250px', overflow: \"auto\" }}>\n                        <OrderBook />\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\n                    </Grid>\n\n\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \n                    <Grid item xs={12} sm={12} >\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n\n\n                            <Grid justify=\"space-between\"\n                                container>\n                                <Grid item  >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\n\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\n                                    </Typography>\n                                </Grid>\n                                <Grid item >\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                        <TableRow hover key={row.symboltoken}>\n\n\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\n                                                {row.pastPerferm ? <>\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                </> : \"\"}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                            <TableCell align=\"left\">{row.time}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n\n\n                        </Paper>\n                    </Grid> \n                    : \"\"}\n\n\n\n                </Grid>\n\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport LightChartCom from \"./LightChartCom\";\n\nimport Chart from \"./Chart\";\n\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n  //  this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {\n      cursor: 0,\n      areaData: [\n        { time: '2018-10-19', value: 54.90 },\n        { time: '2018-10-22', value: 54.98 },\n        { time: '2018-10-23', value: 57.21 },\n        { time: '2018-10-24', value: 57.42 },\n        { time: '2018-10-25', value: 56.43 },\n        { time: '2018-10-26', value: 55.51 },\n        { time: '2018-10-29', value: 56.48 },\n        { time: '2018-10-30', value: 58.18 },\n        { time: '2018-10-31', value: 57.09 },\n        { time: '2018-11-01', value: 56.05 },\n        { time: '2018-11-02', value: 56.63 },\n        { time: '2018-11-05', value: 57.21 },\n        { time: '2018-11-06', value: 57.21 },\n        { time: '2018-11-07', value: 57.65 },\n        { time: '2018-11-08', value: 58.27 },\n        { time: '2018-11-09', value: 58.46 },\n        { time: '2018-11-12', value: 58.72 },\n        { time: '2018-11-13', value: 58.66 },\n        { time: '2018-11-14', value: 58.94 },\n        { time: '2018-11-15', value: 59.08 },\n        { time: '2018-11-16', value: 60.21 },\n        { time: '2018-11-19', value: 60.62 },\n        { time: '2018-11-20', value: 59.46 },\n        { time: '2018-11-21', value: 59.16 },\n        { time: '2018-11-23', value: 58.64 },\n        { time: '2018-11-26', value: 59.17 },\n        { time: '2018-11-27', value: 60.65 },\n        { time: '2018-11-28', value: 60.06 },\n        { time: '2018-11-29', value: 59.45 },\n        { time: '2018-11-30', value: 60.30 },\n        { time: '2018-12-03', value: 58.16 },\n        { time: '2018-12-04', value: 58.09 },\n        { time: '2018-12-06', value: 58.08 },\n        { time: '2018-12-07', value: 57.68 },\n        { time: '2018-12-10', value: 58.27 },\n        { time: '2018-12-11', value: 58.85 },\n        { time: '2018-12-12', value: 57.25 },\n        { time: '2018-12-13', value: 57.09 },\n        { time: '2018-12-14', value: 57.08 },\n        { time: '2018-12-17', value: 55.95 },\n        { time: '2018-12-18', value: 55.65 },\n        { time: '2018-12-19', value: 55.86 },\n        { time: '2018-12-20', value: 55.07 },\n        { time: '2018-12-21', value: 54.92 },\n        { time: '2018-12-24', value: 53.05 },\n        { time: '2018-12-26', value: 54.44 },\n        { time: '2018-12-27', value: 55.15 },\n        { time: '2018-12-28', value: 55.27 },\n        { time: '2018-12-31', value: 56.22 },\n        { time: '2019-01-02', value: 56.02 },\n        { time: '2019-01-03', value: 56.22 },\n        { time: '2019-01-04', value: 56.36 },\n        { time: '2019-01-07', value: 56.72 },\n        { time: '2019-01-08', value: 58.38 },\n        { time: '2019-01-09', value: 57.05 },\n        { time: '2019-01-10', value: 57.60 },\n        { time: '2019-01-11', value: 58.02 },\n        { time: '2019-01-14', value: 58.03 },\n        { time: '2019-01-15', value: 58.10 },\n        { time: '2019-01-16', value: 57.08 },\n        { time: '2019-01-17', value: 56.83 },\n        { time: '2019-01-18', value: 57.09 },\n        { time: '2019-01-22', value: 56.99 },\n        { time: '2019-01-23', value: 57.76 },\n        { time: '2019-01-24', value: 57.07 },\n        { time: '2019-01-25', value: 56.40 },\n        { time: '2019-01-28', value: 55.07 },\n        { time: '2019-01-29', value: 53.28 },\n        { time: '2019-01-30', value: 54.00 },\n        { time: '2019-01-31', value: 55.06 },\n        { time: '2019-02-01', value: 54.55 },\n        { time: '2019-02-04', value: 54.04 },\n        { time: '2019-02-05', value: 54.14 },\n        { time: '2019-02-06', value: 53.79 },\n        { time: '2019-02-07', value: 53.57 },\n        { time: '2019-02-08', value: 53.95 },\n        { time: '2019-02-11', value: 54.05 },\n        { time: '2019-02-12', value: 54.42 },\n        { time: '2019-02-13', value: 54.48 },\n        { time: '2019-02-14', value: 54.03 },\n        { time: '2019-02-15', value: 55.16 },\n        { time: '2019-02-19', value: 55.44 },\n        { time: '2019-02-20', value: 55.76 },\n        { time: '2019-02-21', value: 56.15 },\n        { time: '2019-02-22', value: 56.92 },\n        { time: '2019-02-25', value: 56.78 },\n        { time: '2019-02-26', value: 56.64 },\n        { time: '2019-02-27', value: 56.72 },\n        { time: '2019-02-28', value: 56.92 },\n        { time: '2019-03-01', value: 56.96 },\n        { time: '2019-03-04', value: 56.24 },\n        { time: '2019-03-05', value: 56.08 },\n        { time: '2019-03-06', value: 55.68 },\n        { time: '2019-03-07', value: 56.30 },\n        { time: '2019-03-08', value: 56.53 },\n        { time: '2019-03-11', value: 57.58 },\n        { time: '2019-03-12', value: 57.43 },\n        { time: '2019-03-13', value: 57.66 },\n        { time: '2019-03-14', value: 57.95 },\n        { time: '2019-03-15', value: 58.39 },\n        { time: '2019-03-18', value: 58.07 },\n        { time: '2019-03-19', value: 57.50 },\n        { time: '2019-03-20', value: 57.67 },\n        { time: '2019-03-21', value: 58.29 },\n        { time: '2019-03-22', value: 59.76 },\n        { time: '2019-03-25', value: 60.08 },\n        { time: '2019-03-26', value: 60.63 },\n        { time: '2019-03-27', value: 60.88 },\n        { time: '2019-03-28', value: 59.08 },\n        { time: '2019-03-29', value: 59.13 },\n        { time: '2019-04-01', value: 59.09 },\n        { time: '2019-04-02', value: 58.53 },\n        { time: '2019-04-03', value: 58.87 },\n        { time: '2019-04-04', value: 58.99 },\n        { time: '2019-04-05', value: 59.09 },\n        { time: '2019-04-08', value: 59.13 },\n        { time: '2019-04-09', value: 58.40 },\n        { time: '2019-04-10', value: 58.61 },\n        { time: '2019-04-11', value: 58.56 },\n        { time: '2019-04-12', value: 58.74 },\n        { time: '2019-04-15', value: 58.71 },\n        { time: '2019-04-16', value: 58.79 },\n        { time: '2019-04-17', value: 57.78 },\n        { time: '2019-04-18', value: 58.04 },\n        { time: '2019-04-22', value: 58.37 },\n        { time: '2019-04-23', value: 57.15 },\n        { time: '2019-04-24', value: 57.08 },\n        { time: '2019-04-25', value: 55.85 },\n        { time: '2019-04-26', value: 56.58 },\n        { time: '2019-04-29', value: 56.84 },\n        { time: '2019-04-30', value: 57.19 },\n        { time: '2019-05-01', value: 56.52 },\n        { time: '2019-05-02', value: 56.99 },\n        { time: '2019-05-03', value: 57.24 },\n        { time: '2019-05-06', value: 56.91 },\n        { time: '2019-05-07', value: 56.63 },\n        { time: '2019-05-08', value: 56.38 },\n        { time: '2019-05-09', value: 56.48 },\n        { time: '2019-05-10', value: 56.91 },\n        { time: '2019-05-13', value: 56.75 },\n        { time: '2019-05-14', value: 56.55 },\n        { time: '2019-05-15', value: 56.81 },\n        { time: '2019-05-16', value: 57.38 },\n        { time: '2019-05-17', value: 58.09 },\n        { time: '2019-05-20', value: 59.01 },\n        { time: '2019-05-21', value: 59.50 },\n        { time: '2019-05-22', value: 59.25 },\n        { time: '2019-05-23', value: 58.87 },\n        { time: '2019-05-24', value: 59.32 },\n        { time: '2019-05-28', value: 59.57 },\n      ],\n      volumeData: [\n        { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-22', value: 21737523.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-23', value: 29328713.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-24', value: 37435638.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-25', value: 25269995.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-26', value: 24973311.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-29', value: 22103692.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-30', value: 25231199.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-31', value: 24214427.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-01', value: 22533201.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-02', value: 14734412.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-05', value: 12733842.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-06', value: 12371207.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-07', value: 14891287.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-08', value: 12482392.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-09', value: 17365762.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-12', value: 13236769.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-13', value: 13047907.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-14', value: 18288710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-15', value: 17147123.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-16', value: 19470986.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-19', value: 18405731.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-20', value: 22028957.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-21', value: 18482233.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-23', value: 7009050.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-26', value: 12308876.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-27', value: 14118867.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-28', value: 18662989.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-29', value: 14763658.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-30', value: 31142818.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-03', value: 27795428.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-04', value: 21727411.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-06', value: 26880429.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-07', value: 16948126.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-10', value: 16603356.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-11', value: 14991438.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-12', value: 18892182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-13', value: 15454706.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-14', value: 13960870.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-17', value: 18902523.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-18', value: 18895777.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-19', value: 20968473.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-20', value: 26897008.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-21', value: 55413082.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-24', value: 15077207.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-26', value: 17970539.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-27', value: 17530977.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-28', value: 14771641.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-31', value: 15331758.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-02', value: 13969691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-03', value: 19245411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-04', value: 17035848.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-07', value: 16348982.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-08', value: 21425008.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-09', value: 18136000.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-10', value: 14259910.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-11', value: 15801548.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-14', value: 11342293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-15', value: 10074386.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-16', value: 13411691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-17', value: 15223854.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-18', value: 16802516.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-22', value: 18284771.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-23', value: 15109007.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-24', value: 12494109.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-25', value: 17806822.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-28', value: 25955718.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-29', value: 33789235.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-30', value: 27260036.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-31', value: 28585447.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-01', value: 13778392.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-04', value: 15818901.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-05', value: 14124794.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-06', value: 11391442.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-07', value: 12436168.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-08', value: 12011657.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-11', value: 9802798.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-12', value: 11227550.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-13', value: 11884803.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-14', value: 11190094.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-15', value: 15719416.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-19', value: 12272877.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-20', value: 11379006.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-21', value: 14680547.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-22', value: 12534431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-25', value: 15051182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-26', value: 12005571.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-27', value: 8962776.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-28', value: 15742971.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-01', value: 10942737.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-04', value: 13674737.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-05', value: 15749545.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-06', value: 13935530.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-07', value: 12644171.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-08', value: 10646710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-11', value: 13627431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-12', value: 12812980.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-13', value: 14168350.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-14', value: 12148349.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-15', value: 23715337.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-18', value: 12168133.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-19', value: 13462686.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-20', value: 11903104.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-21', value: 10920129.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-22', value: 25125385.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-25', value: 15463411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-26', value: 12316901.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-27', value: 13290298.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-28', value: 20547060.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-29', value: 17283871.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-01', value: 16331140.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-02', value: 11408146.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-03', value: 15491724.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-04', value: 8776028.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-05', value: 11497780.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-08', value: 11680538.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-09', value: 10414416.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-10', value: 8782061.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-11', value: 9219930.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-12', value: 10847504.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-15', value: 7741472.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-16', value: 10239261.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-17', value: 15498037.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-18', value: 13189013.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-22', value: 11950365.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-23', value: 23488682.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-24', value: 13227084.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-25', value: 17425466.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-26', value: 16329727.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-29', value: 13984965.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-30', value: 15469002.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-01', value: 11627436.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-02', value: 14435436.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-03', value: 9388228.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-06', value: 10066145.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-07', value: 12963827.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-08', value: 12086743.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-09', value: 14835326.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-10', value: 10707335.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-13', value: 13759350.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-14', value: 12776175.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-15', value: 10806379.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-16', value: 11695064.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-17', value: 14436662.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-20', value: 20910590.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-21', value: 14016315.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-22', value: 11487448.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-23', value: 11707083.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-24', value: 8755506.00, color: 'rgba(0, 150, 136, 0.8)' },\n      ]\n    }\n  }\n\n\n  render() {\n    const { cursor } = this.state\n\n    return (\n      <Container>\n\n\n\n          \n          <LightChartCom ChartData={{areaSeries: this.state.areaData, volumeData : this.state.volumeData}}/>\n       \n\n      </Container>\n    )\n  }\n}\n\n\n\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        \n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n//     loadIndexesList() {\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n//         AdminService.getAllIndices()\n//             .then((res) => {\n//                 if (res.data) {\n//                     var data = res.data, sectorStockList = [];\n//                     this.setState({ indexTimeStamp: data.timestamp })\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n//                   //  this.setState({sectorList :  softedData});\n                  \n// //                    this.setState({ sectorList: []});\n//                     function sleep(ms) {\n//                         return new Promise(resolve => setTimeout(resolve, ms));\n//                     }\n//                     var updateLtpOnInterval = async (ref, softedData) => {\n\n//                             var middleSector = []; \n//                             for (let i = 0; i < softedData.length; i++) {\n\n//                                 var length = 1;                                     \n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n//                                     softedData[i].stockList = sectorStocks;\n//                                     length = sectorStocks.length; \n//                                     if (sectorStocks && sectorStocks.length) {\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n//                                     }\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n//                                 }else{\n//                                     softedData[i].stockList = sectorStocks;\n//                                     middleSector.push(softedData[i]); \n//                                 }\n\n                                \n                            \n//                                 await sleep(length / 10 * 1500);\n//                             }\n\n\n//                             middleSector.forEach(element => {\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\n//                             });\n//                         }\n//                         updateLtpOnInterval(this, softedData);\n//                 }\n//             })\n//             .catch((reject) => {\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n//                 this.speckIt(\"All Indices API Failed\");\n\n//             })\n\n//         this.setState({ refreshFlag: true });\n\n//     }\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n        \n\n                    var data = res.data && res.data.data, sectorStockList = [];\n                   // this.setState({ indexTimeStamp: data.timestamp })\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\n                  //  this.setState({sectorList :  softedData});\n\n                  console.log(softedData); \n\n                    this.setState({ sectorList: []});  \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1;                                     \n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\n\n                                    if(sectorStocks && sectorStocks.length){\n                                        softedData[i].stockList = sectorStocks;\n                                        length = sectorStocks.length; \n                                        if (sectorStocks && sectorStocks.length) {\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\n                                        }\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                    }\n                                }else{\n                                    if(sectorStocks && sectorStocks.length>=1){\n                                        softedData[i].stockList = sectorStocks;\n                                        middleSector.push(softedData[i]); \n                                    }\n                                  \n                                }\n\n                                await sleep(length / 10 * 150);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n          //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from './LightChartCom';\n\nimport Test from './Test';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n\n  const [open, setOpen] = React.useState(false);\n\n  var [values, setValues] = React.useState({\n    data: [],\n    candledata: {}\n  })\n\n\n\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n\n   \n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightCandleChart\" color=\"primary\" style={{ display: \"none\" }} onClick={handleClickOpen}>\n        Chart\n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} style={{color : props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change > 0 ? \"green\" : \"red\" }}>\n          {props.LightChartData.selectedSymbol}  {props.LightChartData.InstrumentLTP && props.LightChartData.InstrumentLTP.ltp}    ({props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change.toFixed(2)}%) \n          <br />\n\n\n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n          <br />\n\n          {props.LightChartData && props.LightChartData.InstrumentLTP ?\n            <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n\n              <div style={{ background: '#bdbdbd' }}>\n                <b>  Daily: {props.LightChartData.selectedSymbol}</b> <br />\n\n                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                  Daily Avg Price: {props.LightChartData.DailyBulishStatus && props.LightChartData.DailyBulishStatus.toFixed(0)} {props.LightChartData.DailyBulishStatus ? props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                </span><br />\n\n\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  <b>Daily Avg Volume:</b>  {(props.LightChartData.dailyAvgValume / 100000).toFixed(2)}L\n                </span><br />\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  {props.LightChartData.todayCurrentVolume > props.LightChartData.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(props.LightChartData.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (props.LightChartData.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                </span>\n              </div>\n              <br />\n\n\n\n              <b>  Intraday: {props.LightChartData.timeFrame} : {props.LightChartData.tradingsymbol}</b> <br />\n              {props.LightChartData.bblastValue ? <span item xs={12} sm={12} >\n\n                <span title=\"Green color mean price running above upper bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp >= props.LightChartData.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {props.LightChartData.bblastValue.upper.toFixed(2)}</span><br />\n                BB Middle(20 SMA): {props.LightChartData.bblastValue.middle.toFixed(2)}<br />\n                <span title=\"Green red mean price running below lower bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp <= props.LightChartData.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {props.LightChartData.bblastValue.lower.toFixed(2)}</span><br />\n              </span> : \"\"}\n\n              <span item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                VWAP:  {props.LightChartData.vwapvalue && props.LightChartData.vwapvalue.toFixed(2)}\n              </span>\n              <br />\n              <b> RSI: </b>{props.LightChartData.rsiValues && props.LightChartData.rsiValues.map((item, j) => (\n                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n              ))}\n\n\n              <br />\n              <b>Vol:</b> {props.LightChartData.valumeData && props.LightChartData.valumeData.map((item, j) => (\n                <span style={{ color: item > props.LightChartData.dailyAvgValume ? \"green\" : \"\", fontWeight: item > props.LightChartData.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n              ))}\n\n              <br />  <br />\n\n            </Grid>\n            : \"\"}\n\n\n\n          {/* <Grid item xs={12} sm={9}  >\n            <div id=\"showChartTitle\">\n            </div>\n            <div id=\"tvchart\"></div>\n          </Grid> */}\n\n\n            <Grid item xs={12} sm={9}  >\n            {localStorage.getItem('candleChartData') ? <ReactApexChart\n            options={{\n              chart: {\n                type: 'candlestick',\n                height: 350\n              },\n              title: {\n                text: '',\n                align: 'left'\n              },\n              xaxis: {\n                type: 'datetime',\n              },\n              yaxis: {\n                tooltip: {\n                  enabled: true\n                }\n              }\n            }}\n            series={[{\n              data: props.LightChartData.chartStaticData\n\n            }]}\n            type=\"candlestick\"\n            width={500}\n            height={350}\n          /> : \"\"}\n\n\n\n            </Grid>\n\n\n          </Grid>\n\n\n\n          {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n          <Grid item>\n             <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' )}>BUY</Button> \n          </Grid>\n\n          <Grid item>\n            <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={props.LightChartData.qtyToTake} onChange={this.onChangeQty} />\n          </Grid>\n\n          <Grid item >\n            <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked')}>SELL</Button> \n          </Grid>\n          </Grid> */}\n\n          {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n         \n\n\n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n          */}\n          {/* {props.LightChartData.chartStaticData ? <Test ChartData={props.LightChartData} /> : \"\"} */}\n\n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LightChartDialog from './LightChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            sluglist: {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n              //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                // 'NIFTY NEXT 50': 'juniorNifty',\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\n            },\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0,\n            refreshFlagCandle: true,\n            switchToListViewFlag: true,\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || [],\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        window.document.title = \"Hit Map2\";\n\n\n        this.loadIndexesList();\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n   \n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n                    var softedData = res.data && res.data.data;\n                    softedData.sort(function (a, b) {\n                        return b.percChange - a.percChange;\n                    });\n\n\n                    this.setState({ indexTimeStamp: softedData[0].timeVal });\n\n\n                    for (let index = 0; index < softedData.length; index++) {\n                        const element = softedData[index];\n                        var slugName = this.state.sluglist[element.indexName];\n\n                        if (slugName) {\n                            console.log(\"secName\", element.indexName, slugName);\n                            AdminService.checkSectorApiOther(slugName).then(res => {\n                                console.log(element.indexName, res.data.data);\n                                softedData[index].stockList = res.data && res.data.data;\n                                softedData[index].time = res.data && res.data.time;\n                                this.setState({ sectorList: softedData });\n                            }).catch(error => {\n                                // Notify.showError(element.indexName + \"fail to get stockdata\"); \n                                console.log(\"list fetch error\", error)\n                            })\n                        }\n                    }\n\n\n\n\n                    // this.state.sectorList.forEach(element => {\n                    //     if(element.stockList && element.stockList.length){\n                    //         document.title = \"Top1: \" + element.indexName; \n                    //         return;\n                    //     }\n                    // });\n\n\n\n                }\n            })\n            .catch((reject) => {\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({ stockUpdate: index });\n\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n        // this.refreshSectorCandleManually(index); \n        //  this.checkLast5MinMovement(index); \n\n\n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\n\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"19:00:00\";\n                else\n                    return \"01:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"23:00:00\";\n                else\n                    return \"03:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"24:21:00\";\n                else\n                    return \"07:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"28:01:00\";\n                else\n                    return \"10:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"100:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n    \n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if(element){\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n                  \n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                 //   this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n\n\n    showCandleChartPopUp = (symbol) => {\n\n\n        // //  candleData  = candleData && candleData.reverse();\n\n        // // localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        // localStorage.setItem('cadleChartSymbol', symbol);\n        // // localStorage.setItem('candlePriceShow', price);\n        // // localStorage.setItem('candleChangeShow', change);\n        // // localStorage.setItem('vwapDataChart', vwapDataChart);\n\n        // document.getElementById('showCandleChart').click();\n\n  \n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var isThere = watchList.filter(row => row.name === symbol);\n        if(isThere && isThere.length){\n\n            let stock = isThere[0]; \n\n           \n\n            this.dailyBasisInfoCheck( stock.token);\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n           // var beginningTime = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\":  stock.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(beginningTime).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n    \n    \n            AdminService.getHistoryData(data).then(res => {\n                let historyData = resolveResponse(res, 'noPop');\n                    console.log(\"candledata\", historyData); \n                if (historyData && historyData.data) {\n    \n                    var data = historyData.data;\n    \n                    const cdata = data.map(d => {\n                        return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                    });\n\n                    \n\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                    data.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n                        volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n    \n                    });\n    \n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n                    }\n    \n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n    \n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n    \n                    var inputRSI = { values: closeingData, period: 14 };\n                    var rsiValues = RSI.calculate(inputRSI);\n    \n                    console.log(stock.symbol, \"Rsi\", inputRSI, rsiValues);\n                    console.log(stock.symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var data = {\n                        \"exchange\":stock.exch_seg,\n                        \"tradingsymbol\": stock.symbol,\n                        \"symboltoken\": stock.token,\n                    }\n                    AdminService.getLTP(data).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;  \n                        \n                        LtpData.change =  (LtpData.ltp - LtpData.close) * 100 /  LtpData.close; \n\n\n\n                        this.showCandleChart(candleChartData, stock.symbol, LtpData.ltp , LtpData.change);  \n\n                       \n                        // this.setState({InstrumentLTP: LtpData , selectedSymbol : stock.symbol,  chartStaticData: candleChartData, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                            \n                        //     document.getElementById('showLightCandleChart').click();\n                        // });\n            \n                    \n                    })\n\n                }\n            })\n        }\n\n       \n\n\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber = (number) => {\n\n        if (number) {\n            return number.toFixed(2);\n        } else {\n            return number;\n        }\n    }\n    switchToListView = () => {\n        this.setState({ switchToListViewFlag: !this.state.switchToListViewFlag });\n    }\n\n    get5DaysMoveCount =(symbol)=> {\n        var isThere = this.state.slowMotionStockList.filter(row => row.name === symbol);\n        if (isThere.length) {\n           return \"SM: \" + isThere[0].bigCandleCount ;  \n        }else{\n            return '';\n        }\n    }\n\n    getDeliveryInfo =(symbol)=> {\n         \n        AdminService.getDeliveryData(symbol).then(resd => {\n            if(resd && resd.data &&  resd.data.length)\n            return \"D2T%: \" +  resd.data[0].deliveryToTradedQuantity; \n        });\n       \n    }\n    \n    render() {\n\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n        //         return b.nc - a.nc;\n        //     });\n        // });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <LightChartDialog LightChartData = {{InstrumentLTP : this.state.InstrumentLTP, DailyBulishStatus: this.state.DailyBulishStatus, todayCurrentVolume : this.state.todayCurrentVolume,  selectedSymbol : this.state.selectedSymbol,  chartStaticData: this.state.chartStaticData, bblastValue: this.state.bblastValue, vwapvalue: this.state.vwapvalue, rsiValues: this.state.rsiValues, valumeData: this.state.valumeData }} />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\n                            &nbsp;\n                            <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button> \n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n                            <Button onClick={() => this.switchToListView()}>switch to list view</Button>\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {!this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\n                        indexdata.stockList ? <Grid item xs={12} sm={3}>\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Button>\n                            &nbsp;\n\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                <ShowChartIcon />\n                            </Button> */}\n\n                                <Typography variant=\"body1\" >\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13, 8)}\n                                </Typography>\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\n                                                </Typography>\n\n\n                                                {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                    <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ?\n                                                    <Typography >\n                                                        {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                        &nbsp;\n                                                        {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                    </Typography>\n                                                    : \"\"}\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                options={{\n                                                    chart: {\n                                                        type: 'candlestick',\n                                                        //  height: 40\n\n                                                    },\n                                                    title: {\n                                                        text: '',\n                                                        align: 'left'\n                                                    },\n                                                    xaxis: {\n                                                        type: 'datetime',\n                                                    },\n                                                    yaxis: {\n                                                        tooltip: {\n                                                            enabled: true\n                                                        }\n                                                    }\n                                                }}\n                                                series={[{\n                                                    data: sectorItem.candleChartData\n\n                                                }]}\n                                                type=\"candlestick\"\n                                    \n                                            /> : \"\"} */}\n\n\n                                                {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\n                                                </Grid>\n                                            </Grid>\n                                            */}\n\n\n                                            </Paper>\n\n\n                                        </Grid>\n                                    ))\n                                    }\n                                </Grid>\n\n                            </Paper>\n                        </Grid> : \"\"\n\n                    )) : \"\"}\n\n\n                    <Table id=\"tabledata\" aria-label=\"a dense table\" stickyHeader size=\"small\" >\n                        <TableBody hover style={{whiteSpace: \"nowrap\" }} >\n\n\n                            {this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                                indexdata.stockList ? <TableRow hover={true} key={index}>\n                                    <TableCell>\n                                        <Typography variant=\"body1\" >\n                                          {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)\n                                            {/* &nbsp; {indexdata.time} */}\n                                        </Typography>\n                                    </TableCell>\n                                   \n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <TableCell style={{ textAlign: \"left\", }} >\n                                            <div style={{padding:\"5px\"}}> \n                                              <Button size=\"small\" onClick={() => this.showCandleChartPopUp(sectorItem.symbol)}>\n                                                  <span style={{ background: this.getPercentageColor(sectorItem.iislPercChange)}}>  <b>{i + 1}.</b> {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%) </span>\n                                                  <span title=\"last 5 days 5min big movement  maximum count\">&nbsp;{this.get5DaysMoveCount(sectorItem.symbol)}  </span> \n                                                  \n                                                  {/* <span title=\"Delivery Info\">&nbsp;{this.getDeliveryInfo(sectorItem.symbol)}  </span>  */}\n\n                                                  \n                                            </Button>  \n\n                                            </div>\n\n\n                                        </TableCell>\n                                    ))\n                                    }\n\n                                </TableRow>\n                                : \"\"\n\n                            )) : ''}\n\n\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Fast Movement\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 5 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 5 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n      \n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n\n        if(!isfound.length){\n\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  ); \n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            var upsidecount = 0, downsidecount = 0, startingRsiupside = lastRsiValue[2], startingRsiDownside = lastRsiValue[2];\n                            lastRsiValue.forEach((element, i) => {\n                                if (i > 2 && element >= 55 && element <= 65) {\n                                    if (startingRsiupside <= element) {\n                                        startingRsiupside = element;\n                                        upsidecount += 1;\n                                    }\n                                }\n\n                                if (i > 2 && element >= 35 && element <= 45) {\n                                    if (element <= startingRsiDownside) {\n                                        startingRsiDownside = element;\n                                        downsidecount += 1;\n                                    }\n                                }\n                            });\n\n                            var volumeUpside = valumeData[2], volUpCount =0;                          \n                            valumeData.forEach((element, i) => {\n                                if (i > 2 && volumeUpside < element) {\n                                    volumeUpside = element;\n                                    volUpCount += 1;\n                                }\n                            });\n\n                            console.log(watchList[index].symbol, \"valumeData\", valumeData, );\n\n                            console.log(watchList[index].symbol, \"last continue rsi\", upsidecount);\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" RSI rising :\" + upsidecount });\n                        \n\n                            if (upsidecount >= 2 || downsidecount >= 2) {\n                                if (this.state.BBBlastType == 'BBBlastOnly') {\n                                    if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                        let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"BUY\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM: Buy \" + watchList[index].symbol;\n                                    }\n                                    if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                       let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"SELL\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                    }\n                                } else {\n\n                                    let timeDuration = this.getTimeFrameValue('ONE_DAY');\n                                    var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n                                    var startDateforDaily = moment(new Date()).subtract(time);\n                                    var dataDay = {\n                                        \"exchange\": watchList[index].exch_seg,\n                                        \"symboltoken\": watchList[index].token,\n                                        \"interval\": 'ONE_DAY',\n                                        \"fromdate\": moment(startDateforDaily).format(format1),\n                                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                                    }\n                                    AdminService.getHistoryData(dataDay).then(resd => {\n                                        let histdatad = resolveResponse(resd, 'noPop');\n                                        var DSMA = '';\n                                        if (histdatad && histdatad.data && histdatad.data.length) {\n                                            var candleDatad = histdatad.data;\n                                            var closeingDatadaily = [];\n                                            candleDatad.forEach((element, loopindex) => {\n                                                closeingDatadaily.push(element[4]);\n                                            });\n\n                                            DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n\n                                            var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                                            console.log(watchList[index].symbol, \"DSMA\", DSMALastValue);\n\n                                            if (LtpData.ltp > DSMALastValue && bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                \n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"BUY\",\n                                                    name: watchList[index].name,\n                                                    \n                                                }; \n                                                \n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB  buy');\n                                                window.document.title = \"FM: Buy \" + watchList[index].symbol;\n\n                                            }\n                                            if (LtpData.ltp < DSMALastValue && bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"SELL\",\n                                                    name: watchList[index].name,\n                                                }\n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB sell');\n                                                window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                            }\n                                        }\n\n\n                                    });\n\n                                }\n                            }\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n                                    \n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType : \"BBStrongBreakout\",\n            qtyToTake:'',\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"FM2\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 2 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 2 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n        if(!isfound.length){\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  );\n            return true; \n          \n        }else{\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                 //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                 //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                        \n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \n                            // valumeData.forEach((element, i) => {\n                            //     if (i > 2 && volumeUpside < element) {\n                            //         volumeUpside = element;\n                            //         volUpCount += 1;\n                            //     }\n                            // });\n\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\"  });\n                        \n                            let isFound = false; \n\n                            if (this.state.BBBlastType == 'BBStrongBreakout') {\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length-1][2] == candleData[candleData.length-1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt : candleData && candleData[candleData.length-1][0],\n                                        orderType: \"BUY\",\n                                        name: watchList[index].name,\n                                    }\n                                   \n                                    if(this.updateToLocalStorage(data)){\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" BUY Eligible\" });\n                                    }\n                                \n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length-1][3] == candleData[candleData.length-1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                   let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt : candleData && candleData[candleData.length-1][0],\n                                        orderType: \"SELL\",\n                                        name: watchList[index].name,\n                                    }\n                                    if(this.updateToLocalStorage(data)){\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" SELL Eligible\" });\n                                    }\n                                   \n                                }else{\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" Not Eligible\" });\n                                }\n                            }\n\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol, \n                    qtyToTake : this.state.qtyToTake\n                }\n                console.log(symbolInfo); \n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone );\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                console.log(symbolInfo); \n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                {/* <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem> */}\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n\n                                \n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true, \n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList :  [],  //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n            sortedType : \"pChange\"\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.checkLiveBids();\n        }, 10 * 60000);\n\n        this.checkLiveBids(); \n\n       \n    }\n\n   \n \n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkLiveBids();\n\n        });\n    }\n\n\n    checkLiveBids = async() => {\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({liveBidsList : [] });\n\n\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n          \n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n                \n                console.log(\"bid\",resd.data.data ); \n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if(resd.data && resd.data.data.length){\n\n                    let bidlivedata = resd.data.data[0]; \n                    // let biddata = {\n                    //     totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                    //     totalSellQuantity: bidlivedata.totalSellQuantity,\n                    //     deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                    //     symbol : bidlivedata.symbol, \n                    //     orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity, \n                    //     nc : bidlivedata.pChange, \n                    //     ltp : bidlivedata.lastPrice, \n                    // }\n \n                    bidlivedata.quantityTraded = bidlivedata.quantityTraded != '-' ?  parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : \"-\"; \n                    bidlivedata.deliveryQuantity =  bidlivedata.deliveryQuantity != '-' ?  parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')) : \"-\";  \n                    \n\n                    bidlivedata.totalBuyQuantity =  bidlivedata.totalBuyQuantity != '-' ?  parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) : \"-\";  \n\n                    bidlivedata.totalSellQuantity =  bidlivedata.totalSellQuantity != '-' ?  parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : \"-\";  \n                    bidlivedata.totalTradedVolume =  bidlivedata.totalTradedVolume != '-' ?  parseFloat(bidlivedata.totalTradedVolume.split(\",\").join('')) : \"-\";  \n                    bidlivedata.totalTradedValue =  bidlivedata.totalTradedValue != '-' ?  parseFloat(bidlivedata.totalTradedValue.split(\",\").join('')) : \"-\";  \n\n                    \n                    this.state.liveBidsList.sort(function (a, b) {\n                        return b.pChange - a.pChange;\n                    });\n\n\n\n                    if(bidlivedata.totalBuyQuantity/bidlivedata.totalSellQuantity > 1.25){\n                        CommonMethods.speckIt(bidlivedata.symbol + \" buying bid \" + (bidlivedata.totalBuyQuantity/bidlivedata.totalSellQuantity ).toFixed(2) +\" of seller\");\n                        bidlivedata.highlight = true; \n                    }\n\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, bidlivedata] , lastUpdateTime : resd.data.lastUpdateTime}, function(){\n                        \n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList)); \n                        window.document.title = \"Del: \" + this.state.liveBidsList[0].symbol;\n\n\n                    });\n    \n        \n                }\n                \n            });\n            await new Promise(r => setTimeout(r, 200));  \n        }\n   \n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat =(str)=> {\n        if(!isNaN(str)){\n            return   \"(\" + (str/100000).toFixed(2)+ \"L)\"; \n        }\n           \n        \n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn =(type)=>{\n\n        this.state.liveBidsList.sort(function (a, b) {\n            return b[type] - a[type];\n        });\n\n        this.setState({liveBidsList : this.state.liveBidsList, sortedType: type});\n\n    }\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n     \n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                                     <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                       {this.state.selectedWatchlist} ({this.state.liveBidsList.length}) updated at {this.state.lastUpdateTime}\n                                    </Typography> \n\n                                    <span>Sorted By:  {this.state.sortedType} </span>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    \n\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkLiveBids()}>Refresh</Button>\n                    </Grid>\n\n                </Grid>\n\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                              \n                                     <TableCell   align=\"left\"><Button  onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\n                                     <TableCell  align=\"center\">Average Price</TableCell>\n                                     <TableCell  align=\"center\"><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalBuyQuantity\")}> Total Buy Quantity</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalSellQuantity\")}> Total Sell Quantity</Button>  </TableCell>\n\n\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell>\n\n                                    <TableCell  align=\"center\">Day Open</TableCell>\n                                    <TableCell  align=\"center\">Day High</TableCell>\n                                    <TableCell  align=\"center\">Day Low</TableCell>\n                                    <TableCell  align=\"center\">Previous Close</TableCell>\n\n                \n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n\n                            {this.state.liveBidsList ? this.state.liveBidsList.map((row, i)  => (\n                                <TableRow hover key={i} style={{ background :this.getPercentageColor(row.pChange)}}>\n                                    \n                                    <TableCell  align=\"left\">{row.symbol} {row.lastPrice} ({row.pChange}%)</TableCell>\n                                    <TableCell  align=\"left\">{row.averagePrice}</TableCell>\n\n                                    \n                                    <TableCell  align=\"center\">{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell>\n                                    <TableCell  align=\"center\">{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.deliveryToTradedQuantity}%</TableCell>\n                                    <TableCell style={{background: row.highlight ? \"lightgray\" : \"\"}} align=\"center\">{row.totalBuyQuantity} {this.convertToFloat(row.totalBuyQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalSellQuantity} {this.convertToFloat(row.totalSellQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalTradedValue}Cr</TableCell>\n\n                                    <TableCell  align=\"center\">{row.open}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayHigh}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayLow}</TableCell>\n                                    <TableCell  align=\"center\">{row.previousClose}</TableCell>\n\n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n  var lightChartData = props.chartData.chartStaticData; //localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\n \n  console.log('lightChartData', lightChartData); \n\n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {},\n    timeFrame: \"FIVE_MINUTE\"\n})\n\n\n  const handleTimeFrame = (e) => {\n    console.log(e.target.value);\n    props.chartData.updateTimeFrameChart(lightChartData.token,e.target.value );\n\n    setValues({timeFrame: e.target.value}); \n  };\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n      \n\n{/* \n        <FormControl style={{minWidth: '10%', }} >\n            <Select value={values.timeFrame} name=\"timeFrame\" onChange={handleTimeFrame}>\n                <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n            </Select>\n        </FormControl> */}\n\n        &nbsp;\n         \n        {lightChartData.name}   {lightChartData.ltp}  ({lightChartData.change}%)\n\n        \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n         \n\n        <LightChartCom chartData={{candleSeries:lightChartData.lightChartData, volumeSeries: lightChartData.volumeSeriesData}}/>\n       \n\n\n        </DialogContent>\n        <DialogActions>\n\n\n       \n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport * as moment from 'moment';\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport Parser from 'html-react-parser';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nimport ChartDialog from './ChartDialog';\nimport LightChartModel from './LightChartModel';\n\n\n\nclass OrderBook extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData: [],\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            selectAllzone: 'Select All',\n            triggerprice: 0,\n            price: 0,\n            lotsize: 0,\n            firstTimeFlag: true,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            qtyToTake: '',\n            BBBlastType: \"BBBlastOnly\",\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            sortedType: \"isActivated\",\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || []\n\n        }\n    }\n\n\n\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            var tostartInteral = setInterval(() => {\n                var time = new Date();\n                if (time.getMinutes() % 5 === 0) {\n                    setTimeout(() => {\n                        this.checkSlowMotionCheckLive();\n                    }, 70000);\n                    setInterval(() => {\n                        this.checkSlowMotionCheckLive();\n                    }, 60000 * 5 + 70000);\n                    clearInterval(tostartInteral);\n                }\n            }, 1000);\n\n        }\n\n    }\n\n\n\n    onChangeWatchlist = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkSlowMotion();\n\n        });\n    }\n\n\n    checkSlowMotion = async () => {\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n\n\n        this.setState({ scanUpdate: \"\" });\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n\n            var isfound = this.state.slowMotionStockList.filter(item => item.token == row.token);\n            if (!isfound.length) {\n                this.checkSlowMotionStock(row.token, row, index + 1);\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n        }\n\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                return \"720:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                    return \"2160:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                    return \"2160:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"2160:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"8760:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    updateTimeFrameChart=(token, timeFrame)=>{\n\n        console.log( token,timeFrame );\n\n        let time = this.getTimeFrameValue(timeFrame);\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": timeFrame,\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\n\n                for (let index = 0; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n                }\n\n                const lightChartData = candleDatad.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n   \n\n                var lightChartinfo = localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\n\n                lightChartinfo.lightChartData = lightChartData; \n                lightChartinfo.volumeSeriesData = volumeSeriesData; \n                localStorage.setItem('lightChartData', JSON.stringify(lightChartinfo)); \n\n                this.setState({chartStaticData: lightChartinfo});\n            }\n\n     \n        });\n  }\n\n\n\n    checkSlowMotionStock = (token, stock, stockindex) => {\n        var beginningTime = moment('9:15am', 'h:mma');\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\n\n                var bigCandleCount = 0;\n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n\n                    if (element) {\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                    }\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                }\n\n\n                console.log(\"Totalcount\", stock.name, bigCandleCount, volumeSeriesData);\n\n                this.setState({ scanUpdate: \"Scan: \" + stockindex + \". \" + stock.name + \" maxCount: \" + bigCandleCount })\n\n                if (bigCandleCount <= 15) {\n\n                    var isfound = this.state.slowMotionStockList.filter(item => item.token == token);\n                    if (!isfound.length) {\n                        stock.bigCandleCount = bigCandleCount;\n                        stock.sectorName = this.state.selectedWatchlist;\n\n                        var candleChartData = []; \n                        candleDatad.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        const lightChartData = candleDatad.map(d => {\n                            return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                        });\n        \n\n\n                       // stock.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1));  \n                        stock.candleChartData = candleChartData;  \n                        stock.lightChartData =  lightChartData; \n                        stock.volumeSeriesData =  volumeSeriesData;\n\n                        this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\n                            localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                        });\n                    }\n        \n\n                   \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async () => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            if (!row.isActivated) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var time = moment.duration(\"31:00:00\");  //22:00:00\" for last day  2hours \n                var startDate = moment(new Date()).subtract(time);\n                var beginningTime = moment('9:15am', 'h:mma');\n\n                var dataDay = {\n                    \"exchange\": 'NSE',\n                    \"symboltoken\": row.token,\n                    \"interval\": 'FIVE_MINUTE',\n                    \"fromdate\": moment(startDate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n                AdminService.getHistoryData(dataDay).then(resd => {\n                    let histdatad = resolveResponse(resd, 'noPop');\n                    var DSMA = '';\n                    if (histdatad && histdatad.data && histdatad.data.length) {\n                        var candleDatad = histdatad.data;\n                        var closeingDatadaily = [], valumeSum = 0;\n\n                        var bigCandleCount = 0, midBullishCount = 0, bullishCount = 0, activationTime = \"\", activationPrice = 0;\n\n                        for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\n                            const element = candleDatad[index];\n\n                            if (element) {\n                                var per = (element[4] - element[1]) * 100 / element[1];\n                                if (per >= 1) {\n                                    bigCandleCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0.5) {\n                                    midBullishCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0) {\n                                    bullishCount += 1;\n                                }\n                            }\n                        }\n\n                        var candleChartData = [];\n                        candleDatad.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        //row.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1)); \n                        row.candleChartData = candleChartData; \n                        \n                        \n                        let update = Parser(\"Update: \" + (index + 1) + \".\" + row.name + \" large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b>\" ); \n                \n                        this.setState({ scanUpdate:  update})\n                        console.log(row.symbol, bigCandleCount, midBullishCount, bullishCount);\n\n                        let updatetopage = \"large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b> at \" + new Date(candleDatad[candleDatad.length-1][0]).toLocaleTimeString(); \n\n                        row.update = updatetopage; \n\n                        if (bigCandleCount >= 1 || (midBullishCount >= 1 && bullishCount >= 2)) {\n\n                            row.isActivated = true;\n                            row.activationTime = activationTime;\n                            row.activationPrice = activationPrice;\n\n                            window.document.title = \"SM: \" + row.symbol;\n                            console.log('hey, slow motion stock' + row.symbol + \" broken\");\n\n                            this.speckIt('hey, slow motion stock' + row.symbol + \" broken\");\n                            this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                                this.sortByColumn(\"isActivated\");\n                                localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                            })\n                            \n                        }\n\n                       \n\n                    }\n\n                });\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n\n        }\n\n    }\n\n    activationToLtpChange = async() => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": row.symbol,\n                \"symboltoken\": row.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                   row.ltp = LtpData.ltp;\n                   row.change = ((LtpData.ltp -  LtpData.close)*100/LtpData.close).toFixed(2);\n\n                   if(row.activationPrice){\n                    row.AtoltpChng = ((LtpData.ltp-row.activationPrice)*100/row.activationPrice).toFixed(2); \n                   }\n              \n                   this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                    })\n                }\n\n            })\n\n            await new Promise(r => setTimeout(r, 125));\n        }\n    }\n\n\n    showCandleChart = (candleData, symbol) => {\n\n        if(candleData.length>0){\n            localStorage.setItem('candleChartData', JSON.stringify(candleData))\n            localStorage.setItem('cadleChartSymbol', symbol)\n            document.getElementById('showCandleChart').click();\n        }\n       \n    }\n\n    showLightChart = (row) => {\n\n\n        console.log(\"row\",row)\n\n\n        if(row.lightChartData.length>0){\n            localStorage.setItem('lightChartData', JSON.stringify(row));\n            this.setState({chartStaticData: row}, function(){\n                document.getElementById('showLightChart').click();\n\n            });\n        }\n       \n    }\n\n    \n\n\n    deleteAllScan = () => {\n\n        if(window.confirm(\"Are you sure to delete all scan stocks?\")){\n            this.setState({ slowMotionStockList: []})\n            localStorage.setItem(\"slowMotionStockList\",[]);\n        }\n     \n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat = (str) => {\n        if (!isNaN(str)) {\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\n        }\n\n\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn = (type) => {\n\n        this.state.slowMotionStockList.sort(function (a, b) {\n            if (type == \"isActivated\" && a.isActivated) {\n                return (a.isActivated === b.isActivated) ? 0 : a ? -1 : 1;\n            } else {\n                return b[type] - a[type];\n            }\n        });\n\n        this.setState({ slowMotionStockList: this.state.slowMotionStockList, sortedType: type });\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n\n\n                {window.location.hash !== \"#/position\" ? <PostLoginNavBar /> : \"\"}\n\n\n                <ChartDialog />\n\n                {this.state.chartStaticData ? \n                <LightChartModel chartData={{updateTimeFrameChart : this.updateTimeFrameChart, chartStaticData : this.state.chartStaticData}} /> \n                : \"\"}\n                <Grid direction=\"row\" alignItems=\"center\" container>\n                    <Grid item xs={12} sm={12} >\n\n                        <Paper style={{ padding: \"10px\" }} >\n\n                            <Grid justify=\"space-between\"\n                                container spacing={1}>\n\n                                <Grid item xs={12} sm={4} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                      Slow Motion ({this.state.slowMotionStockList.length})  <DeleteIcon  onClick={() => this.deleteAllScan()}/>  found at {new Date().toLocaleString()}\n                                    </Typography>\n                                    {this.state.sortedType ? <> <b> Sorted By: </b> {this.state.sortedType}  </> : \"\"}\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n\n                                <Grid item xs={12} sm={4} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotion()}>Scan</Button>\n                            \n                                    {this.state.scanUpdate ? <>{this.state.scanUpdate}  </> : \"\"}\n                                    </Grid>\n\n                                <Grid item xs={12} sm={2} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotionCheckLive()}>Refresh</Button>\n                                </Grid>\n\n                                \n\n                            </Grid>\n\n\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\">\n                                        <TableCell align=\"left\">Sr.</TableCell>\n\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pchange\")}>Symbol</Button> </TableCell>\n                                        <TableCell align=\"center\">Sector</TableCell>\n\n                                        <TableCell align=\"center\">Max Count</TableCell>\n\n\n\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"isActivated\")}>Is Activated</Button></TableCell>\n                                        <TableCell align=\"center\">Activate Time</TableCell>\n                                        <TableCell align=\"center\">Activation Price</TableCell>\n                                        <TableCell align=\"center\">Last Update</TableCell>\n                                        <TableCell align=\"center\"><Button onClick={() => this.activationToLtpChange()}>A.toLtpChng</Button></TableCell>\n\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n\n\n\n                                    {this.state.slowMotionStockList ? this.state.slowMotionStockList.map((row, i) => (\n                                        <TableRow hover key={i} style={{ background: row.isActivated ? \"lightgray\" : \"\" }}>\n                                            <TableCell align=\"left\">{i + 1}</TableCell>\n\n                                            {/* <TableCell align=\"left\"> <Button size=\"small\" variant=\"contained\" style={{ color: !row.change ? '' : row.change > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.name)}> {row.name} {row.ltp}  {row.change ? \"(\" + row.change+ \"%)\" : \"\" }  <EqualizerIcon /> </Button></TableCell> */}\n                                            <TableCell align=\"left\"> <Button size=\"small\" variant=\"contained\" style={{ color: !row.change ? '' : row.change > 0 ? 'green' : 'red' }} onClick={() => this.showLightChart(row)}> {row.name} {row.ltp}  {row.change ? \"(\" + row.change+ \"%)\" : \"\" }  <EqualizerIcon /> </Button></TableCell>\n\n\n                                            \n                                            <TableCell align=\"center\">{row.sectorName}</TableCell>\n                                            <TableCell align=\"center\">{row.bigCandleCount}</TableCell>\n\n                                            <TableCell align=\"center\">{row.isActivated ? \"Yes\" : \"No\"}</TableCell>\n                                            <TableCell align=\"center\">{row.activationTime}</TableCell>\n                                            <TableCell align=\"center\">{row.activationPrice}</TableCell>\n                                            <TableCell align=\"center\">{row.update ? Parser(row.update): \"\"}</TableCell>\n                                            <TableCell align=\"center\">{row.ltp} {row.AtoltpChng ? \"(\" + row.AtoltpChng+ \"%)\" : \"\" }</TableCell>\n\n                                        </TableRow> \n                                    )) : <Spinner />}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\nimport NiftyView from \"./MyTrade/NiftyView\";\nimport BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\nimport Test from \"./MyTrade/Test\";\n\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\n\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\nimport FindFastMovement2 from \"./MyTrade/FindFastMovement2\";\n\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\nimport DeliveryData from \"./MyTrade/DeliveryData\";\nimport SlowMotion from \"./MyTrade/SlowMotion\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    <Route path=\"/nifty-view\" component={NiftyView}/>\n                    <Route path=\"/bn-view\" component={BankNiftyView}/>\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\n\n\n                    \n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n                    <Route path=\"/find-fast-movement2\" component={FindFastMovement2}/>\n\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\n                    <Route path=\"/delivery\" component={DeliveryData}/>\n                    <Route path=\"/slow-motion\" component={SlowMotion}/>\n                    <Route path=\"/test\" component={Test}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}