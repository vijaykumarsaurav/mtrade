{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Orderbook.js","components/MyTrade/Position.js","components/MyTrade/Tab.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/AddToWatchlist.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","push","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","EmojiEmotions_default","ListItemText","primary","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","res","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","foundPatternList","reverse","FoundPatternDialog_DialogTitle","FoundPatternDialog_DialogContent","Table","stickyHeader","size","TableRow","TableCell","TableBody","map","idata","index","hover","key","marginLeft","candleData","candleChartData","symbol","getElementById","click","Equalizer_default","pattenName","time","BuyAt","SellAt","FoundPatternDialog_DialogActions","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","clsx","edge","Menu_default","item","noWrap","direction","FoundPatternDialog_CustomizedDialogs","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","Date","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","useUtils_cfb96ac9","utils","DateFnsUtils","containers","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","sort","b","updatetime","oderbookData","modifyOrder","row","trailingstoploss","console","log","triggerprice","variety","orderid","ordertype","price","producttype","quantity","lotsize","tradingsymbol","symboltoken","exchange","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","_this2","hash","Paper","gutterBottom","float","TableHead","whiteSpace","toString","substring","transactiontype","orderstatus","textAlign","averageprice","lib_default","Home","getCandleHistoryAndStore","asyncToGenerator","regenerator_default","mark","_callee","watchList","today","timediff","startdate","_loop","wrap","_context2","prev","next","toLocaleTimeString","clearInterval","candleHistoryInterval","moment","isoWeekday","subtract","element","_context","interval","fromdate","todate","getHistoryData","histdata","last10Candle","slice","findTweezerTopPatternLive","findTweezerBottomPatternLive","r","setTimeout","stop","delegateYield","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","high","low","close","secondCandle","diffPer","Math","round","ttophistCandle","forEach","foundData","getTime","toConsumableArray","SpeechSynthesisUtterance","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","toFixed","tBophistCandle","findNR4PatternLive","_callee2","sumPercentage","_loop2","timediffend","_context4","backTestResult","backTestFlag","_context3","rgrangeCount","last4Candle","last5Candle","rangeArr","firstElement","buyentry","sellenty","getLTP","LtpData","ltp","orderActivated","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","floor","toLocaleString","brokerageCharges","findNR7PatternLive","_callee3","_loop3","showtestdata","_context6","_context5","last7Candle","last9Candle","stockTesting","showCandleChart","refreshLtpPer","_callee4","_loop4","_context8","_context7","getStoplossFromOrderbook","stopLoss","buyavgprice","maxLossAmount","parseInt","netqty","getPositionData","_callee5","totalMaxPnL","_context9","getPosition","positionList","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","parseFloat","sellavgprice","pnl","buyqty","slData","totalsellavgprice","totalbuyavgprice","stopLossAmount","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","autoCompleteSearch","found","filter","exch_seg","orderWithFlatstoploss","ltpPrice","stopLossPrice","perTradeStopLossPer","getMinPriceAllowTick","orderOption","buyPrice","placeOrderMethod","catch","autoSearchList","BankLtpltp","getStopLossPrice","_ref6","_callee6","_context10","slPrice","stoploss","_x","_x2","apply","squareoff","placeOrder","placeSLMOrder","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","beginningTime","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","onSelectItem","values","autoSearchTemp","fdata","list","updateSocketWatch","getAveragePrice","orderId","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","updateOrderList","slmOption","modifyOrderMethod","minPrice","wholenumber","decimal","getPercentage","avgPrice","percentChange","lastTriggerprice","sqrOffbeginningTime","sqrOffendTime","isBetween","symbolname","InstrumentLTP","endTime","currentTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","setInterval","getMinutes","_this3","totalDayLoss","dailyLossPer","abs","getNSETopStock","scandata","result","_loop5","isFound","j","symbolName","searchRes","_this4","selectedStockInteval","getSelectedStockFromDb","_loop6","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","netPnLAmountTotal","overflow","fontWeight","paddingLeft","background","rel","Orderbook","MuiTabsScroller","wsClint","w3cwebsocket","onChangePattern","backTestResultDateRange","dateAndTypeKeys","keys","onChangeWatchlist","staticData","symbolList","fromDate","startDate","endDate","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","feedToken","firstTime_req","send","channel","sbin","task","user","acctid","stopBacktesting","stopScaningFlag","backTestAnyPattern","enddate","currentMoment","endMoment","runningTest","patternType","abrupt","backTestNR4","backTestNR4SameDay","NR4ForNextDay","isSameOrBefore","backTestNR4DatewiseRange","add","index2","next10Candle","backtestTweezerTop","backtestTweezerBottom","NR4ForNextDayResult","next5thCandle","foundStock","nr4CheckPastPerfommance","t0","unshift","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","perChngOnLow","_ref4","dateWithWlType","selectedWatchlist","datewisetrades","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","slmOrderType","LoadSymbolDetails","getHistory","histCandles","InstrumentHistroy","watchlist","saveWatchListJSON","resdata","search","deleteItemWatchlist","findIndex","splice","insiderow","ifNotBought","getStaticData","totalWatchlist","element2","onmessage","decoded","atob","pako","inflate","liveData","foundLive","tk","cng","nc","foundTweezerTop","entryBelow","onerror","_req","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Autocomplete","freeSolo","disableClearable","paddingRight","option","renderInput","params","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","Delete_default","sbinLtp","MaterialUIDateTimePicker","colSpan","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","indexSymbolData","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","speckIt","toLocaleLowerCase","innerHTML","percent","stopnview","indexTimeStamp","products","loadPackList","todayTime","getHours","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","advances","declines","unchanged","connect","App","diffData","putData","callData","timeDate","totPEOI","totCEOI","diff","dateTime","chartData","labels","datasets","fill","borderColor","index_modern","maintainAspectRatio","x","y","colors","upward","downward","ApexCharts","querySelector","render","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","onopen","heartbeatReq","exchtime","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","AppRouter","react_router","path","exact","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.c66b6e8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\r\nconst INTIAL_STATE = {\r\n    packs: [],\r\n    pack:[],\r\n    updatedPack:null\r\n  };\r\n export default (state = INTIAL_STATE,action)=>{\r\n    switch (action.type) {\r\n        case actionTypes.SET_PACK_LOADED:\r\n          return { ...state, packs:action.payload };\r\n        case actionTypes.EDIT_PACK_INFO:\r\n          return {...state,updatedPack:action.payload}\r\n          case actionTypes.GET_PACK_INFO_BY_ID:\r\n              return {...state,pack:action.payload}    \r\n     default:\r\n          return state;\r\n      }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport getPackReducer from './packReducer';\r\n\r\nexport default combineReducers({\r\n    packs: getPackReducer,\r\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\r\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\r\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;","class AuthService {\r\n\r\n    getLoggedInUserInfo() {\r\n        localStorage.getItem(\"UserInfo\");\r\n    }\r\n\r\n    getHeader() {\r\n\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var jwtToken =   tokens &&  tokens.jwtToken;\r\n\r\n        return { 'headers': {\r\n            'Authorization': 'Bearer ' + jwtToken,\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n\r\n    loginHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n    getImageHeader() {\r\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\r\n    }\r\n\r\n    getScannerHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json',\r\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\r\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \r\n            // 'sec-fetch-mode': 'cors',\r\n            // 'origin': 'localhost',\r\n\r\n            \r\n        } }\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();","//my app api\r\nexport const API_KEY  = 'I4O6PJAn'; \r\nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\r\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\r\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\r\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\r\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \r\nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \r\nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \r\nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \r\nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \r\nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \r\n\r\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \r\nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \r\nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\r\n\t\r\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks'\t\r\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks'\t\r\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock'\t\r\n","import axios from 'axios';\r\nimport AuthService from \"./AuthService\";\r\nimport  * as apiConstant from \"../../utils/config\";\r\n\r\nclass AdminService {\r\n\r\n    login(credentials) {\r\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\r\n    } \r\n\r\n    logout(credentials) {\r\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\r\n     } \r\n\r\n    getUserData(formData){\r\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\r\n    }\r\n\r\n    getFunds(formData){\r\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\r\n    }\r\n\r\n    retrieveOrderBook(formData){\r\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\r\n    }\r\n    retrieveTradeBook(formData){\r\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\r\n    }\r\n    \r\n    retrieveallTradableInstruments(formData){\r\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\r\n    }\r\n\r\n    placeOrder(credentials) {\r\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    modifyOrder(credentials) {\r\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    cancelOrder(credentials) {\r\n\r\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getLTP(credentials) {\r\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getHistoryData(credentials) {\r\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    scanStocks(credentials) {\r\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\r\n     } \r\n\r\n     autoCompleteSearch(query) {\r\n        return axios.get('http://localhost:8081/search/'+query, '');\r\n     } \r\n     saveWatchList(data) {\r\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\r\n     } \r\n     addIntoStaticData(data) {\r\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\r\n     }\r\n     saveWatchListJSON(data) {\r\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\r\n     }\r\n     getWatchListJSON() {\r\n        return axios.get('/myJsonWatchList.json', '');\r\n     } \r\n     getStaticData() {\r\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\r\n        return axios.get('/mtrade/staticData.json', '');\r\n        else\r\n        return axios.get('/staticData.json', '');\r\n     } \r\n     saveCandleHistory(data) {\r\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\r\n     } \r\n\r\n     getPosition(data){\r\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\r\n     }\r\n\r\n     getAutoScanStock(){\r\n        return axios.get(apiConstant.getScannedStocks, '');\r\n     }\r\n\r\n     getNSETopStock(){\r\n        return axios.get(apiConstant.getNseTopStocks, '');\r\n     }\r\n\r\n     getSelectedStockFromDb(){\r\n        return axios.get(apiConstant.getSelectedStock, '');\r\n     }\r\n\r\n    //  getBNcpdata(){\r\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\r\n    //  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default new AdminService();\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport MyLogo from './mylogo.png';\r\n\r\nconst LoginNavBar = (props) => {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\r\n\r\n                    {/* <div style={{width:\"300px\"}}>\r\n                        <Typography variant=\"h6\" style={style}>\r\n                             &nbsp;&nbsp;  M-Trade\r\n                        </Typography>\r\n                    </div>               */}\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default LoginNavBar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Bharti Airtel Ltd\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleOnChange = e => {\r\n    props.loginProps.onChange(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <LoginNavBar/> */}\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PersonIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"User Id\"\r\n            name=\"userName\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.userName}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.password}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={props.loginProps.login}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n         \r\n          \r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// method calling\r\n\r\n// import React from \"react\";\r\n// import \"./styles.css\";\r\n\r\n// class Child extends React.Component {\r\n//   render() {\r\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\r\n//   }\r\n// }\r\n\r\n// class Parent extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       username : \"vijay\"\r\n//     }\r\n//     this.handler = this.handler.bind(this)\r\n//   }\r\n\r\n//   handler(e) {\r\n//     console.log(e.target.name ); \r\n//     this.setState({\r\n//       [e.target.name]: e.target.value \r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     return <>\r\n//     Hello:  {this.state.username} \r\n//      <Child handler = {this.handler} />\r\n     \r\n//      </>\r\n//   }\r\n// }\r\n\r\n// export default Parent;\r\n","import { toast } from 'react-toastify';\r\n\r\nclass Notify {\r\n\r\n    showError(msg) {\r\n        toast.error(msg, this.options());\r\n    }\r\n\r\n    showSuccess(msg) {\r\n        toast.success(msg , this.options());\r\n    }\r\n\r\n    showWarning(msg) {\r\n        toast.warn(msg , this.options());\r\n    }\r\n\r\n    options() {\r\n        return {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          //  position: \"buttom-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Notify();","import Notify from \"./Notify\";\r\n\r\nexport function resolveResponse(response, msg) {\r\n   //console.log('response',response);\r\n    let data = {};\r\n        if (response.status === 200) {\r\n            data = response.data;\r\n            if(data.status) {\r\n                if(data.message){\r\n\r\n                    if(msg !== 'noPop')\r\n                    Notify.showSuccess(data.message);\r\n                }\r\n                return data;\r\n            }else{\r\n               \r\n                Notify.showError(data.message);\r\n                if(data.message === \"Invalid Token\"){\r\n                    window.location.replace(\"#/login\");\r\n                    localStorage.setItem('userTokens', '');\r\n                    localStorage.setItem('userProfile', '');\r\n                }\r\n                return Promise.reject(data.message);\r\n            }\r\n        }\r\n        else if(response && !response.status){\r\n            Notify.showError(data.message);\r\n        }   \r\n}","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport LoginNavBar from \"../LoginNavbar\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LoginNewUI from './LoginNewUI';\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass LoginComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"V193588\",\r\n            password: \"\", \r\n            isDasable:false,\r\n            isError:false,\r\n            \r\n        };\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <LoginNavBar/>\r\n                \r\n                {/* <Container maxWidth=\"sm\">\r\n                     <br/><br/><br/> \r\n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\r\n                    <form style={styles.formStyle}>\r\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\r\n\r\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                        <Grid item  xs={12} sm={8}>\r\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\r\n                        </Grid>\r\n                        <Grid item  xs={12} sm={10}>\r\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                        </Grid>\r\n                    </form>\r\n                </Container> */}\r\n\r\n                {/* New Login UI */}\r\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\r\n                \r\n                <Grid container justify=\"space-around\">\r\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\r\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \r\n      if(userTokens){\r\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \r\n        this.props.history.push('home');\r\n      }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    login = (e) => {\r\n        \r\n        this.setState({ isError: \"\" });\r\n\r\n\r\n        e.preventDefault();\r\n\r\n        if(!this.state.userName && !this.state.password){\r\n            this.setState({ isError: \"Olms Id and Password are required.\" });\r\n            return;\r\n        }\r\n\r\n        if(!this.state.userName){\r\n            this.setState({ isError: \"Olms Id is required.\" });\r\n            return;\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({ isError: \"Password is required.\" });\r\n            return;\r\n        }\r\n         \r\n        this.setState({ isDasable: true });\r\n\r\n \r\n\r\n        const loginPayload = {\r\n            clientcode:  this.state.userName,\r\n            password: this.state.password \r\n\r\n        };\r\n        AdminService.login(loginPayload)\r\n            .then(loginRes => {\r\n              //  Notify.showError(\"Olms Id and password is required.\");\r\n            //  alert(JSON.stringify(res));\r\n         //   console.log(\"res\",loginRes); \r\n\r\n              var data = resolveResponse(loginRes);\r\n              loginRes  = loginRes && loginRes.data; \r\n            //  console.log(\"resdata\",loginRes); \r\n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\r\n                this.setState({ isError: loginRes.message });\r\n              }\r\n              \r\n               // data = res.data; \r\n                this.setState({ isDasable: false });\r\n\r\n                if(loginRes.data){\r\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\r\n                  \r\n\r\n                    AdminService.getUserData().then(profileRes => {\r\n                       // console.log('profiledata', profileRes); \r\n                          let data = resolveResponse(profileRes);\r\n                          profileRes =  profileRes && profileRes.data; \r\n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\r\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\r\n                        //    this.props.history.push('/position');\r\n\r\n                             window.location.replace('#/home')\r\n                          }\r\n                      })\r\n\r\n                  \r\n\r\n                }\r\n            });\r\n          \r\n            // setTimeout(() => {\r\n            //     this.setState({ isError: \"\" });\r\n            // }, 3000);\r\n\r\n\r\n           \r\n    }\r\n\r\n}\r\n\r\nconst styles ={\r\n    formStyle :{\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    errorMessage:{\r\n        color:\"red\",\r\n        marginTop: '11px'\r\n    },\r\n    waitMessage:{\r\n        color:\"gray\",\r\n        marginTop: '11px'\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { Link } from \"react-router-dom\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AdminService from \"./service/AdminService\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n//import RouterComponent from '../RouterComponent'; \r\n\r\n\r\nexport const AdminMenuList = (\r\n\r\n  <div>\r\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\r\n   \r\n    <ListItem button component='a' href={\"/mtrade/#/livefeed\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Live Feed\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Positions\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Funds\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Order Book\" />\r\n    </ListItem>\r\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Trade Book\" />\r\n    </ListItem>\r\n  \r\n    <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"NiftyBank View\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Nifty View\" />\r\n    </ListItem>\r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Sector Top\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/test\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Exprement - Research\" />\r\n    </ListItem>\r\n  \r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\r\n    </ListItem>\r\n  \r\n\r\n\r\n  </div>\r\n);\r\n\r\nfunction deleteAllCookies() {\r\n  var cookies = document.cookie.split(\";\");\r\n  for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i];\r\n      var eqPos = cookie.indexOf(\"=\");\r\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n  }\r\n}\r\n\r\nfunction logoutPortal(){\r\n  //console.log(\"yo_man\")\r\n\r\n  if(window.confirm(\"Are you sure to logout?\")){\r\n\r\n  var userProfile = localStorage.getItem(\"userProfile\")\r\n  userProfile = userProfile && JSON.parse(userProfile);\r\n\r\n  var data = {\r\n    clientcode : userProfile && userProfile.clientcode\r\n    }\r\n\r\n    AdminService.logout(data)\r\n    .then(res => {\r\n    \r\n    localStorage.clear();\r\n    //localStorage.setItem('userTokens', '');\r\n    //localStorage.setItem('userProfile', '');\r\n    deleteAllCookies();\r\n    \r\n    window.location.replace(\"#/login\");\r\n    return;\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const LogoutMenu = (\r\n  <div>\r\n\r\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\r\n      <ListItem button>\r\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\r\n      </ListItem>\r\n    </Link>\r\n\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  //const [anchorEl, setAnchorEl] = React.useState(null);\r\n  //const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    localStorage.setItem('invertColorFlag', event.target.checked);\r\n    setAuth(event.target.checked);\r\n   \r\n  };\r\n\r\n  // const handleMenu = (event) => {\r\n\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Black & White'  : 'Colorfull'}\r\n        />\r\n      </FormGroup>\r\n     \r\n      {/* <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {}\r\n})\r\n\r\n\r\n \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n   \r\n  \r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\r\n        Chart \r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {localStorage.getItem('cadleChartSymbol')} \r\n        <br />\r\n\r\n        <span style={{fontSize:'12px'}}>  \r\n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt} &nbsp;&nbsp;\r\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\r\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\r\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\r\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\r\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\r\n        </span>\r\n      \r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"chart\">\r\n\r\n        {/* body data\r\n        <ReactApexChart\r\n              options={props.data && props.data.options}\r\n              series={props.data && props.data.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            /> */}\r\n\r\n        <ReactApexChart \r\n        \r\n        options={{\r\n          chart: {\r\n            type: 'candlestick',\r\n            height: 350\r\n          },\r\n          title: {\r\n              text: '',\r\n              align: 'left'\r\n          },\r\n          xaxis: {\r\n              type: 'datetime',\r\n          },\r\n          yaxis: {\r\n              tooltip: {\r\n              enabled: true\r\n              }\r\n          }\r\n      }}\r\n\r\n       series={[{\r\n        data:  JSON.parse(localStorage.getItem('candleChartData'))\r\n          \r\n      }]} \r\n\r\n      type=\"candlestick\" \r\n      width={500}\r\n      height={350} />\r\n\r\n\r\n    \r\n         \r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ChartDialog from './ChartDialog'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n  \r\n  const showCandleChart = (candleData, symbol) => {\r\n    candleData  = candleData && candleData.reverse();\r\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n    localStorage.setItem('cadleChartSymbol', symbol)\r\n    document.getElementById('showCandleChart').click();\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Patterns ({foundPatternList && foundPatternList.length})\r\n      </Button>\r\n      <ChartDialog />\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        Found Patterns\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\r\n        <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Time</b></TableCell> \r\n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\r\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\r\n\r\n                </TableRow>\r\n                <TableBody>\r\n                    \r\n                        {foundPatternList ? foundPatternList.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n\r\n                                    <TableCell align=\"left\">{index} </TableCell>\r\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\r\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \r\n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \r\n                                    \r\n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\r\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\r\n                                   \r\n                            </TableRow>\r\n\r\n                        )):  \"\"  }\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>    \r\n\r\n\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport * as Menu from './LeftMenuBar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MyLogo from './mylogo.png';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport  InvertColor from '../utils/InvertColor';\r\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    endMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'row reverse'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        //backgroundColor: '#f44336'\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function PostLoginNavBar(props) {\r\n\r\n    const [values] = React.useState({\r\n        acquisitionCount: '',\r\n        resubmitCount:''\r\n    });\r\n    \r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    // function handleClick(e) {\r\n    //     console.log(e.target.innerText)\r\n    //     //this.props.history.push('/login');\r\n    // }\r\n\r\n    var userProfile = localStorage.getItem(\"userProfile\")\r\n    userProfile = userProfile && JSON.parse(userProfile);\r\n    \r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n\r\n            >\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                        <Grid\r\n                                justify=\"space-between\"\r\n                                container\r\n                            >\r\n                        <Grid item >\r\n                        {/* <Typography variant=\"h6\" noWrap>\r\n                          M-Trade\r\n                         </Typography> */}\r\n                           <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n                        <Typography variant=\"h6\" noWrap>\r\n                        {localStorage.getItem('BankLtpltp')}\r\n                         </Typography>\r\n                         \r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"row\"\r\n                                    style={{ color: \"white\" }}\r\n                                >\r\n\r\n                               <Grid item>\r\n                               <FoundPatternDialog />\r\n                              </Grid>\r\n\r\n\r\n                    \r\n                             {/* <Grid item>\r\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\r\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\r\n                                    </Button>\r\n                              </Grid>\r\n */}\r\n\r\n\r\n                        \r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/position\"}  color=\"primary\">\r\n                                      Position\r\n                                    </Button>\r\n                              </Grid>\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/home\"}  color=\"secondary\">\r\n                                        Home\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n\r\n                              {/* <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\r\n                                        Order Status Live\r\n                                    </Button>\r\n                              </Grid> */}\r\n                              \r\n\r\n\r\n                                {/* <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\r\n                                        Order\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\r\n                                        Trade\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                            \r\n\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\r\n                                        Funds\r\n                                    </Button>\r\n                              </Grid> */}\r\n\r\n                            {/* <Grid item>\r\n                                <Typography  noWrap>\r\n\r\n                                <Button color=\"primary\">\r\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\r\n                                </Button>\r\n\r\n                                </Typography> \r\n\r\n                        \r\n\r\n\r\n                            </Grid> */}\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                        </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\r\n        \r\n                    <InvertColor />\r\n\r\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\r\n\r\n                    <IconButton onClick={handleDrawerClose}  >\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n            \r\n\r\n                <Divider />\r\n                <List>{Menu.AdminMenuList}</List>\r\n\r\n                {/* <Divider />\r\n                <List>  <InvertColor /></List> */}\r\n\r\n                <Divider />\r\n                <List>{Menu.LogoutMenu}</List>\r\n\r\n                \r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// BO agent : BOA\r\n// Data Entry : DE\r\n// Admin : ADMIN\r\n// Distributor : DIST\r\n\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Notify from \"./Notify\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  KeyboardDateTimePicker\r\n} from '@material-ui/pickers';\r\n\r\nfunction MaterialUIPickers(props) {\r\n\r\n // console.log(\"startDatestartDate,\",props ); \r\n  //var d = new Date(); \r\n  //d.setHours(0,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var startd = new Date(); \r\n  startd.setHours(9,0,0,0);\r\n  startd.setMinutes(15,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\r\n  var endd = new Date(); \r\n  endd.setHours(15,0,0,0);\r\n  endd.setMinutes(30,0,0,0);\r\n\r\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\r\n\r\n  const handleStartDateChange = date => {\r\n    setSelectedStartDate(date);\r\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\r\n  //  var startDateMili = new Date(date).getTime(); \r\n//    document.getElementById(\"startDateMili\").value = startDateMili; \r\n//    var endDateMili = document.getElementById(\"endDateMili\").value; \r\n    // if(startDateMili > endDateMili  ){\r\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\r\n    // }\r\n  };\r\n\r\n\r\n\r\n  const handleEndDateChange = date => {\r\n    setSelectedEndDate(date);\r\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\r\n  //  var endDateMili = new Date(date).getTime(); \r\n  //  document.getElementById(\"endDateMili\").value = endDateMili; \r\n\r\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \r\n  //  if(endDateMili  < startDateMili){\r\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\r\n  //   }\r\n   \r\n  };\r\n\r\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \r\n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\r\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \r\n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\r\n  // }\r\n\r\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \r\n  // //endDateMili ==''\r\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\r\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \r\n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\r\n\r\n  // }\r\n\r\n return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid containers>\r\n     \r\n        <KeyboardDateTimePicker\r\n         // disableFuture=\"true\"\r\n          margin=\"normal\"\r\n          style={{width:\"140px\"}}\r\n         // required={true}\r\n          id=\"date-picker-dialog\"\r\n          label={'Start Date'}\r\n         // format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedStartDate}\r\n          onChange={handleStartDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n         <KeyboardDateTimePicker\r\n           style={{width:\"140px\"}}\r\n        // disableFuture=\"true\"\r\n         margin=\"normal\"\r\n       //  required={true}\r\n         id=\"date-picker-dialog\"\r\n         label={'End Date'}\r\n       //  format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedEndDate}\r\n         onChange={handleEndDateChange}\r\n         KeyboardButtonProps={{\r\n           'aria-label': 'change date',\r\n         }}\r\n        />\r\n        \r\n       \r\n        \r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default  MaterialUIPickers; \r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass OrderBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All',\r\n            triggerprice :0,\r\n            price:0,\r\n            lotsize:0,\r\n            firstTimeFlag: true\r\n\r\n        }\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n\r\n                this.setState({oderbookData: orderlist});\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\r\n\r\n                // var pendingOrder = orderlist.filter(function(row){\r\n                //     return row.status == \"trigger pending\";\r\n                // }); \r\n                // this.setState({pendingOrder: pendingOrder});\r\n                                    \r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.getTodayOrder();\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    modifyOrder = (row, trailingstoploss) => {\r\n\r\n        console.log(this.state.triggerprice);\r\n\r\n        var data = {\r\n            \"variety\" :row.variety,  // \"STOPLOSS\",\r\n            \"orderid\": row.orderid,\r\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": row.duration,\r\n            \"price\":  this.state.price,\r\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\r\n            \"quantity\":row.lotsize,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n            }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n               // localStorage.setItem('ifNotBought' ,  'false')\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n      return(\r\n        <React.Fragment>\r\n\r\n\r\n        {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\r\n            \r\n         \r\n\r\n            <Paper style={{padding:\"10px\"}} >\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                Oders Details ({this.state.oderbookData.length}) \r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \r\n                            </Grid>\r\n                            \r\n                </Grid>\r\n            \r\n            <Grid direction=\"row\" alignItems=\"center\" container>\r\n            <Grid item xs={12} sm={12} >\r\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\r\n               \r\n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow variant=\"head\" >\r\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\r\n\r\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\r\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\r\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\r\n                        \r\n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\r\n                                \r\n                                <TableCell align=\"center\"><b>Price</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\r\n\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\r\n                \r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        \r\n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\r\n                                <TableRow hover key={i} >\r\n\r\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\r\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\r\n\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\r\n                                        : row.quantity}\r\n                    \r\n\r\n                                    </TableCell>\r\n\r\n                                \r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n\r\n                                \r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\r\n                                        : row.price}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\r\n                                        : row.triggerprice}\r\n                                    </TableCell>\r\n\r\n\r\n                                    <TableCell align=\"left\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \r\n                                        : ''}\r\n                                    </TableCell>\r\n                                    \r\n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\r\n\r\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\r\n\r\n                                    \r\n                                </TableRow>\r\n                            )):<Spinner/>}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n                            \r\n               </Grid>    \r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            autoSearchList :[],\r\n            InstrumentLTP : {},\r\n            autoSearchTemp : [],\r\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n            nr4TotalPer : 0,\r\n            totelActivatedCount : 0,\r\n            stockTesting : \"\"\r\n            \r\n        };\r\n    }\r\n    componentDidMount() {\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\r\n        //   this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 2002)}) \r\n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \r\n        }else{\r\n            clearInterval(this.state.positionInterval);\r\n            clearInterval(this.state.scaninterval); \r\n            clearInterval(this.state.bankNiftyInterval); \r\n        }\r\n    \r\n        var scanendTime = moment('3:30pm', 'h:mma');\r\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \r\n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \r\n            \r\n\r\n            \r\n            var tostartInteral =   setInterval(() => {\r\n\r\n                console.log(\"1st interval every second\", new Date().toLocaleTimeString());\r\n                var time = new Date(); \r\n                if(time.getMinutes() % 15 === 0){\r\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\r\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\r\n                    \r\n                    setTimeout(() => {\r\n                        console.log(\"set timout at 70sec \", new Date());\r\n                        this.getCandleHistoryAndStore(); \r\n                    }, 70000);\r\n\r\n                    setInterval(() => {\r\n                        console.log(\"2st interval every 5min 10Sec\", new Date());\r\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n                            this.getCandleHistoryAndStore(); \r\n                        }\r\n                     }, 60000 * 15 + 70000 );  \r\n\r\n                     clearInterval(tostartInteral); \r\n                } \r\n            }, 1000);\r\n            \r\n          \r\n        } \r\n\r\n   this.getCandleHistoryAndStore(); \r\n\r\n    this.findNR4PatternLive();\r\n   //this.findNR7PatternLive();\r\n\r\n\r\n   \r\n    // this.getPositionData();\r\n    // this.getNSETopStock();\r\n     \r\n\r\n    //  this.getMySelectedStock();\r\n\r\n    \r\n\r\n    // setInterval(() => {\r\n        \r\n    //     var timediff = moment.duration(\"00:50:00\");\r\n    //     var startdate = moment(new Date()).subtract(timediff);\r\n    \r\n\r\n    //     var enddiff = moment.duration(\"00:01:00\");\r\n    //     var enddate = moment(new Date()).add(enddiff);\r\n\r\n\r\n    //     var data  = {\r\n    //         \"exchange\": \"NSE\",\r\n    //         \"symboltoken\": 212,\r\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\r\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \r\n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\r\n    //     }\r\n    \r\n    //     AdminService.getHistoryData(data).then(res => { \r\n    //         let histdata = resolveResponse(res,'noPop' );\r\n    //         var candleData = histdata.data; \r\n    //         candleData.reverse(); \r\n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\r\n    //     }); \r\n\r\n    // }, 1000);\r\n\r\n   \r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.positionInterval);\r\n        clearInterval(this.state.scaninterval);\r\n        clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n  \r\n\r\n    getCandleHistoryAndStore = async()=> {\r\n\r\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \r\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \r\n       var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\r\n       const today = moment().isoWeekday();\r\n        var timediff = '';\r\n\r\n        \r\n\r\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\r\n            timediff = moment.duration(\"00:50:00\");\r\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\r\n            timediff = moment.duration(\"66:00:00\");\r\n        }else{\r\n            timediff = moment.duration(\"19:00:00\");\r\n        }\r\n        timediff = moment.duration(\"21:00:00\");\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";       \r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n            var data  = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                \"fromdate\": moment(startdate).format(format1) , \r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res,'noPop' );\r\n                //console.log(\"candle history\", histdata); \r\n                if(histdata && histdata.data && histdata.data.length){\r\n                   \r\n                    var candleData = histdata.data; \r\n                    candleData.reverse(); \r\n\r\n                    if(candleData && candleData.length >= 10){\r\n                        var last10Candle = candleData.slice(0, 10); \r\n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \r\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\r\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\r\n\r\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \r\n                    }\r\n\r\n                    // var data = {\r\n                    //     data : candleData, \r\n                    //     token: element.token,\r\n                    //     symbol: element.symbol\r\n                    // }\r\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\r\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \r\n                    // }); \r\n                \r\n                }else{\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\"); \r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 350));  \r\n        }\r\n\r\n\r\n    }\r\n\r\n    findTweezerTopPatternLive = (candleHist,symbol) => {\r\n\r\n     //   console.log(\"TweezerTop finding\", symbol); \r\n        if(candleHist && candleHist.length > 0){\r\n            //candleHist = candleHist.reverse(); \r\n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if(maxHigh < candleHist[index][2])\r\n                maxHigh = candleHist[index][2];\r\n                if(candleHist[index][3] < maxLow)\r\n                maxLow = candleHist[index][3];  \r\n            } \r\n            \r\n            var lastTrendCandleLow = candleHist[9][3]; \r\n            var firstTrendCandleHigh = candleHist[2][2]; \r\n\r\n            var firstCandle = {\r\n                time : candleHist[0]  && candleHist[0][0],\r\n                open: candleHist[0]  && candleHist[0][1],\r\n                high: candleHist[0]  && candleHist[0][2],\r\n                low: candleHist[0]  && candleHist[0][3],\r\n                close: candleHist[0]  && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time:candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n        \r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\r\n           \r\n            //\r\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\r\n                //1st candle green & 2nd candle is red check\r\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \r\n               // console.log(symbol, \"candleHist\",candleHist); \r\n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\r\n\r\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \r\n        \r\n                        var ttophistCandle  = []; \r\n                        candleHist.forEach(element => {\r\n                            ttophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \r\n                        });\r\n                        var foundData = {\r\n                            symbol : symbol, \r\n                            pattenName: 'Twisser Top', \r\n                            time: new Date( candleHist[0][0]).getTime(), \r\n                            candleChartData :ttophistCandle \r\n                        }\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                       this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\r\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \r\n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\",candleHist); \r\n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\r\n                        \r\n                        var msg = new SpeechSynthesisUtterance();\r\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \r\n                        window.speechSynthesis.speak(msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\r\n       // console.log(\"TweezerBottom finding\", symbol); \r\n        if(candleHist && candleHist.length > 0){\r\n            //candleHist = candleHist.reverse(); \r\n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if(maxHigh < candleHist[index][2])\r\n                maxHigh = candleHist[index][2];\r\n                if(candleHist[index][3] < maxLow)\r\n                maxLow = candleHist[index][3];  \r\n            } \r\n            \r\n            var last8candleHigh = candleHist[9][2]; \r\n            var last8candleLow = candleHist[2][3]; \r\n\r\n            var firstCandle = {\r\n                time : candleHist[0]  && candleHist[0][0],\r\n                open: candleHist[0]  && candleHist[0][1],\r\n                high: candleHist[0]  && candleHist[0][2],\r\n                low: candleHist[0]  && candleHist[0][3],\r\n                close: candleHist[0]  && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time:candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n        \r\n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5%  \r\n           \r\n            //  \r\n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\r\n\r\n              \r\n                //1st candle green & 2nd candle is red check\r\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \r\n               // console.log(symbol, \"candleHist\",candleHist); \r\n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\r\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\r\n\r\n                      \r\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\r\n\r\n                        var tBophistCandle  = []; \r\n                        candleHist.forEach(element => {\r\n                            tBophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \r\n                        });\r\n\r\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \r\n                        var foundData = {\r\n                            symbol : symbol, \r\n                            pattenName: 'Twisser bottom', \r\n                            time: new Date( candleHist[0][0]).getTime(), \r\n                            candleChartData : tBophistCandle\r\n                        }\r\n                     \r\n                       this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                        \r\n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\",candleHist); \r\n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\r\n                        \r\n                        var msg = new SpeechSynthesisUtterance();\r\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \r\n                        window.speechSynthesis.speak( msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findNR4PatternLive = async () => {\r\n\r\n        console.log('nr4 scaning starting'); \r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var startdate = '';\r\n           \r\n            var timediff = moment.duration(\"240:00:00\");\r\n            startdate = moment(new Date()).subtract(timediff);\r\n\r\n            var timediffend = moment.duration(\"24:00:00\");\r\n            var enddateLastday = moment(new Date()).subtract(timediffend);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                \r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;var rgrangeCount = 0; \r\n                     candleData.reverse(); \r\n\r\n                     // var startindex = index2 * 10; \r\n                     var last4Candle = candleData.slice(1, 5);\r\n                     var last5Candle = candleData.slice(0, 5);\r\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                     if (last4Candle.length >= 4) {\r\n\r\n                        // last4Candle.reverse();\r\n\r\n                         var rangeArr = [], candleChartData = []; \r\n                         last4Candle.forEach(element => {\r\n                             rangeArr.push(element[2] - element[3]);\r\n                         });\r\n\r\n                         last5Candle.forEach(element => {\r\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                         });\r\n                         var firstElement = rangeArr[0];\r\n                         rangeArr.forEach(element => {\r\n                             if (firstElement <= element) {\r\n                                 firstElement = element;\r\n                                 rgrangeCount += 1;\r\n                             }\r\n                         });\r\n\r\n                         console.log(index+1,element.symbol, rgrangeCount); \r\n                       //  this.setState({stockTesting :index +\" \"+ element.symbol })\r\n\r\n\r\n                         \r\n                         if (rgrangeCount == 4) {\r\n                            console.log(index+1, element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n\r\n                            \r\n                             var firstCandle = last4Candle[0];\r\n\r\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                             var data  = {\r\n                                \"exchange\":\"NSE\",\r\n                                \"tradingsymbol\": element.symbol,\r\n                                \"symboltoken\":element.token,\r\n                            }\r\n\r\n                            console.log('nr4 ltp',data ); \r\n\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                 var LtpData = data && data.data; \r\n                                 console.log(LtpData, data);\r\n                                 if(LtpData && LtpData.ltp){\r\n\r\n\r\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \r\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \r\n                                    if(LtpData.ltp > buyentry){\r\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \r\n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\r\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\r\n                                      \r\n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \r\n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \r\n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \r\n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n\r\n                                    } \r\n                                    if(LtpData.ltp < sellenty){\r\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \r\n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\r\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\r\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \r\n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \r\n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \r\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n                                    } \r\n\r\n                                    var foundData = {\r\n                                        symbol : element.symbol, \r\n                                        token : element.token, \r\n                                        pattenName: 'NR4', \r\n                                        time: new Date( firstCandle[0]).toLocaleString(), \r\n                                        BuyAt : buyentry, \r\n                                        SellAt : sellenty,\r\n                                        orderActivated : orderActivated,\r\n                                        candleChartData : candleChartData, \r\n                                        quantity :  quantity,\r\n                                        brokerageCharges : brokerageCharges, \r\n                                        pnlAmount : pnlAmount,\r\n                                        netPnLAmount : netPnLAmount,\r\n                                        perChange : perChange\r\n                                    }\r\n        \r\n                                    console.log('nr4 scaned',foundData ); \r\n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\r\n\r\n    \r\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                                    foundPatternList.push(foundData); \r\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                                \r\n                                }\r\n                                \r\n                           })\r\n\r\n\r\n\r\n                            \r\n\r\n                         }\r\n\r\n                     }\r\n                  \r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n           \r\n\r\n         \r\n            await new Promise(r => setTimeout(r, 300));\r\n\r\n           // var showtestdata = (index + 1);\r\n            \r\n         //   console.log(\"beforawait\", showtestdata, element.symbol);\r\n\r\n       //     this.setState({ stockTesting: showtestdata});\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    findNR7PatternLive = async () => {\r\n\r\n        console.log('nr7 scaning starting'); \r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var startdate = '';\r\n           \r\n            var timediff = moment.duration(\"288:00:00\");\r\n            startdate = moment(new Date()).subtract(timediff);\r\n\r\n            var timediffend = moment.duration(\"24:00:00\");\r\n            var enddateLastday = moment(new Date()).subtract(timediffend);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                \r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                     candleData.reverse(); \r\n\r\n                     // var startindex = index2 * 10; \r\n                     var last7Candle = candleData.slice(1, 8);\r\n                     var last9Candle = candleData.slice(0, 9);\r\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                     if (last7Candle.length >= 7) {\r\n\r\n                        // last7Candle.reverse();\r\n\r\n                         var rangeArr = [], candleChartData = []; \r\n                         last7Candle.forEach(element => {\r\n                             rangeArr.push(element[2] - element[3]);\r\n                         });\r\n\r\n                         last9Candle.forEach(element => {\r\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                         });\r\n                         var firstElement = rangeArr[0], rgrangeCount = 0; \r\n                         rangeArr.forEach(element => {\r\n                             if (firstElement <= element) {\r\n                                 firstElement = element;\r\n                                 rgrangeCount += 1;\r\n                             }\r\n                         });\r\n\r\n\r\n                         console.log(element.symbol, last7Candle, rangeArr, rgrangeCount); \r\n\r\n                         \r\n                         if (rgrangeCount == 7) {\r\n\r\n                            \r\n                             var firstCandle = last7Candle[0];\r\n\r\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                             var data  = {\r\n                                \"exchange\":\"NSE\",\r\n                                \"tradingsymbol\": element.symbol,\r\n                                \"symboltoken\":element.token,\r\n                            }\r\n\r\n                            console.log('nr4 ltp',data ); \r\n\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                 var LtpData = data && data.data; \r\n                                 console.log(LtpData, data);\r\n                                 if(LtpData && LtpData.ltp){\r\n\r\n\r\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \r\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \r\n                                    if(LtpData.ltp > buyentry){\r\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \r\n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\r\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\r\n                                      \r\n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \r\n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \r\n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \r\n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n\r\n                                    } \r\n                                    if(LtpData.ltp < sellenty){\r\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \r\n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\r\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\r\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \r\n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \r\n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \r\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n                                    } \r\n\r\n                                    var foundData = {\r\n                                        symbol : element.symbol, \r\n                                        token : element.token, \r\n                                        pattenName: 'NR7', \r\n                                        time: new Date( firstCandle[0]).toLocaleString(), \r\n                                        BuyAt : buyentry, \r\n                                        SellAt : sellenty,\r\n                                        orderActivated : orderActivated,\r\n                                        candleChartData : candleChartData, \r\n                                        quantity :  quantity,\r\n                                        brokerageCharges : brokerageCharges, \r\n                                        pnlAmount : pnlAmount,\r\n                                        netPnLAmount : netPnLAmount,\r\n                                        perChange : perChange\r\n                                    }\r\n        \r\n                                    console.log('nr7 scaned',foundData ); \r\n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\r\n\r\n    \r\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                                    foundPatternList.push(foundData); \r\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                                \r\n                                }\r\n                                \r\n                           })\r\n\r\n\r\n\r\n                            \r\n\r\n                         }\r\n\r\n                     }\r\n                  \r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            var showtestdata = (index + 1) + \". \" + element.symbol; \r\n            this.setState({ stockTesting: showtestdata});\r\n            await new Promise(r => setTimeout(r, 300));\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    showCandleChart = (candleData, symbol) => {\r\n\r\n\r\n        candleData  = candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n    \r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    refreshLtpPer = async() => {\r\n\r\n       this.setState({nr4TotalPer : 0 }); \r\n       \r\n       var foundPatternList = this.state.foundPatternList;\r\n\r\n       this.setState({foundPatternList : [] }); \r\n\r\n//       foundPatternList.forEach(element => {\r\n         for (let index = 0; index < foundPatternList.length; index++) {\r\n             const element = foundPatternList[index];\r\n           \r\n            if(element.pattenName === 'NR4'){\r\n\r\n                var data  = {\r\n                    \"exchange\":\"NSE\",\r\n                    \"tradingsymbol\": element.symbol,\r\n                    \"symboltoken\":element.token,\r\n                }\r\n\r\n                AdminService.getLTP(data).then(res => {\r\n                    let data = resolveResponse(res, 'noPop');\r\n                     var LtpData = data && data.data; \r\n                     //console.log(LtpData);\r\n                     if(LtpData && LtpData.ltp){\r\n\r\n                        var orderActivated =  <span> {LtpData.ltp} </span>; \r\n\r\n                        if(LtpData.ltp > element.BuyAt){\r\n                          orderActivated =  <span style={{color:'green'}}> Long Ltp: {LtpData.ltp} {((LtpData.ltp - element.BuyAt)*100/element.BuyAt).toFixed(2)}% </span>; \r\n                          this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - element.BuyAt)*100/element.BuyAt) })\r\n                        } \r\n                        if(LtpData.ltp < element.SellAt){\r\n                            orderActivated =  <span style={{color:'red'}}> Short Ltp: {LtpData.ltp} {((LtpData.ltp - element.SellAt)*100/element.SellAt).toFixed(2)}%</span>; \r\n                            this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((element.SellAt - LtpData.ltp)*100/element.SellAt) })\r\n                        } \r\n\r\n                        var foundData = {\r\n                            symbol : element.symbol, \r\n                            token : element.token, \r\n                            pattenName: 'NR4', \r\n                            time: new Date().toLocaleString(), \r\n                            BuyAt : element.BuyAt, \r\n                            SellAt : element.SellAt,\r\n                            orderActivated : orderActivated,\r\n                            // quantity : element.quantity,\r\n                            // brokerageCharges : element.brokerageCharges, \r\n                            // pnlAmount : pnlAmount,\r\n                            // netPnLAmount : netPnLAmount,\r\n                            // perChange : perChange\r\n                            \r\n                        }\r\n\r\n                        console.log('nr4 updated',foundData ); \r\n\r\n\r\n                        this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]}); \r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                    \r\n                    }\r\n                    \r\n               })\r\n\r\n            }\r\n            await new Promise(r => setTimeout(r, 101));\r\n\r\n           \r\n       }\r\n\r\n\r\n\r\n    }\r\n\r\n    getStoplossFromOrderbook = (row) => {\r\n       var oderbookData = localStorage.getItem('oderbookData'); \r\n       oderbookData =  JSON.parse(oderbookData);\r\n       var stopLoss = 0; \r\n       var data = {}; \r\n       oderbookData.forEach(element => {\r\n        if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\r\n            data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \r\n            data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \r\n        }\r\n       });\r\n       return data; \r\n    }\r\n    getPositionData = async() => {\r\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n        var maxPnL = 0, totalMaxPnL = 0; \r\n        AdminService.getPosition().then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var positionList = data && data.data;\r\n             if (positionList && positionList.length>0){\r\n                this.setState({ positionList : positionList}); \r\n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\r\n                  positionList.forEach(element => {\r\n                    var percentPnL =((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \r\n                    todayProfitPnL+= parseFloat( element.pnl); \r\n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \r\n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \r\n                    totalQtyTraded+=parseInt( element.buyqty); \r\n                    allbuyavgprice+=parseFloat(element.buyavgprice); \r\n                    allsellavgprice+=parseFloat(element.sellavgprice); \r\n                    element.percentPnL=percentPnL;\r\n                    totalPercentage+= parseFloat( percentPnL); \r\n                    var slData  = this.getStoplossFromOrderbook(element) ; \r\n                    element.stopLoss = element.totalsellavgprice === \"0.00\" ? slData.stopLoss : element.totalsellavgprice + \"(\"+ ((element.totalsellavgprice-element.totalbuyavgprice)*100/element.totalbuyavgprice).toFixed(2) + \"%)\"; \r\n                    element.stopLossAmount = slData.maxLossAmount; \r\n                    totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;                     \r\n                }); \r\n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \r\n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \r\n                this.setState({ totalBrokerCharges: ((totalbuyvalue + totalsellvalue) * 0.25/100).toFixed(2)});                \r\n\r\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \r\n            }\r\n       })\r\n    }\r\n   \r\n    getNSETopStock(){\r\n\r\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \r\n\r\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n        totalDayLoss = -Math.abs(totalDayLoss); \r\n        if(this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\",totalDayLoss); \r\n            clearInterval(this.state.scaninterval);\r\n        }else{\r\n               AdminService.getNSETopStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if(data.status  && data.message === 'SUCCESS'){ \r\n                    var scandata =  data.result;   \r\n                   // console.log(\"scandata\",scandata); \r\n            \r\n                    for (let index = 0; index < scandata.length; index++) {\r\n                            var isFound = false; \r\n                            for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\r\n                                    isFound  = true; \r\n                                 }\r\n                            }\r\n                           \r\n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\r\n                               \r\n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n\r\n                                    let searchResdata =  searchRes.data; \r\n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \r\n                                   \r\n                                    if(found.length){\r\n                                        console.log(found[0].symbol, \"found\",found);      \r\n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\r\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\r\n                                    }\r\n                               })\r\n                             \r\n                            }\r\n                    }\r\n                }\r\n            })  \r\n        }\r\n\r\n    }\r\n\r\n\r\n    getMySelectedStock(){\r\n\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \r\n \r\n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n         totalDayLoss = -Math.abs(totalDayLoss); \r\n         if(this.state.todayProfitPnL < totalDayLoss) {\r\n             console.log(\"daily loss crossed\",totalDayLoss); \r\n             clearInterval(this.state.scaninterval);\r\n         }else{\r\n                AdminService.getSelectedStockFromDb().then(res => {\r\n                 let data = resolveResponse(res, \"noPop\");\r\n                 if(data.status  && data.message === 'SUCCESS'){ \r\n                     var scandata =  data.result;   \r\n                    // console.log(\"scandata\",scandata); \r\n             \r\n                     for (let index = 0; index < scandata.length; index++) {\r\n                             var isFound = false; \r\n                             for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\r\n                                     isFound  = true; \r\n                                  }\r\n                             }\r\n                            \r\n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\r\n                                \r\n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n \r\n                                     let searchResdata =  searchRes.data; \r\n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \r\n                                    \r\n                                     if(found.length){\r\n\r\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \r\n                                        selectedStockwatchList.push(found[0]); \r\n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\r\n\r\n                                     }\r\n                                })\r\n                              \r\n                             }\r\n                     }\r\n                 }\r\n             })  \r\n         }\r\n \r\n     }\r\n\r\n\r\n    checkAndPlaceSingleOrder = (stock)=>{\r\n        AdminService.autoCompleteSearch(stock).then(res => {\r\n            let data =  res.data; \r\n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\r\n             console.log(\"stockfound\",found);  \r\n            if(found && found.length){\r\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \r\n            }\r\n       })\r\n    }\r\n\r\n\r\n    getStockOnebyOne(){\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n        totalDayLoss = -Math.abs(totalDayLoss); \r\n        if(this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\",totalDayLoss); \r\n            clearInterval(this.state.scaninterval);\r\n        }else{\r\n            console.log(\"still ok\"); \r\n            AdminService.getAutoScanStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if(data.status  && data.message === 'SUCCESS'){ \r\n                    var scandata =  data.result;   \r\n                    if(scandata && scandata.length>0){\r\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \r\n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \r\n                        var isFound = false; \r\n                        for (let index = 0; index < this.state.positionList.length; index++) {\r\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\r\n                                isFound  = true; \r\n                             }\r\n                        }\r\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\r\n                            console.log(\"found new\", lastSeachStock)\r\n                            var msg = new SpeechSynthesisUtterance();\r\n                            msg.text = 'hey Vijay, '+lastSeachStock; \r\n                            window.speechSynthesis.speak(msg);\r\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\r\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            })  \r\n        }\r\n    }\r\n\r\n\r\n    orderWithFlatstoploss = (token, symbol) => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n\r\n             var LtpData = data && data.data; \r\n             var ltpPrice  = LtpData.ltp\r\n             if(ltpPrice){ \r\n              \r\n            //  var stopLossPrice = ltp - (ltp*0.7/100);\r\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\r\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \r\n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \r\n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \r\n              var orderOption = {\r\n                    transactiontype: 'BUY',\r\n                    tradingsymbol: symbol,\r\n                    symboltoken:token,\r\n                    buyPrice : 0,\r\n                    quantity: quantity, \r\n                    stopLossPrice: stopLossPrice\r\n                }\r\n\r\n              if(quantity && stopLossPrice){\r\n                this.placeOrderMethod(orderOption);   \r\n              }\r\n               \r\n            }         \r\n\r\n       }).catch((error)=>{\r\n            console.log(symbol, \"not found\", 'error', error);\r\n        })  \r\n    }\r\n  \r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n        //    console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n    }\r\n\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": \"BANKNIFTY\",\r\n            \"symboltoken\":\"26009\",\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             //console.log(LtpData);\r\n             if(LtpData && LtpData.ltp){\r\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\r\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\r\n             }\r\n            \r\n       })\r\n    }\r\n\r\n\r\n    getStopLossPrice = async(token, symbol) => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n      \r\n        await AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             if(LtpData &&  LtpData.ltp){\r\n                var ltp = parseFloat(LtpData.ltp); \r\n                ltp  = ltp - (ltp*0.7/100);\r\n                var slPrice = this.getMinPriceAllowTick(ltp); \r\n\r\n                this.setState({ stoploss : slPrice});\r\n                return slPrice; \r\n             }\r\n           \r\n       })\r\n    }\r\n  \r\n    placeOrderMethod = (orderOption) => { \r\n       \r\n        var data = {\r\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\":orderOption.symboltoken,\r\n            \"quantity\":orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"exchange\":\"NSE\",\r\n            \"variety\":\"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n                if(orderOption.stopLossPrice){\r\n                    this.placeSLMOrder(orderOption);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\r\n\r\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\r\n        AdminService.getLTP(ltpdata).then(res => {\r\n            let ltpres = resolveResponse(res, 'noPop');\r\n                var LtpData = ltpres && ltpres.data; \r\n                console.log(symbol, \" ltd data \", LtpData);\r\n                let quantity =0; \r\n                if(LtpData && LtpData.ltp){\r\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \r\n                }\r\n\r\n                \r\n                quantity = quantity>0 ? 1 : 0; \r\n                console.log(symbol, \"  quantity can be order \", quantity);\r\n                if(quantity){\r\n                    const format1 = \"YYYY-MM-DD HH:mm\";\r\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                    console.log(\"beginningTime\", beginningTime); \r\n\r\n                    var time = moment.duration(\"21:10:00\");\r\n                    var startdate = moment(new Date()).subtract(time);\r\n                    var data  = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"symboltoken\": token ,\r\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n                        \"fromdate\": moment(startdate).format(format1) , \r\n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                    }\r\n                \r\n                    AdminService.getHistoryData(data).then(res => {\r\n                        let histdata = resolveResponse(res,'noPop' );\r\n                       // console.log(\"candle history\", histdata); \r\n                        if(histdata && histdata.data && histdata.data.length){\r\n                           \r\n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \r\n                            candleData.reverse(); \r\n\r\n                            if(candleData && candleData.length>0){\r\n                                for (let index = 0; index < 20; index++) {\r\n                                    if(candleData[index]){\r\n                                        clossest += candleData[index][4]; //close  \r\n                                        lowerest += candleData[index][3];  //low\r\n                                        if(candleData[index][4] > highestHigh ){\r\n                                            highestHigh = candleData[index][4];  \r\n                                        }\r\n                                        if(lowestLow < candleData[index][3]){\r\n                                            lowestLow = candleData[index][3];  \r\n                                        }\r\n                                    }\r\n                                    \r\n                                }\r\n\r\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \r\n    \r\n                                var bbmiddleValue = clossest/devideLen; \r\n                                var bblowerValue = lowerest/devideLen; \r\n                                \r\n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \r\n                                stoploss = this.getMinPriceAllowTick(stoploss); \r\n    \r\n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \r\n                                \r\n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \r\n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\r\n                            \r\n                                var orderOption = {\r\n                                    transactiontype: 'BUY',\r\n                                    tradingsymbol: symbol,\r\n                                    symboltoken:token,\r\n                                    buyPrice : 0,\r\n                                    quantity: quantity, \r\n                                    stopLossPrice: stoploss\r\n                                }\r\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \r\n                                   this.placeOrderMethod(orderOption);\r\n                                }else{\r\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\r\n                                    console.log(symbol + \" its not fullfilled\"); \r\n                                }\r\n                            }\r\n\r\n                           \r\n                        }else{\r\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                            console.log(symbol + \" candle data emply\"); \r\n                        }\r\n                    })\r\n\r\n                }\r\n        })\r\n       // await new Promise(r => setTimeout(r, 2000)); \r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n    \r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n    cancelOrderOfSame = (row) =>  {\r\n       \r\n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \r\n        var data = {\r\n            \"variety\":orderData.variety,\r\n            \"orderid\":orderData.orderId,\r\n        }\r\n        AdminService.cancelOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                console.log(\"cancel order\", data);   \r\n               // this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    squareOff = (row) =>  {\r\n       \r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\":row.symboltoken,\r\n            \"transactiontype\":row.buyqty > 0 ? 'SELL' : \"BUY\", \r\n            \"exchange\": row.exchange, \r\n            \"ordertype\": \"MARKET\", \r\n            \"producttype\": row.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": row.buyqty,\r\n        }\r\n\r\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\r\n            \r\n        // }\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(\"squireoff\", data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n                this.cancelOrderOfSame(row); \r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n\r\n            }\r\n        })\r\n       \r\n    }\r\n    updateOrderList = () => {\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res);\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \r\n            }\r\n        });\r\n    }\r\n    \r\n    placeSLMOrder = (slmOption) => {\r\n        \r\n        var data = {\r\n            \"triggerprice\":slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \r\n            \"exchange\": 'NSE', \r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data); \r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n               // this.updateOrderList(); \r\n               var msg = new SpeechSynthesisUtterance();\r\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \r\n               window.speechSynthesis.speak(msg);\r\n\r\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n            }\r\n        })\r\n    }\r\n\r\n    getOpenPeningOrderId =(symboltoken) => {\r\n\r\n        var oderbookData = JSON.parse(localStorage.getItem('oderbookData'));\r\n        var data = {}; \r\n         for (let index = 0; index < oderbookData.length; index++) {\r\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\r\n                data.orderId = oderbookData[index].orderid  \r\n                data.variety = oderbookData[index].variety  \r\n                break;\r\n            }\r\n         } \r\n         return data;\r\n     }\r\n    modifyOrderMethod = (row, minPrice) => {\r\n        //console.log(this.state.triggerprice);\r\n\r\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \r\n        console.log(\"orderid\", this.state.orderData);\r\n\r\n        var data = {\r\n            \"variety\" : \"STOPLOSS\",\r\n            \"orderid\": orderData.orderId,\r\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\":  0,\r\n            \"triggerprice\": parseFloat( minPrice ),\r\n            \"quantity\":row.buyqty,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n        }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n\r\n            var msg = new SpeechSynthesisUtterance();\r\n          \r\n          \r\n            if(data.status  && data.message ===  'SUCCESS'){\r\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\r\n              msg.text = row.tradingsymbol +' modified '+data.message\r\n              window.speechSynthesis.speak(msg);\r\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\r\n                localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\r\n            }\r\n        })\r\n    }\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice =  minPrice.toFixed(2); \r\n       // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt( minPrice.split('.')[0]);\r\n      //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal =  parseFloat( minPrice.split('.')[1]);\r\n       // console.log(\"decimal\",decimal); \r\n        var tickedecimal =  decimal-decimal%5; \r\n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \r\n     //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice; \r\n    }\r\n\r\n    getPercentage = (avgPrice,  ltp , row) =>  {\r\n\r\n        avgPrice =  parseFloat(avgPrice); \r\n        var percentChange = ((ltp - avgPrice)*100/avgPrice).toFixed(2); \r\n\r\n      //  console.log(row.symbolname,  'chng %',percentChange);\r\n         if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange > 0.7){\r\n                var minPrice =  avgPrice + (avgPrice * 0.1/100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice); \r\n                this.modifyOrderMethod(row, minPrice);\r\n         }else{\r\n           //var lastTriggerprice =  this.state['lastTriggerprice_'+row.symboltoken]; \r\n           var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \r\n           var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \r\n        //   console.log(row.symbolname, 'chng form Trigger Price',perchngfromTriggerPrice);\r\n           if(perchngfromTriggerPrice > 0.7){\r\n                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice); \r\n                this.modifyOrderMethod(row, minPrice);\r\n           }\r\n\r\n         }\r\n\r\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\r\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\r\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\r\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\r\n\r\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\r\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\r\n                this.squareOff(row); \r\n                console.log(\"Sqr off called for\",row.symbolname);  \r\n            }\r\n            \r\n\r\n        }\r\n\r\n        return percentChange;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n        var netPnLAmountTotal = 0; \r\n        var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                     <br />\r\n                     <ChartDialog />\r\n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\r\n                        <Grid item >\r\n                            <Typography variant=\"h6\" >\r\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3} >\r\n                          <Typography component=\"h3\">\r\n                            <b>Date:: {new Date().toLocaleString()} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        \r\n                        <Grid item  >\r\n                          <Typography component=\"h3\">\r\n                            <b>Total Turnover {this.state.totalTornOver} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                       \r\n                        <Grid item >\r\n                          <Typography component=\"h3\"  >\r\n                            <b> Charges</b> <b style={{color:\"#00cbcb\"}}>-{this.state.totalBrokerCharges} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                        <Grid item  >\r\n                          <Typography component=\"h3\"   >\r\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.todayProfitPnL} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <Typography component=\"h3\" >\r\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                        <Grid item  >\r\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \r\n                        </Grid>\r\n                </Grid>\r\n               \r\n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                                \r\n\r\n                    <Grid item xs={12} sm={12}> \r\n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\r\n                                 \r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\r\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Trading symbol</TableCell>\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\r\n  \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Buy Price</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Sell Price</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Bought Qty</TableCell>\r\n                                \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max Locked P/L</TableCell>\r\n\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\r\n        \r\n    \r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\r\n                           \r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {this.state.positionList ? this.state.positionList.map(row => (\r\n                                <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\r\n\r\n                                    <TableCell style={{paddingLeft:\"3px\"}} align=\"left\">&nbsp; <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://chartink.com/stocks/\"+row.tradingsymbol.split('-')[0]+\".html\"}>{row.tradingsymbol.split('-')[0]}</a> </TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\r\n                                    {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\r\n                                 \r\n                                    <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\r\n\r\n                                    <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\r\n                                    <TableCell align=\"left\">{row.buyqty}</TableCell>\r\n                                    <TableCell align=\"left\">{row.netqty}</TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\r\n                                    <TableCell align=\"left\"> {row.stopLoss}</TableCell> \r\n                                    <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \r\n\r\n                                    \r\n                                    {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\r\n                                    <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'darkmagenta' : '#00cbcb'}}><b>{row.pnl}</b></TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        { row.netqty !== '0' ? this.getPercentage(row.totalbuyavgprice, row.ltp, row) : \"\"} \r\n                                        {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\r\n                                      </TableCell> \r\n                                    <TableCell align=\"left\">{row.ltp}</TableCell>\r\n                                  \r\n                                    <TableCell align=\"left\">\r\n                                        {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                            )):''}\r\n\r\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"lightgray\"}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\r\n\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\r\n          \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'darkmagenta' : '#00cbcb'}}>{this.state.todayProfitPnL} </TableCell>\r\n \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\r\n                                    \r\n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) : \"\"}\r\n                    \r\n                                </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                </TableRow>\r\n\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n\r\n\r\n                    </Grid>\r\n\r\n                  \r\n\r\n                        <Grid item xs={12} sm={12} >\r\n                             <OrderBook/>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} sm={12} >\r\n                        <Paper style={{overflow:\"auto\", padding:'5px'}} >\r\n\r\n                            \r\n\r\n                                <Grid justify=\"space-between\"\r\n                                container>\r\n                                            <Grid item  >\r\n                                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                                 Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})  \r\n\r\n                                                <span id=\"stockTesting\" style={{fontSize: \"18px\", color: 'gray'}}> {this.state.stockTesting} </span>\r\n                                                </Typography> \r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                 <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpPer()}>Live Refresh</Button>\r\n                                            </Grid>\r\n                                            \r\n                                </Grid>\r\n                            \r\n                                 \r\n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                                     <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n             \r\n                                              \r\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol Found </TableCell>\r\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Update Time</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Activated({this.state.totelActivatedCount})  Ltp - Total({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\r\n\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">PnL</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Charges%</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Net PnL  <b>({localStorage.getItem('netPnLAmountTotal')})</b></TableCell>\r\n\r\n             \r\n                                          \r\n                                         </TableRow>\r\n                                     </TableHead>\r\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n             \r\n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\r\n                                             <TableRow hover key={row.symboltoken}>\r\n             \r\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.time}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.BuyAt}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.SellAt}</TableCell>\r\n                                                 <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\r\n\r\n                                                 <TableCell align=\"left\">{row.quantity}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.pnlAmount}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\r\n                                                 <TableCell align=\"left\"  {...netPnLAmountTotal = netPnLAmountTotal + parseFloat(row.netPnLAmount)}><b>{row.netPnLAmount} </b></TableCell>\r\n\r\n                                             </TableRow>\r\n                                         )):''}\r\n                                     </TableBody>\r\n                                 </Table>\r\n\r\n                                 <b style={{float: 'left',marginRight: '80px'}}> Total :   {netPnLAmountTotal.toFixed(2)} </b> \r\n\r\n                               \r\n             \r\n                                 </Paper>\r\n                        </Grid>\r\n\r\n                               \r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     footerButton: {\r\n//         position: 'fixed',\r\n//     }\r\n// };\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 'auto',\r\n  },\r\n  MuiTabsScroller : {\r\n    overflow: 'auto'\r\n  }\r\n \r\n\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n      <TabPanel value={value} index={0} dir={theme.direction}>\r\n         \r\n        {props.data && props.data.symbolList ? props.data.symbolList.map(row => (\r\n            <>\r\n        <ListItem button style={{ fontSize: '12px'}} >\r\n            <ListItemText onClick={() => props.data.LoadSymbolDetails(row.symbol)} primary={row.name} /><DeleteIcon  onClick={() => props.data.deleteItemWatchlist(row.symbol)} />\r\n        </ListItem>\r\n        \r\n        </>\r\n        )):''}\r\n                                      \r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n        Nifty 100\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          Midcap\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n\r\n        <Tabs\r\n          className={classes.MuiTabsScroller}\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n     \r\n          style={{ overflow: 'auto'}}\r\n        >\r\n          <Tab label=\"Nifty 50\" {...a11yProps(0)} />\r\n          <Tab label=\"Midcap\" {...a11yProps(1)} />\r\n          <Tab label=\"Smallcap\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport * as moment from 'moment';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Notify from \"../../utils/Notify\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport { w3cwebsocket } from 'websocket';\r\nimport pako from 'pako';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ChartDialog from './ChartDialog'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\nimport Position from './Position';\r\n\r\nimport Tab from './Tab'\r\n\r\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sumPercentage: 0,\r\n            autoSearchList: [],\r\n            isDasable: false,\r\n            isError: false,\r\n            InstrumentLTP: {},\r\n            ifNotBought: true,\r\n            autoSearchTemp: [],\r\n            backTestResult: [],\r\n            backTestFlag: true,\r\n            patternType: \"NR4ForNextDay\",\r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"INTRADAY\",\r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            selectedWatchlist: 'NIFTY BANK',\r\n            longExitPriceType: 4,\r\n            shortExitPriceType: 4,\r\n            candleChartData : [],\r\n            stopScaningFlag : false,\r\n            backTestResultDateRange : [],\r\n            NR4ForNextDayResult : []\r\n            \r\n\r\n\r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n    onChangePattern = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if( e.target.value == 'NR4_Daywide_daterage'){\r\n\r\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \r\n            \r\n            this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange : backTestResultDateRange });\r\n\r\n        }\r\n    }\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var staticData = this.state.staticData;\r\n        this.setState({ symbolList: staticData[e.target.value] });\r\n        if (e.target.value == \"selectall\") {\r\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n            this.setState({ startDate: date });\r\n        } else if (fromDate === \"END_DATE\") {\r\n            this.setState({ endDate: date });\r\n        }\r\n    };\r\n    getLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            this.setState({ InstrumentLTP: LtpData });\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n        })\r\n    }\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n\r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken, clientcode) => {\r\n\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        //  console.log(\"1st Request :- \" + firstTime_req);\r\n        wsClint.send(firstTime_req);\r\n    }\r\n\r\n    updateSocketWatch = (feedToken, clientcode) => {\r\n\r\n        var channel = this.state.symbolList.map(element => {\r\n            return 'nse_cm|' + element.token;\r\n        });\r\n\r\n        channel = channel.join('&');\r\n        var sbin = {\r\n            \"task\": \"mw\",\r\n            \"channel\": channel,\r\n            \"token\": this.state.feedToken,\r\n            \"user\": this.state.clientcode,\r\n            \"acctid\": this.state.clientcode\r\n        }\r\n        wsClint.send(JSON.stringify(sbin));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        AdminService.getStaticData().then(res => {\r\n            var data = res.data;\r\n            //data = JSON.parse(data);   \r\n            var totalWatchlist = Object.keys(data);\r\n            this.setState({ totalWatchlist: totalWatchlist });\r\n            this.setState({ staticData: data });\r\n\r\n            var watchlist = [];\r\n            totalWatchlist.forEach(element => {\r\n\r\n                var mylist = data[element];\r\n                mylist.forEach(element2 => {\r\n                    var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\r\n                    if (!foundInWatchlist.length) {\r\n                        watchlist.push(element2);\r\n                    }\r\n                });\r\n\r\n               \r\n            });\r\n\r\n            localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n            this.setState({ symbolList: data[this.state.selectedWatchlist] });\r\n        });\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\r\n\r\n\r\n        //    wsClint.onopen  = (res) => {\r\n\r\n        //          this.makeConnection();\r\n        //          this.updateSocketWatch(feedToken ,clientcode);\r\n\r\n        //         //  setTimeout(function(){\r\n        //         //    this.updateSocketWatch(feedToken ,clientcode);\r\n        //         //  }, 800);\r\n        //    }\r\n\r\n        wsClint.onmessage = (message) => {\r\n\r\n\r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n            var liveData = JSON.parse(data);\r\n\r\n            this.state.symbolList && this.state.symbolList.forEach(element => {\r\n\r\n                var foundLive = liveData.filter(row => row.tk == element.token);\r\n\r\n\r\n                if (foundLive.length > 0 && foundLive[0].ltp)\r\n                    this.setState({ [element.symbol + 'ltp']: foundLive.length > 0 && foundLive[0].ltp })\r\n                if (foundLive.length > 0 && foundLive[0].cng)\r\n                    this.setState({ [element.symbol + 'nc']: foundLive.length > 0 && foundLive[0].nc })\r\n\r\n                var foundTweezerTop = localStorage.getItem('foundTweezerTop_' + element.token) && JSON.parse(localStorage.getItem('foundTweezerTop' + element.token));\r\n\r\n                if (foundTweezerTop && foundTweezerTop.symboltoken == element.token) {\r\n\r\n                    if (foundTweezerTop.entryBelow < foundLive[0].ltp) {\r\n                        console.log('TweezerTop ', foundTweezerTop.tradingsymbol, \"entry found at \", foundLive[0].ltp);\r\n                        this.setState({ tradingsymbol: foundTweezerTop.tradingsymbol, symboltoken: foundTweezerTop.symboltoken, buyPrice: 0, producttype: 'INTRADAY', quantity: foundTweezerTop.quantity })\r\n                        //    this.placeOrder('SELL', \"BUY\"); \r\n\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e);\r\n        }\r\n\r\n        setInterval(() => {\r\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\r\n            // console.log(\"Request :- \" + _req);\r\n            wsClint.send(_req);\r\n            //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if (!list) {\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.getAutoScanStock().then(res => {\r\n        //         let data = resolveResponse(res);\r\n        //         console.log(data);  \r\n        //         if(data.status  && data.message == 'SUCCESS'){ \r\n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \r\n        //         }\r\n        //     })    \r\n        // }, 2000);\r\n\r\n    }\r\n\r\n    stopBacktesting = () => {\r\n        this.setState({ stopScaningFlag: true });\r\n    }\r\n\r\n    backTestAnyPattern = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n\r\n        console.log('this.state.patternType', this.state.patternType)\r\n\r\n        if (!this.state.patternType) {\r\n            Notify.showError(\"Select pattern type\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'NR4') {\r\n            this.backTestNR4();\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'NR4_SameDay') {\r\n            this.backTestNR4SameDay();\r\n            return;\r\n        }\r\n        if (this.state.patternType === 'NR4ForNextDay') {\r\n            this.NR4ForNextDay();\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\r\n\r\n            var startdate = moment(this.state.startDate);\r\n            var enddate = moment(this.state.endDate);\r\n\r\n            const currentMoment =startdate; \r\n            const endMoment = enddate; \r\n            \r\n            \r\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\r\n\r\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\r\n\r\n                this.backTestNR4DatewiseRange(currentMoment);\r\n\r\n                if(this.state.stopScaningFlag){\r\n                    break;\r\n                }\r\n\r\n                await new Promise(r => setTimeout(r,  this.state.symbolList.length * 310));\r\n\r\n\r\n                currentMoment.add(1, 'days');\r\n            }\r\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\r\n\r\n\r\n            return;\r\n        }\r\n\r\n\r\n        \r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n\r\n        console.log(\"pattername\", this.state.patternType);\r\n\r\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last10Candle = candleData.slice(index2, index2 + 10);\r\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \r\n\r\n                            switch (this.state.patternType) {\r\n                                case 'TweezerTop':\r\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                case 'TweezerBottom':\r\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n\r\n                        }\r\n                        runningTest += candleData.length;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    NR4ForNextDay = async () => {\r\n\r\n        this.setState({ NR4ForNextDayResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            \r\n            if(this.state.stopScaningFlag){\r\n                break;\r\n            }\r\n\r\n        this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\r\n\r\n\r\n            \r\n        var time = moment.duration(\"240:00:00\");\r\n        var startdate = moment(this.state.endDate).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                      candleData.reverse(); \r\n                    \r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(0, 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4) {\r\n\r\n                            //last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = []; \r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[0];\r\n\r\n\r\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                var foundStock = {\r\n                                    foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\r\n                                    symbol: element.symbol,\r\n                                    sellenty: sellenty,\r\n                                    high: firstCandle[2],\r\n                                    low: firstCandle[3],\r\n                                    buyentry: buyentry,\r\n                                    candleChartData : candleChartData, \r\n                                    close : firstCandle[4]\r\n                                }\r\n                            \r\n                                this.nr4CheckPastPerfommance(element.token, foundStock) ; \r\n\r\n                            }\r\n\r\n                        }\r\n                        \r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            }).catch(error => {\r\n                Notify.showError(element.symbol + \" Candle data not found!\");\r\n            })\r\n            await new Promise(r => setTimeout(r, 350));\r\n            \r\n        }\r\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\r\n    } \r\n\r\n\r\n    backTestNR4SameDay = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            \r\n            if(this.state.stopScaningFlag){\r\n                break;\r\n            }\r\n\r\n\r\n            \r\n        var time = moment.duration(\"240:00:00\");\r\n        var startdate = moment(this.state.endDate).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                      candleData.reverse(); \r\n                    \r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(1, 5);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4) {\r\n\r\n                            //last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = []; \r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[0];\r\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \r\n\r\n\r\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n                                    var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\r\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                    sumPercentage += perChng;\r\n        \r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: next5thCandle[4],\r\n                                        highAndLow: next5thCandle[2],\r\n                                        stopLoss: firstCandle[3],\r\n                                        buyExitPrice: buyentry,\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])){ \r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\r\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: sellenty,\r\n                                        stopLoss: firstCandle[2],\r\n                                        buyExitPrice: next5thCandle[4],\r\n                                        highAndLow: next5thCandle[3],\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if(Math.floor(10000 / firstCandle[3])){\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                        \r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 305));\r\n            this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    } \r\n\r\n    backTestNR4DatewiseRange = async (date) => {\r\n\r\n        this.setState({ backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            \r\n            if(this.state.stopScaningFlag){\r\n                break;\r\n            }\r\n\r\n\r\n            \r\n        var time = moment.duration(\"240:00:00\");\r\n        var startdate = moment(date).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                      candleData.reverse(); \r\n                    \r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(1, 5);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4) {\r\n\r\n                            //last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = []; \r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[0];\r\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \r\n\r\n                                var currentDate = date.format('DD-MM-YYYY'); \r\n\r\n                                var dateWithWlType =  currentDate+' '+ this.state.selectedWatchlist; \r\n\r\n                                var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\r\n                                var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : []; \r\n                              \r\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n                                    var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\r\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                    sumPercentage += perChng;\r\n        \r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: next5thCandle[4],\r\n                                        highAndLow: next5thCandle[2],\r\n                                        stopLoss: firstCandle[3],\r\n                                        buyExitPrice: buyentry,\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])){ \r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                        datewisetrades.push(foundStock);\r\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \r\n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\r\n                                          \r\n                                        \r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\r\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: sellenty,\r\n                                        stopLoss: firstCandle[2],\r\n                                        buyExitPrice: next5thCandle[4],\r\n                                        highAndLow: next5thCandle[3],\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if(Math.floor(10000 / firstCandle[3])){\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                        datewisetrades.push(foundStock);\r\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \r\n\r\n                                        console.log('backTestResultDateRange', backTestResultDateRange);\r\n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\r\n                                     \r\n                                      //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \r\n            \r\n                                        this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange : backTestResultDateRange });\r\n                            \r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                        \r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') +' '+ index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n    } \r\n\r\n    backTestNR4 = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(index2, index2 + 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                            last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = []; \r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[index2 + 4];\r\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\r\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\r\n                                        stopLoss: firstCandle[3],\r\n                                        highAndLow: next5thCandle[2],\r\n                                        perChngOnHighLow : perChngOnHigh.toFixed(2),\r\n                                        buyExitPrice: buyentry,\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])){ \r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                        this.setState({ backTestResult:  this.state.backTestResult.reverse()});\r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\r\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: sellenty,\r\n                                        perChngOnHighLow : perChngOnLow.toFixed(2),\r\n                                        stopLoss: firstCandle[2],\r\n                                        highAndLow: next5thCandle[3],\r\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if(Math.floor(10000 / firstCandle[3])){\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    nr4CheckPastPerfommance = (token, foundStock) => {\r\n        var time = moment.duration(\"4320:00:00\");\r\n        var startdate = moment(this.state.endDate).subtract(time);\r\n        var totalLongs=0, totalShort=0, totalLongPer=0, totalShortPer=0, totalLongHighPer=0, totalShortLowPer=0; \r\n        var longCandles=[], shortCandles=[]; \r\n\r\n        console.log('starting function foundStock', foundStock)\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n        }\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let histdata = resolveResponse(res, 'noPop');\r\n            console.log(\"candle history\", histdata); \r\n            if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                var candleData = histdata.data;\r\n                //  candleData.reverse(); \r\n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                    // var startindex = index2 * 10; \r\n                    var last4Candle = candleData.slice(index2, index2 + 4);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                        last4Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = []; \r\n                        last4Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                        });\r\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n                        if (rgrangeCount == 4) {\r\n\r\n                            var firstCandle = last4Candle[0];\r\n                            var next5thCandle = candleData[index2 + 4];\r\n                            candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \r\n\r\n                            console.log(token, last4Candle, rangeArr, rgrangeCount,firstCandle[0].toString().substr(0, 25)) ; \r\n\r\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                            if (next5thCandle[2] > buyentry) {\r\n\r\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\r\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                var longData = {\r\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                    sellEntyPrice: next5thCandle[4],\r\n                                    stopLoss: firstCandle[3],\r\n                                    highAndLow: next5thCandle[2],\r\n                                    perChngOnHighLow : perChngOnHigh.toFixed(2),\r\n                                    buyExitPrice: buyentry,\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                    quantity: Math.floor(10000 / firstCandle[2]),\r\n                                    candleChartData : candleChartData\r\n                                }\r\n                                longCandles.push(longData); \r\n                                \r\n                                totalLongs+=1; \r\n                                totalLongPer+=perChng; \r\n                                totalLongHighPer+=perChngOnHigh;\r\n\r\n                            }\r\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                            if (next5thCandle[3] < sellenty) {\r\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\r\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                var shortData = {\r\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                    sellEntyPrice: sellenty,\r\n                                    perChngOnHighLow : perChngOnLow.toFixed(2),\r\n                                    stopLoss: firstCandle[2],\r\n                                    highAndLow: next5thCandle[3],\r\n                                    buyExitPrice: next5thCandle[4],\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                    quantity: Math.floor(10000 / firstCandle[3]),\r\n                                    candleChartData : candleChartData\r\n                                }\r\n                                shortCandles.push(shortData); \r\n\r\n                                totalShort+=1; \r\n                                totalShortPer+=perChng;\r\n                                totalShortLowPer+=perChngOnLow; \r\n\r\n                            }\r\n\r\n                           \r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                var data = {\r\n                    totalLongs:totalLongs, \r\n                    totalShort:totalShort, \r\n                    totalLongPer:totalLongPer,\r\n                    totalShortPer:totalShortPer,\r\n                    totalLongHighPer:totalLongHighPer, \r\n                    totalShortLowPer:totalShortLowPer \r\n                }\r\n                if(foundStock) \r\n                foundStock.pastPerferm = data;\r\n                foundStock.longCandles = longCandles; \r\n                foundStock.shortCandles = shortCandles; \r\n \r\n\r\n                 console.log(\"foundStock\",foundStock); \r\n                if (Math.floor(10000 / firstCandle[4])){ \r\n                    this.setState({ NR4ForNextDayResult: [...this.state.NR4ForNextDayResult, foundStock] });\r\n                }\r\n\r\n            } else {\r\n                //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                console.log(token, \" candle data emply\");\r\n            }\r\n        });\r\n\r\n      \r\n     \r\n        \r\n    }\r\n\r\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\r\n\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\r\n                                    squiredOffAt315 = higherStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //lowest of 3:15 profit booking\r\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\r\n                                    lowestOf315 = next10Candle[indexTarget2][4];\r\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = higherStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (priceDiff < -0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\r\n                                    flatSellingPrice = higherStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (rangePriceDiff <= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\r\n                                    rangeSellingPrice = higherStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: sellEntyPrice,\r\n                                    stopLoss: higherStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: 0,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / sellEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\r\n                                //   foundStock.buyExitPrice = squiredOffAt315; \r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.buyExitPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.buyExitPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\r\n                                foundStock.buyExitPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({ backTestFlag: true });\r\n    }\r\n\r\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\r\n                                    squiredOffAt315 = LowerStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //highest of 3:15 profit booking\r\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\r\n                                    highestOf315 = next10Candle[indexTarget2][4];\r\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (priceDiff > 0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\r\n                                    flatSellingPrice = LowerStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (rangePriceDiff >= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\r\n                                    rangeSellingPrice = LowerStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: 0,\r\n                                    stopLoss: LowerStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: buyEntyPrice,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / buyEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\r\n                                foundStock.sellEntyPrice = squiredOffAt315;\r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n\r\n    }\r\n\r\n    placeOrder = (transactiontype, slmOrderType) => {\r\n\r\n        var data = {\r\n            \"variety\": \"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": transactiontype, //BUY OR SELL\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //   console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n\r\n                if (this.state.stoploss) {\r\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails = (name) => {\r\n\r\n        var token = '';\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            if (this.state.symbolList[index].symbol === name) {\r\n                token = this.state.symbolList[index].token;\r\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\r\n                break;\r\n            }\r\n        }\r\n        this.getHistory(token);\r\n    }\r\n\r\n    placeSLMOrder = (slmOrderType) => {\r\n\r\n        var data = {\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": slmOrderType ? slmOrderType : \"SELL\",\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n            \"triggerprice\": this.state.stoploss,\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //     console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n        // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (data && data.data) {\r\n\r\n                var histCandles = data.data;\r\n                histCandles && histCandles.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (histCandles.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy: histCandles, buyPrice: histCandles[0][2] });\r\n                }\r\n                this.getLTP();\r\n            }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) => {\r\n\r\n\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n        //  console.log(\"values\", values); \r\n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol);\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [];\r\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\r\n            if (!foundInWatchlist.length) {\r\n                watchlist.push(fdata);\r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n                AdminService.saveWatchListJSON({ stock: fdata }).then(res => {\r\n                    let resdata = resolveResponse(res, 'noPop');\r\n                    console.log(resdata);\r\n                });\r\n            }\r\n\r\n            this.setState({ symbolList: JSON.parse(localStorage.getItem('watchList')), search: \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index, 1);\r\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList: list });\r\n    }\r\n\r\n    getAveragePrice = (orderId) => {\r\n\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        var averageprice = 0;\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            if (oderbookData[index].orderid === 'orderId') {\r\n                averageprice = oderbookData[index].averageprice\r\n                this.setState({ averageprice: averageprice });\r\n                break;\r\n            }\r\n        }\r\n        return averageprice;\r\n    }\r\n    showCandleChart = (candleData, symbol, insiderow) => {\r\n\r\n\r\n        candleData  = candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\r\n\r\n        \r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n\r\n       \r\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0;\r\n        var tradetotal = 0, totalWin = 0,  totalLoss  = 0; \r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <ChartDialog />\r\n                <Grid direction=\"row\" container>\r\n\r\n                    <Grid item xs={12} sm={2}  >\r\n\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            id=\"free-solo-2-demo\"\r\n                            disableClearable\r\n                            style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\r\n                            onChange={this.onSelectItem}\r\n                            //+ ' '+  option.exch_seg\r\n                            options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                option.symbol\r\n                            ) : []}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    onChange={this.onChange}\r\n                                    {...params}\r\n                                    label={\"Search Symbol (\" + this.state.symbolList.length + \")\"}\r\n                                    margin=\"normal\"\r\n                                    variant=\"standard\"\r\n\r\n                                    name=\"search\"\r\n                                    value={this.state.search}\r\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                />\r\n                            )}\r\n                        />\r\n\r\n                        <div style={{ marginLeft: '10px' }}>\r\n                            <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\r\n                                <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                    <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n\r\n                                    {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                        <MenuItem value={element}>{element}</MenuItem>\r\n                                    ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\r\n\r\n                            {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\r\n                                <>\r\n                                    <ListItem button style={{ fontSize: '12px' }} >\r\n                                        <ListItemText style={{ color: this.state[row.symbol + 'nc'] > 0 ? 'green' : \"red\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {this.state[row.symbol + 'ltp']} ({this.state[row.symbol + 'nc']}%) <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />\r\n                                    </ListItem>\r\n\r\n                                </>\r\n                            )) : ''}\r\n                        </div>\r\n\r\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={10}>\r\n\r\n\r\n                        <Grid direction=\"row\" alignItems=\"center\" container>\r\n\r\n                           <Grid style={{display:\"none\"}} direction=\"row\" alignItems=\"center\" container>\r\n    \r\n                            <Grid item xs={10} sm={5}>\r\n                                <Typography variant=\"h5\"  >\r\n                                    {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"}   {this.state.sbinLtp}\r\n                                </Typography>\r\n                                Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\r\n                                High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\r\n                                Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\r\n                                Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2}>\r\n                                <FormControl style={styles.selectStyle}>\r\n                                    <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\r\n                                    <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\r\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\r\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={1} sm={2}  >\r\n\r\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\r\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\r\n                            </Grid>\r\n\r\n                    `            <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n                                    {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                        <TableRow key={i} >\r\n\r\n                                            <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                            <TableCell align=\"center\">{row[1]}</TableCell>\r\n                                            <TableCell align=\"center\">{row[2]}</TableCell>\r\n                                            <TableCell align=\"center\">{row[3]}</TableCell>\r\n                                            <TableCell align=\"center\">{row[4]}</TableCell>\r\n                                            <TableCell align=\"center\">{row[5]}</TableCell>\r\n\r\n                                        </TableRow>\r\n                                    )) : ''}\r\n                                </TableBody>\r\n                            </Table>\r\n\r\n                            </Grid>\r\n\r\n\r\n\r\n                            <Grid direction=\"row\" alignItems=\"center\" container>\r\n\r\n                                    <Grid direction=\"row\" container spacing={2}>\r\n\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\r\n                                                <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\r\n                                                    <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\r\n                                                    <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\r\n                                                    <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\r\n\r\n                                            \r\n                                                    <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\r\n                                                    <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\r\n                                                    \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item xs={12} sm={4}>\r\n                                            <MaterialUIDateTimePicker callbackFromParent={dateParam} />\r\n                                        </Grid>\r\n\r\n\r\n\r\n                                        <Grid item xs={12} sm={6} style={{ marginTop:'28px'}}>\r\n                                            {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </> }\r\n\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={12}>\r\n\r\n                                 \r\n                                        {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ?   <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow style={{  background: \"lightgray\" }}>\r\n\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\r\n                                            \r\n                                                {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\r\n                                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\r\n\r\n\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\r\n                                            \r\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\r\n\r\n                                                \r\n\r\n                                            \r\n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\r\n\r\n\r\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\r\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\r\n\r\n                                                <TableCell align=\"center\" colSpan={3}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"green\" : \"red\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\r\n                                        \r\n\r\n                                            </TableRow>\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\r\n\r\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\r\n\r\n                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\r\n\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\r\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\r\n\r\n                                            \r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                        \r\n\r\n                                    {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\r\n\r\n\r\n\r\n                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n                                        <TableRow hover key={i}  >\r\n\r\n                                            <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\r\n                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\r\n                                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\r\n                                            */}\r\n                                            <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin +=  (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0}  style={{ color: tradetotal > 0 ? \"green\" : \"red\" }}  align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\r\n\r\n                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\r\n                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\r\n\r\n\r\n\r\n                                            <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n\r\n                                            <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\r\n                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\r\n\r\n                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\r\n                                            <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\r\n\r\n                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\r\n                                            \r\n                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\r\n                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\r\n\r\n                                        </TableRow>\r\n\r\n\r\n\r\n                                    )) : ''}\r\n\r\n\r\n                                    <TableRow style={{  background: \"lightgray\" }} >\r\n\r\n                                        <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\r\n                                        \r\n                                        {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\r\n                                        <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\r\n\r\n                                        <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\r\n\r\n                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\r\n                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n\r\n                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\r\n\r\n                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n                                        <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\r\n\r\n\r\n                                        <TableCell align=\"left\" > </TableCell>\r\n                                        <TableCell align=\"left\"> </TableCell>\r\n\r\n                                        <TableCell align=\"left\"> </TableCell>\r\n                                        <TableCell align=\"left\"> </TableCell>\r\n\r\n\r\n                                        \r\n\r\n                                    </TableRow>\r\n                                        </TableBody>\r\n                                        </Table>\r\n\r\n                                        : \"\"}\r\n\r\n\r\n\r\n                                        {this.state.patternType == 'NR4_Daywide_daterage' ?  <>\r\n\r\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\r\n\r\n                                                <Table size=\"small\" aria-label=\"sticky table\"  style={{ padding:\"5px\"}}>\r\n                                                    <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                                    \r\n                                                            <TableRow style={{  background: \"lightgray\" }}  key={key}>\r\n                                                                <TableCell  colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0}</TableCell>\r\n                                                            </TableRow>\r\n\r\n                                                            <TableRow key={key+1}  variant=\"head\" style={{ fontWeight: 'bold' , background: \"lightgray\" }}>\r\n\r\n\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\r\n\r\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\r\n\r\n                                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\r\n\r\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\r\n\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\r\n\r\n\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\r\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\r\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\r\n\r\n\r\n                                                            </TableRow>\r\n\r\n                                                            </TableHead>\r\n                                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n                                                        \r\n\r\n                                                            {this.state.backTestResultDateRange[key].map((row, i) => (\r\n\r\n\r\n                                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n                                                            \r\n                                                                    <TableRow hover key={i}  >\r\n\r\n                                                                    <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\r\n                                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\r\n                                                                    <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\r\n                                                                */}\r\n                                                                    <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\r\n\r\n                                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\r\n                                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\r\n\r\n\r\n\r\n                                                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n\r\n                                                                    <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\r\n                                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\r\n\r\n                                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\r\n                                                                    <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\r\n\r\n                                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\r\n                                                                \r\n                                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\r\n                                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\r\n\r\n                                                                </TableRow>\r\n\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                    <TableRow style={{  background: \"lightgray\" }} >\r\n\r\n                                                    <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\r\n\r\n                                                    {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\r\n                                                    <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\r\n\r\n                                                    <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\r\n\r\n                                                    <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\r\n                                                    <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n\r\n                                                    <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\r\n\r\n                                                    <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n                                                    <TableCell align=\"left\"></TableCell>\r\n\r\n\r\n                                                    <TableCell align=\"left\" > </TableCell>\r\n                                                    <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                    <TableCell align=\"left\"> </TableCell>\r\n                                                    <TableCell align=\"left\"> </TableCell>\r\n\r\n\r\n\r\n\r\n                                                    </TableRow>\r\n\r\n                                                    </TableBody>\r\n                                                </Table>\r\n                                                \r\n\r\n                                            \r\n                                            )) : ''}\r\n\r\n                                            </>\r\n\r\n                                        : \"\"}\r\n\r\n\r\n                                        {this.state.patternType == 'NR4ForNextDay' ?   \r\n\r\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                           NR4 For Next Day  ({this.state.NR4ForNextDayResult.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 25)   : new Date().toString().substr(0, 25)}\r\n                                        </Typography> \r\n                                        : \"\"}\r\n                                            \r\n                                        {this.state.patternType == 'NR4ForNextDay' ?   \r\n                                         <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                               \r\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                                   <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\r\n\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\"  align=\"left\">Symbol </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\r\n\r\n                                                 \r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                        \r\n\r\n                                           \r\n                                        {this.state.NR4ForNextDayResult ? this.state.NR4ForNextDayResult.map((row, i) => (\r\n\r\n\r\n\r\n                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n                                            <TableRow hover key={i}  >\r\n                                                <TableCell align=\"center\">{i + 1}</TableCell>\r\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n\r\n                                                <TableCell align=\"left\">{row.foundAt}</TableCell>\r\n                                                <TableCell align=\"left\" title=\"based on last one 6 month\">  \r\n                                                \r\n                                                Total Longs: {row.pastPerferm.totalLongs}<br/>\r\n                                                Total Longs on Close%: {row.pastPerferm.totalLongPer.toFixed(2)}<br/>\r\n                                                Total Longs On High%: {row.pastPerferm.totalLongHighPer.toFixed(2)}<br/>\r\n                                                 {row.longCandles && row.longCandles.map((insiderow, i) => (\r\n\r\n                                                        <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}><EqualizerIcon /> </Button>\r\n\r\n                                                ))}\r\n\r\n                                                <br/><br/>\r\n\r\n                                                Total Short : {row.pastPerferm.totalShort}<br/>\r\n                                                Total Short% : {row.pastPerferm.totalShortPer.toFixed(2)}<br/>\r\n                                                Total Short On Low% : {row.pastPerferm.totalShortLowPer.toFixed(2)}<br/>\r\n                                                {row.shortCandles && row.shortCandles.map((insiderow, i) => (\r\n\r\n                                                <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}><EqualizerIcon /> </Button>\r\n\r\n                                                ))}\r\n                                                \r\n                                                </TableCell>\r\n                                                \r\n                                                <TableCell align=\"left\">{row.buyentry}</TableCell>\r\n                                                <TableCell align=\"left\">{row.sellenty}</TableCell>\r\n                                                <TableCell align=\"left\">{row.high}</TableCell>\r\n                                                <TableCell align=\"left\">{row.low}</TableCell>\r\n                                                <TableCell align=\"left\">{row.close}</TableCell>\r\n\r\n\r\n                                            </TableRow>\r\n\r\n\r\n\r\n                                        )) : ''}\r\n\r\n                                        </TableBody>\r\n\r\n                                        </Table>\r\n                                        \r\n                                        : \"\"}\r\n                                        </Grid>             \r\n\r\n\r\n                                    </Grid>\r\n\r\n\r\n              \r\n                            </Grid>\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import axios from \"axios\";\r\nconst performServerAction = axios.create({\r\n    baseURL: ''\r\n  });\r\nexport default performServerAction;","import * as actionTypes from \"./types\";\r\nimport performServerAction from \"../api\"\r\nimport AuthService from \"../components/service/AuthService\";\r\n\r\nexport const setPackLoaded = ()=> async dispatch=> {\r\n    var data = { allPacks:true, portal: true}; \r\n    const response = await performServerAction.post('getPrepaidPacks', data)\r\n    \r\n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\r\n  };\r\n  export const getPackById = (id)=> async dispatch=> {\r\n    try{\r\n     \r\n\r\n      //add getPrepaidPacksById after / in sprint 7 and 8\r\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\r\n    \r\n     //sprint 8 & 9\r\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\r\n\r\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\r\n    }catch(err){\r\n      console.log(err,\"ERRRR\")\r\n    }\r\n   \r\n  };\r\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",updatedInfo);\r\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\r\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\r\n      updatedInfo.productId =  String( updatedInfo.productId );\r\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\r\n      updatedInfo.active =  String( updatedInfo.active );\r\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\r\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\r\n\r\n      \r\n\r\n\r\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",packInfo)\r\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.data.indexSymbol}\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {props.data.indexSymbol}  At {props.data.timestamp}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\r\n        <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \r\n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\r\n\r\n                </TableRow>\r\n                <TableBody>\r\n                    \r\n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n\r\n                            {index !== 0 ? <>\r\n                                   <TableCell align=\"left\">{index} </TableCell>\r\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\r\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \r\n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\r\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\r\n                                 \r\n                                </>\r\n                           : \"\" } \r\n                                   \r\n                            </TableRow>\r\n\r\n                        )):      \r\n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\r\n                            Refresh\r\n                        </Button> </>}\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>    \r\n\r\n\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\n\r\nimport \"./ViewStyle.css\";\r\nimport MyDialog from './MyDialog'\r\nimport Notify from \"../../utils/Notify\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           // products: [],\r\n            stopnview:'', \r\n            indexTimeStamp:'', \r\n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n         this.loadPackList();\r\n  \r\n         var todayTime =  new Date(); \r\n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\r\n              setInterval(() => {\r\n                  this.loadPackList();\r\n              }, 60001 * 2);\r\n          }\r\n      }\r\n\r\n\r\n      loadPackList() {\r\n        \r\n    \r\n        AdminService.getAllIndices()\r\n            .then((res) => {\r\n                if(res.data){\r\n\r\n\r\n                    this.setState({indexTimeStamp : res.data.timestamp})\r\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \r\n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\r\n                    this.setState({products :   softedData});\r\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \r\n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \r\n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \r\n\r\n\r\n                    // for (let i = 0; i < softedData.length; i++) {\r\n                    //     // var cancel = setInterval(() => {\r\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n                    //     // }, 1000);\r\n                    //     // if(i == softedData.length-1 ){\r\n                    //     //     clearInterval(cancel)\r\n                    //     // }\r\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n\r\n                    // }\r\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\r\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\r\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\r\n                  \r\n                   \r\n                }\r\n\r\n            })\r\n            .catch((reject) => {\r\n\r\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \r\n                this.speckIt(\"All Indices API Failed\");     \r\n               \r\n\r\n            })\r\n    }\r\n\r\n\r\n    getIndicesStocks = (indexSymbol, index) =>{\r\n\r\n\r\n\r\n        AdminService.getIndiceStock(indexSymbol)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n\r\n            var resdata = res.data; \r\n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \r\n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \r\n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \r\n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \r\n\r\n\r\n            if(resdata){\r\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \r\n                \r\n                \r\n\r\n                if(document.getElementById('topDate_'+index)){\r\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \r\n                }\r\n                var percent = 0;\r\n\r\n                if(document.getElementById('top1_'+index)){\r\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\r\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \r\n                }\r\n                if(document.getElementById('top2_'+index)){\r\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\r\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top3_'+index)){\r\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\r\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top4_'+index)){\r\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\r\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top5_'+index)){\r\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\r\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \r\n                }   \r\n            }\r\n\r\n        })\r\n        .catch((reject) => {\r\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \r\n            this.speckIt(indexSymbol + \" API Failed \"  ); \r\n        })\r\n\r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n    }\r\n   \r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString(); \r\n      //  window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    dateFormat(date){ \r\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\r\n    }\r\n    timeFormat(date){ \r\n        return moment().calendar();   \r\n        //return moment(date).format('hh:mm:ss');\r\n\r\n        \r\n    }\r\n  \r\n    render(){\r\n     \r\n\r\n      return(\r\n        <React.Fragment>\r\n                <PostLoginNavBar />\r\n            \r\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\r\n\r\n                 <Grid item xs={7} sm={7}>\r\n                   \r\n                </Grid>\r\n\r\n        \r\n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\r\n\r\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                        Market - Indices at { this.state.indexTimeStamp }\r\n                    </Typography> \r\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n\r\n                <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \r\n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \r\n                    \r\n\r\n\r\n                </TableRow>\r\n                    \r\n                    <TableBody>\r\n                    \r\n                        { this.state.products ? this.state.products.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n                              \r\n                              {/* 'SECTORAL INDICES' */}\r\n                                { idata.key !== 'vijay' ? <>\r\n\r\n                                   <TableCell align=\"left\">{index+1} </TableCell>\r\n\r\n                                     <TableCell align=\"left\">   \r\n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\r\n                                    </TableCell>\r\n\r\n                                   \r\n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\r\n                                    \r\n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\r\n                                \r\n                                    <TableCell align=\"left\"  >\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\r\n                                            Refresh\r\n                                        </Button>\r\n\r\n                                    </TableCell> \r\n\r\n\r\n                                    \r\n\r\n                                     \r\n                                     \r\n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \r\n                                    \r\n                                     </> : \"\"\r\n                                }\r\n                               \r\n\r\n                            </TableRow>\r\n\r\n                        )):<Spinner/>}\r\n\r\n\r\n\r\n\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n                </Grid>\r\n\r\n                </Grid>\r\n                   \r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\n//import \"./styles.css\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n \r\n\r\n  // dateTime: \"23-06-2021 4:43:02 PM\"\r\n  // diff: -298523\r\n  // isDuplicate: true\r\n  // totCEOI: 902038\r\n  // totCEOIChange: \"0.000\"\r\n  // totCEVol: 15312564\r\n  // totChangeINOICall: 127897\r\n  // totChangeINOIDiff: -107353\r\n  // totChangeINOIPut: 20544\r\n  // totDiffChange: \"0.000\"\r\n  // totPEOI: 603515\r\n  // totPEOIChange: \"0.000\"\r\n  // totPEVol: 15418605\r\n  var data =  props.diffData && props.diffData.data;\r\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \r\n\r\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \r\n\r\n  // var startpage = 0  \r\n  // if(scpage * 10 <  data.length) {\r\n  //   startpage =  scpage * 10;  \r\n  // }   \r\n  // else if (props.diffData.scrollcount > data.length){\r\n  //   startpage =  0; \r\n  // }\r\n\r\n // data.reverse();\r\n\r\n\r\n  // console.log('scrollcount', props.diffData.scrollcount); \r\n  // console.log('startpage', startpage);\r\n\r\n  // console.log('charrt data', data);\r\n\r\n  //for (let index = startpage; index <  startpage + 10; index++) {\r\n  \r\n\r\n\r\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\r\n    if(data[index]){\r\n      putData.push(data[index].totPEOI); \r\n      callData.push(data[index].totCEOI); \r\n      diffData.push(data[index].diff); \r\n      timeDate.push( data[index].dateTime.substring(19,11)); \r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n  const chartData = {\r\n    labels: timeDate,\r\n    datasets: [\r\n      {\r\n        label: \"Put\",\r\n        data: putData,\r\n        fill: true,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"green\"\r\n      },\r\n      {\r\n        label: \"Call\",\r\n        data: callData,\r\n        fill: true,\r\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n        borderColor: \"red\",\r\n        \r\n      },\r\n      // {\r\n      //   label: \"Diff\",\r\n      //   data: diffData,\r\n      //   fill: true,\r\n      //   onoffline : true,\r\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n      //   borderColor: \"blue\",\r\n        \r\n      // }\r\n     \r\n    ]\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\r\n  } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ApexCharts from 'apexcharts'\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n  var options = {\r\n    series: [{\r\n    data: [{\r\n        x: new Date(1538778600000),\r\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n      },\r\n      {\r\n        x: new Date(1538780400000),\r\n        y: [6632.01, 6643.59, 6620, 6630.11]\r\n      },\r\n      {\r\n        x: new Date(1538782200000),\r\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\r\n      },\r\n      {\r\n        x: new Date(1538784000000),\r\n        y: [6635.65, 6651, 6629.67, 6638.24]\r\n      },\r\n      {\r\n        x: new Date(1538785800000),\r\n        y: [6638.24, 6640, 6620, 6624.47]\r\n      },\r\n      {\r\n        x: new Date(1538787600000),\r\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\r\n      },\r\n      {\r\n        x: new Date(1538789400000),\r\n        y: [6624.61, 6632.2, 6617, 6626.02]\r\n      },\r\n      {\r\n        x: new Date(1538791200000),\r\n        y: [6627, 6627.62, 6584.22, 6603.02]\r\n      },\r\n      {\r\n        x: new Date(1538793000000),\r\n        y: [6605, 6608.03, 6598.95, 6604.01]\r\n      },\r\n      {\r\n        x: new Date(1538794800000),\r\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\r\n      },\r\n      {\r\n        x: new Date(1538796600000),\r\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\r\n      },\r\n      {\r\n        x: new Date(1538798400000),\r\n        y: [6608.91, 6618.99, 6608.01, 6612]\r\n      },\r\n      {\r\n        x: new Date(1538800200000),\r\n        y: [6612, 6615.13, 6605.09, 6612]\r\n      },\r\n      {\r\n        x: new Date(1538802000000),\r\n        y: [6612, 6624.12, 6608.43, 6622.95]\r\n      },\r\n      {\r\n        x: new Date(1538803800000),\r\n        y: [6623.91, 6623.91, 6615, 6615.67]\r\n      },\r\n      {\r\n        x: new Date(1538805600000),\r\n        y: [6618.69, 6618.74, 6610, 6610.4]\r\n      },\r\n      {\r\n        x: new Date(1538807400000),\r\n        y: [6611, 6622.78, 6610.4, 6614.9]\r\n      },\r\n      {\r\n        x: new Date(1538809200000),\r\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\r\n      },\r\n      {\r\n        x: new Date(1538811000000),\r\n        y: [6623.48, 6627, 6618.38, 6620.35]\r\n      },\r\n      {\r\n        x: new Date(1538812800000),\r\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\r\n      },\r\n      {\r\n        x: new Date(1538814600000),\r\n        y: [6615.53, 6617.93, 6610, 6615.19]\r\n      },\r\n      {\r\n        x: new Date(1538816400000),\r\n        y: [6615.19, 6621.6, 6608.2, 6620]\r\n      },\r\n      {\r\n        x: new Date(1538818200000),\r\n        y: [6619.54, 6625.17, 6614.15, 6620]\r\n      },\r\n      {\r\n        x: new Date(1538820000000),\r\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\r\n      },\r\n      {\r\n        x: new Date(1538821800000),\r\n        y: [6625.95, 6626, 6611.66, 6617.58]\r\n      },\r\n      {\r\n        x: new Date(1538823600000),\r\n        y: [6619, 6625.97, 6595.27, 6598.86]\r\n      },\r\n      {\r\n        x: new Date(1538825400000),\r\n        y: [6598.86, 6598.88, 6570, 6587.16]\r\n      },\r\n      {\r\n        x: new Date(1538827200000),\r\n        y: [6588.86, 6600, 6580, 6593.4]\r\n      },\r\n      {\r\n        x: new Date(1538829000000),\r\n        y: [6593.99, 6598.89, 6585, 6587.81]\r\n      },\r\n      {\r\n        x: new Date(1538830800000),\r\n        y: [6587.81, 6592.73, 6567.14, 6578]\r\n      },\r\n      {\r\n        x: new Date(1538832600000),\r\n        y: [6578.35, 6581.72, 6567.39, 6579]\r\n      },\r\n      {\r\n        x: new Date(1538834400000),\r\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\r\n      },\r\n      {\r\n        x: new Date(1538836200000),\r\n        y: [6575.96, 6589, 6571.77, 6588.92]\r\n      },\r\n      {\r\n        x: new Date(1538838000000),\r\n        y: [6588.92, 6594, 6577.55, 6589.22]\r\n      },\r\n      {\r\n        x: new Date(1538839800000),\r\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\r\n      },\r\n      {\r\n        x: new Date(1538841600000),\r\n        y: [6597.5, 6600, 6588.39, 6596.25]\r\n      },\r\n      {\r\n        x: new Date(1538843400000),\r\n        y: [6598.03, 6600, 6588.73, 6595.97]\r\n      },\r\n      {\r\n        x: new Date(1538845200000),\r\n        y: [6595.97, 6602.01, 6588.17, 6602]\r\n      },\r\n      {\r\n        x: new Date(1538847000000),\r\n        y: [6602, 6607, 6596.51, 6599.95]\r\n      },\r\n      {\r\n        x: new Date(1538848800000),\r\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\r\n      },\r\n      {\r\n        x: new Date(1538850600000),\r\n        y: [6591.02, 6603.08, 6591, 6591]\r\n      },\r\n      {\r\n        x: new Date(1538852400000),\r\n        y: [6591, 6601.32, 6585, 6592]\r\n      },\r\n      {\r\n        x: new Date(1538854200000),\r\n        y: [6593.13, 6596.01, 6590, 6593.34]\r\n      },\r\n      {\r\n        x: new Date(1538856000000),\r\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\r\n      },\r\n      {\r\n        x: new Date(1538857800000),\r\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\r\n      },\r\n      {\r\n        x: new Date(1538859600000),\r\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\r\n      },\r\n      {\r\n        x: new Date(1538861400000),\r\n        y: [6596.25, 6604.2, 6590, 6602.99]\r\n      },\r\n      {\r\n        x: new Date(1538863200000),\r\n        y: [6602.99, 6606, 6584.99, 6587.81]\r\n      },\r\n      {\r\n        x: new Date(1538865000000),\r\n        y: [6587.81, 6595, 6583.27, 6591.96]\r\n      },\r\n      {\r\n        x: new Date(1538866800000),\r\n        y: [6591.97, 6596.07, 6585, 6588.39]\r\n      },\r\n      {\r\n        x: new Date(1538868600000),\r\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\r\n      },\r\n      {\r\n        x: new Date(1538870400000),\r\n        y: [6596.44, 6601, 6590, 6596.55]\r\n      },\r\n      {\r\n        x: new Date(1538872200000),\r\n        y: [6598.91, 6605, 6596.61, 6600.02]\r\n      },\r\n      {\r\n        x: new Date(1538874000000),\r\n        y: [6600.55, 6605, 6589.14, 6593.01]\r\n      },\r\n      {\r\n        x: new Date(1538875800000),\r\n        y: [6593.15, 6605, 6592, 6603.06]\r\n      },\r\n      {\r\n        x: new Date(1538877600000),\r\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\r\n      },\r\n      {\r\n        x: new Date(1538879400000),\r\n        y: [6604.44, 6604.44, 6600, 6603.5]\r\n      },\r\n      {\r\n        x: new Date(1538881200000),\r\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\r\n      },\r\n      {\r\n        x: new Date(1538883000000),\r\n        y: [6603.85, 6605, 6600, 6604.07]\r\n      },\r\n      {\r\n        x: new Date(1538884800000),\r\n        y: [6604.98, 6606, 6604.07, 6606]\r\n      },\r\n    ]\r\n  }],\r\n    chart: {\r\n    type: 'candlestick',\r\n    height: 350\r\n  },\r\n  title: {\r\n    text: 'CandleStick Chart',\r\n    align: 'left'\r\n  },\r\n  colors: {\r\n    upward: 'darkmagenta',\r\n    downward: '#00cbcb'\r\n  },\r\n  xaxis: {\r\n    type: 'datetime'\r\n  },\r\n  yaxis: {\r\n    tooltip: {\r\n      enabled: true\r\n    }\r\n  }\r\n  };\r\n\r\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n  chart.render();\r\n\r\n\r\n\r\n  return \"\"; \r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n      this.filterOptionChain(e.target.name,  e.target.value); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        AdminService.getFunds().then(fundsRes => {\r\n            // console.log('profiledata', profileRes); \r\n               let fundsResData = resolveResponse(fundsRes);\r\n             //  var fundsResData =  fundsRes && fundsRes.data; \r\n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\r\n               \r\n                this.setState({  fundData :fundsResData.data })\r\n               }\r\n           })\r\n\r\n    }\r\n   \r\n  \r\n   toFixedAmount =(value) => {\r\n\r\n    if(value){\r\n      return  parseFloat(value).toFixed(2);\r\n    }\r\n   }\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n       \r\n            <br/><br/><br/>\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n            \r\n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n\r\n                <Typography variant=\"h6\">\r\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\r\n                </Typography>\r\n              \r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\r\n                </Typography>\r\n             \r\n                <Typography variant=\"h6\">\r\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\r\n                </Typography>\r\n\r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\r\n                </Typography>\r\n                </Paper>\r\n                </Grid>\r\n               \r\n\r\n\r\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n               \r\n                <Typography variant=\"h6\">\r\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\r\n                    </Typography>\r\n                    \r\n                    \r\n                    <Typography variant=\"h6\">\r\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\r\n                    </Typography>\r\n\r\n                  \r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport \"./ViewStyle.css\";\r\n\r\n\r\nclass TradeBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addProduct = this.addProduct.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.convertBool = this.convertBool.bind(this);\r\n        \r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All'\r\n\r\n        }\r\n    }\r\n    getTodayTrade = () => {\r\n        AdminService.retrieveTradeBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res);\r\n                console.log('datamy', data);\r\n\r\n                if(data && data.data){\r\n                    this.setState({oderbookData: data.data});\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n   \r\n   \r\n        this.getTodayTrade(); \r\n        \r\n       \r\n    }\r\n\r\n    zoneChange = (e) =>{\r\n        this.setState({[e.target.name]: e.target.value});\r\n\r\n        if(e.target.value.includes(\"Select All\")){\r\n            this.setState({selectedZone: this.state.listofzones})\r\n            this.setState({selectAllzone: \"Remove All\"})\r\n        }\r\n    \r\n        if(e.target.value.includes(\"Remove All\")){\r\n            this.setState({selectedZone: []})\r\n            this.setState({selectAllzone: \"Select All\"})\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n   \r\n    addProduct=(e)=> {\r\n        console.log(this.props)\r\n        this.props.history.push('/banner-add');\r\n    }\r\n\r\n    editProduct(productId) {\r\n        window.localStorage.removeItem(\"selectedBannerId\");\r\n        window.localStorage.setItem(\"selectedBannerId\", productId);\r\n        this.props.history.push('/banner-edit');\r\n    }\r\n\r\n    convertBool(flag) {\r\n        return flag ? 'Yes' : 'No';\r\n    }\r\n\r\n    dateFormat(date){\r\n        var d = new Date(date);\r\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\r\n        return fd;\r\n    }\r\n   \r\n    \r\n\r\n    render(){\r\n    \r\n      return(\r\n        <React.Fragment>\r\n            <PostLoginNavBar/>\r\n\r\n\r\n\r\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                  Today Trades ({this.state.oderbookData.length})\r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \r\n                            </Grid>\r\n\r\n                            \r\n                </Grid>\r\n            \r\n\r\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n\r\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\r\n                        \r\n\r\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\r\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\r\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\r\n\r\n                      \r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n            \r\n\r\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\r\n                        <TableRow key={row.productId} >\r\n\r\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\r\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                            \r\n                            <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\r\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\r\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\r\n\r\n                            \r\n                        </TableRow>\r\n                    )):<Spinner/>}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\r\nexport default TradeBook;","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\n//import AdminWelcome from '../adminwelcome.png';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport  {API_KEY} from \"../../utils/config\";\r\nimport * as moment from 'moment';\r\nimport { w3cwebsocket } from 'websocket'; \r\nimport pako from 'pako';\r\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            userName: \"\",\r\n            password: \"\",\r\n            autoSearchList :[],\r\n            isDasable:false,\r\n            isError:false,\r\n            InstrumentLTP : {},\r\n            ifNotBought : true,\r\n            autoSearchTemp : [],\r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\r\n        \r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n            console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n          this.setState({ startDate: date  });\r\n        } else if (fromDate === \"END_DATE\") {\r\n          this.setState({ endDate: date  });\r\n        }\r\n      };\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\":  this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             this.setState({ InstrumentLTP : LtpData});\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n       })\r\n    }\r\n    decodeWebsocketData =(array)  => {\r\n\r\n        console.log('atoms'); \r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n    \r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken ,clientcode ) => {\r\n\r\n\r\n        var firstTime_req =  {\r\n            \"actiontype\": \"subscribe\",\r\n            \"feedtype\": \"order_feed\",\r\n            \"jwttoken\": this.state.feedToken ,\r\n            \"clientcode\": this.state.clientcode ,\r\n            \"apikey\": API_KEY\r\n       }\r\n       \r\n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\r\n        wsClint.send(JSON.stringify( firstTime_req));\r\n    }\r\n\r\n    updateSocketWatch = (feedToken,clientcode ) => {\r\n      \r\n        var channel = this.state.symbolList.map(element => {\r\n             return 'nse_cm|'+ element.token; \r\n        });\r\n\r\n        channel = channel.join('&'); \r\n        var sbin =  {\r\n            \"task\":\"mw\",\r\n            \"channel\": channel,\r\n            \"token\":this.state.feedToken,\r\n            \"user\":this.state.clientcode,\r\n            \"acctid\":this.state.clientcode\r\n        }\r\n        wsClint.send( JSON.stringify( sbin)); \r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var feedToken =   tokens &&  tokens.feedToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \r\n        var clientcode =   userProfile &&  userProfile.clientcode;\r\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\r\n\r\n            \r\n        wsClint.onopen  = (res) => {\r\n\r\n             this.makeConnection();\r\n             console.log('connected');\r\n         //    this.updateSocketWatch();\r\n                \r\n            //  setTimeout(function(){\r\n            //    this.updateSocketWatch(feedToken ,clientcode);\r\n            //  }, 800);\r\n        }\r\n\r\n        wsClint.onmessage = (message) => {\r\n            \r\n            \r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n\r\n            this.setState({ positionList : JSON.parse(data) });\r\n\r\n        //    this.state.symbolList.forEach(element => {\r\n\r\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\r\n        //     // console.log(\"foundLive\", foundLive);\r\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\r\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\r\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\r\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\r\n               \r\n               \r\n        //      });\r\n        \r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e); \r\n        }\r\n\r\n        setInterval(() => {\r\n\r\n            var heartbeatReq =  {\r\n                \"actiontype\": \"heartbeat\",\r\n                \"feedtype\": \"order_feed\",\r\n                \"jwttoken\": this.state.feedToken ,\r\n                \"clientcode\": this.state.clientcode ,\r\n                \"apikey\": API_KEY\r\n            }\r\n    \r\n            console.log(\"heartbeatReq : \" + heartbeatReq);\r\n            wsClint.send(heartbeatReq);\r\n          //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if(!list){\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n      \r\n    }\r\n\r\n    placeOrder = (transactiontype) => {\r\n\r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":transactiontype, //BUY OR SELL\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\":this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n\r\n                if(this.state.stoploss){\r\n                    this.placeSLMOrder(this.state.stoploss);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails =(name) => {\r\n       \r\n        var token= ''; \r\n        for (let index = 0; index <  this.state.symbolList.length; index++) {\r\n            if(this.state.symbolList[index].symbol === name){\r\n                    token =  this.state.symbolList[index].token; \r\n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\r\n                    break; \r\n            }\r\n        }  \r\n        this.getHistory(token); \r\n    }\r\n\r\n    placeSLMOrder = () => {\r\n\r\n        var data = {\r\n                \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":\"SELL\",\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": this.state.quantity, \r\n            \"triggerprice\" : this.state.stoploss,\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n     // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data  = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token ,\r\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1) , \r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n       }\r\n       \r\n        AdminService.getHistoryData(data).then(res => {\r\n             let data = resolveResponse(res,'noPop' );\r\n              console.log(data); \r\n              if(data && data.data){\r\n                 \r\n                var histCandles = data.data; \r\n                histCandles &&  histCandles.sort(function(a,b){\r\n                  return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if(histCandles.length > 0){\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\r\n                }\r\n                this.getLTP();\r\n              }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n        \r\n\r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        console.log(\"values\", values); \r\n        console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n\r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index,1);\r\n        localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList : list });\r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                \r\n               \r\n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n\r\n                    <Grid item xs={10} sm={12}> \r\n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\r\n                              \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {/* {\r\n                                \"variety\": null,\r\n                                \"ordertype\": \"LIMIT\",\r\n                                \"producttype\": \"INTRADAY\",\r\n                                \"duration\": \"DAY\",\r\n                                \"price\": \"194\",\r\n                                \"triggerprice\": \"0\",\r\n                                \"quantity\": \"1\",\r\n                                \"disclosedquantity\": \"0\",\r\n                                \"squareoff\": \"0\",\r\n                                \"stoploss\": \"0\",\r\n                                \"trailingstoploss\": \"0\",\r\n                                \"tradingsymbol\": \"SBIN-EQ\",\r\n                                \"transactiontype\": \"BUY\",\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": null,\r\n                                \"instrumenttype\": \"\",\r\n                                \"strikeprice\": \"-1\",\r\n                                \"optiontype\": \"\",\r\n                                \"expirydate\": \"\",\r\n                                \"lotsize\": \"1\",\r\n                                \"cancelsize\": \"1\",\r\n                                \"averageprice\": \"0\",\r\n                                \"filledshares\": \"0\",\r\n                                \"unfilledshares\": \"1\",\r\n                                \"orderid\": \"201020000000080\",\r\n                                \"text\": \"\",\r\n                                \"status\": \"cancelled\",\r\n                                \"orderstatus\": \"cancelled\",\r\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"fillid\": null,\r\n                                \"filltime\": null\r\n                            } */}\r\n\r\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\r\n                                <TableRow key={i} >\r\n\r\n\r\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    \r\n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n                                    <TableCell align=\"center\">{row.status}</TableCell>\r\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\r\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\r\n                                \r\n                                </TableRow>\r\n                            )):''}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     formContainer : {\r\n//         display: 'flex',\r\n//         flexFlow: 'row wrap'\r\n//     },\r\n\r\n    \r\n\r\n// };\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            resMessage: [],\r\n            counter:0,\r\n            listCount:0\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        // AdminService.scanStocks().then(fundsRes => {\r\n        //     // console.log('profiledata', profileRes); \r\n        //      //  let fundsResData = resolveResponse(fundsRes);\r\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \r\n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\r\n               \r\n        //         this.setState({  fundData :fundsResData.data })\r\n        //        }\r\n        //    })\r\n\r\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n        this.setState({watchlistCount : list.length})\r\n\r\n    }\r\n\r\n    readCsv = async() => {\r\n\r\n      var list = this.state.addtowatchlist; \r\n\r\n      var parsedList =JSON.parse(list) \r\n      console.log(parsedList.length);\r\n      \r\n      var newJsonList = []; \r\n\r\n      for (let index = 0; index < parsedList.length; index++) {\r\n        const element = parsedList[index];\r\n        console.log(element);\r\n\r\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\r\n\r\n          let searchResdata =  searchRes.data; \r\n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \r\n        \r\n         // && element.LTP >= 200\r\n          if(found.length){ \r\n            newJsonList.push(found[0]); \r\n         \r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \r\n              if(!foundInWatchlist.length){\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\r\n\r\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\r\n                watchlist.push(found[0]); \r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n                console.log(\"fdaata\");\r\n               \r\n              }else{\r\n                this.setState({watchlistCount : watchlist.length,})\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\r\n\r\n              }\r\n            //  console.log(found[0].symbol, \"found\",found);      \r\n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\r\n          }\r\n          if(this.state.resMessage && this.state.resMessage.length){\r\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\r\n\r\n          }\r\n        \r\n       })\r\n\r\n       await new Promise(r => setTimeout(r, 500));  \r\n      }\r\n\r\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\r\n      \r\n      var data = {\r\n        listName : parsedList[0].SYMBOL, \r\n        listItem : newJsonList \r\n      }\r\n      console.log(\"newjosnlist:\", data);\r\n      AdminService.addIntoStaticData(data).then(res => {\r\n        let resdata = resolveResponse(res,'noPop' );\r\n       // console.log(resdata);\r\n        this.setState({listName: resdata.listName,listCount: resdata.count})\r\n      });\r\n      \r\n    }\r\n    resetCsv=()=>{\r\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\r\n\r\n    }\r\n   \r\n  \r\n\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n\r\n          \r\n            <Paper style={{padding:\"25px\" }}>   \r\n\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n              \r\n           \r\n              \r\n\r\n\r\n              \r\n\r\n                <Grid item xs={12} sm={8}> \r\n                <Typography variant=\"h6\">\r\n                   Current Watchlist Count   {this.state.watchlistCount} \r\n\r\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \r\n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \r\n\r\n                   <br />\r\n                  </Typography>\r\n                         \r\n\r\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\r\n              \r\n\r\n                </Grid>\r\n\r\n            \r\n                  \r\n                <Grid  item xs={8} sm={8}>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \r\n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\r\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\r\n\r\n\r\n\r\n                   \r\n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\r\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\r\n                     */}\r\n                       \r\n                </Grid>\r\n\r\n                <Grid  item xs={8} sm={8}>\r\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\r\n                         <>  <span> {data} </span>  <br /> </>\r\n                           \r\n                        )) : ''}\r\n   \r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n                </Paper>\r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    tableStyle : {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }, \r\n    selectStyle:{\r\n        marginBottom: '0px',\r\n        minWidth: 240,\r\n        maxWidth: 240\r\n\r\n    }\r\n  \r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport LoginComponent from \"./login/LoginComponent\";\r\n\r\nimport Home from './MyTrade/Home';\r\n\r\n// import NiftyView from \"./MyTrade/NiftyView\";\r\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\r\n\r\nimport MySectorTop from \"./MyTrade/MySectorTop\";\r\n\r\nimport Chart from \"./MyTrade/Chart\";\r\nimport CandleChart from \"./MyTrade/CandleChart\";\r\n\r\n\r\nimport Funds from \"./MyTrade/Funds\";\r\nimport Orderbook from \"./MyTrade/Orderbook\";\r\nimport Tradebook from \"./MyTrade/Tradebook\";\r\n// import LiveFeed from \"./MyTrade/LiveFeed\";\r\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\r\nimport Position from \"./MyTrade/Position\";\r\n\r\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={LoginComponent}/>\r\n                    <Route path=\"/login\" component={LoginComponent}/>\r\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\r\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\r\n                    <Route path=\"/sector\" component={MySectorTop}/>\r\n                    <Route path=\"/chart\" component={Chart}/>\r\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\r\n\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/funds\" component={Funds}/>\r\n                    <Route path=\"/order\" component={Orderbook}/>\r\n                    <Route path=\"/trade\" component={Tradebook}/>\r\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\r\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\r\n                    <Route path=\"/position\" component={Position}/>\r\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\r\n                    \r\n           \r\n                    <Route path=\"*\" component={LoginComponent} />\r\n                    \r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport './App.css';\r\nimport AppRouter from \"./components/RouterComponent\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n        <AppRouter/>\r\n        <ToastContainer/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./createStore\";\r\nimport App from \"./App\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}