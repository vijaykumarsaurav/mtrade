{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/LightChartCom.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/SimpleExpansionPanel.js","components/MyTrade/SimpleExpansionFastMovement.js","components/MyTrade/LiveBidsExpantion.js","components/MyTrade/WatchListTab.js","api.js","action/index.js","components/MyTrade/Chart.js","components/MyTrade/BankNiftyView.js","components/MyTrade/OptionBuyWithSPLevel.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/Home.js","components/MyTrade/NiftyView.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/worker.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/LightChartDialog.js","components/MyTrade/DeliveryData.js","components/MyTrade/IndexCharts.js","components/MyTrade/OrderWatchlistDialog.js","components/MyTrade/StrongCharts.js","components/MyTrade/FullModel.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/MyTrade/FindFastMovement2.js","components/MyTrade/FindFastMovement3.js","components/MyTrade/LightChartModel.js","components/MyTrade/SlowMotion.js","components/MyTrade/MarketDepth.js","components/MyTrade/MarketDepthMobile.js","components/MyTrade/Backtest.js","components/MyTrade/ChartinkBacktest.js","components/MyTrade/BackupHistory.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","symbol","backDate","allSymbol","count","index","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","Equalizer_default","FileCopy_default","userProfile","LogoutMenu","react_router_dom","to","textDecoration","confirm","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","title","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","LightChartCom","setTimeout","chart","LightweightCharts","createChart","getElementById","height","rightPriceScale","scaleMargins","top","bottom","borderVisible","layout","textColor","grid","vertLines","horzLines","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","addHistogramSeries","priceFormat","priceScaleId","volumeSeries","subscribeCrosshairMove","param","getit","seriesPrices","Symbol","iterator","string","change","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","elem","console","log","open","high","low","close","toFixed","err","return","time","toLocaleString","str","innerHTML","smaData","avg","sum","result","len","val","slice","calculateSMA","addLineSeries","lineWidth","direction","paddingLeft","paddingRight","item","fontSize","DialogTitle","withStyles","padding","closeButton","right","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","placeOrder","click","updateOrderList","retrieveOrderBook","orderlist","sort","b","updatetime","getPercentageColor","percent","Math","floor","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","qtyToTake","format1","beginningTime","moment","format","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","candleData","clossest","lowerest","highestHigh","lowestLow","highestsum","reverse","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","orderOption","buyPrice","placeOrderMethod","catch","placeOptionOrder","placeOptionSLMOrder","stopLossTriggerPrice","netqty","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","toLocaleTimeString","Hidden","xsDown","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","FormControl","selectStyle","htmlFor","Select","MenuItem","lib_default","smDown","OpenInNew_default","Drawer","anchor","List","Menu","ChevronLeft_default","ChevronRight_default","Divider","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","overflowY","maxHeight","footerButton","left","textAlign","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DatePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","list","ExpansionPanelDetails","map","nc","background","highlisht","LoadSymbolDetails","TabPanel","react","role","hidden","Box","sx","Typography_Typography","a11yProps","BasicTabs","_props$data","cursor","onSelectItem","autoSearchList","symbolList","onChangeWatchlist","search","handleKeyDown","selectedWatchlist","setValue","searchedSymbolList","gainerList","looserList","borderBottom","Tabs","newValue","Tab","onKeyDown","selected","sector","performServerAction","baseURL","setPackLoaded","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","allPacks","portal","sent","stop","_x","apply","diffData","putData","totPEOI","totCEOI","diff","dateTime","substring","MenuProps","PaperProps","ITEM_HEIGHT","MyView","onChangeSelectSymbol","loadPackList","filterOptionChain","actualValue","filereddata","alldata","optionChainDataBN","records","expiryDate","strikePrice","filtered","FilteredBY","handleScroll","scrollcount","onChangeCallLot","calculateCallMargin","CE","lastPrice","totalMargin","Parser","buyCallLot","lotSize","maxLoss","onChangePutLot","calculatePutMargin","PE","buyPutLot","getDataforStrike","sumOfCEoi","sumOfPEoi","openInterest","findSupportResistence","optiondata","PEoi","CEoi","PEoiChange","CEoiChange","changeinOpenInterest","myStrike","startDiff","underlyingValue","showOptionDownside","rem","round","startFrom","endDiff","showOptionUpside","rem2","endTo","totalspeoi","totalsceoi","resdata","AllspTotalOI","selectedSPpcr","allStrikediff","allStrikeChngeDiff","products","stopnview","curnewdata","timestamp","totalCOI","expiry","strike","waitForChainFlag","pcrTableBN","selectOptionStock","niftyLogSize","niftybankLogSize","_this2","SecuritiesInFO","todayTime","setInterval","updatepcr","_this3","getBNcpdata","totOI","newdata","dateFormat","totCEVol","totVol","totPEVol","totChangeINOICall","totChangeINOIPut","totChangeINOIDiff","oldproducts","lastrow","isDuplicate","totCEOIChange","totPEOIChange","totDiffChange","pcrdata","allPCR","expiryPCR","unshift","_this4","Input","key","expiryDates","labelId","max-height","strikePrices","Paper","overflow","Table","stickyHeader","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","hover","Chart_App","colSpan","opdata","pChange","buyOption","borderLeft","borderRight","tableStyle","connect","OrderBook","searchSymbolPendingOrder","stockOptionSearch","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","abrupt","createdAt","buyAt","sellAt","pattenName","pattenNamePending","priceStopLoss","priceTarget","orderPenidngOptionList","toConsumableArray","deleteInOrderPenidngList","delitem","splice","callBackUpdate","placeOptionSPLevelOver","indexData","spotPrice","today","isoWeekday","nextExp","updateLTP","_callee2","_loop","_context3","_context2","buyOptionFlag","r","delegateYield","getTradePrice","refreshCandleChartManually","_ref3","_callee3","_context4","failedCount","onChange2","isfound","ltpparam","openNewPage","backToPositionPage","autoSearchTemp","fdata","instrumenttype","tick_size","endTime","currentTime","isBetween","intervaltime","findlast5minMovementInterval","gutterBottom","hash","Autocomplete","freeSolo","disableClearable","option","renderInput","params","InputProps","Delete_default","CEStrikePrice","buyCallOption","buyPutOption","PEStrikePrice","orderPenidngList","buyStockOption","showStrikesLtp","onChangeOption","getChunkPrice","suggestBuyPrice","suggestSellPrice","optionType","CEoptionsLtpList","PEoptionsLtpList","selectedOptionLotsize","getStockOptions","getOptionsLtp","_ref4","_callee4","nearOptions","_loop2","_context6","_context5","optionLtp","expiryMonth","_x2","_x3","optiontype","noOfLot","priceInfo","exp","optionName","optionData","slpercentage","perStopTrigerLoss","trackSLPrice","OptionBuyWithSPLevel","BankNiftyView","Home","onInputChange","showStaticChart","checkOpenEqualToLow","_this$setState4","openEqualHighList","openEqualLowList","closeingEqualHighList","advanceShareCount","declineShareCount","UnchangeShareCount","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","wsClint","firstTime_req","feedToken","send","updateSocketWatch","channel","updateSocket","task","user","acctid","updateSocketDetails","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","_req","orderid","watchList","getTimeFrameValue","timeFrame","chartStaticData","timeDuration","historyData","cdata","d","getTime","volumeSeriesData","loopindex","rsiValues","bblastValue","vwapvalue","max","smaLineSeries","InstrumentHistroy","upsideMoveCount","downMoveCount","totalSum","per","totalPerchentageChange","startingFrom","checkSlowMotionStock","stock","dataDay","resd","histdatad","candleDatad","bigCandleCount","slowMotionStockList","checkSlowMotionCheckLive","checkLiveBids","bidlivedata","biddata","totalBuyQuantity","totalSellQuantity","deliveryToTradedQuantity","liveBidsList","oneHourBullBearCheck","_loop3","_context7","lastCandle","oneHourBullBearCheckList","searchValumeBreakoutStock","_callee5","_loop4","_context9","_context8","volumeSum","findmaxVol","currentCandleVol","firstCandleCloseingPrice","priceGoingHighCount","firstCandleCloseingPriceDownSide","priceGoingLowCount","avgVol","volumeBreakoutlast5CandleList","dailyBasisInfoCheck","startDateforDaily","DSMA","closeingDatadaily","valumeSum","SMA","dailyAvgValume","DSMALastValue","DailyBulishStatus","todayCurrentVolume","volumeCrossedList","slmOrderType","onSelectItemChart","seachSumbol","deleteItemWatchlist","findIndex","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","candleChartDataInside","keyCode","prevState","updateCandleOnkey","selectedKeyRow","sumPercentage","ifNotBought","longExitPriceType","shortExitPriceType","stopScaningFlag","searchFailed","FoundPatternList","fastMovementList","domElement","timeVisible","secondsVisible","tostartInteral","clearInterval","_ref6","upper","middle","lower","j","OrderWatchlist","SimpleExpansionFastMovement_SimpleExpansionPanel","optionChainData","pcrTable","_React$createElement2","_React$createElement3","_React$createElement4","paddingTop","impliedVolatility","indexSymbol","MyDialog_DialogTitle","MyDialog_DialogContent","indexSymbolData","idata","MyDialog_DialogActions","getIndicesStocks","getIndiceStock","toLocaleLowerCase","indexTimeStamp","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","x","y","colors","upward","downward","ApexCharts","querySelector","render","toFixedAmount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","getTodayOrder","trakingRecord","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","onChangePriceStopLoss","includes","onChangePriceTarget","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","float","orderstatus","onBlur","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","addProduct","editProduct","convertBool","productId","removeItem","flag","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","w3cwebsocket","actiontype","feedtype","jwttoken","apikey","sbin","getHistory","histCandles","positionList","heartbeatReq","exchtime","multipleChartData","longs","longCandles","shorts","shortCandles","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","_this$setState","isFound","enddate","lastdayinfo","getCandleHistoryAndStore","timediff","candleHistoryInterval","last10Candle","findTweezerTopPatternLive","findTweezerBottomPatternLive","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","secondCandle","diffPer","ttophistCandle","foundData","foundPatternList","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","backTestResult","backTestFlag","rgrangeCount","last4Candle","last5Candle","rangeArr","firstElement","buyentry","sellenty","orderActivated","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","BuyAt","SellAt","brokerageCharges","findNR7PatternLive","showtestdata","last7Candle","last9Candle","stockTesting","_ref5","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","_callee6","foundPatternsFromStored","_loop5","_context11","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","_context10","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","pastPerferm","foundlist","getStoplossFromOrderbook","stopLoss","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_callee7","_loop6","_ret","_context13","showHighLowWisePer","_context12","v","t0","tagPatternWhichTaken","orderTagToPosition","pattern","calculateTradeExpence","totalbuyvalue","totalsellvalue","buyCharge","sellCharge","turnOver","totalBroker","sst","sstCharge","transCharge","stampDuty","sebiCharge","gstCharge","total","tradeExpence","expenceInfo","refreshBasedAmount","totCheckAmount","checkTotalNet","totCheckExp","perchange","checkAmountPer","percentPnL","checkAmount","checkQty","checkExpence","checkNet","checkSLOrTarget","squareOff","getPositionData","_callee8","totalMaxPnL","_context14","getPosition","todayProfitPnL","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","totalExpence","tradingPositionlist","pnl","buyqty","chargeInfo","slData","stopLossAmount","totalTornOver","getNSETopStock","scaninterval","totalDayLoss","dailyLossPer","abs","scandata","_loop7","symbolName","getChartInkStock","triggered_at","results","stocks","mtime","minutes","_loop8","longBuiltUpOrder","_ref9","_callee9","_loop9","_context16","_context15","checkAndPlaceSingleOrder","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","onTrailChange","onAddSLChange","addSLInfo","deleteOptionPriceSL","deleteindex","_loop10","indexP","trackSLPriceList","getNiftyLTP","niftyLtpSec","getBankNiftyLTP","bnniftyLtpSec","getStopLossPrice","_ref10","_callee10","_context17","slPrice","_x4","LockedSymbolName","orderData","getOpenPeningOrderId","addSLOrderInfo","enableSLMOrderUi","placeSLMOrderManually","modifyOrderMethod","minTriggerPrice","minSLPrice","get2DecimalNumber","number","getSLAndTriggerPrice","getOptionPercentage","trailPerChange","firstTimeMoveOption","firstTimeSLMoveOption","slPriceData","lastTriggerprice","perchngfromTriggerPrice","nextTimeMoveOption","nextTimeSLMoveOption","getPercentage","firstTimeMove","firstTimeSLMove","nextTimeMove","nextTimeSLMove","positionInterval","bankNiftyInterval","squireInterval","sqrOffbeginningTime","sqrOffendTime","scanendTime","selectedStockInteval","getSelectedStockFromDb","_loop11","selectedStockwatchList","getAutoScanStock","lastSeachStock","_this5","ChartMultiple_CustomizedDialogs","Refresh_default","step","placeholder","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","totalLongPer","totalLongs","totalLongHighPer","totalShortPer","totalShort","totalShortLowPer","code","chunkCandleData","stockInfo","entryPrice","priceChangeList","index2","datetime","postMessage","lastIndexOf","blob","Blob","worker_script","URL","createObjectURL","Example","myWorker","Worker","m","arr","no","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","refreshSectorCandle","outerEelement","stockIndex","updateWatch","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","LightChartDialog_DialogTitle","LightChartData","selectedSymbol","LightChartDialog_DialogContent","LightChartDialog_DialogActions","onChangeBackDate","getByDateBidHistory","backupData","backupDeleverydata","saveDeliveryData","storeRes","updatebidHistory","storeResData","symbolHist","buyHist","sellHist","lastbuybid","lastsellbid","totalBuyBid","totalSellBid","buybidHistory","sellbidHistory","storeBidData","backupBidata","backupBiddata","dbUpdateTime","saveBidData","quantityTraded","deliveryQuantity","secDate","averagePrice","bidLivedata","priceChangePer","updatedTime","buyPrice1","buyPrice2","buyPrice3","buyPrice4","buyPrice5","buyQuantity1","buyQuantity2","buyQuantity3","buyQuantity4","buyQuantity5","sellPrice1","sellPrice2","sellPrice3","sellPrice4","sellPrice5","sellQuantity1","sellQuantity2","sellQuantity3","sellQuantity4","sellQuantity5","totalTradedVolume","totalTradedValue","buytosellTime","selltobuyTime","highlightbuy","highlightsell","lastUpdateTime","getDeliveryHistory","getDeliveryDataFromDb","delHistory","getBidDataFromDb","bidHistoty","getBackUpDate","getBackUpdateList","backupDateList","convertToFloat","isNaN","sortByColumn","sortedType","totalStockToWatch","BBBlastType","componentDidMount","find10MinBBBlast","stop10bbSearch","stopSearching","onChangeQty","getRSIBBString","BB","createMultpleChart","div","border","appendChild","legendTitle","chartSize","lightChartData","append","sortTheChart","allchart","createNewArray","childNodes","innerText","findlast5minMovement","updateToLocalStorage","updateData","findlast5minMovementUpdate","bbvlastvalue","dataltp","RSIValue","nextProps","nextState","OrderWatchlistDialog_DialogContent","OrderWatchlistDialog_DialogActions","strongChartListInterval","stopChart","findStrongCharts","candleVolBrokenCount","strongPer","strongChartList","shortByVolume","emotions","sortBy","filterByCount","getUpdateIndexData","softedIndexList","sluglist","finally","ok","filterByVolumePrice","filteredList","lastCanPrs","secondCandlePer","filterBy","strongChartListUpdate","candleDistance","lastVol","indexVol","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","fontStyle","OrderWatchlistDialog_CustomizedDialogs","fullScreen","FullModel_DialogTitle","FullModel_DialogContent","StrongCharts","DeliveryData","FullModel_DialogActions","updateTokenSymbol","uppercaseNameEQ","uppercaseNameBE","showCandleChartPopUp","isThere","switchToListView","switchToListViewFlag","get5DaysMoveCount","getDeliveryInfo","getDeliveryData","showDeliveryData","showAllChart","timeVal","slugName","checkSectorApiOther","indexStock","stockElement","ltP","iislPercChange","glist","llist","FullModel_CustomizedDialogs","clickedIndexName","LightChartDialog_CustomizedDialogs","startSearching","lightcandleChartData","getFullYear","getMonth","getDate","sma","upsidecount","downsidecount","startingRsiupside","startingRsiDownside","volumeUpside","updateMsg","percentChangeList","changePer","macdInput","fastPeriod","slowPeriod","signalPeriod","SimpleMAOscillator","SimpleMASignal","macd","MACD","macdLastValue","signal","macdData","patternName","histogram","LightChartModel_DialogTitle","LightChartModel_DialogContent","LightChartModel_DialogActions","checkSlowMotion","scanUpdate","updateTimeFrameChart","lightChartinfo","stockindex","sectorName","isActivated","midBullishCount","bullishCount","activationTime","activationPrice","update","updatetopage","activationToLtpChange","AtoltpChng","showLightChart","deleteAllScan","LightChartModel_CustomizedDialogs","LiveBid","takeAction","actionList","updateTime","lastUpdateAction","tbq","tsq","ap","lowPrice","lo","highPrice","h","openPrice","op","bestbuyquantity","bq","bestbuyprice","bp","bestsellquantity","bs","bestsellprice","sp","shortBy","isSpeek","convertToDecimal","num","handleChange","lightChartSymbol","NIFTY NEXT 50","NIFTY MIDCAP 50","NIFTY HEALTHCARE","NIFTY OIL AND GAS","NIFTY 100","NIFTY CONSR DURBL","heigh","innerWidth","voldata","comparePreviousVolume","highlow","updateHighLow","highupdated","lowupdated","volBreakoutCount","brokenCount","priceVolBreakout","rsi","livePrice","livePChange","readyState","calculateRSI","candles","closePrice","candle","s","cv","lastCandleChange","volumePriceBONames","dayPriceVolBreakout","OriginalHist","stockcandle","lastCandleInfo","now","intradayVol","higerhigh","lowerlow","histElement","dayhighLow","calculateCandleVolume","noSyncVol","t","ch","liveCandleHistory","storeChartData","dtime","analysis","saveCandleHistory","originalList","updateOriginalHist","updateDayChartHighLow","listofHighLow","updatePreviousVolume","deletePrevVolume","storedPrevVol","newData","candleHistoryFlag","findSymbol","copyName","navigator","clipboard","writeText","alert","HIGH BETA STOCK","nameInput","createRef","msToNextRounded5Min","nextExec","getSeconds","screen","test","userAgent","autofocus","onChangePattern","backTestResultDateRange","dateAndTypeKeys","_this$setState5","stopBacktesting","backTestAnyPattern","filename","currentMoment","endMoment","runningTest","patternType","backTestNR4","backTestNR4Trail","NR4ForNextDay","backTestNR4SameDay","backtestStrongCandle","backtestVolumePrice","backtestVolumePriceSell","isSameOrBefore","backTestNR4DatewiseRange","add","next10Candle","backtestTweezerTop","backtestTweezerBottom","next5thCandle","foundStock","nr4CheckPastPerfommance","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","insideIndex","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","buyExitPricePer","buyExitPriceMinRange","start5thdate","set","hour","minute","end5thdate","insideCandleRes","dateWithWlType","datewisetrades","perChngOnLow","exitPrice","slPer","monthMinusOneName","startOf","monthName","entryAt","backtestCandle","currentCandle","volBreakcount","curVol","elementback","chartDate","copydata","_context18","candleElement","candleChangePer","_context20","_context19","longData","shortData","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","exitAt","_callee11","_loop12","_context22","_context21","copyAll","_callee12","_context23","backTestResultCSV","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","totalMarketEnd","totalSlHit","MaterialUIDateTimePicker","dist_default","isSameDayDuplcate","csvFormatInput","startTime","getAlltokenOfList","listofstockfound","allStockWithTime","updateList","totaluniqueStocks","allQniqueStockList","filerdata","getAllListTokens","getDateFormate","givendate","sdate","convertDateFormat","dateinfo","getPerChangeOfStock","entryCandlePoint","maxDrowDown","maxProfit","index3","targetPer","crossedTargetCount","isWinOnClosing","totalWinTrade","backTestAnyPatternStockWise","overAllResult","stockWiseListOverall","pertradePandL","pertradePandLNet","totalgross","totalAvg","totTrade","totalNet","totalExp","stocktoken","sameAllStock","singleDatewiseSamestock","datelist","momentsDates","elementstock","elementsame","entryTimeAt","samestock","foundat","endtime","candleInfo","isSameOrAfter","updateStockWiseOverall","t1","overallMonthWise","nextdate","updateOverall","timelist","overallData","timeelement","sumofall","expence","netOverAll","noOfTrade","pertradePandLgross","overall","stockelement","totalSameTrade","netPnL","winCount","lossCount","updateMonthWise","month","tradeMonth","onFileChange","files","updateStockList","userAgentData","mobile","backupHistoryStatus","downloadStatus","noOfRows","backStatus","hugeVol","requestInfo","backupHistoryData","storyHistoryData","date1","date2","nod","looptime","loopStartDate","outterIndex","loopEndDate","ceil","pop","AppRouter","react_router","path","exact","NiftyView","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","FindFastMovement2","FindFastMovement3","SlowMotion","IndexCharts","MarketDepth","MarketDepthMobile","Backtest","ChartinkBacktest","BackupHistory","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.06d54db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\r\nconst INTIAL_STATE = {\r\n    packs: [],\r\n    pack:[],\r\n    updatedPack:null\r\n  };\r\n export default (state = INTIAL_STATE,action)=>{\r\n    switch (action.type) {\r\n        case actionTypes.SET_PACK_LOADED:\r\n          return { ...state, packs:action.payload };\r\n        case actionTypes.EDIT_PACK_INFO:\r\n          return {...state,updatedPack:action.payload}\r\n          case actionTypes.GET_PACK_INFO_BY_ID:\r\n              return {...state,pack:action.payload}    \r\n     default:\r\n          return state;\r\n      }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport getPackReducer from './packReducer';\r\n\r\nexport default combineReducers({\r\n    packs: getPackReducer,\r\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\r\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\r\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;","class AuthService {\r\n\r\n    getLoggedInUserInfo() {\r\n        localStorage.getItem(\"UserInfo\");\r\n    }\r\n\r\n    getHeader() {\r\n\r\n\r\n        var tokens = localStorage.getItem(\"userTokens\") && JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var jwtToken =   tokens &&  tokens.jwtToken;\r\n\r\n        return { 'headers': {\r\n            'Authorization': 'Bearer ' + jwtToken,\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n\r\n    loginHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n    getImageHeader() {\r\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\r\n    }\r\n\r\n    getScannerHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json',\r\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\r\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \r\n            // 'sec-fetch-mode': 'cors',\r\n            // 'origin': 'localhost',\r\n\r\n            \r\n        } }\r\n    }\r\n\r\n    getNSESessionHeader(sessionId) {\r\n        return { 'headers': {\r\n            'sessionId': sessionId, \r\n            'Accept':'application/json',\r\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\r\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \r\n            // 'sec-fetch-mode': 'cors',\r\n            // 'origin': 'localhost',\r\n\r\n            \r\n        } }\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();","//my app api\r\nexport const API_KEY  = 'I4O6PJAn'; \r\nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\r\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\r\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\r\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\r\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \r\nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \r\nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \r\nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \r\nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \r\nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \r\n\r\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \r\nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \r\nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\r\n\t\r\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\r\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\r\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\r\nexport const getChartInkURL =  'https://hookbin.com/bin/NOjrL66WJ3Fe8mNN8bo8';\r\n\r\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\r\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\r\n\r\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\r\nexport const getIndiceStockNodeServerApi =  'http://localhost:8081/get_chartink_stock';\t\r\n\r\n","import axios from 'axios';\r\nimport AuthService from \"./AuthService\";\r\nimport  * as apiConstant from \"../../utils/config\";\r\n\r\nclass AdminService {\r\n\r\n    login(credentials) {\r\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\r\n    } \r\n\r\n    logout(credentials) {\r\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\r\n     } \r\n\r\n    getUserData(formData){\r\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\r\n    }\r\n\r\n    getFunds(formData){\r\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\r\n    }\r\n\r\n    retrieveOrderBook(formData){\r\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\r\n    }\r\n    retrieveTradeBook(formData){\r\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\r\n    }\r\n    \r\n    retrieveallTradableInstruments(formData){\r\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\r\n    }\r\n\r\n    placeOrder(credentials) {\r\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    modifyOrder(credentials) {\r\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    cancelOrder(credentials) {\r\n\r\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getLTP(credentials) {\r\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getHistoryData(credentials) {\r\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    scanStocks(credentials) {\r\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\r\n     } \r\n\r\n     autoCompleteSearch(query) {\r\n        return axios.get('http://localhost:8081/search/'+query, '');\r\n     } \r\n\r\n     stockOptionSearch(query) {\r\n      return axios.post('http://localhost:8081/stockOptionSearch/',query, '');\r\n      } \r\n\r\n      getStockOptions(data) {\r\n         return axios.post('http://localhost:8081/getStockOptions',data, '');\r\n      } \r\n\r\n   \r\n     getAllListTokens(data) {\r\n      return axios.post('http://localhost:8081/getAllListTokens', data, '');\r\n      } \r\n     saveWatchList(data) {\r\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\r\n     } \r\n     addIntoStaticData(data) {\r\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\r\n     }\r\n     saveWatchListJSON(data) {\r\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\r\n     }\r\n     getWatchListJSON() {\r\n        return axios.get('/myJsonWatchList.json', '');\r\n     } \r\n     updateStockList() {\r\n      if(window.location.hostname == \"vijaykumarsaurav.github.io\")\r\n      return axios.get('/mtrade/stockList.json', '');\r\n      else\r\n      return axios.get('/stockList.json', '');\r\n     } \r\n     getStaticData() {\r\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\r\n        return axios.get('/mtrade/staticData.json', '');\r\n        else\r\n        return axios.get('/staticData.json', '');\r\n     } \r\n     saveCandleHistory(data) {\r\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\r\n     } \r\n\r\n     backupHistoryData(data) {\r\n      return axios.post('http://localhost:8081/backupHistoryData', data,  '');\r\n   } \r\n\r\n\r\n   saveDeliveryData(data) {\r\n      return axios.post('http://localhost:8081/store_delivery_data', data,  '');\r\n   } \r\n\r\n   saveBidData(data) {\r\n      return axios.post('http://localhost:8081/store_bid_data', data,  '');\r\n   } \r\n\r\n   getDeliveryDataFromDb(symbol) {\r\n      return axios.get('http://localhost:8081/get_delivery_data?symbol='+symbol, '');\r\n   } \r\n   getBidDataFromDb(backDate,allSymbol,count) {\r\n      return axios.get('http://localhost:8081/get_bid_data?backDate='+backDate +\"&allSymbol=\"+allSymbol+\"&count=\"+count, '');\r\n   } \r\n\r\n   getBackUpdateList() {\r\n      return axios.get('http://localhost:8081/get_backup_date_list', '');\r\n   } \r\n\r\n   getPosition(data){\r\n      return axios.get(apiConstant.getPosition, AuthService.getHeader());\r\n   }\r\n\r\n   getAutoScanStock(){\r\n      return axios.get(apiConstant.getScannedStocks, '');\r\n   }\r\n\r\n   getNSETopStock(){\r\n      return axios.get(apiConstant.getNseTopStocks, '');\r\n   }\r\n   getChartInkStock(){\r\n      return axios.get(apiConstant.getIndiceStockNodeServerApi, '');\r\n   }\r\n\r\n   getSelectedStockFromDb(){\r\n      return axios.get(apiConstant.getSelectedStock, '');\r\n   }\r\n\r\n    //  getBNcpdata(){\r\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\r\n    //  }\r\n\r\n    getIndiceStock(index){\r\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\r\n    }\r\n\r\n    checkOtherApi(index){\r\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\r\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\r\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\r\n    }\r\n\r\n    checkSectorApiOther(index){\r\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\r\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\r\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\r\n      }\r\n\r\n    \r\n\r\n    getAllIndices(){\r\n        return axios.get(apiConstant.allIndices);\r\n    }\r\n\r\n    allIndicesDirectJSON(){\r\n        return axios.get('http://localhost:8081/nse/get_indices', '');\r\n      // return axios.get(apiConstant.allIndices2Json);\r\n     }\r\n\r\n     getBNcpdata(symbol){\r\n         if(symbol == 'NIFTY' || symbol == 'BANKNIFTY'){\r\n            return axios.get('http://localhost:8081/nse/getOptionChain?symbol='+symbol, '');\r\n         }else{\r\n            return axios.get('http://localhost:8081/nse/getOptionChainEquity?symbol='+symbol, '');\r\n         }\r\n        \r\n     }\r\n\r\n\r\n     getDeliveryData(symbol){\r\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\r\n     }\r\n\r\n     checkLiveBids(symbol){\r\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\r\n     }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default new AdminService();\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport MyLogo from './mylogo.png';\r\n\r\nconst LoginNavBar = (props) => {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\r\n\r\n                    {/* <div style={{width:\"300px\"}}>\r\n                        <Typography variant=\"h6\" style={style}>\r\n                             &nbsp;&nbsp;  M-Trade\r\n                        </Typography>\r\n                    </div>               */}\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default LoginNavBar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Bharti Airtel Ltd\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleOnChange = e => {\r\n    props.loginProps.onChange(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <LoginNavBar/> */}\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PersonIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"User Id\"\r\n            name=\"userName\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.userName}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.password}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={props.loginProps.login}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n         \r\n          \r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// method calling\r\n\r\n// import React from \"react\";\r\n// import \"./styles.css\";\r\n\r\n// class Child extends React.Component {\r\n//   render() {\r\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\r\n//   }\r\n// }\r\n\r\n// class Parent extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       username : \"vijay\"\r\n//     }\r\n//     this.handler = this.handler.bind(this)\r\n//   }\r\n\r\n//   handler(e) {\r\n//     console.log(e.target.name ); \r\n//     this.setState({\r\n//       [e.target.name]: e.target.value \r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     return <>\r\n//     Hello:  {this.state.username} \r\n//      <Child handler = {this.handler} />\r\n     \r\n//      </>\r\n//   }\r\n// }\r\n\r\n// export default Parent;\r\n","import { toast } from 'react-toastify';\r\n\r\nclass Notify {\r\n\r\n    showError(msg) {\r\n        toast.error(msg, this.options());\r\n    }\r\n\r\n    showSuccess(msg) {\r\n        toast.success(msg , this.options());\r\n    }\r\n\r\n    showWarning(msg) {\r\n        toast.warn(msg , this.options());\r\n    }\r\n\r\n    options() {\r\n        return {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          //  position: \"buttom-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: false\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Notify();","import Notify from \"./Notify\";\r\n\r\nexport function resolveResponse(response, msg) {\r\n   //console.log('response',response);\r\n    let data = {};\r\n        if (response.status === 200) {\r\n            data = response.data;\r\n            if(data.status) {\r\n                if(data.message){\r\n\r\n                    if(msg !== 'noPop')\r\n                    Notify.showSuccess(data.message);\r\n                }\r\n                return data;\r\n            }else{\r\n               \r\n                Notify.showError(data.message);\r\n                if(data.message === \"Invalid Token\"){\r\n                    window.location.replace(\"#/login\");\r\n                    localStorage.setItem('userTokens', '');\r\n                    localStorage.setItem('userProfile', '');\r\n                }\r\n                return Promise.reject(data.message);\r\n            }\r\n        }\r\n        else if(response && !response.status){\r\n            Notify.showError(data.message);\r\n        }   \r\n}","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport LoginNavBar from \"../LoginNavbar\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LoginNewUI from './LoginNewUI';\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass LoginComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"V193588\",\r\n            password: \"\", \r\n            isDasable:false,\r\n            isError:false,\r\n            \r\n        };\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <LoginNavBar/>\r\n                \r\n                {/* <Container maxWidth=\"sm\">\r\n                     <br/><br/><br/> \r\n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\r\n                    <form style={styles.formStyle}>\r\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\r\n\r\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                        <Grid item  xs={12} sm={8}>\r\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\r\n                        </Grid>\r\n                        <Grid item  xs={12} sm={10}>\r\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                        </Grid>\r\n                    </form>\r\n                </Container> */}\r\n\r\n                {/* New Login UI */}\r\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\r\n                \r\n                <Grid container justify=\"space-around\">\r\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\r\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \r\n      if(userTokens){\r\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \r\n        this.props.history.push('home');\r\n      }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    login = (e) => {\r\n        \r\n        this.setState({ isError: \"\" });\r\n\r\n\r\n        e.preventDefault();\r\n\r\n        if(!this.state.userName && !this.state.password){\r\n            this.setState({ isError: \"Olms Id and Password are required.\" });\r\n            return;\r\n        }\r\n\r\n        if(!this.state.userName){\r\n            this.setState({ isError: \"Olms Id is required.\" });\r\n            return;\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({ isError: \"Password is required.\" });\r\n            return;\r\n        }\r\n         \r\n        this.setState({ isDasable: true });\r\n\r\n \r\n\r\n        const loginPayload = {\r\n            clientcode:  this.state.userName,\r\n            password: this.state.password \r\n\r\n        };\r\n        AdminService.login(loginPayload)\r\n            .then(loginRes => {\r\n              //  Notify.showError(\"Olms Id and password is required.\");\r\n            //  alert(JSON.stringify(res));\r\n         //   console.log(\"res\",loginRes); \r\n\r\n              var data = resolveResponse(loginRes);\r\n              loginRes  = loginRes && loginRes.data; \r\n            //  console.log(\"resdata\",loginRes); \r\n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\r\n                this.setState({ isError: loginRes.message });\r\n              }\r\n              \r\n               // data = res.data; \r\n                this.setState({ isDasable: false });\r\n\r\n                if(loginRes.data){\r\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\r\n                  \r\n\r\n                    AdminService.getUserData().then(profileRes => {\r\n                       // console.log('profiledata', profileRes); \r\n                          let data = resolveResponse(profileRes);\r\n                          profileRes =  profileRes && profileRes.data; \r\n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\r\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\r\n                        //    this.props.history.push('/position');\r\n\r\n                            AdminService.getStaticData().then(res => {\r\n                                var data = res.data;\r\n                                //data = JSON.parse(data);   \r\n                                localStorage.setItem('staticData', JSON.stringify(data));\r\n\r\n                                var totalWatchlist = Object.keys(data);\r\n                                this.setState({ totalWatchlist: totalWatchlist });\r\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\r\n\r\n                                this.setState({ staticData: data });\r\n                    \r\n                                var watchlist = [];\r\n                                totalWatchlist.forEach(element => {\r\n                    \r\n                                    var mylist = data[element];\r\n                                    mylist.forEach(element2 => {\r\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\r\n                                        if (!foundInWatchlist.length) {\r\n                                            watchlist.push(element2);\r\n                                        }\r\n                                    });\r\n                                });\r\n                    \r\n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n                                window.location.replace('#/strong-charts')\r\n\r\n                            });\r\n\r\n                            \r\n                            \r\n                          }\r\n                      })\r\n\r\n                  \r\n\r\n                }\r\n            });\r\n          \r\n            // setTimeout(() => {\r\n            //     this.setState({ isError: \"\" });\r\n            // }, 3000);\r\n\r\n\r\n           \r\n    }\r\n\r\n}\r\n\r\nconst styles ={\r\n    formStyle :{\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    errorMessage:{\r\n        color:\"red\",\r\n        marginTop: '11px'\r\n    },\r\n    waitMessage:{\r\n        color:\"gray\",\r\n        marginTop: '11px'\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { Link } from \"react-router-dom\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AdminService from \"./service/AdminService\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n//import RouterComponent from '../RouterComponent'; \r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\nexport const AdminMenuList = (\r\n\r\n  <div>\r\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\r\n   \r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/home\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Home\" />\r\n    </ListItem>\r\n    \r\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Positions\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Heat Map2\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/strong-charts\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Strong Charts\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/delivery\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Delivery\" />\r\n    </ListItem>\r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/slow-motion\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Slow Motion\" />\r\n    </ListItem>\r\n\r\n\r\n   \r\n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Fast Movement\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/index-charts\"} >  \r\n      <ListItemIcon>\r\n        <EqualizerIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Index Charts\" />\r\n    </ListItem>\r\n    \r\n\r\n\r\n  \r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Order Watchlist\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Funds\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Order Book\" />\r\n    </ListItem>\r\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Trade Book\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Heat Map\" />\r\n    </ListItem>\r\n  \r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/market-depth\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Depth Live\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/market-depth-mobile\"} >  \r\n      <ListItemIcon>\r\n        <ShowChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Depth Live Mobile\" />\r\n    </ListItem>\r\n    \r\n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"NiftyBank View\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Nifty View\" />\r\n    </ListItem>\r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Sector Top\" />\r\n    </ListItem> */}\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/backtest\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Backtest\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/chartink-backtest\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Chartink Backtest\"/>\r\n    </ListItem>    \r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/backup-history\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Backup History\" />\r\n    </ListItem>\r\n  \r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\r\n    </ListItem>\r\n  \r\n\r\n\r\n  </div>\r\n);\r\n\r\nfunction deleteAllCookies() {\r\n  var cookies = document.cookie.split(\";\");\r\n  for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i];\r\n      var eqPos = cookie.indexOf(\"=\");\r\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n  }\r\n}\r\n\r\nfunction logoutPortal(){\r\n  //console.log(\"yo_man\")\r\n\r\n  if(window.confirm(\"Are you sure to logout?\")){\r\n\r\n  var userProfile = localStorage.getItem(\"userProfile\")\r\n  userProfile = userProfile && JSON.parse(userProfile);\r\n\r\n  var data = {\r\n    clientcode : userProfile && userProfile.clientcode\r\n    }\r\n\r\n    AdminService.logout(data)\r\n    .then(res => {\r\n    \r\n    localStorage.clear();\r\n    //localStorage.setItem('userTokens', '');\r\n    //localStorage.setItem('userProfile', '');\r\n    deleteAllCookies();\r\n    \r\n    window.location.replace(\"#/login\");\r\n    return;\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nvar userProfile = localStorage.getItem(\"userProfile\")\r\nuserProfile = userProfile && JSON.parse(userProfile);\r\n\r\nexport const LogoutMenu = (\r\n  \r\n  <div>\r\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\r\n      <ListItem button>\r\n          <ListItemIcon title=\"Logout\">\r\n            <PowerSettingsNewIcon />\r\n          </ListItemIcon><ListItemText primary={<span title={userProfile && userProfile.clientcode ? userProfile.clientcode : ''}> {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''} </span> } />\r\n      </ListItem>\r\n    </Link>\r\n\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  //const [anchorEl, setAnchorEl] = React.useState(null);\r\n  //const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    localStorage.setItem('invertColorFlag', event.target.checked);\r\n    setAuth(event.target.checked);\r\n   \r\n  };\r\n\r\n  // const handleMenu = (event) => {\r\n\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Black & White'  : 'Colorfull'}\r\n        />\r\n      </FormGroup>\r\n     \r\n      {/* <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n//import \"./styles.css\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n\r\n  var candleChartData =  props.candleChartData; \r\n  var vwapDataChart =  props.vwapDataChart; \r\n\r\n  var closeData = [], timeDate = []; \r\n\r\n  if(candleChartData){\r\n    for (let index = 0; index < candleChartData.length; index++) {\r\n      if(candleChartData[index]){\r\n        closeData.push(candleChartData[index][4]); \r\n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \r\n      }\r\n    \r\n    }\r\n  }\r\n\r\n\r\n  const chartData = {\r\n    \r\n    labels: timeDate,\r\n    datasets: [\r\n      {\r\n        label: \"Close\",\r\n        data: closeData,\r\n        fill: true,\r\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\r\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        //borderColor: \"\"\r\n      },\r\n      {\r\n        label: \"Vwap\",\r\n        data: vwapDataChart,\r\n        fill: true,\r\n      //  backgroundColor:  \"blue\",\r\n        borderColor: \"blue\",\r\n      },\r\n      // {\r\n      //   label: \"Diff\",\r\n      //   data: diffData,\r\n      //   fill: true,\r\n      //   onoffline : true,\r\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n      //   borderColor: \"blue\",\r\n        \r\n      // }\r\n     \r\n    ]\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Line data={chartData} options={options} />\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function LightChartCom(props) {\r\n\tconst [open, setOpen] = React.useState(false);\r\n\t// var fileref=document.createElement('script')\r\n\t// fileref.setAttribute(\"type\",\"text/javascript\")\r\n\t// fileref.setAttribute(\"src\", 'https://unpkg.com/lightweight-charts@3.4.0/dist/lightweight-charts.standalone.production.js')\r\n\t// document.getElementsByTagName(\"head\")[0].appendChild(fileref)\r\n\r\n\tsetTimeout(() => {\r\n\r\n\t\tvar chart = window.LightweightCharts.createChart(document.getElementById('chart'), {\r\n\t\t\twidth: 600,\r\n\t\t\theight: 300,\r\n\t\t\trightPriceScale: {\r\n\t\t\t\tscaleMargins: {\r\n\t\t\t\t\ttop: 0.3,\r\n\t\t\t\t\tbottom: 0.25,\r\n\t\t\t\t},\r\n\t\t\t\tborderVisible: false,\r\n\t\t\t},\r\n\t\t\tlayout: {\r\n\t\t\t\tbackgroundColor: 'white',   // '#131722',\r\n\t\t\t\ttextColor: '#d1d4dc',\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tvertLines: {\r\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0)',\r\n\t\t\t\t},\r\n\t\t\t\thorzLines: {\r\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// var areaSeries = chart.addAreaSeries({\r\n\t\t// \ttopColor: 'rgba(38,198,218, 0.56)',\r\n\t\t// \tbottomColor: 'rgba(38,198,218, 0.04)',\r\n\t\t// \tlineColor: 'rgba(38,198,218, 1)',\r\n\t\t// \tlineWidth: 2,\r\n\t\t// });\r\n\t\t// areaSeries.setData(props.ChartData.areaSeries);\r\n\r\n\r\n\t\tvar candleSeries = chart.addCandlestickSeries({\r\n\t\t\tupColor: 'green',\r\n\t\t\tdownColor: 'red',\r\n\t\t\tborderDownColor: 'red',\r\n\t\t\tborderUpColor: 'green',\r\n\t\t\twickDownColor: 'red',\r\n\t\t\twickUpColor: 'green',\r\n\t\t});\r\n\r\n\t\t//candleSeries.setData(data);\r\n\t\tvar data = props.chartData && props.chartData.candleSeries;\r\n\t\tcandleSeries.setData(data);\r\n\r\n\r\n\r\n\t\tvar volumeSeries = chart.addHistogramSeries({\r\n\t\t\tcolor: '#26a69a',\r\n\t\t\tpriceFormat: {\r\n\t\t\t\ttype: 'volume',\r\n\t\t\t},\r\n\t\t\tpriceScaleId: '',\r\n\t\t\tscaleMargins: {\r\n\t\t\t\ttop: 0.8,\r\n\t\t\t\tbottom: 0,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//volumeSeries.setData(props.ChartData && props.ChartData.volumeData);\r\n\t\tvolumeSeries.setData(props.chartData && props.chartData.volumeSeries);\r\n\r\n\r\n\t\tchart.subscribeCrosshairMove((param) => {\r\n\r\n\t\t\tvar getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n\t\t\tvar string = \"\";\r\n\t\t\tvar change = \"\";\r\n\r\n\t\t\tfor (var elem of getit) {\r\n\r\n\t\t\t\tconsole.log(elem);\r\n\r\n\t\t\t\tif (typeof elem[1] == 'object') {\r\n\t\t\t\t\tstring += \" O: <b>\" + elem[1].open + \"</b>\";\r\n\t\t\t\t\tstring += \" H: <b>\" + elem[1].high + \"</b>\";\r\n\t\t\t\t\tstring += \" L: <b>\" + elem[1].low + \"</b>\";\r\n\t\t\t\t\tstring += \" C: <b>\" + elem[1].close + \"</b>\";\r\n\t\t\t\t\tchange = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n\t\t\t\t\tstring += \" CH: <b>\" + change.toFixed(2) + '%</b>';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstring += \"&nbsp;\" + elem[1].toFixed(2) + \" \";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (param.time)\r\n\t\t\t\tstring += \" T: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\r\n\r\n\r\n\r\n\t\t\tconst domElement = document.getElementById('showChartTitle');\r\n\r\n\r\n\t\t\tvar str = \"<span style=color:green>\" + string + \"</span> \";\r\n\t\t\tif (change < 0)\r\n\t\t\t\tstr = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n\t\t\tdomElement.innerHTML = str;\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t// var datesForMarkers = [data[data.length - 19], data[data.length - 39]];\r\n\t\t// var indexOfMinPrice = 0;\r\n\t\t// for (var i = 1; i < datesForMarkers.length; i++) {\r\n\t\t// \tif (datesForMarkers[i].high < datesForMarkers[indexOfMinPrice].high) {\r\n\t\t// \t\tindexOfMinPrice = i;\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// var markers = [];\r\n\t\t// for (var i = 0; i < datesForMarkers.length; i++) {\r\n\t\t// \tif (i !== indexOfMinPrice) {\r\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'aboveBar', color: '#e91e63', shape: 'arrowDown', text: 'Sell @ ' + Math.floor(datesForMarkers[i].high + 2) });\r\n\t\t// \t} else {\r\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'belowBar', color: '#2196F3', shape: 'arrowUp', text: 'Buy @ ' + Math.floor(datesForMarkers[i].low - 2) });\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// markers.push({ time: data[data.length - 48].time, position: 'aboveBar', color: '#f68410', shape: 'circle', text: 'D' });\r\n\t\t// candleSeries.setMarkers(markers);\r\n\r\n\r\n\t\tvar smaData = calculateSMA(data, 20);\r\n\t\tvar smaLine = chart.addLineSeries({\r\n\t\t\tcolor: 'rgba(4, 111, 232, 1)',\r\n\t\t\tlineWidth: 2,\r\n\t\t});\r\n\t\tsmaLine.setData(smaData);\r\n\r\n\r\n\t\tfunction calculateSMA(data, count) {\r\n\t\t\tvar avg = function (data) {\r\n\t\t\t\tvar sum = 0;\r\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\t\t\tsum += data[i].close;\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / data.length;\r\n\t\t\t};\r\n\t\t\tvar result = [];\r\n\t\t\tfor (var i = count - 1, len = data.length; i < len; i++) {\r\n\t\t\t\tvar val = avg(data.slice(i - count + 1, i));\r\n\t\t\t\tresult.push({ time: data[i].time, value: val });\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\t// var minimumPrice = data[0].value;\r\n\t\t// var maximumPrice = minimumPrice;\r\n\t\t// for(var i = 1; i < data.length; i++) {\r\n\t\t//   var price = data[i].value;\r\n\t\t//   if (price > maximumPrice) {\r\n\t\t//     maximumPrice = price;\r\n\t\t//   }\r\n\t\t//   if (price < minimumPrice) {\r\n\t\t//     minimumPrice = price;\r\n\t\t//   }\r\n\t\t// }\r\n\t\t// var avgPrice = (maximumPrice + minimumPrice) / 2;\r\n\r\n\t\t// var lineWidth = 2;\r\n\t\t// var minPriceLine = {\r\n\t\t//   price: minimumPrice,\r\n\t\t//   color: '#be1238',\r\n\t\t//   lineWidth: lineWidth,\r\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\r\n\t\t//   axisLabelVisible: true,\r\n\t\t//   title: 'min price',\r\n\t\t// };\r\n\t\t// var avgPriceLine = {\r\n\t\t//   price: avgPrice,\r\n\t\t//   color: '#be1238',\r\n\t\t//   lineWidth: lineWidth,\r\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\r\n\t\t//   axisLabelVisible: true,\r\n\t\t//   title: 'avg price',\r\n\t\t// };\r\n\t\t// var maxPriceLine = {\r\n\t\t//   price: maximumPrice,\r\n\t\t//   color: '#be1238',\r\n\t\t//   lineWidth: lineWidth,\r\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\r\n\t\t//   axisLabelVisible: true,\r\n\t\t//   title: 'max price',\r\n\t\t// }\r\n\r\n\t\t//candleSeries.createPriceLine(minPriceLine);\r\n\t\t//candleSeries.createPriceLine(avgPriceLine);\r\n\t\t//candleSeries.createPriceLine(maxPriceLine);\r\n\t\t//chart.timeScale().fitContent();\r\n\r\n\r\n\r\n\t}, 100);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n\t\t\t\t<Grid item xs={12} sm={12} >\r\n\r\n\t\t\t\t\r\n\t\t\t\t <div id=\"showChartTitle\" style={{ fontSize: \"12px\" }}> </div>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12} sm={12} >\r\n\t\t\t\t<div id=\"chart\">\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t\r\n\r\n\t\t</>\r\n\r\n\t);\r\n}","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\n\r\nimport LineChart from \"./LineChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {}\r\n})\r\n\r\n\r\n \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\r\n        Chart \r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\r\n        <br />\r\n\r\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \r\n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\r\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\r\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\r\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\r\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\r\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\r\n        </span> : \"\"}\r\n        \r\n      \r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"chart\">\r\n\r\n        {/* body data\r\n        <ReactApexChart\r\n              options={props.data && props.data.options}\r\n              series={props.data && props.data.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            /> */}\r\n\r\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \r\n            options={{\r\n                      chart: {\r\n                        type: 'candlestick',\r\n                        height: 350\r\n                      },\r\n                      title: {\r\n                          text: '',\r\n                          align: 'left'\r\n                      },\r\n                      xaxis: {\r\n                          type: 'datetime',\r\n                      },\r\n                      yaxis: {\r\n                          tooltip: {\r\n                          enabled: true\r\n                          }\r\n                      }\r\n                  }}\r\n                  series={[{\r\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\r\n                      \r\n                  }]} \r\n                  type=\"candlestick\" \r\n                  width={500}\r\n                  height={350} \r\n          /> : \"\"}\r\n\r\n\r\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \r\n              options={{\r\n                        chart: {\r\n                          type: 'candlestick',\r\n                          height: 350\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        xaxis: {\r\n                            type: 'datetime',\r\n                        },\r\n                        yaxis: {\r\n                            tooltip: {\r\n                            enabled: true\r\n                            }\r\n                        }\r\n                    }}\r\n                    series={[{\r\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\r\n                        \r\n                    }]} \r\n            type=\"candlestick\" \r\n            width={500}\r\n            height={350} \r\n          />: \"\"}\r\n          \r\n          {/* below line chart \r\n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\r\n           */}\r\n        \r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ChartDialog from './ChartDialog'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n  \r\n  const showCandleChart = (candleData, symbol) => {\r\n    candleData  = candleData && candleData.reverse();\r\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n    localStorage.setItem('cadleChartSymbol', symbol)\r\n    document.getElementById('showCandleChart').click();\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Patterns {foundPatternList && foundPatternList.length}\r\n      </Button>\r\n      <ChartDialog />\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        Found Patterns\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\r\n        <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Time</b></TableCell> \r\n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\r\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\r\n\r\n                </TableRow>\r\n                <TableBody>\r\n                    \r\n                        {foundPatternList ? foundPatternList.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n\r\n                                    <TableCell align=\"left\">{index} </TableCell>\r\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\r\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \r\n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \r\n                                    \r\n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\r\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\r\n                                   \r\n                            </TableRow>\r\n\r\n                        )):  \"\"  }\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>    \r\n\r\n\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { resolveResponse } from \"./ResponseHandler\";\r\nimport AdminService from \"../components/service/AdminService\";\r\nimport TradeConfig from '../components/MyTrade/TradeConfig';\r\nimport * as moment from 'moment';\r\nimport Notify from './Notify';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\n\r\n\r\nclass CommonOrderMethod {\r\n\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice = minPrice.toFixed(2);\r\n        // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt(minPrice.split('.')[0]);\r\n        //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal = parseFloat(minPrice.split('.')[1]);\r\n        // console.log(\"decimal\",decimal); \r\n        var tickedecimal = decimal - decimal % 5;\r\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\r\n        //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice;\r\n    }\r\n\r\n\r\n    placeSLMOrder = (slmOption) => {\r\n\r\n        var data = {\r\n            \"triggerprice\": slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\r\n            \"exchange\": 'NSE',\r\n            \"producttype\": slmOption.producttype,//\"DELIVERY\" ,\"INTRADAY\" ,\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n              //  this.setState({ orderid: data.data && data.data.orderid });\r\n                // this.updateOrderList(); \r\n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\r\n              //  this.getTodayOrder();\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // getStockTokenDetails = (SYMBOL) => {\r\n    //     AdminService.autoCompleteSearch(SYMBOL).then(searchRes => {   \r\n    //         let searchResdata =  searchRes.data; \r\n    //         if(SYMBOL){\r\n    //             var uppercaseName =  SYMBOL.toUpperCase() + \"-EQ\"; \r\n    //             var found = searchResdata.filter(row => row.name  === SYMBOL && row.symbol === uppercaseName);      \r\n    //             console.log(\"found\", found); \r\n    //             if(found.length){ \r\n    //                return found[0]; \r\n    //             }\r\n    //         }\r\n    //      })\r\n    // }\r\n\r\n    updateOrderList = () => {\r\n        AdminService.retrieveOrderBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data && data.data) {\r\n                    var orderlist = data.data;\r\n                    orderlist.sort(function (a, b) {\r\n                        return new Date(b.updatetime) - new Date(a.updatetime);\r\n                    });\r\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\r\n                }\r\n            });\r\n    }\r\n    \r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\r\n\r\n        var token = sectorItem.token;\r\n        var symbol = sectorItem.symbol;\r\n\r\n        // if (isAutomatic != \"Automatic\") {\r\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\r\n        AdminService.getLTP(ltpdata).then(res => {\r\n            let ltpres = resolveResponse(res, 'noPop');\r\n            var LtpData = ltpres && ltpres.data;\r\n            console.log(symbol, \" ltd data \", LtpData);\r\n            let quantity = 0;\r\n            if (LtpData && LtpData.ltp) {\r\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\r\n            }\r\n\r\n           if(quantity > 0 && sectorItem.qtyToTake ) {\r\n                quantity = sectorItem.qtyToTake;\r\n           }           \r\n           console.log(symbol, \"  quantity can be order \", sectorItem, quantity);\r\n\r\n            if (quantity) {\r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                console.log(\"beginningTime\", beginningTime);\r\n\r\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\r\n                var startdate = moment(new Date()).subtract(time);\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": token,\r\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n                    \"fromdate\": moment(startdate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    // console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\r\n                    \r\n                        candleData.reverse();\r\n                        lowestLow = candleData[0][3];\r\n                        highestHigh = candleData[0][2];\r\n                        if (candleData && candleData.length > 0) {\r\n\r\n\r\n                            for (let index = 0; index < 20; index++) {\r\n                                if (candleData[index]) {\r\n                                    clossest += candleData[index][4]; //close  \r\n                                    lowerest += candleData[index][3];  //low\r\n                                    highestsum += candleData[index][2];  //low\r\n                                    if (candleData[index][2] > highestHigh) {\r\n                                        console.log(index, highestHigh, candleData[index][2]);\r\n                                        highestHigh = candleData[index][2];\r\n                                    }\r\n                                    if (candleData[index][3] <= lowestLow) {\r\n                                        lowestLow = candleData[index][3];\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\r\n                            histdata.data.forEach((element, index) => {\r\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                                closeingData.push(element[4]);\r\n                                highData.push(element[2]);\r\n                                lowData.push(element[3]);\r\n                                openData.push(element[3]);\r\n                                valumeData.push(element[5]);\r\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                            });\r\n\r\n                            var inputRSI = { values: closeingData, period: 14 };\r\n                            var lastRsiValue = RSI.calculate(inputRSI)\r\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\r\n        \r\n                            var inputVWAP = {\r\n                                open: openData,\r\n                                high: highData,\r\n                                low: lowData,\r\n                                close: closeingData,\r\n                                volume: valumeData\r\n                            };\r\n        \r\n                            var input = {\r\n                            period : 20, \r\n                            values : bbdata,\r\n                            stdDev : 2\r\n                            }\r\n        \r\n                            var bb = BollingerBands.calculate(input); \r\n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\r\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\r\n\r\n                            var bbLastValue = bb[bb.length-1]; \r\n\r\n                            \r\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\r\n                            var bbmiddleValue = clossest / devideLen;\r\n                            var bblowerValue = lowerest / devideLen;\r\n                            var bbhigerValue = highestsum / devideLen;\r\n\r\n                            var stoploss = 0, stoplossPer = 0;\r\n\r\n                            if (orderType == \"BUY\" && lastRsiValue[lastRsiValue.length - 1] > 60) {\r\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\r\n                                stoploss = this.getMinPriceAllowTick(stoploss);\r\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\r\n                                \r\n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\r\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\r\n                       \r\n\r\n                                // //bb stop loss\r\n                                // if(bbLastValue){\r\n                                //     stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\r\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\r\n                                //     stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\r\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\r\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\r\n                                // }\r\n                               \r\n                    \r\n                            }\r\n\r\n                            if (orderType == \"SELL\"  && lastRsiValue[lastRsiValue.length - 1] < 40) {\r\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\r\n                                stoploss = this.getMinPriceAllowTick(stoploss);\r\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\r\n\r\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\r\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\r\n                          \r\n                                // //bb stop loss\r\n                                // if(bbLastValue){\r\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\r\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\r\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\r\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\r\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\r\n                                // }\r\n                               \r\n                            }\r\n\r\n\r\n                            var orderOption = {\r\n                                transactiontype: orderType,\r\n                                tradingsymbol: symbol,\r\n                                symboltoken: token,\r\n                                buyPrice: 0,\r\n                                quantity: quantity,\r\n                                stopLossPrice: stoploss,\r\n                                producttype: sectorItem.producttype\r\n                            }\r\n                            if (quantity) {\r\n\r\n                                this.placeOrderMethod(orderOption, callback);\r\n\r\n                            } else {\r\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\r\n                                console.log(symbol + \" its not fullfilled\");\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        Notify.showError(symbol + \" candle data emply\");\r\n                        console.log(symbol + \" candle data emply\");\r\n                        var callData = {\r\n                            \"transactiontype\": orderType,//BUY OR SELL\r\n                            \"tradingsymbol\": symbol,\r\n                            \"symboltoken\": token,\r\n                            \"status\": false\r\n                        }\r\n                        callback(callData);\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\r\n            }\r\n        }).catch(function (error) {\r\n\r\n        })\r\n        // await new Promise(r => setTimeout(r, 2000)); \r\n    }\r\n\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice = minPrice.toFixed(2);\r\n        // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt(minPrice.split('.')[0]);\r\n        //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal = parseFloat(minPrice.split('.')[1]);\r\n        // console.log(\"decimal\",decimal); \r\n        var tickedecimal = decimal - decimal % 5;\r\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\r\n        //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice;\r\n    }\r\n    \r\n\r\n    placeOptionOrder = (orderOption) => {\r\n        var data = {\r\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\": orderOption.symboltoken,\r\n            \"quantity\": orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": orderOption.producttype ? orderOption.producttype : \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"exchange\": orderOption.exchange ? orderOption.exchange : \"NSE\",\r\n            \"variety\": \"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                if (orderOption.stopLossPrice) {\r\n                    setTimeout(() => {\r\n                        this.placeOptionSLMOrder(orderOption);\r\n                    }, 4000);\r\n                }\r\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\r\n             \r\n                var callData = {\r\n                    \"token\": orderOption.symboltoken,\r\n                    \"status\": true\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    placeOptionSLMOrder = (slmOption) => {\r\n\r\n        var data = {\r\n            \"triggerprice\": slmOption.stopLossTriggerPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.netqty,\r\n            \"transactiontype\": \"SELL\", \r\n            \"exchange\": slmOption.exchange,\r\n            \"producttype\": slmOption.producttype, \r\n            \"duration\": \"DAY\",\r\n            \"price\": slmOption.stopLossPrice,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n             //   this.setState({ orderid: data.data && data.data.orderid });\r\n                // this.updateOrderList(); \r\n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\r\n            //    this.getTodayOrder();\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n                this.updateOrderList(); \r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    placeOrderMethod = (orderOption, callback) => {\r\n        var data = {\r\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\": orderOption.symboltoken,\r\n            \"quantity\": orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": orderOption.producttype ,//\"DELIVERY\" \"INTRADAY\",\r\n            \"duration\": \"DAY\",\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"exchange\": \"NSE\",\r\n            \"variety\": \"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n\r\n       \r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                if (orderOption.stopLossPrice) {\r\n                    this.placeSLMOrder(orderOption);\r\n                }\r\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\r\n             \r\n                var callData = {\r\n                    \"token\": orderOption.symboltoken,\r\n                    \"status\": true\r\n                }\r\n                callback(callData);\r\n                return;  \r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    placeSLMOrder = (slmOption) => {\r\n\r\n        var data = {\r\n            \"triggerprice\": slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\r\n            \"exchange\": 'NSE',\r\n            \"producttype\": slmOption.producttype,//\"DELIVERY\" \"INTRADAY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n             //   this.setState({ orderid: data.data && data.data.orderid });\r\n                // this.updateOrderList(); \r\n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\r\n            //    this.getTodayOrder();\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n                this.updateOrderList(); \r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default new CommonOrderMethod();\r\n\r\n   ","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport * as Menu from './LeftMenuBar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MyLogo from './mylogo.png';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport InvertColor from '../utils/InvertColor';\r\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\r\nimport AdminService from \"./service/AdminService\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CommonOrderMethod from \"../utils/CommonMethods\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport Notify from '../utils/Notify';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    endMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'row reverse'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        //backgroundColor: '#f44336'\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function PostLoginNavBar(props) {\r\n\r\n    const [values, setValues] = React.useState({\r\n        buyFlag: true,\r\n        sellFlag: true,\r\n        searchSymbol: \"\",\r\n        producttype: \"INTRADAY\"\r\n\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const autoSearchList = [];\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    function handleInput(e) {\r\n        setValues({ ...values, ['searchSymbol']: e.target.value });\r\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\r\n            let searchResdata = searchRes.data;\r\n            if (e.target.value) {\r\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\r\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\r\n                //  console.log(\"found\", found[0] && found[0].symbol); \r\n                if (found.length) {\r\n\r\n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token']: found[0].token });\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleInputQty(e) {\r\n        setValues({ ...values, ['qtyToTake']: e.target.value });\r\n    }\r\n\r\n    \r\n    function handleProductType(e) {\r\n        setValues({ ...values, ['producttype']: e.target.value });\r\n        console.log( e.target.value); \r\n    }\r\n\r\n\r\n    function callbackAfterOrderDone(order) {\r\n        setValues({ ...values, ['buyFlag']: order.status });\r\n        setValues({ ...values, ['sellFlag']: order.status });\r\n        setValues({ ...values, ['searchSymbol']: '' });\r\n    }\r\n\r\n    function handleClick(type) {\r\n\r\n        if (values.token && values.searchSymbol) {\r\n            if (type == 'BUY') {\r\n                setValues({ ...values, ['buyFlag']: false });\r\n                var symbolInfo = {\r\n                    token: values.token,\r\n                    symbol: values.searchSymbol,\r\n                    qtyToTake: values.qtyToTake,\r\n                    producttype: values.producttype\r\n                }\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\r\n            }\r\n\r\n            if (type == 'SELL') {\r\n                setValues({ ...values, ['sellFlag']: false });\r\n                var symbolInfo = {\r\n                    token: values.token,\r\n                    symbol: values.searchSymbol,\r\n                    qtyToTake: values.qtyToTake,\r\n                    producttype: values.producttype\r\n                }\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\r\n            }\r\n        } else {\r\n            Notify.showError(\"Type Symbol!!!\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n\r\n            >\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Grid\r\n                        justify=\"space-between\"\r\n                        container\r\n                    >\r\n                        <Grid item >\r\n                            {/* <Typography variant=\"h6\" noWrap>\r\n                          M-Trade\r\n                         </Typography> */}\r\n                            {/* <Button href={\"/mtrade/#/home\"}>\r\n                                <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\r\n\r\n                            </Button> */}\r\n                            {new Date().toLocaleTimeString()}\r\n\r\n                        </Grid>\r\n\r\n                        <Hidden xsDown>\r\n                            <Grid item  >\r\n\r\n                                <Grid\r\n                                    justify=\"space-between\"\r\n                                    container\r\n                                    spacing={2}\r\n                                >\r\n\r\n                                    {/* <Grid item  >\r\n                                        <Typography style={{ marginTop: '20px', fontSize: \"12px\" }} variant=\"h6\" noWrap >\r\n                                            <span id=\"niftySpid\"  > </span>  &nbsp;&nbsp;  <span id=\"bankniftySpid\" onClick={() => props.LoadSymbolDetails(\"BANKNIFTY\")} > </span>\r\n                                        </Typography>\r\n                                    </Grid> */}\r\n\r\n                                    <Grid item>\r\n                                        <TextField label=\"Search Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <FormControl style={styles.selectStyle} style={{ marginTop: '3px' }} >\r\n                                            <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\r\n                                            <Select value={values.producttype} name=\"producttype\" onChange={handleProductType}>\r\n                                                <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\r\n                                                <MenuItem value={\"DELIVERY\"}>Delivery</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField label=\"Qty\" style={{ width: \"50px\" }} type=\"number\" name=\"qtyToTake\" value={values.qtyToTake} onChange={handleInputQty} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Hidden>\r\n\r\n                        <Hidden xsDown smDown>\r\n\r\n\r\n\r\n                            <Grid item >\r\n\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"row\"\r\n\r\n                                >\r\n\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\"  color=\"primary\" href={\"/mtrade/#/market-depth-mobile\"}>\r\n                                            Depth \r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\"  target={'_blank'}  color=\"primary\" href={\"/mtrade/#/strong-charts\"}>\r\n                                            Charts <OpenInNewIcon />\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/sector-heat-map2\"}>\r\n                                            Sector <OpenInNewIcon />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\" color=\"primary\" target={'_blank'} href={\"/mtrade/#/find-fast-movement2\"}>\r\n                                            Pattern <OpenInNewIcon />\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" autoFocus href={\"/mtrade/#/order-watchlist\"} color=\"primary\">\r\n                                            Order Watchlist\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\r\n                                            Position\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                  \r\n\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n\r\n                            </Grid>\r\n\r\n                        </Hidden>\r\n\r\n\r\n                    </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\r\n\r\n                    <List>{Menu.LogoutMenu}</List>                    \r\n\r\n                    <IconButton onClick={handleDrawerClose}  >\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n\r\n\r\n                <Divider />\r\n                <List>{Menu.AdminMenuList}</List>\r\n\r\n                {/* <Divider />\r\n                <List>  <InvertColor /></List> */}\r\n{/* \r\n                <Divider />\r\n                <List>{Menu.LogoutMenu}</List> */}\r\n\r\n                        <Divider />\r\n                   <InvertColor />\r\n\r\n\r\n\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Notify from \"./Notify\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  KeyboardDateTimePicker\r\n} from '@material-ui/pickers';\r\n\r\nfunction MaterialUIPickers(props) {\r\n\r\n  //var d = new Date(); \r\n  //d.setHours(0,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var startd = new Date(); \r\n  startd.setHours(9,0,0,0);\r\n  startd.setMinutes(15,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\r\n  var endd = new Date(); \r\n  endd.setHours(15,0,0,0);\r\n  endd.setMinutes(30,0,0,0);\r\n\r\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\r\n\r\n  const handleStartDateChange = date => {\r\n    setSelectedStartDate(date);\r\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\r\n  //  var startDateMili = new Date(date).getTime(); \r\n//    document.getElementById(\"startDateMili\").value = startDateMili; \r\n//    var endDateMili = document.getElementById(\"endDateMili\").value; \r\n    // if(startDateMili > endDateMili  ){\r\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\r\n    // }\r\n  };\r\n\r\n\r\n\r\n  const handleEndDateChange = date => {\r\n    setSelectedEndDate(date);\r\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\r\n  //  var endDateMili = new Date(date).getTime(); \r\n  //  document.getElementById(\"endDateMili\").value = endDateMili; \r\n\r\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \r\n  //  if(endDateMili  < startDateMili){\r\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\r\n  //   }\r\n   \r\n  };\r\n\r\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \r\n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\r\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \r\n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\r\n  // }\r\n\r\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \r\n  // //endDateMili ==''\r\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\r\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \r\n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\r\n\r\n  // }\r\n\r\n return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid containers>\r\n        {/* KeyboardDateTimePicker */}\r\n        <KeyboardDatePicker\r\n         // disableFuture=\"true\"\r\n          margin=\"normal\"\r\n          style={{width:\"140px\"}}\r\n         // required={true}\r\n          id=\"date-picker-dialog\"\r\n          label={'Start Date'}\r\n         // format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedStartDate}\r\n          onChange={handleStartDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n          &nbsp;&nbsp;\r\n         <KeyboardDatePicker\r\n           style={{width:\"140px\"}}\r\n        // disableFuture=\"true\"\r\n         margin=\"normal\"\r\n       //  required={true}\r\n         id=\"date-picker-dialog\"\r\n         label={'End Date'}\r\n       //  format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedEndDate}\r\n         onChange={handleEndDateChange}\r\n         KeyboardButtonProps={{\r\n           'aria-label': 'change date',\r\n         }}\r\n        />\r\n        \r\n       \r\n        \r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default  MaterialUIPickers; \r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function SimpleExpansionPanel(props) {\r\n  const classes = useStyles();\r\n\r\n  var data = props.data; \r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={false} >\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography> {data.title} ({data.list.length})</Typography>\r\n\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n        \r\n\r\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\r\n              {data && data.list.length ? data.list.map((row, i)  => (\r\n                  <>\r\n                      {row ? <ListItem  button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\r\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", background:row.highlisht ? \"#375a00\": \"\"}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol} /> {row.ltp} ({row.nc}%)\r\n                      </ListItem> : \"\"}\r\n                      \r\n                  </>\r\n              )) : ''}\r\n          </div>\r\n\r\n         \r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function SimpleExpansionPanel(props) {\r\n  const classes = useStyles();\r\n\r\n  var data = props.data; \r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={ false } >\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\r\n\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n        \r\n\r\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\r\n              {data && data.list ? data.list.map((row, i)  => (\r\n                  <>\r\n                      {/* {row ? \r\n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\r\n\r\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\r\n\r\n                      </div> : \"\"} */}\r\n\r\n                      {row ? <ListItem  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\r\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '10px'}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol +\" \"+row.orderType} /> <span style={{fontSize: '14px'}}>{row.ltp} ({row.nc}%)  <br /> At {row.foundAt} </span> \r\n                      </ListItem> : \"\"}\r\n                      \r\n                  </>\r\n              )) : ''}\r\n          </div>\r\n\r\n         \r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function SimpleExpansionPanel(props) {\r\n  const classes = useStyles();\r\n\r\n  var data = props.data; \r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={ false } >\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\r\n\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n        \r\n\r\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\r\n              {data && data.list ? data.list.map((row, i)  => (\r\n                  <>\r\n                      {/* {row ? \r\n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\r\n\r\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\r\n\r\n                      </div> : \"\"} */}\r\n\r\n                      {row ? <ListItem  onClick={() => data.LoadSymbolDetails(row.symbol)} button style={{  padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\r\n                          <p style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '16px'}}  > \r\n                          \r\n                          {row.symbol} {row.ltp} ({row.nc}%)   <br /> \r\n                 \r\n                          Tot Buy Bids: {row.totalBuyQuantity}    <br />\r\n                          Tol Sell Bids: {row.totalSellQuantity}    <br />\r\n                          DeliveryToTraded {row.deliveryToTradedQuantity}% \r\n                          </p>\r\n                          \r\n                      </ListItem> : \"\"}\r\n                      \r\n                  </>\r\n              )) : ''}\r\n          </div>\r\n\r\n         \r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport \"./ViewStyle.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function BasicTabs(props) {\r\n\r\n  const { cursor, onSelectItem, autoSearchList, LoadSymbolDetails, symbolList, onChange, onChangeWatchlist, search, handleKeyDown, selectedWatchlist, totalWatchlist } = props.data;\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  var [values, setValues] = React.useState({\r\n    searchedSymbolList: symbolList, \r\n    // gainerList : localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\r\n    // looserList : localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],    \r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const filterWatchlistBySearch = (e) => {\r\n\r\n    console.log(\"e.target.value\", e.target.value);\r\n    if (!e.target.value) {\r\n      setValue({ searchedSymbolList: symbolList });\r\n    } else {\r\n\r\n      // var foundLive = this.state.listofItem.filter(row => row == e.target.value );\r\n      // this.setState({ [e.target.name]: e.target.value }); \r\n      // this.setState({searchedList: foundLive})        \r\n\r\n      let matchList = [];\r\n      for (let i = 0; i < symbolList.length; i++) {\r\n        let stock = symbolList[i];\r\n        if (stock && stock.name.includes(e.target.value)) {\r\n          matchList.push(stock);\r\n        }\r\n      }\r\n      setValue({ searchedSymbolList: matchList });\r\n    }\r\n  }\r\n\r\n\r\n  var gainerList =  props.data.gainerList ? props.data.gainerList : []; \r\n  var looserList =  props.data.looserList ? props.data.looserList : []; \r\n  \r\n\r\n  \r\n  return (\r\n    <Box sx={{ width: '100%'}}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" style={{overflowY: 'scroll'}}>\r\n          <Tab label=\"My WL\" {...a11yProps(0)} />\r\n          <Tab label={gainerList && gainerList.length + \" Gainner\"} {...a11yProps(1)} />\r\n          <Tab  label={looserList && looserList.length + \" Looser\"} {...a11yProps(2)} />\r\n          <Tab label=\"Fevrate\" {...a11yProps(3)} />\r\n          \r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n\r\n\r\n        <div style={{ marginLeft: '5px' }}>\r\n          <FormControl style={{ width: \"100%\" }} >\r\n            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n            <Select value={selectedWatchlist} name=\"selectedWatchlist\" onChange={onChangeWatchlist}>\r\n              <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n\r\n              {totalWatchlist && totalWatchlist.map(element => (\r\n                <MenuItem value={element}>{element}</MenuItem>\r\n              ))\r\n              }\r\n\r\n            </Select>\r\n          </FormControl>\r\n\r\n\r\n          <TextField\r\n            style={{ width: \"100%\" }}\r\n           // onChange={filterWatchlistBySearch}\r\n            label={\"Filter Symbol\"}\r\n            margin=\"normal\"\r\n            variant=\"standard\"\r\n            name=\"search\"\r\n            onKeyDown={handleKeyDown}\r\n            value={search}\r\n          />\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\r\n\r\n          {symbolList && symbolList.length ? symbolList.map((row, i) => (\r\n            <>\r\n              <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\r\n\r\n                style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\r\n\r\n                {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\r\n\r\n                <Button style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.symbol, i)} >\r\n                 \r\n                  <div style={{textAlign:\"left\"}}>  {row.name} </div> \r\n                  &nbsp; &nbsp; &nbsp;\r\n                  <div style={{textAlign:\"right\"}}>  {row.ltp} ({row.nc}%)  </div>\r\n                  </Button>\r\n                 \r\n\r\n\r\n              </ListItem>\r\n\r\n            </>\r\n          )) : ''}\r\n        </div>\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n      <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\r\n\r\n        {gainerList && gainerList.length ? gainerList.map((row, i) => (\r\n          <>\r\n            <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\r\n\r\n              style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\r\n\r\n              {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\r\n\r\n              <Button title={\"Found At: \" + row.foundAt}  style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.name, i)}> {row.name} {row.ltp} ({row.nc}%) {row.sector.split(' ')[1]} </Button>\r\n\r\n\r\n            </ListItem>\r\n\r\n          </>\r\n        )) : ''}\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}> \r\n        <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\r\n\r\n          {looserList && looserList.length ? looserList.map((row, i) => (\r\n            <>\r\n              <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\r\n\r\n                style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\r\n\r\n                {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\r\n\r\n                 <Button title={\"Found At: \" + row.foundAt} style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.name, i)}> {row.name} {row.ltp} ({row.nc}%) {row.sector.split(' ')[1]} </Button>\r\n\r\n\r\n              </ListItem>\r\n\r\n            </>\r\n          )) : ''}\r\n          </div>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        Fevrate list\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}","import axios from \"axios\";\r\nconst performServerAction = axios.create({\r\n    baseURL: ''\r\n  });\r\nexport default performServerAction;","import * as actionTypes from \"./types\";\r\nimport performServerAction from \"../api\"\r\nimport AuthService from \"../components/service/AuthService\";\r\n\r\nexport const setPackLoaded = ()=> async dispatch=> {\r\n    var data = { allPacks:true, portal: true}; \r\n    const response = await performServerAction.post('getPrepaidPacks', data)\r\n    \r\n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\r\n  };\r\n  export const getPackById = (id)=> async dispatch=> {\r\n    try{\r\n     \r\n\r\n      //add getPrepaidPacksById after / in sprint 7 and 8\r\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\r\n    \r\n     //sprint 8 & 9\r\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\r\n\r\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\r\n    }catch(err){\r\n      console.log(err,\"ERRRR\")\r\n    }\r\n   \r\n  };\r\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",updatedInfo);\r\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\r\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\r\n      updatedInfo.productId =  String( updatedInfo.productId );\r\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\r\n      updatedInfo.active =  String( updatedInfo.active );\r\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\r\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\r\n\r\n      \r\n\r\n\r\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",packInfo)\r\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };","import React from \"react\";\r\n//import \"./styles.css\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n \r\n\r\n  // dateTime: \"23-06-2021 4:43:02 PM\"\r\n  // diff: -298523\r\n  // isDuplicate: true\r\n  // totCEOI: 902038\r\n  // totCEOIChange: \"0.000\"\r\n  // totCEVol: 15312564\r\n  // totChangeINOICall: 127897\r\n  // totChangeINOIDiff: -107353\r\n  // totChangeINOIPut: 20544\r\n  // totDiffChange: \"0.000\"\r\n  // totPEOI: 603515\r\n  // totPEOIChange: \"0.000\"\r\n  // totPEVol: 15418605\r\n  var data =  props.diffData && props.diffData.data;\r\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \r\n\r\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \r\n\r\n  // var startpage = 0  \r\n  // if(scpage * 10 <  data.length) {\r\n  //   startpage =  scpage * 10;  \r\n  // }   \r\n  // else if (props.diffData.scrollcount > data.length){\r\n  //   startpage =  0; \r\n  // }\r\n\r\n\r\n\r\n  // console.log('scrollcount', props.diffData.scrollcount); \r\n  // console.log('startpage', startpage);\r\n\r\n  // console.log('charrt data', data);\r\n\r\n  //for (let index = startpage; index <  startpage + 10; index++) {\r\n  \r\n\r\n  data.reverse();\r\n\r\n  for (let index = data.length - 20; index <  data.length; index++) {\r\n    if(data[index]){\r\n      putData.push(data[index].totPEOI); \r\n      callData.push(data[index].totCEOI); \r\n      diffData.push(data[index].diff); \r\n      timeDate.push( data[index].dateTime.substring(19,11)); \r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n  const chartData = {\r\n    labels: timeDate,\r\n    datasets: [\r\n      {\r\n        label: \"Put\",\r\n        data: putData,\r\n        fill: true,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"green\"\r\n      },\r\n      {\r\n        label: \"Call\",\r\n        data: callData,\r\n        fill: true,\r\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n        borderColor: \"red\",\r\n        \r\n      },\r\n      // {\r\n      //   label: \"Diff\",\r\n      //   data: diffData,\r\n      //   fill: true,\r\n      //   onoffline : true,\r\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n      //   borderColor: \"blue\",\r\n        \r\n      // }\r\n     \r\n    ]\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\r\n  } \r\n\r\n  return (\r\n    <div >\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPackLoaded } from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Parser from 'html-react-parser';\r\n\r\nimport Chart from \"./Chart\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nclass MyView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview: '',\r\n            curnewdata: '',\r\n            showOptionUpside: 800,\r\n            showOptionDownside: 800,\r\n            timestamp: '',\r\n            totalCOI: 0,\r\n            expiry: '',\r\n            strike: '',\r\n            FilteredBY: '',\r\n            AllspTotalOI: [],\r\n            PEoi: 0,\r\n            CEoi: 0,\r\n            waitForChainFlag: true,\r\n            scrollcount: 0,\r\n            pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data,\r\n            optionChainDataBN: JSON.parse(localStorage.getItem('optionChainDataBN')),\r\n            filtered: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered.data,\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'Securities in F&O',\r\n            selectOptionStock: \"BANKNIFTY\",\r\n            underlyingValue: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.underlyingValue,\r\n\r\n            buyCallLot:1, \r\n            buyPutLot:1, \r\n            niftyLogSize : 50, \r\n            niftybankLogSize : 25, \r\n            \r\n\r\n\r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n        this.findSupportResistence = this.findSupportResistence.bind(this);\r\n\r\n    }\r\n\r\n    onChangeSelectSymbol = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            this.loadPackList();\r\n        });\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            this.filterOptionChain(e.target.name, e.target.value);\r\n        });\r\n    }\r\n\r\n\r\n   \r\n\r\n    filterOptionChain = (name, actualValue) => {\r\n        //console.log('filtername', name, actualValue); \r\n        var filereddata = [];\r\n\r\n        var alldata = this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.data;\r\n\r\n        if (name === 'expiry' && actualValue === 'All') {\r\n\r\n            filereddata = alldata;\r\n        }\r\n\r\n        if (name === 'expiry') {\r\n\r\n            for (let index = 0; index < alldata.length; index++) {\r\n                const element = alldata[index];\r\n                if (element.expiryDate === actualValue) {\r\n                    filereddata.push(element);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (name === 'strike') {\r\n\r\n            for (let index = 0; index < alldata.length; index++) {\r\n                const element = alldata[index];\r\n                if (element.strikePrice === actualValue) {\r\n                    filereddata.push(element);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        this.setState({ filtered: filereddata, FilteredBY: name + \" \" + actualValue });\r\n        //  console.log(filereddata); \r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     var tabledata = document.getElementById('tabledata'); \r\n    //     tabledata.removeEventListener('scroll', this.handleScroll);\r\n\r\n    // }\r\n\r\n    handleScroll = (data) => {\r\n\r\n        var scrollcount = this.state.scrollcount;\r\n\r\n        this.setState({ scrollcount: scrollcount += 1 });\r\n\r\n    }\r\n\r\n    onChangeCallLot = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            this.calculateCallMargin(); \r\n        });\r\n    }\r\n\r\n    calculateCallMargin =(e)=> {\r\n        this.state.filtered && this.state.filtered.forEach(element => {\r\n            if(element.CE && element.CE.lastPrice)  {\r\n                element.CE.totalMargin = Parser(  (element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize).toFixed(2) ); // this.state.lotSize * this.state.buyCallLot+ \" * \" + element.CE.lastPrice  + \"<br /> \r\n                element.CE.maxLoss = Parser( \" SL 10%: <br /><b style='color:red'>\" + ((element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize) * 10/100).toFixed(2) +\"</b>\" );\r\n    \r\n            }\r\n         \r\n        });\r\n        this.setState({filtered: this.state.filtered}); \r\n    }\r\n\r\n    onChangePutLot = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            this.calculatePutMargin(); \r\n        });\r\n    }\r\n\r\n    calculatePutMargin =(e)=> {\r\n\r\n        this.state.filtered &&  this.state.filtered.forEach(element => {\r\n            if(element.PE && element.PE.lastPrice)  {\r\n                element.PE.totalMargin = Parser(  (element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize).toFixed(2) ); //this.state.lotSize * this.state.buyPutLot+ \" * \" + element.PE.lastPrice  + \"<br /> <b> \"\r\n                element.PE.maxLoss = Parser( \" SL 10%: <br /><b style='color:red'>\" + ((element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize) * 10/100).toFixed(2)  +'</b>' );\r\n\r\n            }\r\n        });\r\n\r\n        this.setState({filtered: this.state.filtered}); \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n       \r\n\r\n        this.setState({ SecuritiesInFO: this.state.staticData[this.state.selectedWatchlist] }, function () {\r\n            // this.state.SecuritiesInFO && this.state.SecuritiesInFO.sort(function (a, b) {\r\n            //     if(a.name < b.name) { return -1; }\r\n            //     if(a.name > b.name) { return 1; }\r\n            //     return 0;\r\n            // });\r\n        });\r\n\r\n       \r\n\r\n\r\n        // var tabledatachart = document.getElementById('tabledatachart'); \r\n        // tabledatachart.addEventListener('scroll', this.handleScroll);\r\n\r\n        //   this.loadPackList();\r\n        //   console.log('this.state.optionChainDataBN.records.expiryDates', this.state.optionChainDataBN.records.expiryDates)\r\n\r\n\r\n        if (!JSON.parse(localStorage.getItem('optionDiffdata' + this.state.selectOptionStock)))\r\n            localStorage.setItem('optionDiffdata'+ this.state.selectOptionStock, JSON.stringify({ data: [] }))\r\n        else\r\n            this.setState({ products: JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock)).data })\r\n        // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\r\n        //  clearInterval(this.state.stopnview)\r\n\r\n        if (!JSON.parse(localStorage.getItem('pcrTableBN')))\r\n            localStorage.setItem('pcrTableBN', JSON.stringify({ data: [] }))\r\n        else\r\n            this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')).data })\r\n\r\n\r\n\r\n\r\n        var todayTime = new Date();\r\n        if (todayTime.getHours() >= 9 && todayTime.getHours() < 16) {\r\n            setInterval(() => {\r\n                this.loadPackList();\r\n            }, 60000 * 6);\r\n        }\r\n        setInterval(() => {\r\n            this.updatepcr()\r\n        }, 60000 * 6);\r\n\r\n        // this.findSupportResistence(this.state.optionChainDataBN ? this.state.optionChainDataBN : \"\");\r\n\r\n\r\n        let lotSize = 25; \r\n        if(this.state.selectOptionStock == \"NIFTY\")\r\n         lotSize = 50;\r\n        if(this.state.selectOptionStock == \"BANKNIFTY\")\r\n        lotSize = 25;\r\n\r\n        this.setState({lotSize :lotSize}, function(){\r\n            this.calculateCallMargin(); \r\n            this.calculatePutMargin(); \r\n        })\r\n\r\n\r\n    }\r\n    // componentDidUpdate(){\r\n    //   //  this.updatepcr(); \r\n    //    // console.log(\"updaate called\") \r\n    // }\r\n\r\n    getDataforStrike = strikePrice => {\r\n\r\n        var alldata = JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.data;// this.state.optionChainDataBN && this.state.optionChainDataBN.records.data; \r\n        var sumOfCEoi = 0, sumOfPEoi = 0;\r\n        for (let index = 0; index < alldata.length; index++) {\r\n            const element = alldata[index];\r\n\r\n            if (strikePrice === element.strikePrice) {\r\n\r\n                if (element.CE && element.CE.openInterest) {\r\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest;\r\n                }\r\n                if (element.PE && element.PE.openInterest) {\r\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest;\r\n                }\r\n\r\n            }\r\n        }\r\n        // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \r\n        return { strikePrice: strikePrice, sumOfCEoi: sumOfCEoi, sumOfPEoi: sumOfPEoi };\r\n\r\n        //  console.log(\"alldata\", alldata);\r\n    }\r\n\r\n    findSupportResistence = (optiondata) => {\r\n        // console.log(optiondata);\r\n        var alldata = optiondata && optiondata.records && optiondata.records.data;\r\n        // var underlyingValue = optiondata.records && optiondata.records.underlyingValue; \r\n        var PEoi = 0, CEoi = 0, PEoiChange = 0, CEoiChange = 0;\r\n        if (alldata) {\r\n            for (let index = 0; index < alldata.length; index++) {\r\n                const element = alldata[index];\r\n                if (element && element.PE) {\r\n                    PEoi = PEoi + element.PE.openInterest;\r\n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest;\r\n                }\r\n                if (element && element.CE) {\r\n                    CEoi = CEoi + element.CE.openInterest;\r\n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //   var allexpiryDates =   optiondata.records.expiryDates; \r\n        //   var strikePrices =  optiondata.records.strikePrices; \r\n        //   var fliterExData = [];  \r\n\r\n        // for (let index = 0; index < allexpiryDates.length; index++) {\r\n        //     const element = allexpiryDates[index];\r\n        //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\r\n        //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\r\n        //             fliterExData.push(alldata[indexJ]); \r\n        //         } \r\n        //     }                  \r\n        // }   \r\n\r\n        var myStrike = [];\r\n\r\n        let startDiff = this.state.underlyingValue - this.state.showOptionDownside\r\n        let rem = Math.round(startDiff) % 100;\r\n        let startFrom = Math.round(startDiff) + 100 - rem;\r\n\r\n        let endDiff = this.state.underlyingValue + this.state.showOptionUpside;\r\n        let rem2 = Math.round(endDiff) % 100;\r\n        let endTo = Math.round(endDiff) + 100 - rem2;\r\n\r\n\r\n        console.log(this.state.underlyingValue, 'start from', startFrom, 'endto', endTo);\r\n\r\n\r\n        for (let index = startFrom; index <= endTo; index += 100) {\r\n            myStrike.push(index)\r\n        }\r\n\r\n        myStrike = myStrike.sort(function (a, b) { return b - a });\r\n\r\n\r\n\r\n        var data = [], totalspeoi = 0, totalsceoi = 0;\r\n        myStrike.forEach(element => {\r\n            var resdata = this.getDataforStrike(element);\r\n            totalspeoi = totalspeoi + resdata.sumOfPEoi;\r\n            totalsceoi = totalsceoi + resdata.sumOfCEoi;\r\n\r\n            data.push(resdata);\r\n\r\n            console.log(element, resdata);\r\n\r\n\r\n        });\r\n        this.setState({ AllspTotalOI: data, selectedSPpcr: (totalspeoi / totalsceoi).toFixed(3), totalspeoi: totalspeoi, totalsceoi: totalsceoi });\r\n\r\n        // for (let index = 0; index < alldata.length; index++) {\r\n        //     const element = alldata[index];\r\n\r\n        //     // if(alldata[index].strikePrice ==  14800){\r\n        //     //     fliterExData.push(element); \r\n        //     // } \r\n        //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\r\n        //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\r\n        //             fliterExData.push(element); \r\n        //         }   \r\n        //     }\r\n\r\n        // }   \r\n\r\n        //            console.log(\"allfliterExData\",fliterExData);\r\n\r\n\r\n        this.setState({ CEoi: CEoi, PEoi: PEoi, allStrikediff: PEoi - CEoi, CEoiChange: CEoiChange, PEoiChange: PEoiChange, allStrikeChngeDiff: PEoiChange - CEoiChange });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    loadPackList() {\r\n\r\n\r\n        this.setState({ waitForChainFlag: false });\r\n\r\n        AdminService.getBNcpdata(this.state.selectOptionStock)\r\n            .then((res) => {\r\n                //     let data = resolveResponse(res);\r\n\r\n                var data = res.data && res.data;\r\n\r\n\r\n                localStorage.setItem(\"optionChainDataBN\", JSON.stringify(data));\r\n\r\n                // this.findSupportResistence(data);\r\n\r\n                // console.log(\"livedata\", data.filtered);\r\n\r\n                this.setState({ filtered: data.filtered && data.filtered.data, optionChainDataBN: data });\r\n\r\n                if (data.filtered) {\r\n\r\n                    var diff = data.filtered.PE.totOI - data.filtered.CE.totOI;\r\n\r\n                    var newdata = {\r\n                        dateTime: this.dateFormat(new Date()),\r\n                        totCEOI: data.filtered.CE.totOI,\r\n                        totCEVol: data.filtered.CE.totVol,\r\n                        totPEOI: data.filtered.PE.totOI,\r\n                        totPEVol: data.filtered.PE.totVol,\r\n                        diff: diff,\r\n                        totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')),\r\n                        totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')),\r\n                        totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange'))\r\n\r\n                    }\r\n                    this.setState({ curnewdata: newdata });\r\n\r\n\r\n                    document.getElementById('title').innerHTML = (diff / 100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange')) / 100000).toFixed(2) + \"L \" + this.state.selectOptionStock;\r\n                    // createData.push(newdata); \r\n                    if (JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock))) {\r\n                        var oldproducts = JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock));\r\n                        // console.log(\"oldproductsindex0\", ); \r\n                        var lastrow = oldproducts && oldproducts.data[0];\r\n\r\n\r\n                        // oldproducts.data.forEach((data) => {\r\n                        //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\r\n                        //         newdata.isDuplicate = true; \r\n                        //     }else{\r\n                        //         newdata.isDuplicate = false;\r\n                        //     }\r\n                        // });\r\n                        if (lastrow) {\r\n                            newdata.isDuplicate = newdata.diff === lastrow.diff ? true : false\r\n                            newdata.totCEOIChange = (((newdata.totCEOI - lastrow.totCEOI) * 100) / lastrow.totCEOI).toFixed(3);;\r\n                            newdata.totPEOIChange = (((newdata.totPEOI - lastrow.totPEOI) * 100) / lastrow.totPEOI).toFixed(3);;\r\n                            newdata.totDiffChange = (((newdata.diff - lastrow.diff) * 100) / lastrow.diff).toFixed(3);\r\n                        } else {\r\n                            newdata.isDuplicate = false\r\n                            newdata.totCEOIChange = 0;\r\n                            newdata.totPEOIChange = 0;\r\n                            newdata.totDiffChange = 0;\r\n                        }\r\n\r\n\r\n                    //    oldproducts.data.unshift(newdata);\r\n\r\n                        if (data.records) {\r\n                            oldproducts.timestamp = data.records.timestamp;\r\n                            oldproducts.underlyingValue = data.records.underlyingValue;\r\n                        }\r\n\r\n                    //    oldproducts.data.reverse();\r\n\r\n                        localStorage.setItem(\"optionDiffdata\" + this.state.selectOptionStock, JSON.stringify(oldproducts));\r\n\r\n\r\n\r\n                        this.setState({ products: oldproducts.data, underlyingValue: data.records.underlyingValue, timestamp: data.records.timestamp })\r\n                        this.setState({ waitForChainFlag: true });\r\n\r\n                    }\r\n\r\n                    //  console.log(\"dddd\", this.state.curnewdata); \r\n\r\n\r\n                }\r\n\r\n\r\n                this.updatepcr()\r\n                this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data })\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    updatepcr() {\r\n\r\n\r\n        var pcrdata = {\r\n            allPCR: (this.state.PEoi / this.state.CEoi).toFixed(3),\r\n            expiryPCR: localStorage.getItem('thisWeekPCR'),\r\n            selectedSPpcr: this.state.selectedSPpcr,\r\n        }\r\n\r\n        if (JSON.parse(localStorage.getItem('pcrTableBN'))) {\r\n            var pcrTableBN = JSON.parse(localStorage.getItem('pcrTableBN'));\r\n            pcrTableBN.data.unshift(pcrdata);\r\n            localStorage.setItem(\"pcrTableBN\", JSON.stringify(pcrTableBN));\r\n        }\r\n\r\n        console.log(pcrdata);\r\n        this.setState({ pcrTableBN: pcrTableBN })\r\n    }\r\n\r\n\r\n\r\n\r\n    dateFormat(date) {\r\n\r\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var totCEOI = 0, totCEVol = 0, totCEOIChange = 0, totCEBUY = 0, totCESell = 0;\r\n        var totPEOI = 0, totPEVol = 0, totPEOIChange = 0, totPEBUY = 0, totPESell = 0;\r\n\r\n        return (\r\n            <React.Fragment >\r\n\r\n                {/* <PostLoginNavBar /> */}\r\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n\r\n\r\n                    <Grid item xs={2} sm={2} >\r\n                        <FormControl style={styles.selectStyle}>\r\n                            <InputLabel id=\"selectOptionStock\">Select Symbol</InputLabel>\r\n                            <Select\r\n                                id=\"selectOptionStock\"\r\n                                name=\"selectOptionStock\"\r\n                                value={this.state.selectOptionStock}\r\n                                onChange={this.onChangeSelectSymbol}\r\n                                input={<Input />}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                <MenuItem key={'NIFTY'} value={'NIFTY'} > {'NIFTY'}</MenuItem>\r\n                                <MenuItem key={'BANKNIFTY'} value={'BANKNIFTY'} > {'BANKNIFTY'}</MenuItem>\r\n\r\n                                {this.state.SecuritiesInFO && this.state.SecuritiesInFO.length ? this.state.SecuritiesInFO.map((row, index) => (\r\n                                    <MenuItem key={row.name} value={row.name} >\r\n                                        {row.name}\r\n                                    </MenuItem>\r\n                                )) : \"\"}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} sm={2} >\r\n                        <FormControl style={styles.selectStyle}>\r\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\r\n                            <Select\r\n                                id=\"expiry\"\r\n                                name=\"expiry\"\r\n                                value={this.state.expiry}\r\n                                onChange={this.onChange}\r\n                                input={<Input />}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                <MenuItem key={'All'} value={'All'} >\r\n                                    {'All'}\r\n                                </MenuItem>\r\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.expiryDates ? this.state.optionChainDataBN.records.expiryDates.map((name, index) => (\r\n                                    <MenuItem key={name + 'key' + index} value={name} >\r\n                                        {name}\r\n                                    </MenuItem>\r\n                                )) : \"\"}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} sm={2} >\r\n                        <FormControl style={styles.selectStyle}>\r\n                            <InputLabel id=\"strike\">Select Strick Price</InputLabel>\r\n                            <Select\r\n                                labelId=\"strike\"\r\n                                id=\"strike\"\r\n                                max-height={'100%'}\r\n                                name=\"strike\"\r\n                                value={this.state.strike}\r\n                                onChange={this.onChange}\r\n                                input={<Input />}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.strikePrices ? this.state.optionChainDataBN.records.strikePrices.map(name => (\r\n                                    <MenuItem key={name} value={name} >\r\n                                        {name}\r\n                                    </MenuItem>\r\n                                )) : \"\"}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2}>\r\n                        {this.state.waitForChainFlag ? <Button variant=\"contained\" onClick={() => this.loadPackList()}>\r\n                            Refesh\r\n                        </Button> : <Spinner />}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={4}>\r\n\r\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                            {this.state.selectOptionStock} {this.state.underlyingValue} {this.state.timestamp} \r\n                            {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\r\n                        </Typography>\r\n\r\n                        \r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={12}>\r\n                    <Paper style={{ padding: \"10px\", overflow: \"auto\" }}>\r\n\r\n                        <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={3} sm={3} >\r\n                                <span> <b>Total </b></span>\r\n                                <span> PE OI: <b> {(this.state.PEoi / 100000).toFixed(3)}L</b></span>\r\n                                <span> CE OI: <b>{(this.state.CEoi / 100000).toFixed(3)}L</b></span>\r\n                                <span> PE-CE: {\r\n                                    this.state.allStrikediff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>\r\n                                        : <b style={{ color: 'red' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3} sm={5} >\r\n                                <span> <b>Total Chng </b></span>\r\n                                <span> PE OI: <b>{(this.state.PEoiChange / 100000).toFixed(3)}L</b></span>\r\n                                <span> CE OI: <b>{(this.state.CEoiChange / 100000).toFixed(3)}L</b></span>\r\n                                <span> PE-CE: {\r\n                                    this.state.allStrikeChngeDiff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>\r\n                                        : <b style={{ color: 'red' }}> {((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>}\r\n                                </span>\r\n\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2} sm={2} >\r\n                                <span>ALL PCR: <b>{(this.state.PEoi / this.state.CEoi).toFixed(3)} </b></span>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2} sm={2} >\r\n                                <span>Expire Week PCR: <b>{localStorage.getItem('thisWeekPCR')} </b></span>\r\n\r\n                            </Grid>\r\n\r\n\r\n\r\n                            {/* <Grid item xs={2} sm={2} >\r\n                            <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\r\n                                <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\r\n                            </Typography> \r\n                        </Grid> */}\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={0} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n\r\n\r\n                    <Grid id=\"tabledatachart\" item xs={6} sm={6} style={{ padding: \"2px\", overflow: \"auto\", height: \"350px\" }}>\r\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n                            <TableHead key={2222} variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                <TableRow variant=\"head\">\r\n                                    <TableCell align=\"center\"><b>Time</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>VIEW</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\r\n\r\n                                    <TableCell align=\"center\"><b>PUT OI</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>\r\n\r\n                                    <TableCell align=\"center\"><b>Call OI</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\r\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody hover style={{ width: \"\", whiteSpace: \"nowrap\" }} >\r\n\r\n\r\n\r\n                                {this.state.products ? this.state.products.map(row => (\r\n                                    <TableRow key={row.dateTime} style={{ background: row.isDuplicate ? \"lightgray\" : \"\" }}>\r\n                                        <TableCell align=\"center\">{row.dateTime.substring(19, 11)}</TableCell>\r\n                                        <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color: 'green' }} >BUY</Typography> : <Typography variant=\"body2\" style={{ color: 'red' }} >SELL</Typography>}</TableCell>\r\n                                        <TableCell align=\"center\">{row.diff} ({(row.diff / 100000).toFixed(2)}L)({row.totDiffChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totDiffChange}%</span> : row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totDiffChange}%</span>}) </TableCell>\r\n                                        <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff / 100000).toFixed(2)}L)</TableCell>\r\n\r\n                                        <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totPEOIChange}%</span> : row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totPEOIChange}%</span>})</TableCell>\r\n                                        <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\r\n\r\n                                        <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totCEOIChange}%</span> : row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totCEOIChange}%</span>})</TableCell>\r\n\r\n                                        <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\r\n\r\n                                        {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\r\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\r\n\r\n                                    </TableRow>\r\n                                )) : <Spinner />}\r\n\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} style={{ padding: \"2px\", overflow: \"auto\"}}>\r\n\r\n                        <Chart diffData={{ data: this.state.products, scrollcount: this.state.scrollcount }} />\r\n                    </Grid>\r\n\r\n                    {/* <Grid item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\r\n                        <Table style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\r\n\r\n                            <TableHead style={{}} variant=\"head\">\r\n                                <TableRow variant=\"head\">\r\n\r\n                                    <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi / 100000).toFixed(3)}L</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Strike Price<br />{this.state.totalspeoi - this.state.totalsceoi}({((this.state.totalspeoi - this.state.totalsceoi) / 100000).toFixed(3)}L) </b> </TableCell>\r\n                                    <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi / 100000).toFixed(3)}L</b></TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n\r\n                                {this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\r\n                                    <TableRow hover key={row.dateTime} >\r\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfCEoi} ({(row.sumOfCEoi / 100000).toFixed(2)}L)</TableCell>\r\n                                        <TableCell align=\"center\">{row.strikePrice}</TableCell>\r\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfPEoi} ({(row.sumOfPEoi / 100000).toFixed(2)}L)</TableCell>\r\n\r\n                                    </TableRow>\r\n                                )) : <Spinner />}\r\n\r\n\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} sm={2} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\r\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\r\n\r\n                            <TableHead variant=\"head\">\r\n                                <TableRow variant=\"head\">\r\n\r\n                                    <TableCell align=\"center\">ALL Pcr</TableCell>\r\n                                    <TableCell align=\"center\">Expiry Pcr </TableCell>\r\n                                    <TableCell align=\"center\">Selected Pcr</TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody style={{ whiteSpace: \"nowrap\" }}>\r\n\r\n                                {this.state.pcrTableBN && this.state.pcrTableBN.length > 0 && this.state.pcrTableBN ? this.state.pcrTableBN.map(row => (\r\n                                    <TableRow hover key={row.expiryPCR} >\r\n                                        <TableCell align=\"center\">{row.allPCR} </TableCell>\r\n                                        <TableCell align=\"center\">{row.expiryPCR}</TableCell>\r\n                                        <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\r\n                                    </TableRow>\r\n                                )) : ''}\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n\r\n                    </Grid> */}\r\n\r\n\r\n                    <Grid item xs={12} sm={12} style={{ padding: \"2px\", overflow: \"auto\", height: \"900px\" }}>\r\n\r\n                        <Table stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\r\n\r\n                            <TableHead variant=\"head\">\r\n\r\n                                <TableRow variant=\"head\"  >\r\n\r\n                                    <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\r\n                                    <TableCell align=\"center\"><b></b></TableCell>\r\n                                    <TableCell align=\"center\"><b></b></TableCell>\r\n                                    <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\r\n                                </TableRow>\r\n                                <TableRow variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }} >\r\n\r\n                                    {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\r\n\r\n\r\n                                    <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI') / 100000).toFixed(3)}L) </b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\r\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\r\n                                    {/* <TableCell align=\"center\"><b>IV</b></TableCell> */}\r\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\r\n\r\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\r\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\r\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\r\n\r\n                                    \r\n\r\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\r\n\r\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> STRIKE PRICE</span> </TableCell>\r\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> Expiry</span> </TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \r\n                                    <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\r\n\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\r\n                        */}\r\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\r\n\r\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\r\n\r\n\r\n\r\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\r\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\r\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\r\n                                    {/* <TableCell align=\"center\"><b>IV</b></TableCell> */}\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\r\n\r\n\r\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\r\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\r\n                                    <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI') / 100000).toFixed(3)}L)</b></TableCell>\r\n\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n\r\n                                {this.state.filtered ? this.state.filtered.map((opdata, index) => (\r\n                                    <TableRow hover key={index} >\r\n\r\n                                        {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\r\n                                        {opdata && opdata.CE && opdata.PE && (opdata.strikePrice >= opdata.CE.underlyingValue - this.state.showOptionUpside && opdata.strikePrice <= opdata.CE.underlyingValue + this.state.showOptionDownside) ? <>\r\n\r\n                                            <TableCell {...totCEOI = totCEOI + opdata.CE.openInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">{opdata.CE.openInterest}</TableCell>\r\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\r\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\r\n                                            {/* <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell> */}\r\n                                            {/* <TableCell align=\"center\">{(opdata.CE.change / (opdata.strikePrice - opdata.CE.underlyingValue)).toFixed(2)} </TableCell> */}\r\n\r\n\r\n\r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span> : opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>}) </TableCell>\r\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\r\n                                            \r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">                            \r\n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyCallLot} onChange={this.onChangeCallLot} name=\"buyCallLot\"  />\r\n                                             </TableCell>\r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\"> {opdata.CE.totalMargin} </TableCell>\r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\"> {opdata.CE.maxLoss} </TableCell>\r\n\r\n                                            \r\n\r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"CE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyCallLot)}> Call Buy </Button> </TableCell>\r\n\r\n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\r\n\r\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\r\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\r\n                                         */}\r\n                                            <TableCell style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} align=\"center\"><span> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\r\n                                            <TableCell style={{ borderRight: 'dashed', whiteSpace: \"nowrap\" }} align=\"center\" ><span style={{ paddingLeft: '5px', paddingRight: '5px' }}> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\r\n\r\n                                            <TableCell  style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"PE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyPutLot)}>Put Buy </Button> </TableCell>\r\n                                            <TableCell  style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\"> {opdata.PE.maxLoss} </TableCell>\r\n\r\n                                            <TableCell  style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\"> {opdata.PE.totalMargin} </TableCell>\r\n\r\n                                            <TableCell  style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">                            \r\n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyPutLot} onChange={this.onChangePutLot} name=\"buyPutLot\"  />\r\n                                             </TableCell>\r\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\r\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\r\n                                         */}\r\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\r\n                                            */}\r\n                                            <TableCell  style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\r\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\r\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span> : opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\r\n\r\n                                            {/* <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell> */}\r\n                                            {/* <TableCell align=\"center\">{(opdata.PE.change / (opdata.strikePrice - opdata.PE.underlyingValue)).toFixed(2)} </TableCell> */}\r\n\r\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\r\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\r\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#caca5b' : '' }} align=\"center\">{opdata.PE.openInterest} </TableCell>\r\n                                        </> : \"\"\r\n                                        }\r\n\r\n\r\n                                    </TableRow>\r\n\r\n                                )) : <Spinner />}\r\n\r\n\r\n                                <TableRow variant=\"head\">\r\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOI', totCEOI)}><b>{totCEOI}<br />({(totCEOI / 100000).toFixed(3)}L)</b></TableCell>\r\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange', totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\r\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEVol', totCEVol)}><b>{totCEVol}<br />({(totCEVol / 100000).toFixed(3)}L)</b></TableCell>\r\n                                    <TableCell colSpan={3} align=\"center\"></TableCell>\r\n                                    {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\r\n\r\n                                    <TableCell {...localStorage.setItem('thisWeekPCR', (totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\r\n\r\n\r\n                                    <TableCell colSpan={5} align=\"center\"></TableCell>\r\n\r\n\r\n                                    {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\r\n                                */}\r\n                                    {/* <TableCell colSpan={3} align=\"center\"></TableCell> */}\r\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEVol', totPEVol)}><b>{totPEVol}<br />({(totPEVol / 100000).toFixed(3)}L)</b></TableCell>\r\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange', totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\r\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOI', totPEOI)}><b>{totPEOI}<br />({(totPEOI / 100000).toFixed(3)}L)</b> </TableCell>\r\n\r\n                                </TableRow>\r\n\r\n\r\n                            </TableBody>\r\n\r\n\r\n                        </Table>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    tableStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    selectStyle: {\r\n        marginBottom: '0px',\r\n        minWidth: 240,\r\n        maxWidth: 240\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { packs: state.packs.packs.data };\r\n}\r\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport * as moment from 'moment';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\nimport BankNiftyView from './BankNiftyView'\r\n\r\nclass OrderBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            orderPenidngOptionList: localStorage.getItem('orderPenidngOptionList') && JSON.parse(localStorage.getItem('orderPenidngOptionList')) || [], \r\n            buyAtPending: \"\", \r\n            sellAtPending: \"\", \r\n            pattenNamePending: \"\",\r\n            searchSymbolPending : \"\",\r\n            autoSearchList:[{\"token\":\"26009\",\"symbol\":\"BANKNIFTY\",\"name\":\"BANKNIFTY\",\"expiry\":\"\",\"strike\":\"-1.000000\",\"lotsize\":\"-1\",\"instrumenttype\":\"\",\"exch_seg\":\"NSE\",\"tick_size\":\"-1.000000\"},{\"token\":\"26000\",\"symbol\":\"NIFTY\",\"name\":\"NIFTY\",\"expiry\":\"\",\"strike\":\"-1.000000\",\"lotsize\":\"-1\",\"instrumenttype\":\"\",\"exch_seg\":\"NSE\",\"tick_size\":\"-1.000000\"}], \r\n            lastTradedData : {},\r\n            buyOptionFlag : false ,\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: \"Securities in F&O\",\r\n\r\n        }\r\n    }\r\n\r\n    searchSymbolPendingOrder = (e) => {\r\n        this.setState({[e.target.name] : e.target.value})\r\n\r\n        AdminService.stockOptionSearch(e.target.value).then(searchRes => {\r\n            let searchResdata = searchRes.data;\r\n            if (e.target.value) {\r\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\r\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\r\n                //  console.log(\"found\", found[0] && found[0].symbol); \r\n                if (found.length) {\r\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    updateInput = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });      \r\n    }\r\n\r\n    addInOrderPenidngList =  async() => {\r\n\r\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\r\n      \r\n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\r\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\r\n                return; \r\n            }\r\n        }\r\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\r\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\r\n            return; \r\n           }\r\n        }\r\n            \r\n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\r\n        \r\n            var data = {\r\n                createdAt : new Date().toLocaleTimeString(), \r\n                token: this.state.searchTokenPending, \r\n                symbol: this.state.searchSymbolPending, \r\n                buyAt: this.state.buyAtPending,\r\n                sellAt: this.state.sellAtPending,  \r\n                pattenName: this.state.pattenNamePending,\r\n                exch_seg:  this.state.exch_seg,\r\n                priceStopLoss: this.state.priceStopLoss,\r\n                priceTarget : this.state.priceTarget\r\n            }\r\n\r\n            this.setState({orderPenidngOptionList : [...this.state.orderPenidngOptionList, data]}, function(){\r\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\r\n                localStorage.setItem('orderPenidngOptionList', JSON.stringify(this.state.orderPenidngOptionList));\r\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngOptionList));\r\n            })\r\n            \r\n        }\r\n        \r\n\r\n    }\r\n\r\n    deleteInOrderPenidngList =(row)=> {\r\n\r\n        console.log(\"callback\", row); \r\n        var isDeleted = false, delitem =''; \r\n       var orderPenidngOptionList =  localStorage.getItem('orderPenidngOptionList') && JSON.parse( localStorage.getItem('orderPenidngOptionList')); \r\n       for (let index = 0; index < this.state.orderPenidngOptionList.length; index++) {\r\n           const element = orderPenidngOptionList[index];\r\n           if(row.symbol == element.symbol){\r\n            delitem = orderPenidngOptionList.splice(index, 1); \r\n            localStorage.setItem('orderPenidngOptionList', JSON.stringify(orderPenidngOptionList)); \r\n            this.setState({orderPenidngOptionList : orderPenidngOptionList}); \r\n            break; \r\n           }\r\n       }\r\n\r\n       console.log(\"del\", delitem)\r\n       if(delitem && delitem[0].symbol == row.symbol){\r\n        return true;\r\n       }else {\r\n        return false;\r\n       }\r\n        \r\n    }\r\n\r\n    callBackUpdate =(row) => {\r\n       console.log(\"call back called\");\r\n     // this.deleteInOrderPenidngList(row); \r\n    }\r\n\r\n    placeOptionSPLevelOver=(indexData, spotPrice)=>{\r\n\r\n        let today = moment().isoWeekday();\r\n        let strikePrice = 0; \r\n        let allList = localStorage.getItem('optionChainDataBN') && JSON.parse(localStorage.getItem('optionChainDataBN')); \r\n        let nextExp = allList[\"records\"][\"expiryDates\"][0]; \r\n\r\n        if(indexData.buyAt){\r\n            if(today == 5 || today == 1){\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 400\r\n                if(indexData.symbol == 'NIFTY'){\r\n                    strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 200\r\n                }\r\n            }\r\n            else  if(today == 2){\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 300\r\n                if(indexData.symbol == 'NIFTY'){\r\n                    strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 150\r\n                }\r\n            }\r\n            else  if(today == 3){\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 200\r\n                if(indexData.symbol == 'NIFTY'){\r\n                    strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  + 100\r\n                }\r\n            }else {\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100) \r\n            }\r\n\r\n            strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100) \r\n\r\n            this.props.buyOption(\"CE\", indexData.symbol, strikePrice, nextExp, 1 , indexData);  \r\n        }else if(indexData.sellAt){\r\n            if(today == 5 || today == 1){\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 400\r\n                if(indexData.symbol == 'NIFTY'){\r\n                    strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 200\r\n                }\r\n            }\r\n            else  if(today == 2){\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 300\r\n                if(indexData.symbol == 'NIFTY'){\r\n                    strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 150\r\n                }\r\n            }\r\n            else  if(today == 3){\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 200\r\n                if(indexData.symbol == 'NIFTY'){\r\n                    strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100)  - 100\r\n                }\r\n            }else {\r\n                strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100) \r\n            }\r\n\r\n            strikePrice = (Math.round(spotPrice) - Math.round(spotPrice) % 100) \r\n\r\n            console.log(strikePrice, today);\r\n\r\n            this.props.buyOption(\"PE\", indexData.symbol, strikePrice, nextExp, 1, indexData);  \r\n        }\r\n\r\n    }\r\n\r\n    updateLTP = async()=> {\r\n\r\n        for (let index = 0; index < this.state.orderPenidngOptionList.length; index++) {\r\n            const element = this.state.orderPenidngOptionList[index];\r\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                //console.log(LtpData);\r\n                if(LtpData && LtpData.ltp) {\r\n                    element.ltp = LtpData.ltp; \r\n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \r\n                    localStorage.setItem('orderPenidngOptionList', JSON.stringify(this.state.orderPenidngOptionList)); \r\n                    this.setState({orderPenidngOptionList : this.state.orderPenidngOptionList}); \r\n                    console.log(\"ltp update\",element.symbol,element)\r\n\r\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\r\n                        var isDelete = this.deleteInOrderPenidngList(element); \r\n                        if(isDelete){ // && !this.state.buyOptionFlag\r\n                            console.log(\"buyopiton\",element.symbol,element)\r\n\r\n                            this.setState({buyOptionFlag: true}, function(){\r\n                                this.placeOptionSPLevelOver(element, LtpData.ltp); \r\n                            })\r\n                        }\r\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\r\n                        var isDelete = this.deleteInOrderPenidngList(element); \r\n                        if(isDelete){ // && !this.state.buyOptionFlag\r\n                            this.setState({buyOptionFlag: true}, function(){\r\n                                this.placeOptionSPLevelOver(element, LtpData.ltp); \r\n                            })\r\n                        }\r\n                    }\r\n\r\n                }\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 500)); \r\n        }\r\n    }\r\n\r\n    getTradePrice =()=> {\r\n\r\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            //console.log(LtpData);\r\n            if(LtpData && LtpData.ltp) {\r\n        \r\n\r\n                var lastTradedData = {\r\n                    symbol: LtpData.tradingsymbol,\r\n                    ltp : LtpData.ltp,\r\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \r\n                    open : LtpData.open, \r\n                    high : LtpData.high, \r\n                    close : LtpData.close, \r\n                    low : LtpData.low, \r\n                }\r\n                this.setState({lastTradedData : lastTradedData}); \r\n            \r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.updateLTP(); \r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            var intervaltime = 2001; \r\n            if(this.state.orderPenidngOptionList.length > 10){\r\n                intervaltime = this.state.orderPenidngOptionList.length * 110; \r\n            }\r\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\r\n        }\r\n\r\n        localStorage.setItem('autoSearchTemp',JSON.stringify(this.state.autoSearchList))\r\n    }\r\n\r\n  \r\n    refreshCandleChartManually = async (row) => {\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var time = moment.duration(\"12:00:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": row.token,\r\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n        }\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let histdata = resolveResponse(res, 'noPop');\r\n            //console.log(\"candle history\", histdata); \r\n            if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                var candleChartData = [];\r\n                histdata.data.forEach(element => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                });\r\n\r\n                localStorage.setItem('candleChangeShow', row.perChange);\r\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\r\n                localStorage.setItem('cadleChartSymbol', row.symbol);\r\n                document.getElementById('showCandleChart').click();\r\n\r\n            } else {\r\n                //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                console.log(row.symboltoken, \"  emply candle found\");\r\n            }\r\n        }).catch(error => {\r\n            this.setState({ failedCount: this.state.failedCount + 1 });\r\n            Notify.showError(row.symboltoken + \" candle failed!\");\r\n        })\r\n\r\n    }\r\n\r\n  \r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    onChange2 = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n\r\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n\r\n        var isfound = watchList.filter(element => (element.name == e.target.value.toUpperCase()));\r\n        console.log( \"stock\", isfound);\r\n        \r\n\r\n        if(isfound.length > 0){\r\n            var  ltpparam = { \"exchange\":isfound[0].exch_seg, \"tradingsymbol\": isfound[0].symbol , \"symboltoken\": isfound[0].token}; \r\n            AdminService.getLTP(ltpparam).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                if(LtpData && LtpData.ltp) {\r\n                    console.log( \"LtpData\",LtpData);\r\n\r\n                    AdminService.stockOptionSearch({name : isfound[0].name, ltp : LtpData.ltp}).then(res => {\r\n                        let data = res.data;\r\n                        console.log(data);\r\n                        localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n                        this.setState({ autoSearchList: data });\r\n                    })\r\n\r\n                }\r\n            });\r\n        }       \r\n\r\n    }\r\n\r\n    openNewPage = (e) => {\r\n        window.open(\"/mtrade/#/order-watchlist\");\r\n     //   window.location.replace('/mtrade/#/order-watchlist'); \r\n        localStorage.setItem('isOpenInNewPage', 'yes');\r\n    }\r\n\r\n    backToPositionPage = (e) => {\r\n        window.location.replace('/mtrade/#/position'); \r\n        localStorage.setItem('isOpenInNewPage', 'no');\r\n    }\r\n    \r\n\r\n    onSelectItem = (event, values) => {\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n          console.log(\"values\", values); \r\n           console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\r\n                this.getTradePrice(); \r\n            }); \r\n\r\n        }\r\n\r\n    }\r\n\r\n    // buyOption =(optiontype ,symbol, strikePrice, expiryDate, noOfLot)=>{\r\n    //   console.log(optiontype ,symbol, strikePrice, expiryDate); \r\n    //   let exp = expiryDate.toUpperCase().split('-'); \r\n    //    exp = exp[0]+exp[1]+exp[2]%1000; \r\n\r\n    //   let optionName = symbol + exp + strikePrice + optiontype; \r\n    //   console.log(optionName); \r\n\r\n    //   AdminService.autoCompleteSearch(optionName).then(res => {\r\n    //     let data = res.data; \r\n    //     let optionData = data && data[0]; \r\n    //     console.log(\"optionData\", optionData);\r\n\r\n\r\n    //     if(optionData && optionData.symbol && optionData.symbol ==  optionName){\r\n    //         var  ltpparam = { \"exchange\":optionData.exch_seg, \"tradingsymbol\": optionData.symbol , \"symboltoken\": optionData.token}; \r\n\r\n    //         AdminService.getLTP(ltpparam).then(res => {\r\n    //             let data = resolveResponse(res, 'noPop');\r\n    //             var LtpData = data && data.data;\r\n    //             if(LtpData && LtpData.ltp) {\r\n                    \r\n    //                 console.log(\"option ltp\", LtpData);\r\n\r\n    //                let quantity = optionData.lotsize * noOfLot;   \r\n\r\n    \r\n    //                let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * 10/100); \r\n    //                perStopTrigerLoss =  CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss); \r\n\r\n    //                let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1/100); \r\n\r\n    //                stopLossPrice =  CommonOrderMethod.getMinPriceAllowTick(stopLossPrice); \r\n\r\n    \r\n    //                 let element = {\r\n    //                     tradingsymbol : optionData.symbol, \r\n    //                     symboltoken : optionData.token, \r\n    //                     transactiontype: \"BUY\", \r\n    //                     ordertype: \"LIMIT\", \r\n    //                     buyPrice : LtpData.ltp,  \r\n    //                     producttype : \"CARRYFORWARD\", \r\n    //                     exchange : optionData.exch_seg,\r\n    //                     stopLossTriggerPrice: perStopTrigerLoss,\r\n    //                     stopLossPrice: stopLossPrice,\r\n    //                     quantity : quantity\r\n    //                 }        \r\n    //                 console.log( \"option buy element\", element);\r\n    //                CommonOrderMethod.placeOptionOrder(element);\r\n    //             }\r\n    //         })\r\n    //     }else{\r\n    //         Notify.showError(optionName + \" not found\");\r\n    //     }\r\n       \r\n\r\n    //     //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n    // //    this.setState({ autoSearchList: data });\r\n    // })\r\n    // }\r\n\r\n\r\n    render(){\r\n        \r\n      return(\r\n        <React.Fragment>\r\n\r\n             <Paper style={{ overflow: \"auto\", padding: '5px',  background:\"#f500570a\"}} >\r\n\r\n                <Grid justify=\"space-between\"\r\n                    container>\r\n                    <Grid item> \r\n                        <Typography  color=\"primary\" gutterBottom>\r\n                        Option Buy With Level ({this.state.orderPenidngOptionList && this.state.orderPenidngOptionList.length}) \r\n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\r\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\r\n                        </Typography> \r\n\r\n\r\n                    </Grid>\r\n\r\n                   \r\n\r\n                    <Grid item >\r\n\r\n                        <Grid container spacing={2}>\r\n                        <Grid item >\r\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\r\n                                <Autocomplete\r\n                                        freeSolo\r\n                                        id=\"free-solo-2-demo\"\r\n                                        \r\n                                        disableClearable\r\n                                        onChange={this.onSelectItem}\r\n                                        value={this.state.searchSymbolPending}\r\n                                        //+ ' '+  option.exch_seg\r\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                            option.symbol\r\n                                        ) : []}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                         \r\n                                                onChange={this.onChange2}\r\n                                                {...params}\r\n                                                label={\"Search Symbol\"}\r\n                                                margin=\"normal\"\r\n                                                style={{  width:\"200px\",marginTop: 'inherit' }}\r\n                                                name=\"searchSymbolPending\"\r\n                                                variant=\"standard\"\r\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                            /> \r\n                                        )}\r\n                                    />\r\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \r\n                    </Grid>\r\n\r\n                            \r\n                            <Grid item  >\r\n                                <TextField label=\"BuyAt(Above))\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\r\n                              <br /> High: {this.state.lastTradedData.high}\r\n                            </Grid>\r\n                            <Grid item  >\r\n                                <TextField label=\"SellAt(Below)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\r\n                                <br /> Low: {this.state.lastTradedData.low}\r\n                            </Grid>\r\n                            <Grid item  >\r\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\r\n                                <br /> Open: {this.state.lastTradedData.open}\r\n                            </Grid>\r\n                            <Grid item  >\r\n                                <TextField label=\"Price Stop Loss\" name=\"priceStopLoss\" value={this.state.priceStopLoss} onChange={this.updateInput} />\r\n                                <br /> \r\n                            </Grid>\r\n                            <Grid item  >\r\n                                <TextField label=\"Price Target\" name=\"priceTarget\" value={this.state.priceTarget} onChange={this.updateInput} />\r\n                                <br /> \r\n                            </Grid>\r\n                            <Grid item  >\r\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\r\n                                <br /> P.Close: {this.state.lastTradedData.close}\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Segm</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">PriceSL</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">PriceTarget</TableCell>\r\n\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n                            {this.state.orderPenidngOptionList ? this.state.orderPenidngOptionList.map(row => (\r\n                                 <TableRow hover >\r\n\r\n                                   \r\n\r\n\r\n                                    <TableCell align=\"left\">\r\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\r\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\r\n                                        </Button>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\r\n\r\n\r\n                                    {/* <TableCell align=\"left\">{row.exch_seg}</TableCell> */}\r\n                                    {/* <TableCell align=\"left\">{row.token}</TableCell> */}\r\n\r\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\r\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\r\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\r\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\r\n                                    <TableCell align=\"left\">{row.priceStopLoss}</TableCell>\r\n                                    <TableCell align=\"left\">{row.priceTarget}</TableCell>\r\n\r\n                                    <TableCell align=\"left\">\r\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                            )) : ''}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n                </Paper>\r\n\r\n                <br />\r\n         \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport * as moment from 'moment';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport BankNiftyView from './BankNiftyView'\r\nimport OptionBuyWithSPLevel from './OptionBuyWithSPLevel'\r\n\r\n\r\n\r\nclass OrderBook extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [],\r\n            buyAtPending: \"\",\r\n            sellAtPending: \"\",\r\n            pattenNamePending: \"\",\r\n            searchSymbolPending: \"\",\r\n            autoSearchList: [],\r\n            lastTradedData: {},\r\n            CEoptionsLtpList: [], \r\n            PEoptionsLtpList: [], \r\n            selectedOptionLotsize: '',\r\n            trackSLPrice: localStorage.getItem('trackSLPrice') && JSON.parse(localStorage.getItem('trackSLPrice')) || [],\r\n\r\n        }\r\n    }\r\n\r\n    searchSymbolPendingOrder = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n\r\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\r\n            let searchResdata = searchRes.data;\r\n            if (e.target.value) {\r\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\r\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\r\n                //  console.log(\"found\", found[0] && found[0].symbol); \r\n                if (found.length) {\r\n                    this.setState({ searchSymbolPending: found[0].symbol, searchTokenPending: found[0].token, exch_seg: found[0].exch_seg })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    updateInput = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    addInOrderPenidngList = async () => {\r\n\r\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending, \"CEStrikePrice\", this.state.CEStrikePrice);\r\n\r\n        if (parseFloat(this.state.sellAtPending) > this.state.lastTradedData.low) {\r\n            if (!window.confirm(\"Be carefull Selling at high price \" + this.state.sellAtPending + \", today \" + this.state.searchSymbolPending + \" low is \" + this.state.lastTradedData.low)) {\r\n                return;\r\n            }\r\n        }\r\n        if (parseFloat(this.state.buyAtPending) < this.state.lastTradedData.high) {\r\n            if (!window.confirm(\"Be carefull Buying at low price \" + this.state.buyAtPending + \", today \" + this.state.searchSymbolPending + \" high is \" + this.state.lastTradedData.high)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending) {\r\n\r\n            var data = {\r\n                createdAt: new Date().toLocaleTimeString(),\r\n                token: this.state.searchTokenPending,\r\n                symbol: this.state.searchSymbolPending,\r\n                buyAt: this.state.buyAtPending,\r\n                sellAt: this.state.sellAtPending,\r\n                pattenName: this.state.pattenNamePending,\r\n                exch_seg: this.state.exch_seg,\r\n                buyCallOption: this.state.CEStrikePrice, \r\n                buyPutOption: this.state.PEStrikePrice\r\n            }\r\n\r\n            this.setState({ orderPenidngList: [...this.state.orderPenidngList, data],  CEStrikePrice : '', PEStrikePrice:'' }, function () {\r\n                this.setState({ searchSymbolPending: '', searchTokenPending: '', buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\" })\r\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\r\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteInOrderPenidngList = (row) => {\r\n\r\n        console.log(\"callback\", row);\r\n        var isDeleted = false, delitem = '';\r\n        var orderPenidngList = localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList'));\r\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\r\n            const element = orderPenidngList[index];\r\n            if (row.token == element.token) {\r\n                var delitem = orderPenidngList.splice(index, 1);\r\n                localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList));\r\n                this.setState({ orderPenidngList: orderPenidngList });\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (delitem[0].token == row.token) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    callBackUpdate = (row) => {\r\n        console.log(\"call back called\");\r\n        // this.deleteInOrderPenidngList(row); \r\n    }\r\n    \r\n\r\n    updateLTP = async () => {\r\n\r\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\r\n            const element = this.state.orderPenidngList[index];\r\n            var data = { \"exchange\": element.exch_seg, \"tradingsymbol\": element.symbol, \"symboltoken\": element.token };\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                //console.log(LtpData);\r\n                if (LtpData && LtpData.ltp) {\r\n                    element.ltp = LtpData.ltp;\r\n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\r\n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\r\n                    this.setState({ orderPenidngList: this.state.orderPenidngList });\r\n                    console.log(\"ltp update\", element.symbol, element)\r\n\r\n                    if (element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)) {\r\n                        var isDelete = this.deleteInOrderPenidngList(element);\r\n                        if (isDelete) { \r\n                            if(element.buyCallOption){\r\n                                //place order here\r\n                                this.buyStockOption(element.buyCallOption);  \r\n                            }else{\r\n                                CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\r\n                            }\r\n                        }\r\n                    } else if (element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)) {\r\n                        var isDelete = this.deleteInOrderPenidngList(element);\r\n                        if (isDelete) {\r\n                            if(element.buyPutOption){\r\n                                //place order here\r\n                                this.buyStockOption(element.buyPutOption);  \r\n                            }else{\r\n                                CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 100));\r\n        }\r\n    }\r\n\r\n    getTradePrice = () => {\r\n\r\n        var data = { \"exchange\": this.state.exch_seg, \"tradingsymbol\": this.state.searchSymbolPending, \"symboltoken\": this.state.searchTokenPending };\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            //console.log(LtpData);\r\n            if (LtpData && LtpData.ltp) {\r\n\r\n\r\n                var lastTradedData = {\r\n                    symbol: LtpData.tradingsymbol,\r\n                    ltp: LtpData.ltp,\r\n                    perChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2),\r\n                    open: LtpData.open,\r\n                    high: LtpData.high,\r\n                    close: LtpData.close,\r\n                    low: LtpData.low,\r\n                }\r\n                this.setState({ lastTradedData: lastTradedData });\r\n                this.showStrikesLtp(\"CE\");\r\n                this.showStrikesLtp(\"PE\");\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.updateLTP();\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            var intervaltime = 1000;\r\n            if (this.state.orderPenidngList.length > 10) {\r\n                intervaltime = this.state.orderPenidngList.length * 110;\r\n            }\r\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime) });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    refreshCandleChartManually = async (row) => {\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var time = moment.duration(\"12:00:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": row.token,\r\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n        }\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let histdata = resolveResponse(res, 'noPop');\r\n            //console.log(\"candle history\", histdata); \r\n            if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                var candleChartData = [];\r\n                histdata.data.forEach(element => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                });\r\n\r\n                localStorage.setItem('candleChangeShow', row.perChange);\r\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\r\n                localStorage.setItem('cadleChartSymbol', row.symbol);\r\n                document.getElementById('showCandleChart').click();\r\n\r\n            } else {\r\n                //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                console.log(row.symboltoken, \"  emply candle found\");\r\n            }\r\n        }).catch(error => {\r\n            this.setState({ failedCount: this.state.failedCount + 1 });\r\n            Notify.showError(row.symboltoken + \" candle failed!\");\r\n        })\r\n\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    onChangeOption = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onChange2 = (e) => {\r\n        this.setState({ lastTradedData: {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\", searchSymbolPending: \"\",  CEStrikePrice: '', PEStrikePrice: ''});\r\n\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data },() => {\r\n             \r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    openNewPage = (e) => {\r\n        window.open(\"/mtrade/#/order-watchlist\");\r\n        //   window.location.replace('/mtrade/#/order-watchlist'); \r\n        localStorage.setItem('isOpenInNewPage', 'yes');\r\n    }\r\n\r\n    backToPositionPage = (e) => {\r\n        window.location.replace('/mtrade/#/position');\r\n        localStorage.setItem('isOpenInNewPage', 'no');\r\n    }\r\n\r\n\r\n    onSelectItem = (event, values) => {\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n        //  console.log(\"values\", values); \r\n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n            this.setState({ searchSymbolPending: fdata.symbol, searchTokenPending: fdata.token, exch_seg: fdata.exch_seg }, function () {\r\n                this.getTradePrice();\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getChunkPrice = (price) => {\r\n        return Math.round(price / 100) / 10;\r\n    }\r\n\r\n    suggestBuyPrice = (price) => {\r\n        if (price) {\r\n\r\n            this.setState({ buyAtPending: (price + this.getChunkPrice(price)).toFixed(2) });\r\n\r\n        }\r\n    }\r\n\r\n    suggestSellPrice = (price) => {\r\n        if (price) {\r\n            this.setState({ sellAtPending: (price - this.getChunkPrice(price)).toFixed(2) });\r\n        }\r\n    }\r\n\r\n    showStrikesLtp =(optionType)=> {\r\n       console.log(this.state.searchSymbolPending,  this.state.lastTradedData.ltp); \r\n       this.setState({CEoptionsLtpList : [], PEoptionsLtpList : [], selectedOptionLotsize : ''})\r\n\r\n           let data = {\r\n                name : this.state.searchSymbolPending, \r\n                ltp : this.state.lastTradedData.ltp, \r\n                optionType: optionType\r\n            }; \r\n       AdminService.getStockOptions(data).then(res => {\r\n            let data = res.data;\r\n          //  console.log(data);\r\n            this.getOptionsLtp(data,  optionType); \r\n            //  localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n          //  this.setState({ autoSearchList: data });\r\n        })\r\n    }\r\n    getOptionsLtp = async(nearOptions, optionType)=> {\r\n\r\n        console.log(\"nearOptions\", nearOptions, nearOptions.length)\r\n\r\n        for (let index = 0; index < nearOptions.length; index++) {\r\n            const element = nearOptions[index];\r\n            console.log(\"element\", element )\r\n\r\n\r\n            var data = { \"exchange\": element.exch_seg, \"tradingsymbol\": element.symbol, \"symboltoken\": element.token };\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                console.log(element.symbol, LtpData, res);\r\n                if (LtpData && LtpData.ltp) {\r\n\r\n                    let optionLtp = {\r\n                        symbol: LtpData.tradingsymbol,\r\n                        ltp: LtpData.ltp,\r\n                        perChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2),\r\n                        open: LtpData.open,\r\n                        high: LtpData.high,\r\n                        close: LtpData.close,\r\n                        low: LtpData.low,\r\n                        buyPrice: (parseFloat(element.lotsize) * LtpData.ltp).toFixed(2), \r\n                        expiryMonth: element.expiryMonth,\r\n                        strikePrice : parseFloat(element.strike/100), \r\n                        optionType: element.optionType, \r\n                        token:element.token, \r\n                        exch_seg: element.exch_seg, \r\n                        lotsize: element.lotsize\r\n                    }\r\n\r\n                    if(optionType === 'CE'){\r\n                        this.setState({ CEoptionsLtpList: [...this.state.CEoptionsLtpList, optionLtp],  selectedOptionLotsize :  element.lotsize}, ()=> {\r\n                            console.log(this.state.CEoptionsLtpList)\r\n                        });\r\n                    }\r\n                    if(optionType === 'PE'){\r\n                        this.setState({ PEoptionsLtpList: [...this.state.PEoptionsLtpList, optionLtp],  selectedOptionLotsize :  element.lotsize}, ()=> {\r\n                            console.log(this.state.PEoptionsLtpList)\r\n                        });\r\n                    }\r\n                    \r\n                }\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 250));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    buyOption = (optiontype, symbol, strikePrice, expiryDate, noOfLot, priceInfo) => {\r\n        console.log(optiontype, symbol, strikePrice, expiryDate);\r\n        let exp = expiryDate.toUpperCase().split('-');\r\n        exp = exp[0] + exp[1] + exp[2] % 1000;\r\n\r\n        let optionName = symbol + exp + strikePrice + optiontype;\r\n        console.log(optionName);\r\n\r\n        AdminService.autoCompleteSearch(optionName).then(res => {\r\n            let data = res.data;\r\n            let optionData = data && data[0];\r\n            console.log(\"optionData\", optionData);\r\n\r\n\r\n            if (optionData && optionData.symbol && optionData.symbol == optionName) {\r\n                var ltpparam = { \"exchange\": optionData.exch_seg, \"tradingsymbol\": optionData.symbol, \"symboltoken\": optionData.token };\r\n\r\n                AdminService.getLTP(ltpparam).then(res => {\r\n                    let data = resolveResponse(res, 'noPop');\r\n                    var LtpData = data && data.data;\r\n                    if (LtpData && LtpData.ltp) {\r\n\r\n                        console.log(\"option ltp\", LtpData);\r\n\r\n                        let quantity = optionData.lotsize * noOfLot;\r\n\r\n                        let today = moment().isoWeekday();\r\n                        let slpercentage = 10;\r\n                        if (today == 2)\r\n                            slpercentage = 15\r\n                        else if (today == 3)\r\n                            slpercentage = 20\r\n                        else if (today == 4)\r\n                            slpercentage = 30\r\n\r\n                        let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * slpercentage / 100);\r\n                        perStopTrigerLoss = CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss);\r\n                        let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1 / 100);\r\n                        stopLossPrice = CommonOrderMethod.getMinPriceAllowTick(stopLossPrice);\r\n\r\n                        if (priceInfo && priceInfo.priceStopLoss) {\r\n\r\n                            slpercentage = 50\r\n                            perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * slpercentage / 100);\r\n                            perStopTrigerLoss = CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss);\r\n                            stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1 / 100);\r\n                            stopLossPrice = CommonOrderMethod.getMinPriceAllowTick(stopLossPrice);\r\n\r\n                            let trackSLPrice = {\r\n                                name: symbol,\r\n                                priceStopLoss: priceInfo.priceStopLoss,\r\n                                priceTarget: priceInfo.priceTarget,\r\n                                tradingsymbol: optionData.symbol,\r\n                                symboltoken: optionData.token,\r\n                                optiontype: optiontype\r\n                            }\r\n                            this.setState({ trackSLPrice: [...this.state.trackSLPrice, trackSLPrice] }, function () {\r\n                                localStorage.setItem('trackSLPrice', JSON.stringify(this.state.trackSLPrice));\r\n                            })\r\n                        }\r\n\r\n\r\n                        let element = {\r\n                            tradingsymbol: optionData.symbol,\r\n                            symboltoken: optionData.token,\r\n                            transactiontype: \"BUY\",\r\n                            ordertype: \"LIMIT\",\r\n                            buyPrice: LtpData.ltp,\r\n                            producttype: \"CARRYFORWARD\",\r\n                            exchange: optionData.exch_seg,\r\n                            stopLossTriggerPrice: perStopTrigerLoss,\r\n                            stopLossPrice: stopLossPrice,\r\n                            quantity: quantity\r\n                        }\r\n                        console.log(\"option buy element\", element);\r\n                        CommonOrderMethod.placeOptionOrder(element);\r\n                    }\r\n                })\r\n            } else {\r\n                Notify.showError(optionName + \" not found\");\r\n            }\r\n\r\n            //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            //    this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n\r\n    buyStockOption = (optionData) => {\r\n\r\n        var ltpparam = { \"exchange\": optionData.exch_seg, \"tradingsymbol\": optionData.symbol, \"symboltoken\": optionData.token };\r\n\r\n        AdminService.getLTP(ltpparam).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            if (LtpData && LtpData.ltp) {\r\n\r\n                console.log(\"option ltp\", LtpData);\r\n\r\n                let quantity = optionData.lotsize;\r\n\r\n                // let today = moment().isoWeekday();\r\n                 let slpercentage = 10;\r\n                // if (today == 2)\r\n                //     slpercentage = 15\r\n                // else if (today == 3)\r\n                //     slpercentage = 20\r\n                // else if (today == 4)\r\n                //     slpercentage = 30\r\n\r\n                let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * slpercentage / 100);\r\n                perStopTrigerLoss = CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss);\r\n                let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1 / 100);\r\n                stopLossPrice = CommonOrderMethod.getMinPriceAllowTick(stopLossPrice);\r\n\r\n                let element = {\r\n                    tradingsymbol: optionData.symbol,\r\n                    symboltoken: optionData.token,\r\n                    transactiontype: \"BUY\",\r\n                    ordertype: \"LIMIT\",\r\n                    buyPrice: LtpData.ltp,\r\n                    producttype: \"CARRYFORWARD\",\r\n                    exchange: optionData.exch_seg,\r\n                    stopLossTriggerPrice: perStopTrigerLoss,\r\n                    stopLossPrice: stopLossPrice,\r\n                    quantity: quantity,\r\n                    netqty:quantity\r\n                }\r\n                console.log(\"option buy element\", element);\r\n                CommonOrderMethod.placeOptionOrder(element);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n                {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar /> : \"\"}\r\n\r\n\r\n                <Grid justify=\"space-between\" container>\r\n                    <Grid item xs={12} sm={12}>\r\n                        {window.location.hash == \"#/order-watchlist\" ? <OptionBuyWithSPLevel buyOption={this.buyOption} /> : \"\"}\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Paper style={{ overflow: \"auto\", padding: '5px', background: \"#d4ffe0\" }} >\r\n                            <Typography color=\"primary\" gutterBottom>\r\n                                Stock  Order Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length})\r\n                                {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon /> </Button> : \"\"}\r\n                                {window.location.hash != \"#/position\" ? <Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\r\n                            </Typography>\r\n\r\n                            <Grid justify=\"space-between\"\r\n                                container>\r\n\r\n\r\n\r\n\r\n                                <Grid item  >\r\n\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item >\r\n                                            {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\r\n                                            <Autocomplete\r\n                                                freeSolo\r\n                                                id=\"free-solo-2-demo\"\r\n\r\n                                                disableClearable\r\n                                                onChange={this.onSelectItem}\r\n                                                value={this.state.searchSymbolPending}\r\n                                                //+ ' '+  option.exch_seg\r\n                                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                                    option.symbol\r\n                                                ) : []}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        onChange={this.onChange2}\r\n                                                        {...params}\r\n                                                        label={\"Search Symbol\"}\r\n                                                        margin=\"normal\"\r\n                                                        style={{ width: \"200px\", marginTop: 'inherit' }}\r\n                                                        name=\"searchSymbolPending\"\r\n                                                        variant=\"standard\"\r\n                                                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            {this.state.lastTradedData.symbol}  Ltp: <b style={{ color: this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\" }}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\" + this.state.lastTradedData.perChange + \"%)\" : \"\"}</b>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item>\r\n                                            <TextField label=\"BuyAt(Above)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\r\n                                            <br /> High: {this.state.lastTradedData.high}\r\n                                            <Button size=\"small\" style={{ color: \"blue\" }} onClick={() => this.suggestBuyPrice(this.state.lastTradedData.high)}> Suggest Price </Button>\r\n\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel htmlFor=\"strike\">Strike</InputLabel>\r\n                                                <Select value={this.state.CEStrikePrice} name=\"CEStrikePrice\" style={{width: \"200px\"}} onChange={this.onChangeOption}>\r\n                                                    <MenuItem value={''}>Month Strike Type Ltp Margin</MenuItem>\r\n                                                    {this.state.CEoptionsLtpList && this.state.CEoptionsLtpList.map(element => (\r\n                                                        <MenuItem style={{ fontWeight:  moment().format('MMM').toUpperCase() == element.expiryMonth ? \"bold\" : \"\" }} value={element}>{element.expiryMonth+\" \" +element.strikePrice +\" \"+ element.optionType +\" ltp: \" + element.ltp + \"/- \" + element.buyPrice}</MenuItem>\r\n                                                    ))\r\n                                                    }\r\n                                                </Select>\r\n                                                Lotsize: {this.state.selectedOptionLotsize}\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid item>\r\n                                            <TextField label=\"SellAt(Below)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\r\n                                            <br /> Low: {this.state.lastTradedData.low}\r\n                                            <Button size=\"small\" style={{ color: \"blue\" }} onClick={() => this.suggestSellPrice(this.state.lastTradedData.low)}> Suggest Price </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel htmlFor=\"strike\">Strike</InputLabel>\r\n                                                <Select value={this.state.PEStrikePrice} name=\"PEStrikePrice\" style={{width: \"200px\"}} onChange={this.onChangeOption}>\r\n                                                    <MenuItem value={''}>Month Strike Type Ltp Margin</MenuItem>\r\n                                                    {this.state.PEoptionsLtpList && this.state.PEoptionsLtpList.map(element => (\r\n                                                        <MenuItem style={{ fontWeight:  moment().format('MMM').toUpperCase() == element.expiryMonth ? \"bold\" : \"\" }} value={element}>{element.expiryMonth+\" \" +element.strikePrice +\" \"+ element.optionType +\" ltp: \" + element.ltp + \"/- \" + element.buyPrice}</MenuItem>\r\n                                                    ))\r\n                                                    }\r\n                                                </Select>\r\n                                                Lotsize: {this.state.selectedOptionLotsize}\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\r\n                                            <br /> Open: {this.state.lastTradedData.open}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\r\n                                            <br /> P.Close: {this.state.lastTradedData.close}\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                    <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                                        <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\r\n\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\r\n\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">CE Buy</TableCell>\r\n\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">PE Buy</TableCell>\r\n\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\r\n                                            <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\r\n\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n                                        {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\r\n                                            <TableRow hover >\r\n\r\n\r\n\r\n\r\n                                                <TableCell align=\"left\">\r\n                                                    <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\r\n                                                        {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{row.pattenName}</TableCell>\r\n\r\n\r\n                                                <TableCell align=\"left\">{row.createdAt}</TableCell>\r\n\r\n\r\n                                                <TableCell align=\"left\">{row.exch_seg}</TableCell>\r\n                                                <TableCell align=\"left\">{row.token}</TableCell>\r\n\r\n                                                <TableCell align=\"left\">{row.buyAt}</TableCell>\r\n                                                <TableCell align=\"left\">{row.buyCallOption && row.buyCallOption.symbol}</TableCell>\r\n\r\n                                                <TableCell align=\"left\">{row.sellAt}</TableCell>\r\n                                                <TableCell align=\"left\">{row.buyPutOption && row.buyPutOption.symbol}</TableCell>\r\n\r\n                                                <TableCell align=\"left\" style={{ color: row.perChange == 0.00 ? \"none\" : row.perChange > 0 ? \"green\" : \"red\" }}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\r\n\r\n                                                <TableCell align=\"left\">\r\n                                                    <DeleteIcon style={{ cursor: \"pointer\" }} onClick={() => this.deleteInOrderPenidngList(row)} />\r\n                                                </TableCell>\r\n\r\n                                            </TableRow>\r\n                                        )) : ''}\r\n                                    </TableBody>\r\n                                </Table>\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n                {window.location.hash == \"#/order-watchlist\" ?\r\n                    <Paper style={{ overflow: \"auto\", padding: '5px' }} >\r\n                        <Typography color=\"primary\" gutterBottom>\r\n                            Option Chain (Equity Derivatives)\r\n                        </Typography>\r\n                        <BankNiftyView buyOption={this.buyOption} />\r\n                    </Paper> : \"\"}\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    tableStyle : {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n}\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport * as moment from 'moment';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Notify from \"../../utils/Notify\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\nimport { createChart } from 'lightweight-charts';\r\n\r\nimport { w3cwebsocket } from 'websocket';\r\nimport ChartDialog from './ChartDialog';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport pako from 'pako';\r\nimport vwap from 'vwap';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport SimpleExpansionPanel from \"./SimpleExpansionPanel\";\r\nimport SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\r\nimport LiveBidsExpantion from \"./LiveBidsExpantion\";\r\nimport WatchListTab from \"./WatchListTab\";\r\nimport OrderWatchlist from './OrderWatchlist';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sumPercentage: 0,\r\n            InstrumentPerChange: \"\",\r\n            autoSearchList: [],\r\n            isDasable: false,\r\n            isError: false,\r\n            InstrumentLTP: {},\r\n            ifNotBought: true,\r\n            autoSearchTemp: [],\r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"INTRADAY\",\r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\r\n            longExitPriceType: 4,\r\n            shortExitPriceType: 4,\r\n            candleChartData: [],\r\n            stopScaningFlag: false,\r\n            searchFailed: 0,\r\n            openEqualHighList: [],\r\n            openEqualLowList: [],\r\n            closeingEqualHighList: [],\r\n            chartStaticData: [],\r\n            volumeCrossedList: [],\r\n            slowMotionStockList: [],\r\n            volumeBreakoutlast5CandleList: [],\r\n            oneHourBullBearCheckList: [],\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            cursor: '',\r\n            advanceShareCount: 0,\r\n            declineShareCount: 0,\r\n            UnchangeShareCount: 0,\r\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n            liveBidsList: [], //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\r\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\r\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            //  console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            //    console.log(\"time\", this.state.timeFrame);\r\n            if (this.state.tradingsymbol) {\r\n                this.showStaticChart(this.state.symboltoken);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var staticData = this.state.staticData;\r\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\r\n            //    this.updateSocketWatch();\r\n            this.checkOpenEqualToLow();\r\n            this.setState({ cursor: '' });\r\n        });\r\n\r\n        if (e.target.value == \"selectall\") {\r\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\r\n                //      this.updateSocketWatch();\r\n                //  this.checkOpenEqualToLow();\r\n                this.setState({ cursor: '' });\r\n            });\r\n        }\r\n    }\r\n    checkOpenEqualToLow = async () => {\r\n\r\n        this.setState({\r\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\r\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: [], closeingEqualHighList: []\r\n        });\r\n\r\n\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            const element = this.state.symbolList[index];\r\n\r\n            var data = {\r\n                \"exchange\": element.exch_seg,\r\n                \"tradingsymbol\": element.symbol,\r\n                \"symboltoken\": element.token,\r\n            }\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                if (LtpData) {\r\n\r\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\r\n                    LtpData.nc = change;\r\n                    LtpData.symbol = element.symbol;\r\n\r\n                    this.state.symbolList[index].ltp = LtpData.ltp;\r\n                    this.state.symbolList[index].nc = change;\r\n\r\n                    if (LtpData && LtpData.open == LtpData.low) {\r\n                        console.log(\"o=l\", LtpData);\r\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\r\n                        if (!isfound.length)\r\n                            this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\r\n                    }\r\n                    console.log(element.symbol, \"ltp=newhigh\", LtpData.ltp, (LtpData.high - LtpData.high * 0.5 / 100));\r\n\r\n                    if (LtpData && LtpData.ltp >= (LtpData.high - LtpData.high * 0.5 / 100)) {\r\n                        var isfound = this.state.closeingEqualHighList.filter(row => row.symboltoken == element.token);\r\n                        if (!isfound.length)\r\n                            this.setState({ closeingEqualHighList: [...this.state.closeingEqualHighList, LtpData] });\r\n                    }\r\n\r\n                    if (LtpData && LtpData.open == LtpData.high) {\r\n                        console.log(\"o=h\", LtpData);\r\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\r\n                        if (!isfound.length)\r\n                            this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\r\n\r\n                    }\r\n\r\n                    if (LtpData.perChange > 0)\r\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\r\n                    else if (LtpData.perChange < 0)\r\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\r\n                    else\r\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\r\n\r\n\r\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\r\n                        return b.nc - a.nc;\r\n                    });\r\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\r\n\r\n                    //   this.dailyBasisInfoCheck(element.token, element);\r\n\r\n                    // this.checkSlowMotionStock(element.token, element);\r\n\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n            this.setState({ startDate: date });\r\n        } else if (fromDate === \"END_DATE\") {\r\n            this.setState({ endDate: date });\r\n        }\r\n    };\r\n    getLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            this.setState({ InstrumentLTP: LtpData });\r\n\r\n            if (LtpData && LtpData.ltp)\r\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\r\n            //  this.dailyBasisInfoCheck(this.state.symboltoken);\r\n\r\n\r\n        })\r\n    }\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n\r\n        return newarray.join('');\r\n    }\r\n\r\n\r\n\r\n    makeConnection = (wsClint) => {\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        wsClint.send(firstTime_req);\r\n        this.updateSocketWatch(wsClint);\r\n    }\r\n\r\n    updateSocketWatch = (wsClint) => {\r\n        var channel = this.state.symbolList.map(element => {\r\n            return 'nse_cm|' + element.token;\r\n        });\r\n        channel = channel.join('&');\r\n        var updateSocket = {\r\n            \"task\": \"mw\",\r\n            \"channel\": channel,\r\n            \"token\": this.state.feedToken,\r\n            \"user\": this.state.clientcode,\r\n            \"acctid\": this.state.clientcode\r\n        }\r\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\r\n        wsClint.send(JSON.stringify(updateSocket));\r\n    }\r\n\r\n    updateSocketDetails = (wsClint) => {\r\n        wsClint.onopen = (res) => {\r\n            this.makeConnection(wsClint);\r\n            this.updateSocketWatch(wsClint);\r\n        }\r\n\r\n        wsClint.onmessage = (message) => {\r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n            var liveData = JSON.parse(data);\r\n            var symbolListArray = this.state.symbolList;\r\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\r\n                var foundLive = liveData.filter(row => row.tk == element.token);\r\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\r\n                    symbolListArray[index].ltp = foundLive[0].ltp;\r\n                    symbolListArray[index].nc = foundLive[0].nc;\r\n                    //  console.log(\"ws onmessage: \", foundLive);\r\n\r\n                }\r\n            });\r\n            symbolListArray && symbolListArray.sort(function (a, b) {\r\n                return b.nc - a.nc;\r\n            });\r\n            this.setState({ symbolList: symbolListArray });\r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e);\r\n        }\r\n\r\n        setInterval(() => {\r\n            //  this.makeConnection();\r\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n            // console.log(\"Request :- \" + _req);\r\n            wsClint.send(_req);\r\n        }, 59000);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"Home\";\r\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\r\n\r\n        const domElement = document.getElementById('tvchart');\r\n        document.getElementById('tvchart').innerHTML = '';\r\n        const chart = createChart(domElement, { width: 600, height: 400, timeVisible: true, secondsVisible: true, });\r\n        const candleSeries = chart.addCandlestickSeries();\r\n        var smaLineSeries = chart.addLineSeries({\r\n            color: 'rgba(4, 111, 232, 1)',\r\n            lineWidth: 2,\r\n        });\r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n\r\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\r\n\r\n        // this.checkOpenEqualToLow();\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            // const wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n            // this.updateSocketDetails(wsClint);\r\n            setInterval(() => {\r\n                if (this.state.tradingsymbol) {\r\n                    this.getLTP();\r\n                    //this.showStaticChart(this.state.symboltoken);\r\n                }\r\n                var fastMovementList = localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList'));\r\n                fastMovementList && fastMovementList.length && fastMovementList.reverse();\r\n                this.setState({ fastMovementList: fastMovementList })\r\n            }, 1000);\r\n\r\n            setInterval(() => {\r\n                this.checkSlowMotionCheckLive();\r\n            }, 5 * 75000);\r\n\r\n\r\n            setInterval(() => {\r\n                this.searchValumeBreakoutStock();\r\n            }, 15 * 75000);\r\n\r\n\r\n            var tostartInteral = setInterval(() => {\r\n                var time = new Date();\r\n                console.log(\"setinterval \", new Date().toLocaleString());\r\n                if (time.getMinutes() % 60 === 0) {\r\n                    setTimeout(() => {\r\n                        this.oneHourBullBearCheck();\r\n                    }, 90000);\r\n                    setInterval(() => {\r\n                        this.oneHourBullBearCheck();\r\n                    }, 60000 * 60 + 70000);\r\n                    clearInterval(tostartInteral);\r\n                }\r\n            }, 1000);\r\n\r\n        }\r\n\r\n\r\n        setInterval(() => {\r\n\r\n\r\n            this.setState({ gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) })\r\n            this.setState({ looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) })\r\n\r\n\r\n        }, 1000);\r\n\r\n        //  this.oneHourBullBearCheck(); \r\n\r\n        // this.checkLiveBids();\r\n\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //     return  false //!equals(nextProps, this.props); // equals() is your implementation\r\n    // }\r\n\r\n\r\n    placeOrder = (transactiontype) => {\r\n\r\n        var data = {\r\n            \"variety\": \"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": transactiontype, //BUY OR SELL\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //   console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n\r\n                if (this.state.stoploss) {\r\n\r\n                    if (transactiontype == \"BUY\") {\r\n                        this.placeSLMOrder(\"SELL\");\r\n                    }\r\n\r\n                    if (transactiontype == \"SELL\") {\r\n                        this.placeSLMOrder(\"BUY\");\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails = (name, i) => {\r\n        console.log(\"name\", name);\r\n        var token = '';\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            if (watchList[index].symbol === name || watchList[index].name === name) {\r\n                token = watchList[index].token;\r\n                console.log(\"name % token\", name, token);\r\n                this.setState({ tradingsymbol: watchList[index].symbol, symboltoken: watchList[index].token }, function () {\r\n                    this.setState({ cursor: i }, function () {\r\n                        this.showStaticChart(token);\r\n                        // this.getLTP();\r\n                        // this.dailyBasisInfoCheck(this.state.symboltoken);\r\n                    });\r\n                });\r\n                break;\r\n            } else {\r\n                // Notify.showError(name + \" not found!\");\r\n                console.log(name + \" not found!\");\r\n            }\r\n        }\r\n    }\r\n    getTimeFrameValue = (timeFrame) => {\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n\r\n\r\n        switch (timeFrame) {\r\n            // case 'ONE_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"10:05:00\")\r\n            //         return \"19:00:00\";\r\n            //     else\r\n            //         return \"01:00:00\";\r\n            //     break;\r\n            // case 'FIVE_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"11:00:00\")\r\n            //         return \"23:00:00\";\r\n            //     else\r\n            //         return \"03:00:00\";\r\n            //     break;\r\n            // case 'TEN_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"12:35:00\")\r\n            //         return \"24:21:00\";\r\n            //     else\r\n            //         return \"07:00:00\";\r\n            //     break;\r\n            // case 'FIFTEEN_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"14:15:00\")\r\n            //         return \"28:01:00\";\r\n            //     else\r\n            //         return \"10:01:00\";\r\n            //     break;\r\n            // case 'THIRTY_MINUTE':\r\n            //     return \"100:01:00\";\r\n            //     break;\r\n            // case 'ONE_HOUR':\r\n            //     return \"200:01:00\";\r\n            //     break;\r\n            // case 'ONE_DAY':\r\n            //     return \"1000:01:00\";\r\n            //     break;\r\n            // default:\r\n            //     break;\r\n\r\n            case 'ONE_MINUTE':\r\n                return \"720:00:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"1000:00:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    calculateSMA = (data, count) => {\r\n\r\n        //  console.log(\"smarowdata\", data, count);\r\n\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //   calculateBBValue = (data, type ) => {\r\n\r\n    //     console.log(\"smarowdata\", data , count); \r\n\r\n    //     var result = [];\r\n    //     for (var i=count - 1, len=data.length; i < len; i++){\r\n    //       var val = avg(data.slice(i - count + 1, i));\r\n    //       result.push({ time: data[i].time, value: val});\r\n    //     }\r\n    //     return result;\r\n    //   }\r\n\r\n\r\n\r\n    showStaticChart = (token) => {\r\n\r\n        this.setState({ chartStaticData: '' }, function () {\r\n            console.log('reset done', token);\r\n        });\r\n\r\n\r\n\r\n\r\n        console.log(\"time in function \", this.state.timeFrame);\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        // var time = moment.duration(\"10:50:00\");\r\n        // var startDate = moment(new Date()).subtract(time);\r\n        // var startdate = moment(this.state.startDate).subtract(time);\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n        let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n        var startDate = moment(new Date()).subtract(time);\r\n\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let historyData = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (historyData && historyData.data) {\r\n\r\n                var data = historyData.data;\r\n\r\n                const cdata = data.map(d => {\r\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                });\r\n\r\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                data.forEach((element, loopindex) => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                    closeingData.push(element[4]);\r\n                    highData.push(element[2]);\r\n                    lowData.push(element[3]);\r\n                    openData.push(element[3]);\r\n                    valumeData.push(element[5]);\r\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                });\r\n\r\n                var input = {\r\n                    period: 20,\r\n                    values: bbdata,\r\n                    stdDev: 2\r\n                }\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var inputRSI = { values: closeingData, period: 14 };\r\n                var rsiValues = RSI.calculate(inputRSI);\r\n\r\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\r\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\r\n                    // candleSeries.setData(this.state.chartStaticData); \r\n                    this.state.candleSeries.setData(this.state.chartStaticData);\r\n\r\n                    this.state.volumeSeries.setData(volumeSeriesData);\r\n\r\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\r\n\r\n                    this.state.smaLineSeries.setData(smaData);\r\n\r\n\r\n                    this.state.chart.subscribeCrosshairMove((param) => {\r\n\r\n                        var getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n                        var string = \"\";\r\n                        var change = \"\";\r\n\r\n                        for (var elem of getit) {\r\n\r\n                            if (typeof elem[1] == 'object') {\r\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\r\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\r\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\r\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\r\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\r\n                            } else {\r\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\r\n                            }\r\n                        }\r\n\r\n                        if (param.time)\r\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\r\n                        else\r\n                            string += \" <b>Time: </b>\";\r\n\r\n\r\n                        const domElement = document.getElementById('showChartTitle');\r\n\r\n\r\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\r\n                        if (change < 0)\r\n                            str = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n                        domElement.innerHTML = str;\r\n                    });\r\n\r\n\r\n                });\r\n\r\n\r\n                data && data.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (data.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\r\n                    this.setState({ InstrumentHistroy: data });\r\n\r\n\r\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\r\n                    data.forEach(element => {\r\n\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n                        if (per >= 0.3) {\r\n                            upsideMoveCount += 1;\r\n                        }\r\n                        if (per <= -0.3) {\r\n                            downMoveCount += 1;\r\n                        }\r\n\r\n                        totalSum += per;\r\n\r\n                    });\r\n\r\n\r\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    checkSlowMotionStock = (token, stock) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \r\n        var startDate = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": 'FIVE_MINUTE',\r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0;\r\n\r\n                var bigCandleCount = 0;\r\n\r\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n\r\n                    if (element) {\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n\r\n                        if (per >= 0.4) {\r\n                            bigCandleCount += 1;\r\n                            console.log(stock.symbol, per, element[0]);\r\n\r\n                        }\r\n                        if (per <= -0.4) {\r\n                            bigCandleCount += 1;\r\n                            console.log(stock.symbol, per, element[0]);\r\n\r\n                        }\r\n                    }\r\n                }\r\n                console.log(\"Totalcount\", stock.symbol, bigCandleCount);\r\n                if (bigCandleCount <= 15) {\r\n\r\n                    stock.bigCandleCount = bigCandleCount;\r\n\r\n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\r\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\r\n                    });\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    checkSlowMotionCheckLive = async () => {\r\n\r\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\r\n            const row = this.state.slowMotionStockList[index];\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \r\n            var startDate = moment(new Date()).subtract(time);\r\n            var dataDay = {\r\n                \"exchange\": 'NSE',\r\n                \"symboltoken\": row.token,\r\n                \"interval\": 'FIVE_MINUTE',\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n            AdminService.getHistoryData(dataDay).then(resd => {\r\n                let histdatad = resolveResponse(resd, 'noPop');\r\n                var DSMA = '';\r\n                if (histdatad && histdatad.data && histdatad.data.length) {\r\n                    var candleDatad = histdatad.data;\r\n                    var closeingDatadaily = [], valumeSum = 0;\r\n\r\n                    var bigCandleCount = 0, bullishCount = 0;\r\n\r\n                    for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\r\n                        const element = candleDatad[index];\r\n\r\n                        if (element) {\r\n\r\n                            var per = (element[4] - element[1]) * 100 / element[1];\r\n                            if (per >= 0.7) {\r\n                                bigCandleCount += 1;\r\n                            }\r\n                            if (per >= 0) {\r\n                                bullishCount += 1;\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    if (bigCandleCount >= 1) {\r\n                        row.highlisht = true;\r\n                        window.document.title = \"SM: \" + row.symbol;\r\n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\r\n\r\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\r\n\r\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\r\n                    }\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n    }\r\n\r\n    checkLiveBids = async () => {\r\n\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            const row = this.state.symbolList[index];\r\n\r\n            AdminService.checkLiveBids(row.name).then(resd => {\r\n                // let histdatad = resolveResponse(resd, 'noPop');\r\n\r\n                console.log(\"bid\", resd.data.data);\r\n\r\n                // adhocMargin: \"0.48\"\r\n                // applicableMargin: \"19.00\"\r\n                // averagePrice: \"705.27\"\r\n                // basePrice: \"717.15\"\r\n                // bcEndDate: \"-\"\r\n                // bcStartDate: \"-\"\r\n                // buyPrice1: \"710.60\"\r\n                // buyPrice2: \"710.55\"\r\n                // buyPrice3: \"710.50\"\r\n                // buyPrice4: \"710.45\"\r\n                // buyPrice5: \"710.40\"\r\n                // buyQuantity1: \"6\"\r\n                // buyQuantity2: \"50\"\r\n                // buyQuantity3: \"33\"\r\n                // buyQuantity4: \"153\"\r\n                // buyQuantity5: \"100\"\r\n                // change: \"-6.55\"\r\n                // closePrice: \"0.00\"\r\n                // cm_adj_high_dt: \"28-SEP-21\"\r\n                // cm_adj_low_dt: \"28-SEP-20\"\r\n                // cm_ffm: \"4,96,600.56\"\r\n                // companyName: \"ICICI Bank Limited\"\r\n                // css_status_desc: \"Listed\"\r\n                // dayHigh: \"710.95\"\r\n                // dayLow: \"701.30\"\r\n                // deliveryQuantity: \"55,54,344\"\r\n                // deliveryToTradedQuantity: \"63.08\"\r\n                // exDate: \"29-JUL-21\"\r\n                // extremeLossMargin: \"3.50\"\r\n                // faceValue: \"2.00\"\r\n                // high52: \"735.40\"\r\n                // indexVar: \"-\"\r\n                // isExDateFlag: false\r\n                // isinCode: \"INE090A01021\"\r\n                // lastPrice: \"710.60\"\r\n                // low52: \"349.10\"\r\n                // marketType: \"N\"\r\n                // ndEndDate: \"-\"\r\n                // ndStartDate: \"-\"\r\n                // open: \"707.35\"\r\n                // pChange: \"-0.91\"\r\n                // previousClose: \"717.15\"\r\n                // priceBand: \"No Band\"\r\n                // pricebandlower: \"645.45\"\r\n                // pricebandupper: \"788.85\"\r\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\r\n                // quantityTraded: \"88,05,883\"\r\n                // recordDate: \"30-JUL-21\"\r\n                // secDate: \"29-Sep-2021 14:00:00\"\r\n                // securityVar: \"15.02\"\r\n                // sellPrice1: \"710.65\"\r\n                // sellPrice2: \"710.70\"\r\n                // sellPrice3: \"710.75\"\r\n                // sellPrice4: \"710.80\"\r\n                // sellPrice5: \"710.85\"\r\n                // sellQuantity1: \"1,382\"\r\n                // sellQuantity2: \"719\"\r\n                // sellQuantity3: \"1,217\"\r\n                // sellQuantity4: \"4,159\"\r\n                // sellQuantity5: \"793\"\r\n                // series: \"EQ\"\r\n                // surv_indicator: \"-\"\r\n                // symbol: \"ICICIBANK\"\r\n                // totalBuyQuantity: \"10,31,358\"\r\n                // totalSellQuantity: \"8,75,359\"\r\n                // totalTradedValue: \"66,963.99\"\r\n                // totalTradedVolume: \"94,94,802\"\r\n\r\n                if (resd.data && resd.data.data.length) {\r\n\r\n                    let bidlivedata = resd.data.data[0];\r\n                    let biddata = {\r\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\r\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\r\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\r\n                        symbol: bidlivedata.symbol,\r\n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity,\r\n                        nc: bidlivedata.pChange,\r\n                        ltp: bidlivedata.lastPrice,\r\n                    }\r\n\r\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function () {\r\n\r\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList));\r\n                    });\r\n\r\n\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 100));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    oneHourBullBearCheck = async () => {\r\n\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            const row = this.state.symbolList[index];\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var time = moment.duration(\"04:00:00\");  //22:00:00\" for last day  2hours \r\n            var startDate = moment(new Date()).subtract(time);\r\n            var dataDay = {\r\n                \"exchange\": 'NSE',\r\n                \"symboltoken\": row.token,\r\n                \"interval\": 'ONE_HOUR',\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n            AdminService.getHistoryData(dataDay).then(resd => {\r\n                let histdatad = resolveResponse(resd, 'noPop');\r\n                var DSMA = '';\r\n                if (histdatad && histdatad.data && histdatad.data.length) {\r\n                    var candleDatad = histdatad.data;\r\n                    let lastCandle = '';\r\n                    if (candleDatad.length > 1) {\r\n                        lastCandle = candleDatad[candleDatad.length - 2];\r\n                    } else {\r\n                        lastCandle = candleDatad[candleDatad.length - 1];\r\n                    }\r\n\r\n\r\n\r\n                    if ((lastCandle[1] == lastCandle[3]) && (lastCandle[2] == lastCandle[4])) {\r\n                        window.document.title = \"Hourly Buy: \" + row.symbol;\r\n                        console.log(row.name, \"Hourly Buy\", candleDatad[candleDatad.length - 1]);\r\n                        row.orderType = \" Hourly Buy\";\r\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\r\n                        this.speckIt(row.name + \" Hourly Bullish \");\r\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\r\n                    }\r\n                    if ((lastCandle[1] == lastCandle[2]) && (lastCandle[3] == lastCandle[4])) {\r\n                        window.document.title = \"Hourly Sell: \" + row.symbol;\r\n                        console.log(row.name, \"Hourly Sell\", candleDatad[candleDatad.length - 1]);\r\n                        row.orderType = \" Hourly Sell\";\r\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\r\n                        this.speckIt(row.name + \" Hourly Sell \");\r\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    searchValumeBreakoutStock = async () => {\r\n\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            const row = this.state.symbolList[index];\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var time = moment.duration(\"60:00:00\");  //22:00:00\" for last day  2hours \r\n            var startDate = moment(new Date()).subtract(time);\r\n            var dataDay = {\r\n                \"exchange\": 'NSE',\r\n                \"symboltoken\": row.token,\r\n                \"interval\": 'FIFTEEN_MINUTE',\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n            AdminService.getHistoryData(dataDay).then(resd => {\r\n                let histdatad = resolveResponse(resd, 'noPop');\r\n                var DSMA = '';\r\n                if (histdatad && histdatad.data && histdatad.data.length) {\r\n                    var candleDatad = histdatad.data;\r\n\r\n                    var volumeSum = 0, findmaxVol = candleDatad[0][5];\r\n                    let currentCandleVol = candleDatad[candleDatad.length - 1][5];\r\n                    let firstCandleCloseingPrice = candleDatad[0][4], priceGoingHighCount = 0;\r\n                    let firstCandleCloseingPriceDownSide = candleDatad[0][4], priceGoingLowCount = 0;\r\n\r\n                    for (let index = candleDatad.length - 6; index < candleDatad.length - 1; index++) {\r\n                        const element = candleDatad[index];\r\n                        if (element) {\r\n                            volumeSum += element[5];\r\n                            //  console.log(row.symbol, ' last candle index ',index,   element[0] );\r\n                            if (findmaxVol < element[5]) {\r\n                                findmaxVol = element[5];\r\n                            }\r\n\r\n                            if (firstCandleCloseingPrice < element[4]) {\r\n                                console.log(row.symbol, firstCandleCloseingPrice, 'upside last candle index ', index, element[4]);\r\n                                firstCandleCloseingPrice = element[4];\r\n                                priceGoingHighCount += 1;\r\n                            }\r\n\r\n                            if (element[4] < firstCandleCloseingPriceDownSide) {\r\n                                console.log(row.symbol, firstCandleCloseingPrice, ' downside last candle index ', index, element[4]);\r\n                                firstCandleCloseingPriceDownSide = element[4];\r\n                                priceGoingLowCount += 1;\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    let avgVol = volumeSum / 5;\r\n\r\n                    if (currentCandleVol / findmaxVol > 1.75 && priceGoingHighCount >= 4) {\r\n                        window.document.title = \"VB: \" + row.symbol;\r\n                        row.orderType = \" Vol \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time & price incresing\";\r\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\r\n                        console.log(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" time of average \", avgVol, currentCandleVol, candleDatad[candleDatad.length - 1][0], findmaxVol);\r\n                        this.speckIt(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time and price incresing\");\r\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\r\n                    }\r\n                    if (currentCandleVol / findmaxVol > 1.75 && priceGoingLowCount >= 4) {\r\n                        window.document.title = \"VB: \" + row.symbol;\r\n                        row.orderType = \" Vol \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time & price decresing\";\r\n                        row.foundAt = new Date(candleDatad[candleDatad.length - 1][0]).toLocaleString()\r\n                        console.log(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" time of average \", avgVol, currentCandleVol, candleDatad[candleDatad.length - 1][0], findmaxVol);\r\n                        this.speckIt(row.name + \" volume crossed \" + (currentCandleVol / findmaxVol).toFixed(2) + \" Time and price decresing \");\r\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\r\n                    }\r\n                    // else if(currentCandleVol > avgVol){\r\n                    //     row.highlisht =  true; \r\n                    //     window.document.title = \"VB: \" + row.symbol;\r\n                    //     console.log(row.symbol, ' avg ', avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0]);\r\n                    //     this.speckIt('Volume  in ' + row.name + \" crossed average \");\r\n                    //     this.setState({ volumeBreakoutlast5CandleList: this.state.slowMotionStockList })\r\n                    // }\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n\r\n\r\n\r\n    dailyBasisInfoCheck = (token, element) => {\r\n        //this.setState({DailyBulishStatus: ''}); \r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\r\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n        var startDateforDaily = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": 'ONE_DAY',\r\n            \"fromdate\": moment(startDateforDaily).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0;\r\n\r\n\r\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n                    if (element) {\r\n                        closeingDatadaily.push(element[4]);\r\n                        valumeSum += element[5];\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\r\n                this.setState({ dailyAvgValume: valumeSum / 20 });\r\n\r\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\r\n                console.log(token, \"DSMA\", DSMALastValue);\r\n\r\n                if (DSMALastValue) {\r\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\r\n                }\r\n\r\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\r\n                    console.log(\"crosssed voliue\", element);\r\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    placeSLMOrder = (slmOrderType) => {\r\n\r\n        var data = {\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": slmOrderType,\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n            \"triggerprice\": this.state.stoploss,\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //     console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    // getHistory = (token) => {\r\n\r\n\r\n    //     this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\r\n    //     this.setState({ InstrumentHistroy: [] });\r\n    //     this.getLTP();\r\n\r\n\r\n    //     const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n    //     var time = moment.duration(\"00:50:00\");\r\n    //     var startdate = moment(new Date()).subtract(time);\r\n    //     // var startdate = moment(this.state.startDate).subtract(time);\r\n    //     var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n    //     var data = {\r\n    //         \"exchange\": \"NSE\",\r\n    //         \"symboltoken\": token,\r\n    //         \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n    //         \"fromdate\": moment(startdate).format(format1),\r\n    //         \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n    //     }\r\n\r\n    //     AdminService.getHistoryData(data).then(res => {\r\n    //         let data = resolveResponse(res, 'noPop');\r\n    //         //    console.log(data); \r\n    //         if (data && data.data) {\r\n\r\n    //             var histCandles = data.data;\r\n    //             histCandles && histCandles.sort(function (a, b) {\r\n    //                 return new Date(b[0]) - new Date(a[0]);\r\n    //             });\r\n    //             if (histCandles.length > 0) {\r\n    //                 localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n    //                 this.setState({ InstrumentHistroy: histCandles });\r\n\r\n    //             }\r\n\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    onSelectItem = (event, values) => {\r\n\r\n\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n        //  console.log(\"values\", values); \r\n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n\r\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\r\n\r\n            if (!foundInWatchlist.length) {\r\n\r\n                watchlist.push(fdata);\r\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\r\n                    this.LoadSymbolDetails(fdata.symbol);\r\n                });\r\n\r\n                this.setState({ symbolList: watchlist }, function () {\r\n                    //  this.updateSocketWatch();\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    onSelectItemChart = (event, values) => {\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n        //  console.log(\"values\", values); \r\n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n            this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token, seachSumbol: \"\" }, function () {\r\n                this.getLTP();\r\n                this.showStaticChart(fdata.token);\r\n                this.LoadSymbolDetails(fdata.symbol);\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index, 1);\r\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList: list });\r\n    }\r\n\r\n    getAveragePrice = (orderId) => {\r\n\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        var averageprice = 0;\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            if (oderbookData[index].orderid === 'orderId') {\r\n                averageprice = oderbookData[index].averageprice\r\n                this.setState({ averageprice: averageprice });\r\n                break;\r\n            }\r\n        }\r\n        return averageprice;\r\n    }\r\n    showCandleChart = (candleData, symbol, insiderow) => {\r\n\r\n\r\n        candleData = candleData && candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n\r\n        if (insiderow)\r\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\r\n\r\n\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    showCandleBothChart = (row) => {\r\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\r\n        localStorage.setItem('cadleChartSymbol', row.symbol)\r\n\r\n        var candleChartDataInside = row.candleChartDataInside;\r\n\r\n        if (candleChartDataInside)\r\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\r\n\r\n\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n\r\n        console.log(\"key\", e.keyCode);\r\n        //38 for down and 40 for up key\r\n        if (e.keyCode === 38 && this.state.cursor > 0) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\r\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.updateCandleOnkey();\r\n        }, 100);\r\n\r\n    }\r\n\r\n\r\n    updateCandleOnkey = () => {\r\n        var selectedKeyRow = localStorage.getItem('selectedKeyRow') && JSON.parse(localStorage.getItem('selectedKeyRow'));\r\n        if (selectedKeyRow.token && selectedKeyRow.symbol) {\r\n            this.setState({ tradingsymbol: selectedKeyRow.symbol, symboltoken: selectedKeyRow.token }, function () {\r\n                this.getLTP();\r\n                this.showStaticChart(selectedKeyRow.token);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n\r\n\r\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\r\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar LoadSymbolDetails={this.LoadSymbolDetails} />\r\n                <ChartDialog />\r\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\r\n\r\n                    <Grid item xs={12} sm={2}>\r\n\r\n                        <WatchListTab style={{ position: 'fixed' }} data={{ gainerList: this.state.gainerList, looserList: this.state.looserList, LoadSymbolDetails: this.LoadSymbolDetails, cursor: this.state.cursor, symbolList: this.state.symbolList, totalWatchlist: this.state.totalWatchlist, onChangeWatchlist: this.onChangeWatchlist, selectedWatchlist: this.state.selectedWatchlist, search: this.state.search, handleKeyDown: this.handleKeyDown, onChange: this.onChange, autoSearchList: this.state.autoSearchList, onSelectItem: this.onSelectItem, symbolList: this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }} />\r\n\r\n\r\n                        {/* <Paper>\r\n                            <Autocomplete\r\n                                freeSolo\r\n                                id=\"free-solo-2-demo\"\r\n                                disableClearable\r\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\r\n                                onChange={this.onSelectItem}\r\n                                //+ ' '+  option.exch_seg\r\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                    option.symbol\r\n                                ) : []}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        onChange={this.onChange}\r\n                                        {...params}\r\n                                        label={\"Search Symbol\"}\r\n                                        margin=\"normal\"\r\n                                        variant=\"standard\"\r\n                                        name=\"search\"\r\n                                        onKeyDown={this.handleKeyDown}\r\n                                        value={this.state.search}\r\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                    />\r\n                                )}\r\n                            />\r\n\r\n                            <div style={{ marginLeft: '10px' }}>\r\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\r\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                    <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n\r\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                            <MenuItem value={element}>{element}</MenuItem>\r\n                                        ))\r\n                                        }\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\r\n\r\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map((row, i) => (\r\n                                    <>\r\n                                        <ListItem onKeyDown={this.handleKeyDown} button selected={this.state.cursor === i ? 'active' : null}\r\n\r\n                                            style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\r\n\r\n                                            {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\r\n\r\n                                            <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\r\n\r\n\r\n                                        </ListItem>\r\n\r\n                                    </>\r\n                                )) : ''}\r\n                            </div>\r\n\r\n                        </Paper> */}\r\n\r\n\r\n                        {/* <Typography style={{ fontWeight: 'bold' }}><span style={{ color: \"green\" }}> Advance {this.state.advanceShareCount} </span> <span style={{ color: \"red\" }}> Decline {this.state.declineShareCount} </span> <span> Unchange {this.state.UnchangeShareCount} </span> </Typography> */}\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={8}>\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n\r\n\r\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\r\n\r\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n                                <Grid item xs={10} sm={3}>\r\n\r\n                                    {this.state.tradingsymbol ?\r\n                                        <Typography variant=\"body1\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\r\n\r\n                                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\r\n\r\n                                        </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\r\n\r\n                                    O: {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\r\n                                    H: {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\r\n                                    L: {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\r\n                                    C: {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item xs={10} sm={2}>\r\n\r\n                                    <Autocomplete\r\n                                        freeSolo\r\n                                        id=\"free-solo-2-demo\"\r\n                                        disableClearable\r\n                                        style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\r\n                                        onChange={this.onSelectItemChart}\r\n                                        value={this.state.seachSumbol}\r\n                                        //+ ' '+  option.exch_seg\r\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                            option.symbol\r\n                                        ) : []}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                onChange={this.onChange}\r\n                                                {...params}\r\n                                                label={\"Search\"}\r\n                                                margin=\"normal\"\r\n                                                variant=\"standard\"\r\n                                                name=\"seachSumbol\"\r\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={10} sm={1}>\r\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\r\n                                        <InputLabel htmlFor=\"gender\">Time</InputLabel>\r\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\r\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid item xs={12} sm={1}>\r\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '3px' }} >\r\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\r\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\r\n                                            <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\r\n                                            <MenuItem value={\"DELIVERY\"}>Del</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={1}>\r\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={1}>\r\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\r\n                                </Grid>\r\n                                <Grid item xs={10} sm={1}>\r\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={1} sm={2}  >\r\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\r\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n                                    <br />\r\n\r\n                                    {this.state.InstrumentLTP ?\r\n                                        <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\r\n\r\n                                            <div style={{ background: '#bdbdbd' }}>\r\n                                                <b>  Daily: {this.state.tradingsymbol}</b> <br />\r\n\r\n                                                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                                    Daily Avg Price: {this.state.DailyBulishStatus && this.state.DailyBulishStatus.toFixed(0)} {this.state.DailyBulishStatus ? this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\r\n                                                </span><br />\r\n\r\n\r\n                                                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\r\n                                                    <b>Daily Avg Volume:</b>  {(this.state.dailyAvgValume / 100000).toFixed(2)}L\r\n                                                </span><br />\r\n                                                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\r\n                                                    {this.state.todayCurrentVolume > this.state.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(this.state.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (this.state.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\r\n                                                </span>\r\n                                            </div>\r\n                                            <br />\r\n\r\n\r\n\r\n                                            <b>  Intraday: {this.state.timeFrame} : {this.state.tradingsymbol}</b> <br />\r\n                                            {this.state.bblastValue ? <span item xs={12} sm={12} >\r\n\r\n                                                <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.InstrumentLTP.ltp >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\r\n                                                BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\r\n                                                <span title=\"Green red mean price running below lower bb band\" style={{ color: this.state.InstrumentLTP.ltp <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\r\n                                            </span> : \"\"}\r\n\r\n                                            <span item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                                VWAP:  {this.state.vwapvalue && this.state.vwapvalue.toFixed(2)}\r\n                                            </span>\r\n                                            <br />\r\n                                            <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\r\n                                                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\r\n                                            ))}\r\n\r\n\r\n                                            <br />\r\n                                            <b>Vol:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\r\n                                                <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\r\n                                            ))}\r\n\r\n                                            <br />  <br />\r\n\r\n                                        </Grid>\r\n                                        : \"\"}\r\n                                        <Grid item xs={12} sm={!this.state.InstrumentLTP ? 12 : 9}  >\r\n                                            <div id=\"showChartTitle\">\r\n\r\n\r\n\r\n                                            </div>\r\n                                            <div id=\"tvchart\"></div>\r\n\r\n                                        </Grid>\r\n\r\n\r\n                                    <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', maxHeight: \"50vh\" }} >\r\n\r\n\r\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> | Total:  <b style={{ color: this.state.totalPerchentageChange > 0 ? \"green\" : 'red' }}>  {this.state.totalPerchentageChange && this.state.totalPerchentageChange.toFixed(2)}% </b> from {this.state.startingFrom} </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\r\n\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                                {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\r\n                                                {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                                    <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\r\n\r\n                                                        <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\r\n                                                        <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                                        <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\r\n                                                        <TableCell align=\"center\">{row[1]}</TableCell>\r\n                                                        <TableCell align=\"center\">{row[2]}</TableCell>\r\n                                                        <TableCell align=\"center\">{row[3]}</TableCell>\r\n                                                        <TableCell align=\"center\">{row[4]}</TableCell>\r\n                                                        <TableCell align=\"center\">{row[5]}</TableCell>\r\n\r\n                                                    </TableRow>\r\n                                                )) : ''}\r\n\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </Grid>\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\r\n                                    <OrderWatchlist />\r\n                                </Grid>\r\n\r\n\r\n\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                        <br />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={2}>\r\n\r\n\r\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionPanel data={{ list: this.state.closeingEqualHighList, title: \"Strong Closing\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n                            {/* <Grid item xs={12} sm={12}>\r\n                                <LiveBidsExpantion data={{ list: this.state.liveBidsList, title: \"Live Bids\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>  */}\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionFastMovement data={{ list: this.state.oneHourBullBearCheckList, title: \"Hourly Bullish/Bearish\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionFastMovement data={{ list: this.state.volumeBreakoutlast5CandleList, title: \"Last 5 bar Volume breakout\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionFastMovement data={{ list: this.state.fastMovementList, title: \"Fast Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionPanel data={{ list: this.state.volumeCrossedList, title: \"Average Volume Crossed\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualLowList, title: \"Open = Low : Buy\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualHighList, title: \"Open = High : Sell\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <SimpleExpansionPanel data={{ list: this.state.slowMotionStockList, title: \"Last 5 days no Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;\r\n\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            pcrTable : JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data,\r\n            optionChainData: JSON.parse( localStorage.getItem('optionChainData')),\r\n            filtered: JSON.parse(localStorage.getItem('optionChainData'))  && JSON.parse(localStorage.getItem('optionChainData')).filtered && JSON.parse(localStorage.getItem('optionChainData')).filtered.data  \r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainData')).records.data\r\n\r\n\r\n\r\n        }\r\n        this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n      this.filterOptionChain(e.target.name,  e.target.value); \r\n\r\n    }\r\n    filterOptionChain = (name, actualValue) =>{\r\n        //console.log('filtername', name, actualValue); \r\n        var filereddata = []; \r\n    \r\n       var alldata =  this.state.optionChainData && this.state.optionChainData.records &&  this.state.optionChainData.records.data; \r\n\r\n       if(name === 'expiry' && actualValue === 'All' ) {\r\n            \r\n        filereddata =  alldata; \r\n       }\r\n     \r\n        if(name === 'expiry') {\r\n            \r\n            for (let index = 0; index < alldata.length; index++) {\r\n                const element = alldata[index];\r\n                if(element.expiryDate === actualValue){\r\n                    filereddata.push(element); \r\n                } \r\n            }   \r\n        }\r\n\r\n        if(name === 'strike') {\r\n            \r\n            for (let index = 0; index < alldata.length; index++) {\r\n                const element = alldata[index];\r\n                if(element.strikePrice === actualValue){\r\n                    filereddata.push(element); \r\n                } \r\n            } \r\n        }\r\n\r\n        \r\n\r\n        this.setState({filtered : filereddata, FilteredBY: name +\" \"+ actualValue});\r\n       //  console.log(filereddata); \r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n       this.loadPackList();\r\n   //   console.log('this.state.optionChainData.records.expiryDates', this.state.optionChainData.records.expiryDates)\r\n\r\n\r\n        if(!JSON.parse(localStorage.getItem('cpdata')))\r\n        localStorage.setItem('cpdata', JSON.stringify( {data : []}) )\r\n        else\r\n        this.setState({products:  JSON.parse(localStorage.getItem('cpdata')).data})\r\n       // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\r\n       //  clearInterval(this.state.stopnview)\r\n\r\n       if(!JSON.parse(localStorage.getItem('pcrTable')))\r\n       localStorage.setItem('pcrTable', JSON.stringify( {data : []}) )\r\n       else\r\n       this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')).data})\r\n     \r\n\r\n\r\n       var todayTime =  new Date(); \r\n       if(todayTime.getHours()>=9 && todayTime.getHours()< 16 ){\r\n            setInterval(() => {\r\n                this.loadPackList();\r\n            }, 60001 * 2);\r\n        }\r\n        setInterval(() => {\r\n            this.updatepcr()\r\n        }, 60010 * 2);\r\n\r\n   //     this.findSupportResistence(this.state.optionChainData); \r\n\r\n\r\n    }\r\n    // componentDidUpdate(){\r\n    //   //  this.updatepcr(); \r\n    //    // console.log(\"updaate called\") \r\n    // }\r\n\r\n    getDataforStrike = strikePrice => {\r\n\r\n        var alldata = JSON.parse( localStorage.getItem('optionChainData')).records.data;// this.state.optionChainData && this.state.optionChainData.records.data; \r\n        var     sumOfCEoi = 0,sumOfPEoi = 0; \r\n        for (let index = 0; index < alldata.length; index++) {\r\n            const element = alldata[index];\r\n            \r\n            if(strikePrice === element.strikePrice){\r\n\r\n                if(element.CE && element.CE.openInterest){\r\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest; \r\n                }\r\n                if(element.PE && element.PE.openInterest){\r\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest; \r\n                }\r\n               \r\n            }                    \r\n        }\r\n       // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \r\n        return {strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi , sumOfPEoi : sumOfPEoi}; \r\n\r\n      //  console.log(\"alldata\", alldata);\r\n    }\r\n\r\n    findSupportResistence = (optiondata) => {\r\n           // console.log(optiondata);\r\n            var alldata =  optiondata && optiondata.records && optiondata.records.data; \r\n            //var underlyingValue = optiondata && optiondata.records.underlyingValue; \r\n            var PEoi = 0,CEoi = 0, PEoiChange=0,CEoiChange=0, peStrikePriceByDate=[]  ;\r\n            for (let index = 0; index < alldata.length; index++) {\r\n                const element = alldata[index];\r\n                if(element &&  element.PE){\r\n                    PEoi = PEoi + element.PE.openInterest; \r\n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest; \r\n                }\r\n                if(element &&  element.CE){\r\n                    CEoi = CEoi + element.CE.openInterest; \r\n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest; \r\n\r\n                } \r\n            }\r\n\r\n          var allexpiryDates =   optiondata.records.expiryDates; \r\n          var strikePrices =  optiondata.records.strikePrices; \r\n        //  var fliterExData = [];  \r\n           \r\n            // for (let index = 0; index < allexpiryDates.length; index++) {\r\n            //     const element = allexpiryDates[index];\r\n            //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\r\n            //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\r\n            //             fliterExData.push(alldata[indexJ]); \r\n            //         } \r\n            //     }                  \r\n            // }   \r\n\r\n            var myStrike = [14000, 14050, 14100, 14150, 14200, 14050, 14300, 14350, 14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \r\n\r\n           // myStrike =   myStrike.sort(function(a, b){return b - a});\r\n       \r\n          //   var myStrike = [14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \r\n       \r\n\r\n\r\n           // var myStrike = [15200,15250]; \r\n\r\n\r\n            var data  = [], totalspeoi= 0, totalsceoi= 0;\r\n             myStrike.forEach(element => {\r\n                var resdata =  this.getDataforStrike(element); \r\n                totalspeoi = totalspeoi+resdata.sumOfPEoi; \r\n                totalsceoi = totalsceoi+resdata.sumOfCEoi; \r\n\r\n                data.push(resdata); \r\n             \r\n               // console.log(element, resdata);\r\n                \r\n                 \r\n             });\r\n             this.setState({AllspTotalOI : data, selectedSPpcr : (totalspeoi / totalsceoi).toFixed(3), totalspeoi : totalspeoi,  totalsceoi : totalsceoi }); \r\n\r\n            // for (let index = 0; index < alldata.length; index++) {\r\n            //     const element = alldata[index];\r\n              \r\n            //     // if(alldata[index].strikePrice ==  14800){\r\n            //     //     fliterExData.push(element); \r\n            //     // } \r\n            //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\r\n            //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\r\n            //             fliterExData.push(element); \r\n            //         }   \r\n            //     }\r\n               \r\n            // }   \r\n\r\n//            console.log(\"allfliterExData\",fliterExData);\r\n\r\n\r\n        this.setState({CEoi: CEoi, PEoi : PEoi, allStrikediff:  PEoi - CEoi, CEoiChange: CEoiChange,PEoiChange: PEoiChange,allStrikeChngeDiff:  PEoiChange - CEoiChange });\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    loadPackList() {\r\n\r\n\r\n        var data = { allPacks:true, portal: true};\r\n        AdminService.getBNcpdata(\"NIFTY\")\r\n            .then((res) => {\r\n        //     let data = resolveResponse(res);\r\n\r\n             var data =  res.data && res.data;\r\n\r\n             \r\n           localStorage.setItem(\"optionChainData\",  JSON.stringify( data) );\r\n\r\n          // this.findSupportResistence(data); \r\n\r\n           // console.log(\"livedata\", data.filtered);\r\n\r\n           this.setState({filtered : data.filtered && data.filtered.data , optionChainData: data});\r\n\r\n            if(data.filtered){\r\n\r\n                var diff =  data.filtered.PE.totOI - data.filtered.CE.totOI; \r\n\r\n                var newdata = {\r\n                    dateTime : this.dateFormat(new Date()), \r\n                    totCEOI : data.filtered.CE.totOI ,\r\n                    totCEVol: data.filtered.CE.totVol, \r\n                    totPEOI: data.filtered.PE.totOI , \r\n                    totPEVol: data.filtered.PE.totVol, \r\n                    diff: diff, \r\n                    totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')), \r\n                    totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')), \r\n                    totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange')) \r\n\r\n                } \r\n                this.setState({curnewdata : newdata });\r\n\r\n                var resname = ''; \r\n                if(diff > 0 )\r\n                 resname = \"BUY\";\r\n                 else\r\n                resname = \"SELL\"\r\n                \r\n\r\n                document.getElementById('title').innerHTML=  (diff/100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange'))/100000).toFixed(2) + \"L\" +  \" NIFTY \"; \r\n               // createData.push(newdata); \r\n               if(JSON.parse(localStorage.getItem('cpdata'))){\r\n                var oldproducts = JSON.parse(localStorage.getItem('cpdata')); \r\n               // console.log(\"oldproductsindex0\", ); \r\n                var lastrow = oldproducts && oldproducts.data[0]; \r\n                \r\n\r\n                // oldproducts.data.forEach((data) => {\r\n                //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\r\n                //         newdata.isDuplicate = true; \r\n                //     }else{\r\n                //         newdata.isDuplicate = false;\r\n                //     }\r\n                // });\r\n                if(lastrow){\r\n                    newdata.isDuplicate = newdata.diff == lastrow.diff ? true : false\r\n                    newdata.totCEOIChange = (((newdata.totCEOI-lastrow.totCEOI) * 100)/lastrow.totCEOI).toFixed(3);;\r\n                    newdata.totPEOIChange =   (((newdata.totPEOI-lastrow.totPEOI) * 100)/lastrow.totPEOI).toFixed(3);;\r\n                    newdata.totDiffChange =  (((newdata.diff-lastrow.diff) * 100)/lastrow.diff).toFixed(3); \r\n                }else{\r\n                    newdata.isDuplicate = false\r\n                    newdata.totCEOIChange = 0;\r\n                    newdata.totPEOIChange =  0;\r\n                    newdata.totDiffChange =  0; \r\n                }\r\n                \r\n\r\n                oldproducts.data.unshift(newdata);\r\n\r\n                if(data.records){\r\n                    oldproducts.timestamp = data.records.timestamp; \r\n                    oldproducts.underlyingValue = data.records.underlyingValue; \r\n                }\r\n              \r\n\r\n                localStorage.setItem(\"cpdata\",  JSON.stringify( oldproducts) );\r\n\r\n                this.setState({products: oldproducts.data, underlyingValue : data.records.underlyingValue,timestamp: data.records.timestamp  })\r\n               }\r\n               \r\n             //  console.log(\"dddd\", this.state.curnewdata); \r\n   \r\n                 \r\n            }\r\n\r\n\r\n            this.updatepcr()\r\n            this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data})\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    updatepcr(){\r\n\r\n\r\n        var pcrdata =  {\r\n            allPCR : (this.state.PEoi /this.state.CEoi).toFixed(3), \r\n            expiryPCR: localStorage.getItem('thisWeekPCR'), \r\n            selectedSPpcr: this.state.selectedSPpcr, \r\n         }\r\n\r\n         if(JSON.parse(localStorage.getItem('pcrTable'))){\r\n             var pcrTable = JSON.parse(localStorage.getItem('pcrTable')); \r\n             pcrTable.data.unshift(pcrdata);\r\n             localStorage.setItem(\"pcrTable\",  JSON.stringify( pcrTable) );\r\n         }\r\n         \r\n         console.log(pcrdata); \r\n         this.setState({pcrTable: pcrTable })\r\n    }\r\n \r\n\r\n    \r\n\r\n    dateFormat(date){ \r\n\r\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\r\n    }\r\n  \r\n\r\n\r\n    render(){\r\n     \r\n        var totCEOI = 0, totCEVol = 0,totCEOIChange=0, totCEBUY=0, totCESell=0; \r\n        var totPEOI = 0, totPEVol = 0,totPEOIChange=0, totPEBUY=0, totPESell=0; \r\n\r\n      return(\r\n        <React.Fragment>\r\n                <PostLoginNavBar />\r\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\r\n\r\n                 <Grid item xs={7} sm={7}>\r\n                    <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                        My View({this.state.products && this.state.products.length}) <b> Nifty: {this.state.underlyingValue}</b> at Time: {this.state.timestamp} \r\n                        {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\r\n                    </Typography> \r\n                </Grid>\r\n\r\n                <Grid item xs={2} sm={2} > \r\n                    <FormControl style={styles.selectStyle}>\r\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\r\n                            <Select\r\n                            id=\"expiry\"\r\n                            name=\"expiry\"\r\n                            value={this.state.expiry}\r\n                            onChange={this.onChange}\r\n                            input={<Input />}\r\n                            MenuProps={MenuProps}\r\n                            >\r\n                                <MenuItem key={'All'} value={'All'} >\r\n                                    {'All'}\r\n                                </MenuItem>\r\n                            {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.expiryDates ? this.state.optionChainData.records.expiryDates.map((name, index) => (\r\n                                <MenuItem key={name+'key'+index} value={name} >\r\n                                    {name}\r\n                                </MenuItem>\r\n                            )): \"\"}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} sm={2} > \r\n                            <FormControl style={styles.selectStyle}>\r\n                                    <InputLabel id=\"strike\">Select Strick Price</InputLabel>\r\n                                    <Select\r\n                                    labelId=\"strike\"\r\n                                    id=\"strike\"\r\n                                    max-height={'100%'}\r\n                                    name=\"strike\"\r\n                                    value={this.state.strike}\r\n                                    onChange={this.onChange}\r\n                                    input={<Input />}\r\n                                    MenuProps={MenuProps}\r\n                                    >\r\n                                    {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.strikePrices ? this.state.optionChainData.records.strikePrices.map(name => (\r\n                                        <MenuItem key={name} value={name} >\r\n                                            {name}\r\n                                        </MenuItem>\r\n                                    )): \"\"}\r\n                                    </Select>\r\n                                </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={1} sm={1} style={{paddingTop:'20px',paddingLeft:'20px'}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.loadPackList()}>\r\n                            Refesh\r\n                        </Button>      \r\n                        </Grid>\r\n\r\n                </Grid>\r\n              \r\n            \r\n                <Grid item xs={12} sm={12}>\r\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}}>\r\n                   \r\n                    <Grid container spacing={3}  direction=\"row\" alignItems=\"center\" container>\r\n                        <Grid item xs={3} sm={3} >\r\n                         \r\n                         <span>All PUT OI: <b>{this.state.PEoi} ({(this.state.PEoi/100000).toFixed(3)}L)</b></span><br />\r\n                         <span>All CALL OI: <b>{this.state.CEoi} ({(this.state.CEoi/100000).toFixed(3)}L)</b></span><br />\r\n                         <span>All Put-Call Diff: {\r\n                             this.state.allStrikediff > 0 ? <b style={{color:'green'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b>\r\n                            :  <b style={{color:'red'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b> } \r\n                        </span>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3} sm={3} >\r\n                \r\n                        <span>All PUT Chng in OI: <b>{this.state.PEoiChange} ({(this.state.PEoiChange/100000).toFixed(3)}L)</b></span><br />\r\n                         <span>All CALL Chng in  OI: <b>{this.state.CEoiChange} ({(this.state.CEoiChange/100000).toFixed(3)}L)</b></span><br />\r\n                         <span>All Put-Call Chng in Diff: {\r\n                             this.state.allStrikeChngeDiff > 0 ? <b style={{color:'green'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b>\r\n                            :  <b style={{color:'red'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b> } \r\n                        </span>\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} sm={2} >\r\n\r\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\r\n                            <span>ALL PCR: <b>{(this.state.PEoi /this.state.CEoi).toFixed(3) } </b></span>\r\n                         </Typography> \r\n                         </Grid>\r\n\r\n                         <Grid item xs={2} sm={2} >\r\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\r\n                            <span>Expire Week PCR: <b>{ localStorage.getItem('thisWeekPCR') } </b></span>\r\n                        </Typography> \r\n                        </Grid>\r\n                         \r\n\r\n\r\n                         <Grid item xs={2} sm={2} >\r\n                         <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\r\n                            <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\r\n\r\n                         </Typography> \r\n                \r\n              \r\n\r\n                        </Grid>\r\n\r\n\r\n                        \r\n            </Grid>\r\n            </Paper>\r\n            </Grid>\r\n\r\n           \r\n\r\n\r\n            \r\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={0}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\r\n              \r\n              \r\n                <Grid item xs={7} sm={7} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\r\n                <Table  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n                    <TableHead style={{}} variant=\"head\">\r\n                        <TableRow variant=\"head\">\r\n                            <TableCell align=\"center\"><b>Time</b></TableCell>\r\n                            <TableCell align=\"center\"><b>VIEW</b></TableCell>\r\n                            <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\r\n                            <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\r\n\r\n                            <TableCell align=\"center\"><b>PUT OI</b></TableCell>\r\n                            <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>                            \r\n\r\n                            <TableCell align=\"center\"><b>Call OI</b></TableCell>\r\n\r\n                         \r\n                            <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>                            \r\n                            \r\n                            {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\r\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody hover style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n                    \r\n                        { this.state.products ? this.state.products.map(row => (\r\n                            <TableRow key={row.dateTime} style={{background: row.isDuplicate ? \"lightgray\":\"\"}}>\r\n                                <TableCell align=\"center\">{row.dateTime.substring(19,11)}</TableCell>\r\n                                <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color:'green' }} >BUY</Typography>  : <Typography variant=\"body2\" style={{ color:'red' }} >SELL</Typography> }</TableCell>\r\n                                <TableCell align=\"center\">{row.diff} ({(row.diff/100000).toFixed(2)}L)({row.totDiffChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totDiffChange}%</span>: row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totDiffChange}%</span> }) </TableCell>\r\n                                <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff/100000).toFixed(2)}L)</TableCell>\r\n\r\n                                <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totPEOIChange}%</span>: row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totPEOIChange}%</span> })</TableCell>\r\n                                <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\r\n\r\n                                <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totCEOIChange}%</span>: row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold' }} >{row.totCEOIChange}%</span> })</TableCell>\r\n                              \r\n                                <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\r\n\r\n                                {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\r\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\r\n                \r\n                            </TableRow>\r\n                        )):<Spinner/>}\r\n                    </TableBody>\r\n                </Table>\r\n                \r\n                </Grid>\r\n\r\n                <Grid item xs={3} sm={3} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\r\n                <Table style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }}  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n                    \r\n                    <TableHead style={{}} variant=\"head\">\r\n                        <TableRow variant=\"head\">\r\n                          \r\n                            <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi/100000).toFixed(3)}L</b></TableCell>\r\n                            <TableCell align=\"center\"><b>Strike Price</b> </TableCell>\r\n                            <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi/100000).toFixed(3)}L</b></TableCell>\r\n                           \r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n                    \r\n                        { this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\r\n                             <TableRow  hover key={row.dateTime} >\r\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfCEoi} ({(row.sumOfCEoi/100000).toFixed(2)}L)</TableCell>\r\n                             <TableCell  align=\"center\">{row.strikePrice}</TableCell>\r\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfPEoi} ({(row.sumOfPEoi/100000).toFixed(2)}L)</TableCell>\r\n                     \r\n                         </TableRow>\r\n                        )):<Spinner/>}\r\n\r\n\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n                \r\n                </Grid>\r\n\r\n                <Grid item xs={2} sm={2} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\r\n                <Table   id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n                    \r\n                    <TableHead variant=\"head\">\r\n                        <TableRow variant=\"head\">\r\n                          \r\n                            <TableCell align=\"center\">ALL Pcr</TableCell>\r\n                            <TableCell align=\"center\">Expiry Pcr </TableCell>\r\n                            <TableCell align=\"center\">Selected Pcr</TableCell>\r\n                         \r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody style={{whiteSpace: \"nowrap\"}}>\r\n\r\n                        {this.state.pcrTable && this.state.pcrTable.length>0 && this.state.pcrTable ? this.state.pcrTable.map(row => (\r\n                            <TableRow  hover key={row.expiryPCR} >\r\n                                <TableCell align=\"center\">{row.allPCR} </TableCell>\r\n                                <TableCell  align=\"center\">{row.expiryPCR}</TableCell>\r\n                                <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\r\n                            </TableRow>\r\n                        )):<Spinner/>}\r\n\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n                \r\n                </Grid>\r\n\r\n        \r\n                <Grid item xs={12} sm={12} style={{padding:\"2px\", overflow:\"auto\", height:\"900px\"}}>\r\n\r\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n\r\n                <TableHead variant=\"head\">\r\n\r\n                    <TableRow variant=\"head\"  >\r\n                        \r\n                        <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\r\n                        <TableCell align=\"center\"><b></b></TableCell>\r\n                        <TableCell align=\"center\"><b></b></TableCell>\r\n                        <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\r\n                    </TableRow>\r\n                    <TableRow variant=\"head\" >\r\n                    \r\n                        {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\r\n                     \r\n\r\n                        <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI')/100000).toFixed(3)}L) </b></TableCell>\r\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange')/100000).toFixed(3)}L)</b></TableCell>\r\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\r\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\r\n\r\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\r\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\r\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\r\n                        {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\r\n                        <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\r\n\r\n                        {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\r\n\r\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> STRIKE PRICE</span> </TableCell>\r\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> Expiry</span> </TableCell>\r\n\r\n                        {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \r\n                        <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\r\n\r\n\r\n                        {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\r\n                        */}\r\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\r\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\r\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\r\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\r\n\r\n\r\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\r\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange')/100000).toFixed(3)}L)</b></TableCell>\r\n                        <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI')/100000).toFixed(3)}L)</b></TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                </TableHead>                   \r\n                    \r\n                    <TableBody>\r\n                    \r\n                        { this.state.filtered ? this.state.filtered.map((opdata, index) => (\r\n                            <TableRow hover key={index} style={{background: opdata.isDuplicate ? \"lightgray\":\"\"}}>\r\n                              \r\n                                {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\r\n                                { opdata && opdata.CE && opdata.PE ? <>\r\n                                            <TableCell {...totCEOI = totCEOI +  opdata.CE.openInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.openInterest}</TableCell>\r\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\r\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\r\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\r\n                                            <TableCell align=\"center\">{((opdata.CE.change/opdata.strikePrice-opdata.CE.underlyingValue) * 10).toFixed(2)} </TableCell>\r\n\r\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> }) </TableCell>\r\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\r\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\r\n                                        \r\n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\r\n\r\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\r\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\r\n                                         */}\r\n                                            <TableCell style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }} align=\"center\"><span> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\r\n                                            <TableCell style={{borderRight: 'dashed', whiteSpace: \"nowrap\"}} align=\"center\" ><span style={{paddingLeft:'5px',paddingRight:'5px'  }}> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\r\n\r\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\r\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\r\n                                         */}\r\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\r\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\r\n                                            */}\r\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\r\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\r\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\r\n\r\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\r\n                                            <TableCell align=\"center\">{((opdata.PE.change/opdata.strikePrice-opdata.PE.underlyingValue) * 10).toFixed(2)} </TableCell>\r\n\r\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\r\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\r\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}}align=\"center\">{opdata.PE.openInterest} </TableCell>\r\n                                     </> : \"\"\r\n                                }\r\n                               \r\n\r\n                            </TableRow>\r\n\r\n                        )):<Spinner/>}\r\n\r\n\r\n                            <TableRow  variant=\"head\"> \r\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOI',totCEOI)}><b>{totCEOI}<br />({(totCEOI/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange',totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange/100000).toFixed(3)}L)</b> </TableCell>\r\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEVol',totCEVol)}><b>{totCEVol}<br />({(totCEVol/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\r\n                                {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\r\n\r\n                                <TableCell {...localStorage.setItem('thisWeekPCR',(totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\r\n\r\n\r\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\r\n\r\n\r\n                                {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\r\n                                */}\r\n                                {/* <TableCell colSpan={3} align=\"center\"></TableCell> */} \r\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEVol',totPEVol)}><b>{totPEVol}<br />({(totPEVol/100000).toFixed(3)}L)</b></TableCell>\r\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange',totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange/100000).toFixed(3)}L)</b> </TableCell>\r\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOI',totPEOI)}><b>{totPEOI}<br />({(totPEOI/100000).toFixed(3)}L)</b> </TableCell>\r\n\r\n                            </TableRow>\r\n\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n                </Grid>\r\n\r\n                </Grid>\r\n                   \r\n\r\n                \r\n          \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    tableStyle : {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }, \r\n    selectStyle:{\r\n        marginBottom: '0px',\r\n        minWidth: 240,\r\n        maxWidth: 240\r\n\r\n    }\r\n  \r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.data.indexSymbol}\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {props.data.indexSymbol}  At {props.data.timestamp}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\r\n        <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \r\n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\r\n\r\n                </TableRow>\r\n                <TableBody>\r\n                    \r\n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n\r\n                            {index !== 0 ? <>\r\n                                   <TableCell align=\"left\">{index} </TableCell>\r\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\r\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \r\n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\r\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\r\n                                 \r\n                                </>\r\n                           : \"\" } \r\n                                   \r\n                            </TableRow>\r\n\r\n                        )):      \r\n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\r\n                            Refresh\r\n                        </Button> </>}\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>    \r\n\r\n\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\n\r\nimport \"./ViewStyle.css\";\r\nimport MyDialog from './MyDialog'\r\nimport Notify from \"../../utils/Notify\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           // products: [],\r\n            stopnview:'', \r\n            indexTimeStamp:'', \r\n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n         this.loadPackList();\r\n  \r\n         var todayTime =  new Date(); \r\n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\r\n              setInterval(() => {\r\n                  this.loadPackList();\r\n              }, 60001 * 2);\r\n          }\r\n      }\r\n\r\n\r\n      loadPackList() {\r\n        \r\n    \r\n        AdminService.getAllIndices()\r\n            .then((res) => {\r\n                if(res.data){\r\n\r\n\r\n                    this.setState({indexTimeStamp : res.data.timestamp})\r\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \r\n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\r\n                    this.setState({products :   softedData});\r\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \r\n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \r\n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \r\n\r\n\r\n                    // for (let i = 0; i < softedData.length; i++) {\r\n                    //     // var cancel = setInterval(() => {\r\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n                    //     // }, 1000);\r\n                    //     // if(i == softedData.length-1 ){\r\n                    //     //     clearInterval(cancel)\r\n                    //     // }\r\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n\r\n                    // }\r\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\r\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\r\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\r\n                  \r\n                   \r\n                }\r\n\r\n            })\r\n            .catch((reject) => {\r\n\r\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \r\n                this.speckIt(\"All Indices API Failed\");     \r\n               \r\n\r\n            })\r\n    }\r\n\r\n\r\n    getIndicesStocks = (indexSymbol, index) =>{\r\n\r\n\r\n\r\n        AdminService.getIndiceStock(indexSymbol)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n\r\n            var resdata = res.data; \r\n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \r\n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \r\n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \r\n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \r\n\r\n\r\n            if(resdata){\r\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \r\n                \r\n                \r\n\r\n                if(document.getElementById('topDate_'+index)){\r\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \r\n                }\r\n                var percent = 0;\r\n\r\n                if(document.getElementById('top1_'+index)){\r\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\r\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \r\n                }\r\n                if(document.getElementById('top2_'+index)){\r\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\r\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top3_'+index)){\r\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\r\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top4_'+index)){\r\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\r\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top5_'+index)){\r\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\r\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \r\n                }   \r\n            }\r\n\r\n        })\r\n        .catch((reject) => {\r\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \r\n            this.speckIt(indexSymbol + \" API Failed \"  ); \r\n        })\r\n\r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n    }\r\n   \r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString(); \r\n      //  window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    dateFormat(date){ \r\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\r\n    }\r\n    timeFormat(date){ \r\n        return moment().calendar();   \r\n        //return moment(date).format('hh:mm:ss');\r\n\r\n        \r\n    }\r\n  \r\n    render(){\r\n     \r\n\r\n      return(\r\n        <React.Fragment>\r\n                <PostLoginNavBar />\r\n            \r\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\r\n\r\n                 <Grid item xs={7} sm={7}>\r\n                   \r\n                </Grid>\r\n\r\n        \r\n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\r\n\r\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                        Market - Indices at { this.state.indexTimeStamp }\r\n                    </Typography> \r\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n\r\n                <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \r\n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \r\n                    \r\n\r\n\r\n                </TableRow>\r\n                    \r\n                    <TableBody>\r\n                    \r\n                        { this.state.products ? this.state.products.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n                              \r\n                              {/* 'SECTORAL INDICES' */}\r\n                                { idata.key !== 'vijay' ? <>\r\n\r\n                                   <TableCell align=\"left\">{index+1} </TableCell>\r\n\r\n                                     <TableCell align=\"left\">   \r\n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\r\n                                    </TableCell>\r\n\r\n                                   \r\n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\r\n                                    \r\n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\r\n                                \r\n                                    <TableCell align=\"left\"  >\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\r\n                                            Refresh\r\n                                        </Button>\r\n\r\n                                    </TableCell> \r\n\r\n\r\n                                    \r\n\r\n                                     \r\n                                     \r\n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \r\n                                    \r\n                                     </> : \"\"\r\n                                }\r\n                               \r\n\r\n                            </TableRow>\r\n\r\n                        )):<Spinner/>}\r\n\r\n\r\n\r\n\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n                </Grid>\r\n\r\n                </Grid>\r\n                   \r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\nimport ApexCharts from 'apexcharts'\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n  var options = {\r\n    series: [{\r\n    data: [{\r\n        x: new Date(1538778600000),\r\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n      },\r\n      {\r\n        x: new Date(1538780400000),\r\n        y: [6632.01, 6643.59, 6620, 6630.11]\r\n      },\r\n      {\r\n        x: new Date(1538782200000),\r\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\r\n      },\r\n      {\r\n        x: new Date(1538784000000),\r\n        y: [6635.65, 6651, 6629.67, 6638.24]\r\n      },\r\n      {\r\n        x: new Date(1538785800000),\r\n        y: [6638.24, 6640, 6620, 6624.47]\r\n      },\r\n      {\r\n        x: new Date(1538787600000),\r\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\r\n      },\r\n      {\r\n        x: new Date(1538789400000),\r\n        y: [6624.61, 6632.2, 6617, 6626.02]\r\n      },\r\n      {\r\n        x: new Date(1538791200000),\r\n        y: [6627, 6627.62, 6584.22, 6603.02]\r\n      },\r\n      {\r\n        x: new Date(1538793000000),\r\n        y: [6605, 6608.03, 6598.95, 6604.01]\r\n      },\r\n      {\r\n        x: new Date(1538794800000),\r\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\r\n      },\r\n      {\r\n        x: new Date(1538796600000),\r\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\r\n      },\r\n      {\r\n        x: new Date(1538798400000),\r\n        y: [6608.91, 6618.99, 6608.01, 6612]\r\n      },\r\n      {\r\n        x: new Date(1538800200000),\r\n        y: [6612, 6615.13, 6605.09, 6612]\r\n      },\r\n      {\r\n        x: new Date(1538802000000),\r\n        y: [6612, 6624.12, 6608.43, 6622.95]\r\n      },\r\n      {\r\n        x: new Date(1538803800000),\r\n        y: [6623.91, 6623.91, 6615, 6615.67]\r\n      },\r\n      {\r\n        x: new Date(1538805600000),\r\n        y: [6618.69, 6618.74, 6610, 6610.4]\r\n      },\r\n      {\r\n        x: new Date(1538807400000),\r\n        y: [6611, 6622.78, 6610.4, 6614.9]\r\n      },\r\n      {\r\n        x: new Date(1538809200000),\r\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\r\n      },\r\n      {\r\n        x: new Date(1538811000000),\r\n        y: [6623.48, 6627, 6618.38, 6620.35]\r\n      },\r\n      {\r\n        x: new Date(1538812800000),\r\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\r\n      },\r\n      {\r\n        x: new Date(1538814600000),\r\n        y: [6615.53, 6617.93, 6610, 6615.19]\r\n      },\r\n      {\r\n        x: new Date(1538816400000),\r\n        y: [6615.19, 6621.6, 6608.2, 6620]\r\n      },\r\n      {\r\n        x: new Date(1538818200000),\r\n        y: [6619.54, 6625.17, 6614.15, 6620]\r\n      },\r\n      {\r\n        x: new Date(1538820000000),\r\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\r\n      },\r\n      {\r\n        x: new Date(1538821800000),\r\n        y: [6625.95, 6626, 6611.66, 6617.58]\r\n      },\r\n      {\r\n        x: new Date(1538823600000),\r\n        y: [6619, 6625.97, 6595.27, 6598.86]\r\n      },\r\n      {\r\n        x: new Date(1538825400000),\r\n        y: [6598.86, 6598.88, 6570, 6587.16]\r\n      },\r\n      {\r\n        x: new Date(1538827200000),\r\n        y: [6588.86, 6600, 6580, 6593.4]\r\n      },\r\n      {\r\n        x: new Date(1538829000000),\r\n        y: [6593.99, 6598.89, 6585, 6587.81]\r\n      },\r\n      {\r\n        x: new Date(1538830800000),\r\n        y: [6587.81, 6592.73, 6567.14, 6578]\r\n      },\r\n      {\r\n        x: new Date(1538832600000),\r\n        y: [6578.35, 6581.72, 6567.39, 6579]\r\n      },\r\n      {\r\n        x: new Date(1538834400000),\r\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\r\n      },\r\n      {\r\n        x: new Date(1538836200000),\r\n        y: [6575.96, 6589, 6571.77, 6588.92]\r\n      },\r\n      {\r\n        x: new Date(1538838000000),\r\n        y: [6588.92, 6594, 6577.55, 6589.22]\r\n      },\r\n      {\r\n        x: new Date(1538839800000),\r\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\r\n      },\r\n      {\r\n        x: new Date(1538841600000),\r\n        y: [6597.5, 6600, 6588.39, 6596.25]\r\n      },\r\n      {\r\n        x: new Date(1538843400000),\r\n        y: [6598.03, 6600, 6588.73, 6595.97]\r\n      },\r\n      {\r\n        x: new Date(1538845200000),\r\n        y: [6595.97, 6602.01, 6588.17, 6602]\r\n      },\r\n      {\r\n        x: new Date(1538847000000),\r\n        y: [6602, 6607, 6596.51, 6599.95]\r\n      },\r\n      {\r\n        x: new Date(1538848800000),\r\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\r\n      },\r\n      {\r\n        x: new Date(1538850600000),\r\n        y: [6591.02, 6603.08, 6591, 6591]\r\n      },\r\n      {\r\n        x: new Date(1538852400000),\r\n        y: [6591, 6601.32, 6585, 6592]\r\n      },\r\n      {\r\n        x: new Date(1538854200000),\r\n        y: [6593.13, 6596.01, 6590, 6593.34]\r\n      },\r\n      {\r\n        x: new Date(1538856000000),\r\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\r\n      },\r\n      {\r\n        x: new Date(1538857800000),\r\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\r\n      },\r\n      {\r\n        x: new Date(1538859600000),\r\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\r\n      },\r\n      {\r\n        x: new Date(1538861400000),\r\n        y: [6596.25, 6604.2, 6590, 6602.99]\r\n      },\r\n      {\r\n        x: new Date(1538863200000),\r\n        y: [6602.99, 6606, 6584.99, 6587.81]\r\n      },\r\n      {\r\n        x: new Date(1538865000000),\r\n        y: [6587.81, 6595, 6583.27, 6591.96]\r\n      },\r\n      {\r\n        x: new Date(1538866800000),\r\n        y: [6591.97, 6596.07, 6585, 6588.39]\r\n      },\r\n      {\r\n        x: new Date(1538868600000),\r\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\r\n      },\r\n      {\r\n        x: new Date(1538870400000),\r\n        y: [6596.44, 6601, 6590, 6596.55]\r\n      },\r\n      {\r\n        x: new Date(1538872200000),\r\n        y: [6598.91, 6605, 6596.61, 6600.02]\r\n      },\r\n      {\r\n        x: new Date(1538874000000),\r\n        y: [6600.55, 6605, 6589.14, 6593.01]\r\n      },\r\n      {\r\n        x: new Date(1538875800000),\r\n        y: [6593.15, 6605, 6592, 6603.06]\r\n      },\r\n      {\r\n        x: new Date(1538877600000),\r\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\r\n      },\r\n      {\r\n        x: new Date(1538879400000),\r\n        y: [6604.44, 6604.44, 6600, 6603.5]\r\n      },\r\n      {\r\n        x: new Date(1538881200000),\r\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\r\n      },\r\n      {\r\n        x: new Date(1538883000000),\r\n        y: [6603.85, 6605, 6600, 6604.07]\r\n      },\r\n      {\r\n        x: new Date(1538884800000),\r\n        y: [6604.98, 6606, 6604.07, 6606]\r\n      },\r\n    ]\r\n  }],\r\n    chart: {\r\n    type: 'candlestick',\r\n    height: 350\r\n  },\r\n  title: {\r\n    text: 'CandleStick Chart',\r\n    align: 'left'\r\n  },\r\n  colors: {\r\n    upward: 'darkmagenta',\r\n    downward: '#00cbcb'\r\n  },\r\n  xaxis: {\r\n    type: 'datetime'\r\n  },\r\n  yaxis: {\r\n    tooltip: {\r\n      enabled: true\r\n    }\r\n  }\r\n  };\r\n\r\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n  chart.render();\r\n\r\n\r\n\r\n  return \"\"; \r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport TradeConfig from './TradeConfig.json';\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n      this.filterOptionChain(e.target.name,  e.target.value); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        AdminService.getFunds().then(fundsRes => {\r\n            // console.log('profiledata', profileRes); \r\n               let fundsResData = resolveResponse(fundsRes);\r\n             //  var fundsResData =  fundsRes && fundsRes.data; \r\n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\r\n                this.setState({  fundData :fundsResData.data }); \r\n                localStorage.setItem(\"netCapital\", fundsResData.data && fundsResData.data.net); \r\n\r\n               }\r\n        })\r\n\r\n    }\r\n   \r\n  \r\n   toFixedAmount =(value) => {\r\n\r\n    if(value){\r\n      return  parseFloat(value).toFixed(2);\r\n    }\r\n   }\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n       \r\n            <br/><br/><br/>\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n            \r\n                <Grid id=\"tabledatachart\"  item xs={8} sm={4}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n\r\n                <Typography variant=\"h6\">\r\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\r\n                </Typography>\r\n              \r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\r\n                </Typography>\r\n             \r\n                <Typography variant=\"h6\">\r\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\r\n                </Typography>\r\n\r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\r\n                </Typography>\r\n                </Paper>\r\n                </Grid>\r\n               \r\n\r\n\r\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n               \r\n                <Typography variant=\"h6\">\r\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\r\n                    </Typography>\r\n                    \r\n                    \r\n                    <Typography variant=\"h6\">\r\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\r\n                    </Typography>\r\n\r\n                  \r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n               \r\n                <Typography variant=\"h6\">\r\n                    Total Capital  :   {TradeConfig.totalCapital }\r\n                    </Typography>\r\n                    \r\n                    \r\n                    <Typography variant=\"h6\">\r\n                    Per Trade Exposure  :   {TradeConfig.perTradeExposurePer}% \r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\">\r\n                    Per Trade Exposure  :   {(TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100).toFixed(2)}\r\n                    </Typography>\r\n\r\n                    </Paper>\r\n\r\n                </Grid>\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass OrderBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All',\r\n            triggerprice :0,\r\n            price:0,\r\n            lotsize:0,\r\n            firstTimeFlag: true,\r\n            trackSLPrice: localStorage.getItem('trackSLPrice') && JSON.parse(localStorage.getItem('trackSLPrice')) || [], \r\n\r\n        }\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n\r\n      //  console.log('this.state.trackSLPrice', this.state.trackSLPrice);\r\n\r\n        let trackSLPrice = localStorage.getItem('trackSLPrice') && JSON.parse(localStorage.getItem('trackSLPrice')) || []; \r\n\r\n\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n\r\n                  \r\n                  orderlist.forEach(element => {\r\n                        let trakingRecord = trackSLPrice.filter((item)=> item.tradingsymbol == element.tradingsymbol); \r\n                        \r\n                        if(trakingRecord.length > 0 && element.tradingsymbol == trakingRecord[0].tradingsymbol){\r\n                           this.setState({ ['priceTarget_' + element.tradingsymbol] :  trakingRecord[0].priceTarget })  \r\n                           this.setState({ ['priceStopLoss_' + element.tradingsymbol] :  trakingRecord[0].priceStopLoss })  \r\n                        }\r\n                  });\r\n                  \r\n\r\n           //     orderlist.sort((a, b) => a.status - b.status); \r\n                this.setState({oderbookData: orderlist});\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\r\n\r\n          \r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        // setInterval(() => {\r\n        //     this.getTodayOrder();\r\n        // }, 10000);\r\n       \r\n        this.getTodayOrder();\r\n    }\r\n\r\n   \r\n    cancelOrderOfSame = (orderId,variety) =>  {\r\n       \r\n        var data = {\r\n            \"variety\":variety,\r\n            \"orderid\":orderId,\r\n        }\r\n        AdminService.cancelOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            if(data.status  && data.message === 'SUCCESS'){\r\n              //  console.log(\"cancel order\", data);   \r\n                this.getTodayOrder();\r\n               // this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    modifyOrder = (row, trailingstoploss) => {\r\n\r\n\r\n        var data = {\r\n            \"variety\" :row.variety,  // \"STOPLOSS\",\r\n            \"orderid\": row.orderid,\r\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": row.duration,\r\n            \"price\":  this.state.price,\r\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\r\n            \"quantity\":row.quantity,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n            }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n           // console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n               // localStorage.setItem('ifNotBought' ,  'false')\r\n               this.setState({triggerprice : 0}); \r\n               this.getTodayOrder();\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    onChangePriceStopLoss = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n        let tradingsymbol = e.target.name.split('_')[1]; \r\n        let trackSLPrice = localStorage.getItem('trackSLPrice') && JSON.parse(localStorage.getItem('trackSLPrice')) || []; \r\n        let isfound = false; \r\n        for (let index = 0; index < trackSLPrice.length; index++) {\r\n            const element = trackSLPrice[index];\r\n            if(element.tradingsymbol === tradingsymbol){\r\n                element.priceStopLoss = e.target.value.trim(); \r\n                isfound = true; \r\n                break;\r\n            }\r\n        }\r\n        if(!isfound){\r\n              trackSLPrice.push({\r\n                priceStopLoss :  e.target.value.trim(), \r\n                tradingsymbol : tradingsymbol, \r\n                optiontype : tradingsymbol.substr(tradingsymbol.length-2,tradingsymbol.length-1),\r\n                name : tradingsymbol.includes('BANKNIFTY') ? 'BANKNIFTY' : \"NIFTY\"\r\n              }); \r\n        }\r\n        \r\n    //    console.log(\"slprice tradingsymbol\", trackSLPrice , tradingsymbol, isfound)\r\n        localStorage.setItem('trackSLPrice', JSON.stringify(trackSLPrice));\r\n    }\r\n\r\n    onChangePriceTarget = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n        let tradingsymbol = e.target.name.split('_')[1]; \r\n        let trackSLPrice = localStorage.getItem('trackSLPrice') && JSON.parse(localStorage.getItem('trackSLPrice')) || []; \r\n        let isfound = false; \r\n        for (let index = 0; index < trackSLPrice.length; index++) {\r\n            const element = trackSLPrice[index];\r\n            if(element.tradingsymbol === tradingsymbol){\r\n                element.priceTarget = e.target.value.trim(); \r\n                isfound = true; \r\n                break;\r\n            }\r\n        }\r\n        if(!isfound){\r\n            trackSLPrice.push({\r\n              priceStopLoss :  e.target.value.trim(), \r\n              tradingsymbol : tradingsymbol, \r\n              optiontype : tradingsymbol.substr(tradingsymbol.length-2,tradingsymbol.length-1),\r\n              name : tradingsymbol.includes('BANKNIFTY') ? 'BANKNIFTY' : \"NIFTY\"\r\n \r\n            }); \r\n      }\r\n     //   console.log(\"trarget price update\", trackSLPrice)\r\n        localStorage.setItem('trackSLPrice', JSON.stringify(trackSLPrice));\r\n    }\r\n\r\n\r\n    render(){\r\n     //   console.log(this.state.oderbookData);\r\n\r\n      return(\r\n        <React.Fragment>\r\n\r\n\r\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\r\n            \r\n         \r\n\r\n\r\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    <Typography color=\"primary\" gutterBottom>\r\n                                         Oders Placed ({this.state.oderbookData.length}) \r\n                                    </Typography> \r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \r\n                                </Grid>\r\n                                \r\n                </Grid>\r\n                \r\n            <Grid direction=\"row\" alignItems=\"center\" container>\r\n            <Grid item xs={12} sm={12} >\r\n\r\n                     <Paper style={{padding:\"10px\"}} >\r\n\r\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\r\n               \r\n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow variant=\"head\" >\r\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\r\n\r\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\r\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\r\n\r\n                                \r\n\r\n                                <TableCell align=\"center\"><b>Ordertype</b>&nbsp;</TableCell>\r\n                                <TableCell align=\"center\"><b>Qty </b>&nbsp;</TableCell>\r\n                        \r\n                                <TableCell align=\"center\"><b>AvgPrice</b>&nbsp;</TableCell>\r\n                                \r\n                                <TableCell align=\"center\"><b>Price</b>&nbsp;</TableCell>\r\n                                <TableCell align=\"center\"><b>TriggerPrice</b>&nbsp;</TableCell>\r\n\r\n                                <TableCell align=\"center\">Action&nbsp;</TableCell>\r\n                                <TableCell align=\"center\"><b>Status</b>&nbsp;</TableCell>\r\n                                <TableCell align=\"center\"><b>SLPrice</b>&nbsp;</TableCell>\r\n                                <TableCell align=\"center\"><b>TargetPrice</b></TableCell>\r\n\r\n                                <TableCell align=\"center\"><b>Details </b></TableCell>\r\n                \r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        \r\n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\r\n                                <TableRow hover key={i} >\r\n\r\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\r\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\r\n\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\r\n\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n\r\n                                    \r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {/* {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\r\n                                        : row.quantity} */}\r\n                                    {row.quantity}\r\n\r\n                                    </TableCell>\r\n\r\n                                \r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\r\n                                        : row.price}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\r\n                                        : row.triggerprice}\r\n                                    </TableCell>\r\n\r\n\r\n                                    <TableCell align=\"left\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\r\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \r\n                                       </>\r\n                                     : ''}\r\n                                    </TableCell>\r\n                                    \r\n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\r\n                                        {row.orderstatus}\r\n                                        <br />\r\n\r\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\r\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \r\n                                       </>\r\n                                     : ''}\r\n                                    </TableCell>\r\n\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' || row.orderstatus ==='complete' ? \r\n                                         <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}}  value={this.state['priceStopLoss_'+row.tradingsymbol]}  name={'priceStopLoss_'+row.tradingsymbol} onBlur={this.onChangePriceStopLoss}/>\r\n                                                : ''}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' || row.orderstatus ==='complete'? \r\n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} value={this.state['priceTarget_'+row.tradingsymbol]}  name={'priceTarget_'+row.tradingsymbol}  onBlur={this.onChangePriceTarget}/>\r\n                                        : ''}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell style={{fontSize: \"11px\", width:\"15%\"}} align=\"center\">{row.text}</TableCell>\r\n                                    \r\n                                </TableRow>\r\n                            )):<Spinner/>}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </Paper>    \r\n                </Grid>\r\n                 \r\n               </Grid>    \r\n           \r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport \"./ViewStyle.css\";\r\n\r\n\r\nclass TradeBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addProduct = this.addProduct.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.convertBool = this.convertBool.bind(this);\r\n        \r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All'\r\n\r\n        }\r\n    }\r\n    getTodayTrade = () => {\r\n        AdminService.retrieveTradeBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res);\r\n                console.log('datamy', data);\r\n\r\n                if(data && data.data){\r\n                    this.setState({oderbookData: data.data});\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n   \r\n   \r\n        this.getTodayTrade(); \r\n        \r\n       \r\n    }\r\n\r\n    zoneChange = (e) =>{\r\n        this.setState({[e.target.name]: e.target.value});\r\n\r\n        if(e.target.value.includes(\"Select All\")){\r\n            this.setState({selectedZone: this.state.listofzones})\r\n            this.setState({selectAllzone: \"Remove All\"})\r\n        }\r\n    \r\n        if(e.target.value.includes(\"Remove All\")){\r\n            this.setState({selectedZone: []})\r\n            this.setState({selectAllzone: \"Select All\"})\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n   \r\n    addProduct=(e)=> {\r\n        console.log(this.props)\r\n        this.props.history.push('/banner-add');\r\n    }\r\n\r\n    editProduct(productId) {\r\n        window.localStorage.removeItem(\"selectedBannerId\");\r\n        window.localStorage.setItem(\"selectedBannerId\", productId);\r\n        this.props.history.push('/banner-edit');\r\n    }\r\n\r\n    convertBool(flag) {\r\n        return flag ? 'Yes' : 'No';\r\n    }\r\n\r\n    dateFormat(date){\r\n        var d = new Date(date);\r\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\r\n        return fd;\r\n    }\r\n   \r\n    \r\n\r\n    render(){\r\n    \r\n      return(\r\n        <React.Fragment>\r\n            <PostLoginNavBar/>\r\n\r\n\r\n\r\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                  Today Trades ({this.state.oderbookData.length})\r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \r\n                            </Grid>\r\n\r\n                            \r\n                </Grid>\r\n            \r\n\r\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n\r\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\r\n                        \r\n\r\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\r\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\r\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\r\n\r\n                      \r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n            \r\n\r\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\r\n                        <TableRow key={row.productId} >\r\n\r\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\r\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                            \r\n                            <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\r\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\r\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\r\n\r\n                            \r\n                        </TableRow>\r\n                    )):<Spinner/>}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\r\nexport default TradeBook;","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\n//import AdminWelcome from '../adminwelcome.png';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport  {API_KEY} from \"../../utils/config\";\r\nimport * as moment from 'moment';\r\nimport { w3cwebsocket } from 'websocket'; \r\nimport pako from 'pako';\r\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            userName: \"\",\r\n            password: \"\",\r\n            autoSearchList :[],\r\n            isDasable:false,\r\n            isError:false,\r\n            InstrumentLTP : {},\r\n            ifNotBought : true,\r\n            autoSearchTemp : [],\r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\r\n        \r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n            console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n          this.setState({ startDate: date  });\r\n        } else if (fromDate === \"END_DATE\") {\r\n          this.setState({ endDate: date  });\r\n        }\r\n      };\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\":  this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             this.setState({ InstrumentLTP : LtpData});\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n       })\r\n    }\r\n    decodeWebsocketData =(array)  => {\r\n\r\n        console.log('atoms'); \r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n    \r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken ,clientcode ) => {\r\n\r\n\r\n\r\n        var firstTime_req =  {\r\n            \"actiontype\": \"subscribe\",\r\n            \"feedtype\": \"order_feed\",\r\n            \"jwttoken\": this.state.jwtToken,\r\n            \"clientcode\": this.state.clientcode ,\r\n            \"apikey\": API_KEY\r\n       }\r\n\r\n       \r\n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\r\n        wsClint.send(JSON.stringify( firstTime_req));\r\n    }\r\n\r\n    updateSocketWatch = (feedToken,clientcode ) => {\r\n      \r\n        var channel = this.state.symbolList.map(element => {\r\n             return 'nse_cm|'+ element.token; \r\n        });\r\n\r\n        channel = channel.join('&'); \r\n        var sbin =  {\r\n            \"task\":\"mw\",\r\n            \"channel\": channel,\r\n            \"token\":this.state.feedToken,\r\n            \"user\":this.state.clientcode,\r\n            \"acctid\":this.state.clientcode\r\n        }\r\n        wsClint.send( JSON.stringify( sbin)); \r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var feedToken =   tokens &&  tokens.feedToken;\r\n        var jwtToken =   tokens &&  tokens.jwtToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \r\n        var clientcode =   userProfile &&  userProfile.clientcode;\r\n        this.setState({ feedToken : feedToken,clientcode : clientcode , jwtToken: jwtToken });\r\n\r\n            \r\n        wsClint.onopen  = (res) => {\r\n\r\n\r\n            var firstTime_req =  {\r\n                \"jwttoken\": this.state.jwtToken,\r\n                \"clientcode\": this.state.clientcode ,\r\n                \"apikey\": API_KEY\r\n           }\r\n    \r\n           \r\n            console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\r\n            wsClint.send(firstTime_req);\r\n\r\n            // this.makeConnection();\r\n            // console.log('connected');\r\n            // this.updateSocketWatch();\r\n                \r\n             setTimeout(function(){\r\n               this.makeConnection(feedToken ,clientcode);\r\n             }, 1000);\r\n        }\r\n\r\n        wsClint.onmessage = (message) => {\r\n            \r\n            \r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n\r\n            this.setState({ positionList : JSON.parse(data) });\r\n\r\n        //    this.state.symbolList.forEach(element => {\r\n\r\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\r\n        //     // console.log(\"foundLive\", foundLive);\r\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\r\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\r\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\r\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\r\n               \r\n               \r\n        //      });\r\n        \r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e); \r\n        }\r\n\r\n        setInterval(() => {\r\n\r\n            var heartbeatReq =  {\r\n                \"actiontype\": \"heartbeat\",\r\n                \"feedtype\": \"order_feed\",\r\n                \"jwttoken\": this.state.feedToken ,\r\n                \"clientcode\": this.state.clientcode ,\r\n                \"apikey\": API_KEY\r\n            }\r\n    \r\n            console.log(\"heartbeatReq : \" + heartbeatReq);\r\n            wsClint.send(heartbeatReq);\r\n          //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if(!list){\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n      \r\n    }\r\n\r\n    placeOrder = (transactiontype) => {\r\n\r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":transactiontype, //BUY OR SELL\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\":this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n\r\n                if(this.state.stoploss){\r\n                    this.placeSLMOrder(this.state.stoploss);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails =(name) => {\r\n       \r\n        var token= ''; \r\n        for (let index = 0; index <  this.state.symbolList.length; index++) {\r\n            if(this.state.symbolList[index].symbol === name){\r\n                    token =  this.state.symbolList[index].token; \r\n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\r\n                    break; \r\n            }\r\n        }  \r\n        this.getHistory(token); \r\n    }\r\n\r\n    placeSLMOrder = () => {\r\n\r\n        var data = {\r\n                \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":\"SELL\",\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": this.state.quantity, \r\n            \"triggerprice\" : this.state.stoploss,\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n     // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data  = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token ,\r\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1) , \r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n       }\r\n       \r\n        AdminService.getHistoryData(data).then(res => {\r\n             let data = resolveResponse(res,'noPop' );\r\n              console.log(data); \r\n              if(data && data.data){\r\n                 \r\n                var histCandles = data.data; \r\n                histCandles &&  histCandles.sort(function(a,b){\r\n                  return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if(histCandles.length > 0){\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\r\n                }\r\n                this.getLTP();\r\n              }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n        \r\n\r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        console.log(\"values\", values); \r\n        console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n\r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index,1);\r\n        localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList : list });\r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                \r\n               \r\n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n\r\n                    <Grid item xs={10} sm={12}> \r\n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\r\n                              \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {/* {\r\n                                \"variety\": null,\r\n                                \"ordertype\": \"LIMIT\",\r\n                                \"producttype\": \"INTRADAY\",\r\n                                \"duration\": \"DAY\",\r\n                                \"price\": \"194\",\r\n                                \"triggerprice\": \"0\",\r\n                                \"quantity\": \"1\",\r\n                                \"disclosedquantity\": \"0\",\r\n                                \"squareoff\": \"0\",\r\n                                \"stoploss\": \"0\",\r\n                                \"trailingstoploss\": \"0\",\r\n                                \"tradingsymbol\": \"SBIN-EQ\",\r\n                                \"transactiontype\": \"BUY\",\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": null,\r\n                                \"instrumenttype\": \"\",\r\n                                \"strikeprice\": \"-1\",\r\n                                \"optiontype\": \"\",\r\n                                \"expirydate\": \"\",\r\n                                \"lotsize\": \"1\",\r\n                                \"cancelsize\": \"1\",\r\n                                \"averageprice\": \"0\",\r\n                                \"filledshares\": \"0\",\r\n                                \"unfilledshares\": \"1\",\r\n                                \"orderid\": \"201020000000080\",\r\n                                \"text\": \"\",\r\n                                \"status\": \"cancelled\",\r\n                                \"orderstatus\": \"cancelled\",\r\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"fillid\": null,\r\n                                \"filltime\": null\r\n                            } */}\r\n\r\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\r\n                                <TableRow key={i} >\r\n\r\n\r\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    \r\n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n                                    <TableCell align=\"center\">{row.status}</TableCell>\r\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\r\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\r\n                                \r\n                                </TableRow>\r\n                            )):''}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     formContainer : {\r\n//         display: 'flex',\r\n//         flexFlow: 'row wrap'\r\n//     },\r\n\r\n    \r\n\r\n// };\r\n\r\nexport default Home;","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {}\r\n})\r\n\r\n\r\n \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  \r\n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \r\n  \r\n  var longs = multipleChartData && multipleChartData.longCandles; \r\n  var shorts = multipleChartData && multipleChartData.shortCandles; \r\n\r\n   \r\n  \r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\r\n        Chart \r\n      </Button>\r\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {multipleChartData && multipleChartData.symbol} \r\n      {/*   <br />\r\n\r\n        <span style={{fontSize:'12px'}}>  \r\n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\r\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\r\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\r\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\r\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\r\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\r\n        </span> */}\r\n      \r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n\r\n        {/* body data\r\n        <ReactApexChart\r\n              options={props.data && props.data.options}\r\n              series={props.data && props.data.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            /> */}\r\n\r\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                      Longs ({longs && longs.length}) \r\n              </Typography> \r\n\r\n              <Grid justify=\"space-between\" container direction=\"row\">\r\n\r\n                {longs ? longs.map((row, i) => (\r\n                        <Grid item  >\r\n                        <ReactApexChart \r\n                              options={{\r\n                                        chart: {\r\n                                          type: 'candlestick',\r\n                                          height: 250\r\n                                        },\r\n                                        title: {\r\n                                            text: row.foundAt.substr(6, 10),\r\n                                            align: 'left'\r\n                                        },\r\n                                        xaxis: {\r\n                                            type: 'datetime',\r\n                                        },\r\n                                        yaxis: {\r\n                                            tooltip: {\r\n                                            enabled: true\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    series={[{\r\n                                      data:  row.candleChartData.reverse()\r\n                                        \r\n                                    }]} \r\n                                    type=\"candlestick\" \r\n                                    width={250}\r\n                                    height={250} \r\n                            />\r\n\r\n                        </Grid>\r\n\r\n                )) : \"\"}\r\n                             \r\n                              \r\n                              \r\n                </Grid>\r\n\r\n\r\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                      Shorts ({shorts && shorts.length}) \r\n              </Typography> \r\n\r\n              <Grid justify=\"space-between\" container direction=\"row\">\r\n\r\n                {shorts ? shorts.map((row, i) => (\r\n                        <Grid item  >\r\n                        <ReactApexChart \r\n                              options={{\r\n                                        chart: {\r\n                                          type: 'candlestick',\r\n                                          height: 250\r\n                                        },\r\n                                        title: {\r\n                                            text: row.foundAt.substr(6, 10),\r\n                                            align: 'left'\r\n                                        },\r\n                                        xaxis: {\r\n                                            type: 'datetime',\r\n                                        },\r\n                                        yaxis: {\r\n                                            tooltip: {\r\n                                            enabled: true\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    series={[{\r\n                                      data:  row.candleChartData.reverse()\r\n                                        \r\n                                    }]} \r\n                                    type=\"candlestick\" \r\n                                    width={250}\r\n                                    height={250} \r\n                            />\r\n\r\n                        </Grid>\r\n\r\n                )) : \"\"}\r\n                             \r\n                              \r\n                              \r\n                </Grid>\r\n\r\n       \r\n          \r\n\r\n    \r\n         \r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport OrderWatchlist from './OrderWatchlist';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog';\r\nimport ChartMultiple from './ChartMultiple';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport CommonMethods from '../../utils/CommonMethods';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList: [],\r\n            autoSearchList: [],\r\n            InstrumentLTP: {},\r\n            autoSearchTemp: [],\r\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"DELIVERY\",\r\n            nr4TotalPer: 0,\r\n            pnlAmountTotal: 0,\r\n            totalNetProfit: 0,\r\n            totelActivatedCount: 0,\r\n            totalBrokerChargesNR4: 0,\r\n            stockTesting: \"\",\r\n            perHighLowTotal: 0,\r\n            netPnLAmountOnHighlowTotal: 0,\r\n            firstTimeMove : 0.6, \r\n            firstTimeSLMove: 0.5, \r\n            nextTimeMove : 0.6, \r\n            nextTimeSLMove: 0.3,\r\n            firstTimeMoveOption : 10, \r\n            firstTimeSLMoveOption: 3, \r\n            nextTimeMoveOption : 10, \r\n            nextTimeSLMoveOption: 3,\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            trackSLPrice: localStorage.getItem('trackSLPrice') && JSON.parse(localStorage.getItem('trackSLPrice')) || [], \r\n            enableSLMOrderUi:false,\r\n            addSLInfo : {}, \r\n            niftyLtpSec: [],\r\n            bnniftyLtpSec:[]\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.updateOrderList(); \r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1000) })\r\n              this.setState({bankNiftyInterval :  setInterval(() => {this.getNiftyLTP(); this.getBankNiftyLTP(); }, 1000)}) \r\n\r\n            var squireInterval = setInterval(() => {\r\n                let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\r\n                let sqrOffendTime = moment('3:15pm', 'h:mma');\r\n                let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\r\n            \r\n                if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\r\n                    this.state.positionList.forEach((element, i)=> {\r\n                        if(element.netqty > 0 || element.netqty < 0){\r\n                            this.squareOff(element);\r\n                        }\r\n                        if(this.state.positionList.length == i+1){\r\n                            clearInterval(squireInterval);\r\n                            console.log(\"squireInterval ended\"); \r\n                        }\r\n                    });\r\n                } \r\n            }, 5000);\r\n\r\n        } else {\r\n            clearInterval(this.state.positionInterval);\r\n           // clearInterval(this.state.bankNiftyInterval);\r\n        }\r\n\r\n        var scanendTime = moment('3:30pm', 'h:mma');\r\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\r\n            // setInterval(() => {\r\n            //     this.getNSETopStock(); \r\n            //   //  console.log('chartink scan call 2 sec:', new Date()) \r\n            // }, 2000)\r\n\r\n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \r\n\r\n            // var tostartInteral =   setInterval(() => {\r\n            //     var time = new Date(); \r\n            //     if(time.getMinutes() % 15 === 0){\r\n            //         setTimeout(() => {\r\n            //             this.getCandleHistoryAndStore(); \r\n            //         }, 70000);\r\n            //         setInterval(() => {\r\n            //                 if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n            //                 this.getCandleHistoryAndStore(); \r\n            //             }\r\n            //          }, 60000 * 15 + 70000 );  \r\n            //          clearInterval(tostartInteral); \r\n            //     } \r\n            // }, 1000);\r\n\r\n\r\n            // var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\r\n            // setInterval(() => {\r\n            //     this.refreshLtpOnFoundPattern();\r\n            // }, foundPatternsFromStored.length * 100 + 300000);\r\n\r\n           \r\n           \r\n        }     \r\n        \r\n        // var oequaltolowOrder = setInterval(() => {\r\n        //     var time = new Date(); \r\n        //     console.log(\"Open = low/high sanning & orderplace in at 9:20\", time.toLocaleTimeString())\r\n        //     if(time.getHours() === 9 && time.getMinutes()  >= 15 &&  time.getMinutes()  <= 30){\r\n        //         this.checkOpenEqualToLow(); \r\n        //       //  clearInterval(oequaltolowOrder); \r\n        //     }\r\n        //     if(time.getMinutes() > 30){\r\n        //         clearInterval(oequaltolowOrder); \r\n        //     } \r\n        // }, 30000);\r\n      \r\n \r\n\r\n        // var tostartInteral = setInterval(() => {\r\n        //     var time = new Date(); \r\n        //     console.log(\"chartink scanning in\", time.toLocaleTimeString())\r\n        //     if(time.getMinutes() % 5 === 0 && time.getSeconds() === 5){\r\n        //         this.getChartInkStock(); \r\n        //     } \r\n        // }, 1000);\r\n        \r\n        // this.getChartInkStock(); \r\n        // this.getCandleHistoryAndStore(); \r\n        // this.findNR4PatternLive();\r\n        // this.findNR7PatternLive();\r\n        // this.getPositionData();\r\n        // this.getNSETopStock();\r\n        // this.getMySelectedStock();\r\n\r\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\r\n\r\n        this.setState({ foundPatternList: backTestResult }); \r\n    }\r\n\r\n    checkOpenEqualToLow = async () => {\r\n\r\n        // if(window.confirm(\"Are you sure? searching and ordering in NIFTY 100\")){\r\n       \r\n        // }\r\n\r\n        var watchList = this.state.staticData['NIFTY 100']; //NIFTY 100 Securities in F&O\r\n\r\n        this.setState({\r\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\r\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: [], closeingEqualHighList: []\r\n        });\r\n\r\n        for (let index = 0; index < watchList.length; index++) { //watchList.length\r\n            const element = watchList[index];\r\n\r\n\r\n            var isFound = false;\r\n            for (let j = 0; j < this.state.positionList.length; j++) {\r\n                if (this.state.positionList[j].tradingsymbol === element.symbol) {\r\n                    isFound = true;\r\n                }\r\n            }\r\n            if (!isFound) {\r\n                var data = {\r\n                    \"exchange\": element.exch_seg,\r\n                    \"tradingsymbol\": element.symbol,\r\n                    \"symboltoken\": element.token,\r\n                }\r\n                AdminService.getLTP(data).then(res => {\r\n                    let resdata = resolveResponse(res, 'noPop');\r\n                    var LtpData = resdata && resdata.data;\r\n                    if (LtpData) {\r\n\r\n                        let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\r\n                        LtpData.nc = change;\r\n                        LtpData.symbol = element.symbol;\r\n\r\n                        if (LtpData && LtpData.open === LtpData.low) { //buy\r\n                            //console.log(\"Open=Low\", element.symbol, LtpData);\r\n                            //var stopLossPrice = LtpData.low - (LtpData.low * TradeConfig.perTradeStopLossPer / 100);\r\n\r\n                            const format1 = \"YYYY-MM-DD HH:mm\";\r\n                            let enddate = moment(new Date());\r\n                            let startDate = moment(enddate, \"DD-MM-YYYY\").subtract(7, 'days');\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": element.token,\r\n                                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                                \"fromdate\": moment(startDate).format(format1),\r\n                                \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n                            }\r\n\r\n                            AdminService.getHistoryData(data).then(res => {\r\n                                let histdata = resolveResponse(res, 'noPop');\r\n                                //console.log(\"candle history\", histdata); \r\n                                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                                    var candleData = histdata.data;\r\n                                    candleData.reverse();\r\n                                    //    console.log(\"candleData\",element, candleData);\r\n                                    console.log(\"lastday\", element, candleData[1]);\r\n                                    let lastdayinfo = candleData[1];\r\n\r\n                                    // console.log(\"Open=High\", element.symbol, LtpData);                     \r\n                                    //var stopLossPrice = LtpData.low - (LtpData.low * TradeConfig.perTradeStopLossPer / 100);\r\n\r\n                                    if (LtpData.ltp > lastdayinfo[2]) {\r\n                                       // let stopLossPrice = LtpData.low - (LtpData.low / 10) / 100;\r\n\r\n                                        let stopLossPrice = lastdayinfo[3] - (lastdayinfo[3] / 10) / 100;\r\n                                        stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); //stopLossPrice\r\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                                        let quantity = 1// Math.floor(perTradeExposureAmt / LtpData.ltp);\r\n                                        console.log(element.symbol + 'ltp ' + LtpData.ltp, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\r\n                                        var orderOption = {\r\n                                            transactiontype: 'BUY',\r\n                                            tradingsymbol: element.symbol,\r\n                                            symboltoken: element.token,\r\n                                            buyPrice: 0,\r\n                                            quantity: quantity,\r\n                                            stopLossPrice: stopLossPrice\r\n                                        }\r\n                                        let mySL = 3.5;\r\n                                        if (LtpData.ltp >= 200 && LtpData.ltp <= 10000 && stopLossPrice && quantity) {\r\n                                            this.placeOrderMethod(orderOption);\r\n                                        }\r\n                                    }\r\n\r\n                                } else {\r\n                                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                                    console.log(\" candle data emply\");\r\n                                }\r\n                            })\r\n                        }\r\n\r\n\r\n                        if (LtpData && LtpData.open === LtpData.high) { //sell\r\n\r\n                            const format1 = \"YYYY-MM-DD HH:mm\";\r\n                            let enddate = moment(new Date());\r\n                            let startDate = moment(enddate, \"DD-MM-YYYY\").subtract(7, 'days');\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": element.token,\r\n                                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                                \"fromdate\": moment(startDate).format(format1),\r\n                                \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n                            }\r\n\r\n                            AdminService.getHistoryData(data).then(res => {\r\n                                let histdata = resolveResponse(res, 'noPop');\r\n                                //console.log(\"candle history\", histdata); \r\n                                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                                    var candleData = histdata.data;\r\n                                    candleData.reverse();\r\n                                    //    console.log(\"candleData\",element, candleData);\r\n                                    console.log(\"lastday\", element, candleData[1]);\r\n                                    let lastdayinfo = candleData[1];\r\n\r\n                                    // console.log(\"Open=High\", element.symbol, LtpData);                     \r\n                                    //var stopLossPrice = LtpData.low - (LtpData.low * TradeConfig.perTradeStopLossPer / 100);\r\n\r\n                                    if (LtpData.ltp < lastdayinfo[3]) {\r\n                                      //  let stopLossPrice = LtpData.high + (LtpData.high / 10) / 100; //same day high sl \r\n                                        let stopLossPrice = lastdayinfo[2] + (lastdayinfo[2] / 10) / 100; //pre day high\r\n\r\n                                        stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\r\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                                        let quantity = 1// Math.floor(perTradeExposureAmt / LtpData.ltp);\r\n                                        console.log(element.symbol + 'ltp ' + LtpData.ltp, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\r\n                                        var orderOption = {\r\n                                            transactiontype: 'SELL',\r\n                                            tradingsymbol: element.symbol,\r\n                                            symboltoken: element.token,\r\n                                            buyPrice: 0,\r\n                                            quantity: quantity,\r\n                                            stopLossPrice: stopLossPrice\r\n                                        }\r\n                                        let mySL = 3.5;\r\n                                        if (LtpData.ltp >= 200 && LtpData.ltp <= 10000 && stopLossPrice && quantity) {\r\n                                             this.placeOrderMethod(orderOption);\r\n                                        }\r\n                                    }\r\n\r\n                                } else {\r\n                                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                                    console.log(\" candle data emply\");\r\n                                }\r\n                            })\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                })\r\n            }\r\n\r\n            \r\n            await new Promise(r => setTimeout(r, 210));\r\n        }\r\n      \r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        //clearInterval(this.state.positionInterval);\r\n        // clearInterval(this.state.scaninterval);\r\n        //  clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n\r\n    getCandleHistoryAndStore = async () => {\r\n\r\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\r\n        const today = moment().isoWeekday();\r\n        var timediff = '';\r\n\r\n\r\n\r\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\r\n            timediff = moment.duration(\"00:50:00\");\r\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\r\n            timediff = moment.duration(\"66:00:00\");\r\n        } else {\r\n            timediff = moment.duration(\"19:00:00\");\r\n        }\r\n        timediff = moment.duration(\"21:00:00\");\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                \"fromdate\": moment(startdate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    candleData.reverse();\r\n\r\n                    if (candleData && candleData.length >= 10) {\r\n                        var last10Candle = candleData.slice(0, 10);\r\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\r\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\r\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\r\n\r\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \r\n                    }\r\n\r\n                    // var data = {\r\n                    //     data : candleData, \r\n                    //     token: element.token,\r\n                    //     symbol: element.symbol\r\n                    // }\r\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\r\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \r\n                    // }); \r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    findTweezerTopPatternLive = (candleHist, symbol) => {\r\n\r\n        //   console.log(\"TweezerTop finding\", symbol); \r\n        if (candleHist && candleHist.length > 0) {\r\n            //candleHist = candleHist.reverse(); \r\n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\r\n\r\n            //\r\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\r\n\r\n                        var ttophistCandle = [];\r\n                        candleHist.forEach(element => {\r\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var foundData = {\r\n                            symbol: symbol,\r\n                            pattenName: 'Twisser Top',\r\n                            time: new Date(candleHist[0][0]).toLocaleString(),\r\n                            candleChartData: ttophistCandle\r\n                        }\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\r\n                        foundPatternList.push(foundData);\r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\r\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \r\n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\", candleHist);\r\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\r\n\r\n                        // var msg = new SpeechSynthesisUtterance();\r\n                        // msg.text = 'twisser top in ' + symbol.toLowerCase();\r\n                        // window.speechSynthesis.speak(msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\r\n        // console.log(\"TweezerBottom finding\", symbol); \r\n        if (candleHist && candleHist.length > 0) {\r\n            //candleHist = candleHist.reverse(); \r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n            var last8candleHigh = candleHist[9][2];\r\n            var last8candleLow = candleHist[2][3];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5%  \r\n\r\n            //  \r\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\r\n\r\n\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n\r\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\r\n\r\n                        var tBophistCandle = [];\r\n                        candleHist.forEach(element => {\r\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n\r\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\r\n                        var foundData = {\r\n                            symbol: symbol,\r\n                            pattenName: 'Twisser bottom',\r\n                            time: new Date(candleHist[0][0]).toLocaleString(),\r\n                            candleChartData: tBophistCandle\r\n                        }\r\n\r\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\r\n                        foundPatternList.push(foundData);\r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\", candleHist);\r\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\r\n\r\n                        // var msg = new SpeechSynthesisUtterance();\r\n                        // msg.text = 'twisser bottom in ' + symbol.toLowerCase();\r\n                        // window.speechSynthesis.speak(msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findNR4PatternLive = async () => {\r\n\r\n        console.log('nr4 scaning starting');\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var startdate = '';\r\n\r\n            var timediff = moment.duration(\"240:00:00\");\r\n            startdate = moment(new Date()).subtract(timediff);\r\n\r\n            var timediffend = moment.duration(\"24:00:00\");\r\n            var enddateLastday = moment(new Date()).subtract(timediffend);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data; var rgrangeCount = 0;\r\n                    candleData.reverse();\r\n\r\n                    // var startindex = index2 * 10; \r\n                    var last4Candle = candleData.slice(1, 5);\r\n                    var last5Candle = candleData.slice(0, 5);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                    if (last4Candle.length >= 4) {\r\n\r\n                        // last4Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = [];\r\n                        last4Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                        });\r\n\r\n                        last5Candle.forEach(element => {\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var firstElement = rangeArr[0];\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n                        console.log(index + 1, element.symbol, rgrangeCount);\r\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\r\n\r\n\r\n\r\n                        if (rgrangeCount == 4) {\r\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\r\n\r\n\r\n                            var firstCandle = last4Candle[0];\r\n\r\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"tradingsymbol\": element.symbol,\r\n                                \"symboltoken\": element.token,\r\n                            }\r\n\r\n                            console.log('nr4 ltp', data);\r\n\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                var LtpData = data && data.data;\r\n                                console.log(LtpData, data);\r\n                                if (LtpData && LtpData.ltp) {\r\n\r\n\r\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\r\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\r\n                                    if (LtpData.ltp > buyentry) {\r\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\r\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\r\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\r\n\r\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\r\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\r\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\r\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n\r\n                                    }\r\n                                    if (LtpData.ltp < sellenty) {\r\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\r\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\r\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\r\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\r\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\r\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\r\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n                                    }\r\n\r\n                                    var foundData = {\r\n                                        symbol: element.symbol,\r\n                                        token: element.token,\r\n                                        pattenName: 'NR4',\r\n                                        time: new Date(firstCandle[0]).toLocaleString(),\r\n                                        BuyAt: buyentry,\r\n                                        SellAt: sellenty,\r\n                                        orderActivated: orderActivated,\r\n                                        candleChartData: candleChartData,\r\n                                        quantity: quantity,\r\n                                        brokerageCharges: brokerageCharges,\r\n                                        pnlAmount: pnlAmount,\r\n                                        netPnLAmount: netPnLAmount,\r\n                                        perChange: perChange\r\n                                    }\r\n\r\n                                    console.log('nr4 scaned', foundData);\r\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\r\n\r\n\r\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\r\n                                    foundPatternList.push(foundData);\r\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                                }\r\n\r\n                            })\r\n\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n\r\n\r\n\r\n            await new Promise(r => setTimeout(r, 300));\r\n\r\n            // var showtestdata = (index + 1);\r\n\r\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\r\n\r\n            //     this.setState({ stockTesting: showtestdata});\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    findNR7PatternLive = async () => {\r\n\r\n        console.log('nr7 scaning starting');\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var startdate = '';\r\n\r\n            var timediff = moment.duration(\"288:00:00\");\r\n            startdate = moment(new Date()).subtract(timediff);\r\n\r\n            var timediffend = moment.duration(\"24:00:00\");\r\n            var enddateLastday = moment(new Date()).subtract(timediffend);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    candleData.reverse();\r\n\r\n                    // var startindex = index2 * 10; \r\n                    var last7Candle = candleData.slice(1, 8);\r\n                    var last9Candle = candleData.slice(0, 9);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                    if (last7Candle.length >= 7) {\r\n\r\n                        // last7Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = [];\r\n                        last7Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                        });\r\n\r\n                        last9Candle.forEach(element => {\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n\r\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\r\n\r\n\r\n                        if (rgrangeCount == 7) {\r\n\r\n\r\n                            var firstCandle = last7Candle[0];\r\n\r\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"tradingsymbol\": element.symbol,\r\n                                \"symboltoken\": element.token,\r\n                            }\r\n\r\n                            console.log('nr4 ltp', data);\r\n\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                var LtpData = data && data.data;\r\n                                console.log(LtpData, data);\r\n                                if (LtpData && LtpData.ltp) {\r\n\r\n\r\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\r\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\r\n                                    if (LtpData.ltp > buyentry) {\r\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\r\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\r\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\r\n\r\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\r\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\r\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\r\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n\r\n                                    }\r\n                                    if (LtpData.ltp < sellenty) {\r\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\r\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\r\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\r\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\r\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\r\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\r\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n                                    }\r\n\r\n                                    var foundData = {\r\n                                        symbol: element.symbol,\r\n                                        token: element.token,\r\n                                        pattenName: 'NR7',\r\n                                        time: new Date(firstCandle[0]).toLocaleString(),\r\n                                        BuyAt: buyentry,\r\n                                        SellAt: sellenty,\r\n                                        orderActivated: orderActivated,\r\n                                        candleChartData: candleChartData,\r\n                                        quantity: quantity,\r\n                                        brokerageCharges: brokerageCharges,\r\n                                        pnlAmount: pnlAmount,\r\n                                        netPnLAmount: netPnLAmount,\r\n                                        perChange: perChange\r\n                                    }\r\n\r\n                                    console.log('nr7 scaned', foundData);\r\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\r\n\r\n\r\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\r\n                                    foundPatternList.push(foundData);\r\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                                }\r\n\r\n                            })\r\n\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            var showtestdata = (index + 1) + \". \" + element.symbol;\r\n            this.setState({ stockTesting: showtestdata });\r\n            await new Promise(r => setTimeout(r, 300));\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    refreshCandleChartManually = async (row) => {\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var time = moment.duration(\"12:00:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": row.symboltoken,\r\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n        }\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let histdata = resolveResponse(res, 'noPop');\r\n            //console.log(\"candle history\", histdata); \r\n            if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                var candleChartData = [];\r\n                histdata.data.forEach(element => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                });\r\n\r\n\r\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\r\n\r\n\r\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\r\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\r\n                document.getElementById('showCandleChart').click();\r\n\r\n            } else {\r\n                //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                console.log(row.symboltoken, \"  emply candle found\");\r\n            }\r\n        }).catch(error => {\r\n            this.setState({ failedCount: this.state.failedCount + 1 });\r\n            Notify.showError(row.symboltoken + \" candle failed!\");\r\n        })\r\n\r\n    }\r\n\r\n    showCandleChart = (candleData, symbol) => {\r\n\r\n        candleData = candleData && candleData.reverse();\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    showMultipleCandleChart = (row) => {\r\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\r\n        document.getElementById('showMultipleChart').click();\r\n    }\r\n\r\n    refreshLtpOnFoundPattern = async () => {\r\n\r\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\r\n\r\n\r\n        var foundPatternList = this.state.foundPatternList;\r\n\r\n        this.setState({ foundPatternList: [] });\r\n\r\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\r\n\r\n\r\n        //       foundPatternList.forEach(element => {\r\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\r\n            const element = foundPatternList[index];\r\n\r\n            if (element && element.pattenName == 'NR4') {\r\n\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"tradingsymbol\": element.symbol,\r\n                    \"symboltoken\": element.token,\r\n                }\r\n\r\n                AdminService.getLTP(data).then(res => {\r\n                    let data = resolveResponse(res, 'noPop');\r\n                    var LtpData = data && data.data;\r\n                    //console.log(LtpData);\r\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\r\n                    if (LtpData && LtpData.ltp) {\r\n\r\n                        var orderActivated = <span> {LtpData.ltp} </span>;\r\n\r\n                        if (LtpData.ltp > element.BuyAt) {\r\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\r\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\r\n                            quantity = Math.floor(10000 / element.BuyAt);\r\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\r\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\r\n                            netPnLAmount = (pnlAmount - brokerageCharges);\r\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\r\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\r\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\r\n\r\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\r\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\r\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\r\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\r\n\r\n\r\n                        }\r\n                        if (LtpData.ltp < element.SellAt) {\r\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\r\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\r\n                            quantity = Math.floor(10000 / element.SellAt);\r\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\r\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\r\n                            netPnLAmount = (pnlAmount - brokerageCharges);\r\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\r\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\r\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\r\n\r\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\r\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\r\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\r\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\r\n\r\n                        }\r\n\r\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n\r\n\r\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\r\n                        element.candleChartData.push(builtupCandle);\r\n\r\n                        var foundData = {\r\n                            symbol: element.symbol,\r\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\r\n                            token: element.token,\r\n                            pattenName: 'NR4',\r\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\r\n                            time: new Date().toLocaleTimeString(),\r\n                            BuyAt: element.BuyAt,\r\n                            SellAt: element.SellAt,\r\n                            foundAt: element.foundAt,\r\n                            orderActivated: orderActivated,\r\n                            candleChartData: element.candleChartData,\r\n                            quantity: quantity ? quantity : \"\",\r\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\r\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\r\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\r\n                            perChange: perChange,\r\n                            todayChange: todayChange,\r\n                            pastPerferm: element.pastPerferm\r\n                        }\r\n\r\n                        console.log('nr4 updated', foundData);\r\n\r\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\r\n\r\n                        var foundlist = this.state.foundPatternList;\r\n\r\n                        foundlist.sort(function (a, b) {\r\n                            return b.perChange - a.perChange;\r\n                        });\r\n\r\n                        this.setState({ foundPatternList: foundlist });\r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\r\n                        foundPatternList.push(foundData);\r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                    }\r\n\r\n                }).catch(error => {\r\n                    Notify.showError(element.symbol + \" ltd data not found!\");\r\n                })\r\n\r\n            }\r\n            await new Promise(r => setTimeout(r, 101));\r\n        }\r\n    }\r\n\r\n\r\n    getStoplossFromOrderbook = (row) => {\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        oderbookData = JSON.parse(oderbookData);\r\n        var stopLoss = 0;\r\n        var data = {};\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            const element = oderbookData[index];\r\n\r\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\r\n                if (row.netqty > 0) {\r\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\r\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\r\n                } else if (row.netqty < 0) {\r\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\r\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\r\n                    data.maxLossAmount = ((element.triggerprice - row.sellavgprice) * parseInt(row.netqty)).toFixed(2);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n    getStoplossForSELLFromOrderbook = (row) => {\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        oderbookData = JSON.parse(oderbookData);\r\n        var stopLoss = 0;\r\n        var data = {};\r\n        oderbookData.forEach(element => {\r\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\r\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\r\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n    getHighLowPercentage = async () => {\r\n\r\n        this.setState({showHighLowWisePer: true});\r\n\r\n        if (!this.state.positionList.length) {\r\n            Notify.showError(\"First Refresh Position\")\r\n        }\r\n\r\n        for (let index = 0; index < this.state.positionList.length; index++) {\r\n            const element = this.state.positionList[index];\r\n\r\n            if (element.producttype == \"DELIVERY\") {\r\n                return \"\";\r\n            }\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"tradingsymbol\": element.tradingsymbol,\r\n                \"symboltoken\": element.symboltoken,\r\n            }\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                //console.log(LtpData);\r\n                if (LtpData && LtpData.ltp) {\r\n                    this.state.positionList[index].high = LtpData.high;\r\n                    this.state.positionList[index].low = LtpData.low;\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 125));\r\n            this.setState({ positionList: this.state.positionList });\r\n\r\n        }\r\n\r\n    }\r\n    tagPatternWhichTaken =(token)=> {\r\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \r\n       \r\n       var pattern = ''; \r\n       for (let index = 0; index < orderTagToPosition.length; index++) {\r\n           const element = orderTagToPosition[index];\r\n           if(token == element.token){\r\n            pattern = element.pattenName; \r\n            break;\r\n           }\r\n        }\r\n        return pattern\r\n    //    console.log(\"findpatter\", token, orderTagToPosition);\r\n    //    orderTagToPosition.forEach(element => {\r\n    //         if(token == element.token){\r\n    //             return element.pattenName; \r\n    //         }\r\n    //    });\r\n\r\n    }\r\n    calculateTradeExpence =(element)=>{\r\n\r\n        var totalbuyvalue =  parseFloat(element.totalbuyvalue) === 0 ? parseFloat(element.totalsellvalue) : parseFloat(element.totalbuyvalue);\r\n        var buyCharge = parseFloat(totalbuyvalue) * 0.25/100; \r\n        if(buyCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\r\n            buyCharge = 20; \r\n        }\r\n        var totalsellvalue =  parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\r\n        var sellCharge = parseFloat(totalsellvalue) * 0.25/100; \r\n        if(sellCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\r\n            sellCharge = 20; \r\n        }\r\n        let turnOver = totalbuyvalue + totalsellvalue; \r\n        let totalBroker = buyCharge+sellCharge;\r\n\r\n        let sst = 0.025; //stock intraday\r\n        if(element.optiontype  == 'CE' || element.optiontype  == 'PE'){\r\n            sst = 0.05;  \r\n        }\r\n\r\n        let sstCharge = totalsellvalue *  sst/100; \r\n        let transCharge = turnOver *  0.00335/100; \r\n        let stampDuty  = totalbuyvalue *   0.003/100; \r\n        let sebiCharge = turnOver * 10/10000000; \r\n        let gstCharge = (totalBroker+transCharge+sebiCharge) * 18/100; \r\n\r\n        let total = totalBroker+sstCharge+transCharge+stampDuty+sebiCharge+gstCharge; \r\n\r\n        var chargeInfo ={\r\n          tradeExpence:  total,\r\n          expenceInfo : \"Brokerage: \"+totalBroker.toFixed(2)+ \" \\nSTT: \"+ sstCharge.toFixed(2) + \" \\nTransaction: \"+ transCharge.toFixed(2) + \" \\nStamp Duty: \"+stampDuty.toFixed(2) + \" \\nSebi: \"+sebiCharge.toFixed(2) + \" \\nGST: \" + gstCharge.toFixed(2) + \" \\n\\nTotal: \"+ total.toFixed(2)\r\n        }\r\n        return chargeInfo; \r\n    }\r\n    refreshBasedAmount =()=> {\r\n        let totCheckAmount = 0, checkTotalNet = 0, totCheckExp = 0 ; \r\n        this.state.positionList.forEach((item)=> {\r\n\r\n            let perchange =  this.state.checkAmountPer ? this.state.checkAmountPer : item.percentPnL; \r\n            item.checkAmount = (this.state.checkAmount * perchange/100).toFixed(2) \r\n            totCheckAmount = totCheckAmount + parseFloat(item.checkAmount);\r\n\r\n            let quantity = Math.floor(this.state.checkAmount / item.buyavgprice);\r\n            item.checkQty = quantity; \r\n            item.totalbuyvalue = quantity * item.buyavgprice; \r\n            item.totalsellvalue = quantity * item.sellavgprice; \r\n            item.checkExpence = this.calculateTradeExpence(item); \r\n            if(item.checkExpence){\r\n                item.checkNet =  (item.checkAmount - item.checkExpence.tradeExpence)\r\n                totCheckExp = totCheckExp + item.checkExpence.tradeExpence;\r\n                checkTotalNet = checkTotalNet +  parseFloat(item.checkNet); \r\n            }\r\n            console.log(item)\r\n \r\n        })\r\n        this.setState({totCheckAmount : totCheckAmount.toFixed(2), checkTotalNet : checkTotalNet.toFixed(2),totCheckExp : totCheckExp.toFixed(2),  positionList : this.state.positionList }); \r\n    }\r\n\r\n    checkSLOrTarget =(row)=>{\r\n        let trackSLPrice = localStorage.getItem('trackSLPrice') ? JSON.parse( localStorage.getItem('trackSLPrice')) : []; \r\n        if(trackSLPrice.length>0){\r\n            for (let index = 0; index < trackSLPrice.length; index++) {\r\n                const element = trackSLPrice[index];\r\n                \r\n                if(element.optiontype == 'EQ'){\r\n                    if(element.tradingsymbol == row.tradingsymbol && (row.ltp < parseFloat(element.priceStopLoss) || row.ltp >= parseFloat(element.priceTarget))){ \r\n                        console.log(\"checkSLOrTarget\",element, element.tradingsymbol == row.tradingsymbol,row.ltp, (row.ltp < parseFloat(element.priceStopLoss) || row.ltp >= parseFloat(element.priceTarget)) )\r\n                        this.squareOff(row); \r\n                    }\r\n                }\r\n                \r\n              \r\n            }\r\n        }\r\n    }\r\n\r\n    getPositionData = async () => {\r\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n        var maxPnL = 0, totalMaxPnL = 0;\r\n        var trackSLPriceList = localStorage.getItem('trackSLPrice') ? JSON.parse( localStorage.getItem('trackSLPrice')) : []; \r\n\r\n        AdminService.getPosition().then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var positionList = data && data.data;\r\n            if (positionList && positionList.length > 0) {\r\n\r\n\r\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0, totalExpence=0; \r\n                \r\n                let tradingPositionlist = []; \r\n                for (let index = 0; index < positionList.length; index++) {\r\n                    const element = positionList[index];\r\n                    // if (element.netqty < 0) {\r\n                    //     continue;\r\n                    // }\r\n                    tradingPositionlist.push(element); \r\n\r\n                    todayProfitPnL += parseFloat(element.pnl);\r\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\r\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\r\n                    totalQtyTraded += parseInt(element.buyqty);\r\n                    allbuyavgprice += parseFloat(element.buyavgprice);\r\n                    allsellavgprice += parseFloat(element.sellavgprice);\r\n                    if(element.netqty == 0){\r\n                        let percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice));\r\n                        element.percentPnL = percentPnL.toFixed(2) ;\r\n                        totalPercentage += parseFloat(percentPnL);\r\n\r\n                        localStorage.removeItem('firstTimeModify' + element.tradingsymbol)\r\n                        localStorage.removeItem('lastTriggerprice_' + element.tradingsymbol)\r\n                    }\r\n                   \r\n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \r\n\r\n                    let chargeInfo = this.calculateTradeExpence(element);\r\n                    element.tradeExpence = chargeInfo.tradeExpence.toFixed(2); \r\n                    element.expenceInfo = chargeInfo.expenceInfo; \r\n                    totalExpence += chargeInfo.tradeExpence; \r\n\r\n                    var slData = this.getStoplossFromOrderbook(element);\r\n                    if (slData) {\r\n                        element.stopLoss = slData.stopLoss;\r\n                        element.stopLossAmount = slData.maxLossAmount;\r\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\r\n                    }\r\n\r\n                    this.checkSLOrTarget(element); \r\n\r\n                }\r\n               \r\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\r\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\r\n\r\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\r\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\r\n                this.setState({ totalExpence: totalExpence.toFixed(2) });\r\n\r\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\r\n\r\n                tradingPositionlist.sort((a,b) => b.netqty - a.netqty);\r\n\r\n                this.setState({ positionList: tradingPositionlist });\r\n\r\n                \r\n\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    \r\n\r\n     getNSETopStock = () => {\r\n\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\r\n        totalDayLoss = -Math.abs(totalDayLoss);\r\n        if (this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\", totalDayLoss);\r\n            clearInterval(this.state.scaninterval);\r\n        } else {\r\n            AdminService.getNSETopStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data.status && data.message === 'SUCCESS') {\r\n                    var scandata = data.result;\r\n                    // console.log(\"scandata\",scandata);  \r\n                    if(scandata &&  scandata.length){\r\n                        for (let index = 0; index < scandata.length; index++) {\r\n                            var isFound = false;\r\n                            for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\r\n                                    isFound = true;\r\n                                }\r\n                            }\r\n    \r\n                           // console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\r\n    \r\n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n    \r\n                                    let searchResdata = searchRes.data;\r\n                                    var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\r\n    \r\n                                    if (found.length) {\r\n                                        console.log(found[0].symbol, \"found\", found);\r\n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\r\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\r\n                                    }\r\n                                })\r\n    \r\n                            }\r\n                        }\r\n                    }\r\n                  \r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getChartInkStock = () => {\r\n\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\r\n        totalDayLoss = -Math.abs(totalDayLoss);\r\n        if (this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\", totalDayLoss);\r\n            clearInterval(this.state.scaninterval);\r\n        } else {\r\n            AdminService.getChartInkStock().then(res => {\r\n               // let data = resolveResponse(res, \"noPop\");\r\n               let response = res.data; \r\n\r\n                if (response.success) {\r\n\r\n                    let triggered_at = response.results[0] && response.results[0].body.data.triggered_at; \r\n                    let scandata = response.results[0] && response.results[0].body.data.stocks; \r\n\r\n                    let time = triggered_at.split(' '); \r\n                    let mtime = time[0]+time[1]; \r\n                    var endTime = moment(mtime, 'h:mma');\r\n                    console.log(\"last triggered_at \", triggered_at, \"stock found\", scandata , endTime.minutes(), new Date().getMinutes() ); \r\n\r\n                    if(endTime.minutes() == new Date().getMinutes()){\r\n\r\n                        scandata = scandata.split(','); \r\n    \r\n                        for (let index = 0; index < scandata.length; index++) {\r\n                            var isFound = false;\r\n                            for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\r\n                                    isFound = true;\r\n                                }\r\n                            }\r\n    \r\n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index])) {\r\n    \r\n                                AdminService.autoCompleteSearch(scandata[index]).then(searchRes => {\r\n    \r\n                                    let searchResdata = searchRes.data;\r\n                                    var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index]);\r\n    \r\n                                    if (found.length) {\r\n                                        console.log(found[0].symbol, \"found\", found);\r\n                                        localStorage.setItem('NseStock_' + scandata[index], \"orderdone\");\r\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index]);\r\n                                    }\r\n                                })\r\n    \r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                   \r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    longBuiltUpOrder = async(scandata) => {\r\n\r\n\r\n        for (let index = 0; index < scandata.length; index++) {\r\n            var isFound = false;\r\n\r\n            // for (let j = 0; j < this.state.positionList.length; j++) {\r\n            //     if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\r\n            //         isFound = true;\r\n            //     }\r\n            // }\r\n            var found = this.state.positionList.filter(row => row.symbolname === scandata[index].symbolName);\r\n\r\n              console.log(\"index\",index, \"symbolName\",scandata[index].symbolName, found);    \r\n            if (!found.length  && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\r\n\r\n                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n\r\n                    let searchResdata = searchRes.data;\r\n                    var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\r\n\r\n                    if (found.length) {\r\n                        console.log(found[0].symbol, \"found\", found);\r\n                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\r\n                        this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            await new Promise(r => setTimeout(r, 300));\r\n\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    getMySelectedStock() {\r\n\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\r\n        totalDayLoss = -Math.abs(totalDayLoss);\r\n        if (this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\", totalDayLoss);\r\n            clearInterval(this.state.scaninterval);\r\n        } else {\r\n            AdminService.getSelectedStockFromDb().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data.status && data.message === 'SUCCESS') {\r\n                    var scandata = data.result;\r\n                    // console.log(\"scandata\",scandata); \r\n\r\n                    for (let index = 0; index < scandata.length; index++) {\r\n                        var isFound = false;\r\n                        for (let j = 0; j < this.state.positionList.length; j++) {\r\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\r\n                                isFound = true;\r\n                            }\r\n                        }\r\n\r\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\r\n\r\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n\r\n                                let searchResdata = searchRes.data;\r\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\r\n\r\n                                if (found.length) {\r\n\r\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\r\n                                    selectedStockwatchList.push(found[0]);\r\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\r\n\r\n                                }\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkAndPlaceSingleOrder = (stock) => {\r\n        AdminService.autoCompleteSearch(stock).then(res => {\r\n            let data = res.data;\r\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\r\n            console.log(\"stockfound\", found);\r\n            if (found && found.length) {\r\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    getStockOnebyOne() {\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\r\n        totalDayLoss = -Math.abs(totalDayLoss);\r\n        if (this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\", totalDayLoss);\r\n            clearInterval(this.state.scaninterval);\r\n        } else {\r\n            console.log(\"still ok\");\r\n            AdminService.getAutoScanStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data.status && data.message === 'SUCCESS') {\r\n                    var scandata = data.result;\r\n                    if (scandata && scandata.length > 0) {\r\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\r\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\r\n                        var isFound = false;\r\n                        for (let index = 0; index < this.state.positionList.length; index++) {\r\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\r\n                                isFound = true;\r\n                            }\r\n                        }\r\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\r\n                            console.log(\"found new\", lastSeachStock)\r\n                            var msg = new SpeechSynthesisUtterance();\r\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\r\n                            window.speechSynthesis.speak(msg);\r\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\r\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    orderWithFlatstoploss = (token, symbol) => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n\r\n            var LtpData = data && data.data;\r\n            var ltpPrice = LtpData.ltp\r\n            if (ltpPrice) {\r\n\r\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\r\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\r\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\r\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\r\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\r\n                var orderOption = {\r\n                    transactiontype: 'BUY',\r\n                    tradingsymbol: symbol,\r\n                    symboltoken: token,\r\n                    buyPrice: 0,\r\n                    quantity: quantity,\r\n                    stopLossPrice: stopLossPrice\r\n                }\r\n\r\n                if (quantity && stopLossPrice) {\r\n                    this.placeOrderMethod(orderOption);\r\n                }\r\n\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.log(symbol, \"not found\", 'error', error);\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            //    console.log(data);       \r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n    }\r\n\r\n    onTrailChange=(e)=>{\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      //  console.log([e.target.name],  e.target.value)\r\n    }\r\n\r\n    onAddSLChange=(e)=>{\r\n        let addSLInfo = this.state.addSLInfo; \r\n        addSLInfo[e.target.name] = e.target.value.toUpperCase(); \r\n        this.setState({ addSLInfo: addSLInfo });\r\n    }\r\n\r\n    deleteOptionPriceSL =(element, deleteindex)=> {\r\n        for (let indexP = 0; indexP <  this.state.positionList.length; indexP++) {\r\n            const position = this.state.positionList[indexP];\r\n            console.log(\"squireoffff\", position.tradingsymbol, element.tradingsymbol,  position.buyqty )\r\n\r\n            if(position.tradingsymbol == element.tradingsymbol && position.buyqty > 0){\r\n\r\n                var trackSLPriceList = localStorage.getItem('trackSLPrice') && JSON.parse( localStorage.getItem('trackSLPrice')); \r\n                if(trackSLPriceList && trackSLPriceList.length > 0){\r\n                    trackSLPriceList.splice(deleteindex, 1); \r\n                    localStorage.setItem('trackSLPrice', JSON.stringify(trackSLPriceList)); \r\n                    this.setState({trackSLPrice : trackSLPriceList},  ()=> {\r\n                        this.squareOff(position);\r\n                    }); \r\n                    break; \r\n                }\r\n              \r\n            }\r\n        }\r\n    }\r\n\r\n    getNiftyLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": \"NIFTY\",\r\n            \"symboltoken\": \"26000\",\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            //console.log(LtpData);\r\n            if (LtpData && LtpData.ltp) {\r\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \r\n                if(document.getElementById('niftySpid')){\r\n                    this.state.niftyLtpSec.push({ltp: LtpData.ltp.toFixed(2), time: new Date().toLocaleTimeString()}); \r\n                    localStorage.setItem(\"niftyLtpSec\", JSON.stringify(this.state.niftyLtpSec));\r\n                    document.getElementById('niftySpid').innerHTML = \"<span style='color:red'> Nifty \" + LtpData.ltp.toFixed(2) + ' (' + (per).toFixed(2) + '%)</span>'; \r\n                }\r\n              }\r\n            \r\n            let trackSLPrice = localStorage.getItem('trackSLPrice') ? JSON.parse( localStorage.getItem('trackSLPrice')) : []; \r\n            \r\n            if(trackSLPrice.length>0){\r\n                for (let index = 0; index < trackSLPrice.length; index++) {\r\n                    const element = trackSLPrice[index];\r\n                    console.log(\"this.state.trackSLPrice\", element)\r\n\r\n                    if(element.name == 'NIFTY' && element.optiontype == 'CE' && ((LtpData.ltp < element.priceStopLoss) || (LtpData.ltp >= element.priceTarget))){\r\n                        //delete sloption &  trigeer squireoff  \r\n                        console.log(\"deleteOptionPriceSL call sl \", element, index)\r\n\r\n                        this.deleteOptionPriceSL(element, index); \r\n                    }\r\n                    if(element.name == 'NIFTY' && element.optiontype == 'PE' &&  ((LtpData.ltp > element.priceStopLoss) || (LtpData.ltp <= element.priceTarget))){\r\n                        //delete sloption &  trigeer sl  \r\n                        console.log(\"deleteOptionPriceSL put sl \", element, index)\r\n\r\n                        this.deleteOptionPriceSL(element);   \r\n                    }\r\n                }\r\n            }\r\n            \r\n\r\n        })\r\n    }\r\n\r\n\r\n    getBankNiftyLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": \"BANKNIFTY\",\r\n            \"symboltoken\": \"26009\",\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            //console.log(LtpData);\r\n            if (LtpData && LtpData.ltp) {\r\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \r\n                if(document.getElementById('bankniftySpid')) {\r\n                    if (per > 0)\r\n                    document.getElementById('bankniftySpid').innerHTML = \"<span style='color:green'> Banknifty \" + LtpData.ltp.toFixed(2) + ' (' + (per).toFixed(2) + '%)</span>'; \r\n                    else\r\n                    document.getElementById('bankniftySpid').innerHTML = \"<span style='color:red'> Banknifty \" + LtpData.ltp.toFixed(2) + ' (' + (per).toFixed(2) + '%)</span>';    \r\n                    this.state.bnniftyLtpSec.push({ltp: LtpData.ltp.toFixed(2), time: new Date().toLocaleTimeString()}); \r\n                    localStorage.setItem(\"bnniftyLtpSec\", JSON.stringify(this.state.bnniftyLtpSec));\r\n                }\r\n            }\r\n            let trackSLPrice = localStorage.getItem('trackSLPrice') ? JSON.parse( localStorage.getItem('trackSLPrice')) : []; \r\n            if(trackSLPrice.length>0){\r\n                for (let index = 0; index < trackSLPrice.length; index++) {\r\n                    const element = trackSLPrice[index];\r\n                    if(element.name == 'BANKNIFTY' && element.optiontype == 'CE' && ((LtpData.ltp < element.priceStopLoss) || (LtpData.ltp >= element.priceTarget))){\r\n                        //delete sloption &  trigeer sl    \r\n                        this.deleteOptionPriceSL(element, index); \r\n                    }\r\n                    if(element.name == 'BANKNIFTY' && element.optiontype == 'PE' && ((LtpData.ltp > element.priceStopLoss) || (LtpData.ltp <= element.priceTarget))){\r\n                        //delete sloption &  trigeer sl    \r\n                        this.deleteOptionPriceSL(element, index); \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    getStopLossPrice = async (token, symbol) => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n\r\n        await AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            if (LtpData && LtpData.ltp) {\r\n                var ltp = parseFloat(LtpData.ltp);\r\n                ltp = ltp - (ltp * 0.7 / 100);\r\n                var slPrice = this.getMinPriceAllowTick(ltp);\r\n\r\n                this.setState({ stoploss: slPrice });\r\n                return slPrice;\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    placeOrderMethod = (orderOption) => {\r\n\r\n        var data = {\r\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\": orderOption.symboltoken,\r\n            \"quantity\": orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"exchange\": \"NSE\",\r\n            \"variety\": \"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n                if (orderOption.stopLossPrice) {\r\n                    this.placeSLMOrder(orderOption);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\r\n\r\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\r\n        AdminService.getLTP(ltpdata).then(res => {\r\n            let ltpres = resolveResponse(res, 'noPop');\r\n            var LtpData = ltpres && ltpres.data;\r\n            console.log(symbol, \" ltd data \", LtpData);\r\n            let quantity = 0;\r\n            if (LtpData && LtpData.ltp) {\r\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\r\n            }\r\n\r\n\r\n            quantity = quantity > 0 ? 1 : 0;\r\n            console.log(symbol, \"  quantity can be order \", quantity);\r\n            if (quantity) {\r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                console.log(\"beginningTime\", beginningTime);\r\n\r\n                var time = moment.duration(\"21:10:00\");\r\n                var startdate = moment(new Date()).subtract(time);\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": token,\r\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n                    \"fromdate\": moment(startdate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    // console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n\r\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\r\n                        candleData.reverse();\r\n                        lowestLow = candleData[0][3];\r\n                        highestHigh = candleData[0][2];\r\n                        if (candleData && candleData.length > 0) {\r\n                            for (let index = 0; index < 20; index++) {\r\n                                if (candleData[index]) {\r\n                                    clossest += candleData[index][4]; //close  \r\n                                    lowerest += candleData[index][3];  //low\r\n                                    if (candleData[index][2] > highestHigh) {\r\n                                        console.log(index, highestHigh, candleData[index][2]);\r\n                                        highestHigh = candleData[index][2];\r\n                                    }\r\n                                    if (candleData[index][3] <= lowestLow) {\r\n                                        lowestLow = candleData[index][3];\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n\r\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\r\n\r\n                            var bbmiddleValue = clossest / devideLen;\r\n                            var bblowerValue = lowerest / devideLen;\r\n\r\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\r\n                            stoploss = this.getMinPriceAllowTick(stoploss);\r\n\r\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\r\n\r\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\r\n\r\n                            var orderOption = {\r\n                                transactiontype: 'BUY',\r\n                                tradingsymbol: symbol,\r\n                                symboltoken: token,\r\n                                buyPrice: 0,\r\n                                quantity: quantity,\r\n                                stopLossPrice: stoploss\r\n                            }\r\n                            let mySL = 3.5; \r\n                            if (stoplossPer) {\r\n                                this.placeOrderMethod(orderOption);\r\n                            } else {\r\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\r\n                                console.log(symbol + \" SL \"+stoplossPer+\"% is grater than my SL: \"+mySL+\"  not fullfilled\");\r\n                            }\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        console.log(symbol + \" candle data emply\");\r\n                    }\r\n                })\r\n\r\n            }\r\n        })\r\n        // await new Promise(r => setTimeout(r, 2000)); \r\n    }\r\n\r\n\r\n\r\n    cancelOrderOfSame = (row) => {\r\n\r\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\r\n        var data = {\r\n            \"variety\": orderData.variety,\r\n            \"orderid\": orderData.orderId,\r\n        }\r\n        AdminService.cancelOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            if (data.status && data.message === 'SUCCESS') {\r\n                console.log(\"cancel order\", data);\r\n                this.deleteOptionPriceSL(row);   \r\n                // this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    squareOff = (row) => {\r\n\r\n        var data = {\r\n            \"variety\": \"NORMAL\",\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\r\n            \"exchange\": row.exchange,\r\n            \"ordertype\": \"MARKET\",\r\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": Math.abs(row.netqty),\r\n        }\r\n\r\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\r\n\r\n        // }\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(\"squireoff\", data);\r\n            if (data.status && data.message === 'SUCCESS') {\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n                this.cancelOrderOfSame(row);\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n    updateOrderList = () => {\r\n        AdminService.retrieveOrderBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res);\r\n                if (data && data.data) {\r\n                    var orderlist = data.data;\r\n                    orderlist.sort(function (a, b) {\r\n                        return new Date(b.updatetime) - new Date(a.updatetime);\r\n                    });\r\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\r\n                }\r\n            });\r\n    }\r\n\r\n    addSLOrderInfo =(row)=> {\r\n        \r\n        this.setState({ addSLInfo : row, enableSLMOrderUi : true }); \r\n    }\r\n    placeSLMOrderManually =()=> {\r\n       // this.placeSLMOrder(this.state.addSLInfo); \r\n       this.state.addSLInfo.netqty = Math.abs(this.state.addSLInfo.netqty); \r\n       console.log(\"addSLInfo\", this.state.addSLInfo)\r\n        \r\n        CommonMethods.placeOptionSLMOrder(this.state.addSLInfo)\r\n    }\r\n    placeSLMOrder = (slmOption) => {\r\n\r\n        var data = {\r\n            \"triggerprice\": slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\r\n            \"exchange\": slmOption.exchange ? slmOption.exchange :  'NSE',\r\n            \"producttype\": slmOption.producttype ? slmOption.producttype : \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": slmOption.price ? slmOption.price : 0 ,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n                this.updateOrderList(); \r\n                var msg = new SpeechSynthesisUtterance();\r\n                msg.text = (slmOption.tradingsymbol +\" \"+ slmOption.transactiontype).toLocaleLowerCase();\r\n                window.speechSynthesis.speak(msg);\r\n\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n            }\r\n        })\r\n    }\r\n\r\n    getOpenPeningOrderId = (symboltoken) => {\r\n\r\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\r\n        var data = {};\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\r\n                data.orderId = oderbookData[index].orderid\r\n                data.variety = oderbookData[index].variety\r\n                break;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    modifyOrderMethod = (row, minTriggerPrice, minSLPrice) => {\r\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\r\n\r\n        if(!orderData.orderId){\r\n            row.stopLossPrice = minTriggerPrice; \r\n            row.price = minSLPrice; \r\n            row.quantity = Math.abs(row.netqty);\r\n            if(row.optiontype == \"CE\" || row.optiontype == \"PE\"){\r\n                row.transactiontype = \"BUY\"; \r\n            }else{\r\n                row.transactiontype = row.netqty > 0 ? \"BUY\" : \"SELL\"; \r\n            }\r\n            this.placeSLMOrder(row);\r\n        }\r\n\r\n        var data = {\r\n            \"variety\": orderData.variety,\r\n            \"orderid\": orderData.orderId,\r\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\r\n            \"producttype\": row.producttype, //\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": minSLPrice ?  parseFloat(minSLPrice) : 0,\r\n            \"triggerprice\": parseFloat(minTriggerPrice),\r\n            \"quantity\": Math.abs(row.netqty),\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n        }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n\r\n            var msg = new SpeechSynthesisUtterance();\r\n\r\n\r\n            if (data.status && data.message === 'SUCCESS') {\r\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\r\n                msg.text = row.symbolname + ' trailed '.toLocaleLowerCase(); //+ data.message;\r\n                window.speechSynthesis.speak(msg);\r\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\r\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minTriggerPrice));\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n\r\n            }\r\n        })\r\n    }\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice = minPrice.toFixed(2);\r\n        // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt(minPrice.split('.')[0]);\r\n        //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal = parseFloat(minPrice.split('.')[1]);\r\n        // console.log(\"decimal\",decimal); \r\n        var tickedecimal = decimal - decimal % 5;\r\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\r\n        //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice;\r\n    }\r\n\r\n    get2DecimalNumber =(number)=>{\r\n        number = parseFloat(number); \r\n        if(number){\r\n            return number.toFixed(2); \r\n        }else{\r\n            return number;  \r\n        }\r\n    }\r\n\r\n    getSLAndTriggerPrice =(price)=> {\r\n        let minTriggerPrice = this.getMinPriceAllowTick(price);\r\n\r\n        var minSLPrice = minTriggerPrice - (minTriggerPrice * 1 / 100);\r\n        minSLPrice = this.getMinPriceAllowTick(minSLPrice);\r\n\r\n        let slPriceData = {\r\n            minTriggerPrice : minTriggerPrice, \r\n            minSLPrice : minSLPrice\r\n        }\r\n        return slPriceData; \r\n    }\r\n    getOptionPercentage =(row)=> {\r\n\r\n        console.log(\"option per calling\"); \r\n        var percentChange = 0, trailPerChange = 0; \r\n\r\n        row.buyavgprice = parseFloat(row.buyavgprice);\r\n        percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\r\n        if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= this.state.firstTimeMoveOption) {\r\n\r\n            var minTriggerPrice = row.buyavgprice + (row.buyavgprice * this.state.firstTimeSLMoveOption / 100);\r\n            let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \r\n\r\n            if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\r\n                this.modifyOrderMethod(row, slPriceData.minTriggerPrice ,slPriceData.minSLPrice );\r\n            }\r\n\r\n        } else {\r\n            var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\r\n            var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\r\n            trailPerChange = perchngfromTriggerPrice; \r\n            if (perchngfromTriggerPrice >= this.state.nextTimeMoveOption) {\r\n                minTriggerPrice = lastTriggerprice + (lastTriggerprice * this.state.nextTimeSLMoveOption / 100);\r\n                let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \r\n\r\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\r\n                    this.modifyOrderMethod(row, slPriceData.minTriggerPrice, slPriceData.minSLPrice);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!trailPerChange){\r\n            return percentChange.toFixed(2) + \"%\"; \r\n        }else{\r\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \r\n        }\r\n \r\n    }\r\n\r\n    getPercentage = (row) => {\r\n\r\n        var percentChange = 0, trailPerChange = 0; \r\n        if (row.netqty > 0) {\r\n            row.buyavgprice = parseFloat(row.buyavgprice);\r\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\r\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= this.state.firstTimeMove) {\r\n                var minPrice = row.buyavgprice + (row.buyavgprice * this.state.firstTimeSLMove / 100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice);\r\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\r\n                    this.modifyOrderMethod(row, minPrice);\r\n                }\r\n            } else {\r\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\r\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\r\n                trailPerChange = perchngfromTriggerPrice; \r\n                if (perchngfromTriggerPrice >= this.state.nextTimeMove) {\r\n                    minPrice = lastTriggerprice + (lastTriggerprice * this.state.nextTimeSLMove / 100);\r\n                    minPrice = this.getMinPriceAllowTick(minPrice);\r\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\r\n                        this.modifyOrderMethod(row, minPrice);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (row.netqty < 0) {\r\n\r\n            row.sellavgprice = parseFloat(row.sellavgprice);\r\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\r\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -Math.abs(this.state.firstTimeMove)) {\r\n                var minPrice = row.sellavgprice - (row.sellavgprice * this.state.firstTimeSLMove / 100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice);\r\n                // if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\r\n                //     this.modifyOrderMethod(row, minPrice);\r\n                // }\r\n                this.modifyOrderMethod(row, minPrice);\r\n            } else {\r\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\r\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\r\n                trailPerChange = perchngfromTriggerPrice; \r\n                console.log(\"perchngfromTriggerPrice\", row.tradingsymbol , perchngfromTriggerPrice);\r\n                if (perchngfromTriggerPrice <= -Math.abs(this.state.nextTimeMove)  ) {\r\n                    minPrice = lastTriggerprice - (lastTriggerprice * this.state.nextTimeSLMove / 100);\r\n                    minPrice = this.getMinPriceAllowTick(minPrice);\r\n                    // if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\r\n                    //     this.modifyOrderMethod(row, minPrice);\r\n                    // }\r\n                    this.modifyOrderMethod(row, minPrice);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!trailPerChange){\r\n            return percentChange.toFixed(2) + \"%\"; \r\n        }else{\r\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \r\n        }\r\n    }\r\n\r\n  \r\n\r\n\r\n    render() {\r\n  \r\n\r\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <br />\r\n                <ChartDialog /> <ChartMultiple />\r\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\r\n                    <Grid item >\r\n\r\n                       <Typography color=\"primary\" gutterBottom>\r\n                       Positions ({this.state.positionList && this.state.positionList.length})    <span id=\"niftySpid\"  > Nifty </span>  &nbsp;&nbsp;  <span id=\"bankniftySpid\" >Banknifty </span>\r\n                        </Typography>\r\n\r\n                     \r\n                    </Grid>\r\n\r\n                    \r\n                    {/* <Grid item  >\r\n                        <Typography component=\"h3\">\r\n                            <b>Net C:  {this.get2DecimalNumber(localStorage.getItem('netCapital'))}  </b>\r\n                        </Typography>\r\n                    </Grid> */}\r\n\r\n                    {/* <Grid item>\r\n                        <Typography component=\"h3\" >\r\n                            <b> Net C P/L: </b> <b style={{ color: ((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')) > 0 ? \"green\" : \"red\" }}>{((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')).toFixed(2)}% </b>\r\n                        </Typography>\r\n                    </Grid> */}\r\n\r\n                   \r\n{/* \r\n                    <Grid item  >\r\n                        <Typography component=\"h3\">\r\n                            <b>Turnover: {this.state.totalTornOver} </b>\r\n                        </Typography>\r\n                    </Grid> */}\r\n\r\n\r\n                    <Grid item >\r\n                        <Typography component=\"h3\"  >\r\n\r\n                        <b style={{ color: \"red\" }}>Expn: {this.state.totalExpence} </b>\r\n\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item  >\r\n                        <Typography component=\"h3\"   >\r\n                            <b>  P/L: </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2)}>\r\n                        <b> Net P/L: </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalExpence) > 0 ? \"green\" : \"red\" }}>{this.state.totalExpence ? (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2) : \"\"} </b>\r\n                        </Typography>\r\n                    </Grid>\r\n                    \r\n\r\n                \r\n                    <Grid item  >\r\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\r\n                    </Grid>\r\n                    <Grid item  >\r\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n\r\n                     <Grid item xs={12} sm={12}>\r\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\r\n\r\n                            <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\r\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol\r\n                                        <Button type=\"number\" onClick={() => this.checkOpenEqualToLow()}>O=H/L</Button>\r\n                                        <input style={{width: \"50px\"}} type='number'step={10000} placeholder='25000' name=\"checkAmount\" onChange={this.onTrailChange} onBlur={()=> this.refreshBasedAmount()}/>\r\n                                        <input style={{width: \"30px\"}} type='number' step={0.1} placeholder='0.5' name=\"checkAmountPer\" onChange={this.onTrailChange} onBlur={()=> this.refreshBasedAmount()}/>\r\n\r\n                                        </TableCell>\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Type</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAvg</TableCell>\r\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAvg</TableCell>\r\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">QT</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetQty</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Exp</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SL</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">MD</TableCell>\r\n\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">SP.SL</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SP.Target</TableCell> */}\r\n                                       \r\n                                        {this.state.checkAmount ? \r\n                                        <>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Cpl</TableCell>\r\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">CExp</TableCell>\r\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">CNet</TableCell>\r\n                                          </> : \"\"}\r\n\r\n                                        {this.state.showHighLowWisePer ? \r\n                                        <>\r\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">High</TableCell>\r\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\r\n                                          </> : \"\"}\r\n\r\n\r\n\r\n                                     \r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n                                    {this.state.positionList ? this.state.positionList.map(row => (\r\n\r\n\r\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\r\n\r\n                                            <TableCell align=\"left\" style={{width:'250px'}}>\r\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\r\n                                                    {row.tradingsymbol} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{row.producttype}</TableCell>\r\n\r\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\r\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\r\n\r\n                                            <TableCell align=\"left\"><Button onClick={() => this.addSLOrderInfo(row)}> {row.totalbuyavgprice} </Button>  </TableCell>\r\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\r\n\r\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\r\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\r\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\r\n                                            <TableCell style={{cursor:'help'}} title={row.expenceInfo} align=\"left\">{row.tradeExpence}</TableCell>\r\n\r\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\r\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\r\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\r\n\r\n\r\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\r\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                {row.netqty !== '0' && row.optiontype  == '' ? this.getPercentage(row) : \"\"}\r\n                                                {(row.optiontype  == 'CE' || row.optiontype  == 'PE') && row.netqty > 0 ? this.getOptionPercentage(row) : \"\"}  \r\n                                                {row.percentPnL ? row.percentPnL + \"%\" : \"\"}\r\n                                                {/* new Date().toLocaleTimeString() > \"15:15:00\" ? */}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\r\n\r\n                                           \r\n\r\n                                             <TableCell align=\"left\">\r\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\r\n                                            </TableCell>\r\n                                        \r\n                                        {this.state.checkAmount ? <>\r\n                                            <TableCell   align=\"left\"><i title={ \"Buy value:\" + row.totalbuyvalue + \" | Sell value:\"+ row.totalsellvalue}>  {row.checkQty}</i> &nbsp; {row.checkAmount} </TableCell>\r\n                                            {/* <TableCell   align=\"left\"></TableCell> */}\r\n                                            <TableCell   align=\"left\" title={row.checkExpence && row.checkExpence.expenceInfo}>  {row.checkExpence && row.checkExpence.tradeExpence && row.checkExpence.tradeExpence.toFixed(2)}</TableCell>\r\n                                            <TableCell   align=\"left\">{row.checkNet && row.checkNet.toFixed(2)}</TableCell>\r\n                                          </> : \"\"}\r\n\r\n\r\n                                        {this.state.showHighLowWisePer ? <>\r\n                                            <TableCell   align=\"left\">{row.high}</TableCell>\r\n                                            <TableCell  align=\"left\">{row.low}</TableCell>\r\n                                          </> : \"\"}\r\n\r\n\r\n                                           \r\n\r\n                                        </TableRow> : \"\"\r\n\r\n                                    )) : ''}\r\n\r\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\r\n\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                        <TableCell  align=\"left\">\r\n\r\n                   \r\n                                        Stock Trail%: &nbsp; F.Move<input name=\"firstTimeMove\"  type={'number'}  step=\"0.1\" onChange={this.onTrailChange} value={this.state.firstTimeMove}  style={{width:'30px',textAlign:'center'}} /> \r\n                                        &nbsp;SL Move<input name=\"firstTimeSLMove\" step=\"0.1\"  type={'number'}  onChange={this.onTrailChange}  value={this.state.firstTimeSLMove} style={{width:'30px',textAlign:'center'}} /> \r\n\r\n                                        &nbsp;Next <input name=\"nextTimeMove\" step=\"0.1\"  type={'number'}  onChange={this.onTrailChange} value={this.state.nextTimeMove}  style={{width:'30px',textAlign:'center'}} /> \r\n                                        &nbsp;SL Move<input name=\"nextTimeSLMove\"  step=\"0.1\" type={'number'}  onChange={this.onTrailChange}  value={this.state.nextTimeSLMove} style={{width:'30px',textAlign:'center'}} /> \r\n\r\n\r\n                                        </TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\r\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\r\n\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\r\n\r\n                                        {/* new Date().toLocaleTimeString() > \"15:15:00\" ?  */}\r\n                                            {this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\"}\r\n\r\n                                        </TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n\r\n                                        {this.state.checkAmount ? <>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totCheckAmount}</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totCheckExp}</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.checkTotalNet}</TableCell>\r\n                                        </>\r\n                                        : \"\" }\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n\r\n                                    <TableRow variant=\"head\">\r\n                                        <TableCell  colSpan={15} align=\"left\">\r\n\r\n                                        Option Trail%: F.Move<input name=\"firstTimeMoveOption\"  type={'number'}  step=\"0.1\" onChange={this.onTrailChange} value={this.state.firstTimeMoveOption}  style={{width:'30px',textAlign:'center'}} /> \r\n                                        &nbsp;SL Move<input name=\"firstTimeSLMoveOption\" step=\"0.1\"  type={'number'}  onChange={this.onTrailChange}  value={this.state.firstTimeSLMoveOption} style={{width:'30px',textAlign:'center'}} /> \r\n\r\n                                        &nbsp;Next <input name=\"nextTimeMoveOption\" step=\"0.1\"  type={'number'}  onChange={this.onTrailChange} value={this.state.nextTimeMoveOption}  style={{width:'30px',textAlign:'center'}} /> \r\n                                        &nbsp;SL Move<input name=\"nextTimeSLMoveOption\"  step=\"0.1\" type={'number'}  onChange={this.onTrailChange}  value={this.state.nextTimeSLMoveOption} style={{width:'30px',textAlign:'center'}} /> \r\n \r\n                                        </TableCell>\r\n                                    \r\n                                    </TableRow>\r\n\r\n                                    {this.state.enableSLMOrderUi ? \r\n                                    <TableRow variant=\"head\">\r\n                                        <TableCell className=\"TableHeadFormat\" colSpan={15} align=\"center\">\r\n\r\n                                        Stoploss\r\n                                        &nbsp;<input placeholder='Symbol' name=\"tradingsymbol\"  onChange={this.onAddSLChange} value={this.state.addSLInfo && this.state.addSLInfo.tradingsymbol}  style={{ width:'200px',  textAlign:'center'}} /> \r\n                                        &nbsp;<input placeholder='Price' name=\"stopLossPrice\"  type={'number'}  step=\"0.1\" onChange={this.onAddSLChange} value={this.state.addSLInfo && this.state.addSLInfo.stopLossPrice}  style={{width:'100px',textAlign:'center'}} /> \r\n                                        &nbsp;<input placeholder='Trigger Price' name=\"stopLossTriggerPrice\" step=\"0.1\"  type={'number'}  onChange={this.onAddSLChange}  value={this.state.addSLInfo && this.state.addSLInfo.price} style={{width:'100px',textAlign:'center'}} /> \r\n                                        &nbsp; <Button size={'small'} type=\"number\" variant=\"contained\"  onClick={() => this.placeSLMOrderManually()}>Place SL</Button> \r\n                                    \r\n                                        </TableCell>\r\n                                    \r\n                                    </TableRow>\r\n\r\n                                     : \"\"}\r\n                                    \r\n\r\n\r\n                                </TableBody>\r\n                            </Table>\r\n\r\n                        </Paper>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={12}>\r\n                        <OrderBook />\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\r\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\r\n                    </Grid>\r\n\r\n\r\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \r\n                    <Grid item xs={12} sm={12} >\r\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\r\n\r\n\r\n\r\n                            <Grid justify=\"space-between\"\r\n                                container>\r\n                                <Grid item  >\r\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\r\n\r\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\r\n\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\r\n                                        <TableRow hover key={row.symboltoken}>\r\n\r\n\r\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\r\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\r\n                                                {row.pastPerferm ? <>\r\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\r\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\r\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\r\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\r\n                                                </> : \"\"}\r\n\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\r\n\r\n\r\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\r\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\r\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\r\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\r\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\r\n\r\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\r\n\r\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\r\n\r\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\r\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\r\n\r\n                                            <TableCell align=\"left\">{row.time}</TableCell>\r\n\r\n                                        </TableRow>\r\n                                    )) : ''}\r\n                                </TableBody>\r\n                            </Table>\r\n\r\n\r\n\r\n                        </Paper>\r\n                    </Grid> \r\n                    : \"\"}\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     footerButton: {\r\n//         position: 'fixed',\r\n//     }\r\n// };\r\n\r\nexport default Home;\r\n","import * as moment from 'moment';\r\n\r\n\r\nconst workercode = () => {\r\n\r\n        onmessage = function(e) {\r\n        console.log('message received', e.data);\r\n\r\n        var data = e.data;\r\n\r\n        let histdata = data.chunkCandleData; \r\n        let stockInfo = data.stock; \r\n        let stock = {}; \r\n        if (histdata.length > 0) {\r\n\r\n            var candleData = histdata;\r\n            stock.name = stockInfo.name;\r\n            stock.symbol = stockInfo.symbol;\r\n            stock.token = stockInfo.token;\r\n            stock.entryPrice = candleData[0][4];\r\n            stock.foundAt = moment(candleData[0][0]).format('YYYY-MM-DD HH:mm')\r\n\r\n            let priceChangeList = [];\r\n            for (let index2 = 1; index2 < candleData.length; index2++) {\r\n                let perChange = (candleData[index2][4] - stock.entryPrice) * 100 / stock.entryPrice;\r\n                let datetime = moment(candleData[index2][0]).format('h:mma')\r\n               \r\n                priceChangeList.push({ perChange: perChange.toFixed(2), close: candleData[index2][4], datetime: datetime });\r\n            }\r\n            stock.candleData = priceChangeList;\r\n            \r\n        }\r\n\r\n        console.log('message prepared ', stock);\r\n\r\n        postMessage(stock);\r\n\r\n\r\n    }\r\n};\r\n\r\nlet code = workercode.toString();\r\ncode = code.substring(code.indexOf(\"{\")+1, code.lastIndexOf(\"}\"));\r\n\r\nconst blob = new Blob([code], {type: \"application/javascript\"});\r\nconst worker_script = URL.createObjectURL(blob);\r\n\r\n//module.exports = worker_script;\r\nexport default worker_script","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport * as moment from 'moment';\r\n\r\nimport worker_script from './worker';\r\n\r\n\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  //  this.handleKeyDown = this.handleKeyDown.bind(this)\r\n    this.state = {\r\n      cursor: 0,\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n\r\n\r\n\r\n\r\n\r\n    // var dataltp = {\r\n    //   \"exchange\": \"NSE\",\r\n    //   \"tradingsymbol\": 'NIFTY27JAN22FUT',\r\n    //   \"symboltoken\": 52264,\r\n    // }\r\n\r\n    // AdminService.getLTP(dataltp).then(res => {\r\n    //   console.log(res)\r\n    // })\r\n\r\n    // const format1 = \"YYYY-MM-DD HH:mm\";\r\n    // var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n    // var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\r\n    // var startDate = moment(new Date()).subtract(time);\r\n\r\n    // var data = {\r\n    //       \"exchange\": 'NSE',\r\n    //       \"symboltoken\": 67795,\r\n    //       \"interval\": 'FIFTEEN_MINUTE',  // THIRTY_MINUTE\r\n    //       \"fromdate\": moment(startDate).format(format1),\r\n    //       \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n    //   }\r\n\r\n    //   AdminService.getHistoryData(data).then(res => {\r\n\r\n    //   }); \r\n\r\n\r\n    var myWorker = new Worker(worker_script);\r\n    myWorker.onmessage = (m) => {\r\n        console.log(\"msg from worker: \", m.data);\r\n    };\r\n\r\n    myWorker.postMessage({arr:  [{name : \"vijay\"}], no : 10 });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { cursor } = this.state\r\n\r\n    return (\r\n      <Container>\r\n                 \r\n\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            resMessage: [],\r\n            counter:0,\r\n            listCount:0\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        // AdminService.scanStocks().then(fundsRes => {\r\n        //     // console.log('profiledata', profileRes); \r\n        //      //  let fundsResData = resolveResponse(fundsRes);\r\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \r\n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\r\n               \r\n        //         this.setState({  fundData :fundsResData.data })\r\n        //        }\r\n        //    })\r\n\r\n        AdminService.getStaticData().then(res => {\r\n          var data = res.data;\r\n          //data = JSON.parse(data);   \r\n          localStorage.setItem('staticData', JSON.stringify(data));\r\n\r\n          var totalWatchlist = Object.keys(data);\r\n          this.setState({ totalWatchlist: totalWatchlist });\r\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\r\n\r\n          this.setState({ staticData: data });\r\n\r\n          var watchlist = [];\r\n          totalWatchlist.forEach(element => {\r\n\r\n              var mylist = data[element];\r\n              mylist.forEach(element2 => {\r\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\r\n                  if (!foundInWatchlist.length) {\r\n                      watchlist.push(element2);\r\n                  }\r\n              });\r\n          });\r\n\r\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n      });\r\n\r\n\r\n\r\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n        this.setState({watchlistCount : list.length})\r\n\r\n    }\r\n\r\n    readCsv = async() => {\r\n\r\n      var list = this.state.addtowatchlist; \r\n\r\n      var parsedList =JSON.parse(list) \r\n      console.log(parsedList.length);\r\n      \r\n      var newJsonList = []; \r\n\r\n      for (let index = 0; index < parsedList.length; index++) {\r\n        const element = parsedList[index];\r\n        console.log(element);\r\n\r\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\r\n\r\n          let searchResdata =  searchRes.data; \r\n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \r\n        \r\n         // && element.LTP >= 200\r\n          if(found.length){ \r\n            newJsonList.push(found[0]); \r\n         \r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \r\n              if(!foundInWatchlist.length){\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\r\n\r\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\r\n                watchlist.push(found[0]); \r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n                console.log(\"fdaata\");\r\n               \r\n              }else{\r\n                this.setState({watchlistCount : watchlist.length,})\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\r\n\r\n              }\r\n            //  console.log(found[0].symbol, \"found\",found);      \r\n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\r\n          }\r\n          if(this.state.resMessage && this.state.resMessage.length){\r\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\r\n\r\n          }\r\n        \r\n       })\r\n\r\n       await new Promise(r => setTimeout(r, 500));  \r\n      }\r\n\r\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\r\n      \r\n      var data = {\r\n        listName : parsedList[0].SYMBOL, \r\n        listItem : newJsonList \r\n      }\r\n      console.log(\"newjosnlist:\", data);\r\n      AdminService.addIntoStaticData(data).then(res => {\r\n        let resdata = resolveResponse(res,'noPop' );\r\n       // console.log(resdata);\r\n        this.setState({listName: resdata.listName,listCount: resdata.count})\r\n      });\r\n      \r\n    }\r\n    resetCsv=()=>{\r\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\r\n\r\n    }\r\n   \r\n  \r\n\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n\r\n          \r\n            <Paper style={{padding:\"25px\" }}>   \r\n\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n              \r\n           \r\n              \r\n\r\n\r\n              \r\n\r\n                <Grid item xs={12} sm={8}> \r\n                <Typography variant=\"h6\">\r\n                   Current Watchlist Count   {this.state.watchlistCount} \r\n\r\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \r\n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \r\n\r\n                   <br />\r\n                  </Typography>\r\n                         \r\n\r\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\r\n              \r\n\r\n                </Grid>\r\n\r\n            \r\n                  \r\n                <Grid  item xs={8} sm={8}>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \r\n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\r\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\r\n\r\n\r\n\r\n                   \r\n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\r\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\r\n                     */}\r\n                       \r\n                </Grid>\r\n\r\n                <Grid  item xs={8} sm={8}>\r\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\r\n                         <>  <span> {data} </span>  <br /> </>\r\n                           \r\n                        )) : ''}\r\n   \r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n                </Paper>\r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    tableStyle : {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }, \r\n    selectStyle:{\r\n        marginBottom: '0px',\r\n        minWidth: 240,\r\n        maxWidth: 240\r\n\r\n    }\r\n  \r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPackLoaded } from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport \"./ViewStyle.css\";\r\nimport MyDialog from './MyDialog'\r\nimport Notify from \"../../utils/Notify\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport pako from 'pako';\r\nimport { w3cwebsocket } from 'websocket';\r\nimport ChartDialog from './ChartDialog';\r\nimport LineChart from \"./LineChart\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport vwap from 'vwap';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\n\r\n\r\n\r\n\r\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n\r\nclass MyView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // sectorList: [],\r\n            stopnview: '',\r\n            indexTimeStamp: '',\r\n            refreshFlag: true,\r\n            topGLCount: 0, \r\n            refreshFlagCandle: true,\r\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\r\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\r\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n        }\r\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.location.reload(); \r\n\r\n        //  this.loadIndexesList();\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n\r\n\r\n            wsClintSectorUpdate.onopen = (res) => {\r\n                // this.makeConnection();\r\n                // this.updateSocketWatch();\r\n            }\r\n\r\n\r\n            wsClintSectorUpdate.onmessage = (message) => {\r\n                var decoded = window.atob(message.data);\r\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n                var liveData = JSON.parse(data);\r\n\r\n                //  console.log(\"sector live data\", liveData);\r\n                window.document.title = \"Sector Live WS: \" + liveData.length;\r\n\r\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n\r\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\r\n                        var foundLive = liveData.filter(row => row.tk == element.token);\r\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\r\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\r\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\r\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\r\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\r\n\r\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.setState({ sectorList: this.state.sectorList });\r\n                // this.setState({ sectorList: sectorList });\r\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\r\n\r\n                // if(index){\r\n                //     this.state.sectorList.forEach((element, i) => {\r\n                //         if(element.index == index){\r\n                //             this.state.sectorList[i].stockList = sectorUpdate; \r\n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \r\n                //             this.setState({ sectorList: this.state.sectorList  });\r\n                //             return; \r\n                //         }\r\n                //     });\r\n                // }\r\n            }\r\n\r\n            wsClintSectorUpdate.onerror = (e) => {\r\n                console.log(\"socket error\", e);\r\n                window.location.reload();\r\n            }\r\n\r\n            // setInterval(() => {\r\n            //     this.makeConnection();\r\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\r\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\r\n            //     wsClintSectorUpdate.send(_req);\r\n            // }, 59000);\r\n\r\n            setInterval(() => {\r\n                this.loadIndexesList();\r\n            }, 120000);\r\n\r\n\r\n\r\n            // var tostartInteral =  setInterval(() => {\r\n\r\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\r\n            //     var time = new Date(); \r\n            //     if(time.getMinutes() % 5 === 0){\r\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\r\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\r\n\r\n            //         setTimeout(() => {\r\n            //             console.log(\"set timout at 70sec \", new Date());\r\n            //            this.refreshSectorCandle(); \r\n            //         }, 70000);\r\n\r\n            //         setInterval(() => {\r\n            //            this.refreshSectorCandle(); \r\n            //          }, 60000 * 5 + 70000 );  \r\n\r\n            //          clearInterval(tostartInteral); \r\n            //     } \r\n            // }, 1000);\r\n\r\n\r\n\r\n        } else {\r\n            // wsClintSectorUpdate.close();\r\n        }\r\n\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.checkOtherApi().then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n\r\n        \r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n        // setInterval(() => {\r\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\r\n        //         //let data = resolveResponse(res, 'noPop');\r\n        //         console.log(res); \r\n\r\n        //     }).catch(error => {\r\n\r\n        //     })\r\n        // }, 1000);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n        AdminService.retrieveOrderBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data && data.data) {\r\n                    var orderlist = data.data;\r\n                    orderlist.sort(function (a, b) {\r\n                        return new Date(b.updatetime) - new Date(a.updatetime);\r\n                    });\r\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    placeSLMOrder = (slmOption) => {\r\n\r\n        var data = {\r\n            \"triggerprice\": slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\r\n            \"exchange\": 'NSE',\r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n                // this.updateOrderList(); \r\n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\r\n                this.getTodayOrder();\r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\r\n            }\r\n        })\r\n    }\r\n\r\n    placeOrderMethod = (orderOption) => {\r\n\r\n        var data = {\r\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\": orderOption.symboltoken,\r\n            \"quantity\": orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"exchange\": \"NSE\",\r\n            \"variety\": \"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //  console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n                if (orderOption.stopLossPrice) {\r\n                    this.placeSLMOrder(orderOption);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice = minPrice.toFixed(2);\r\n        // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt(minPrice.split('.')[0]);\r\n        //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal = parseFloat(minPrice.split('.')[1]);\r\n        // console.log(\"decimal\",decimal); \r\n        var tickedecimal = decimal - decimal % 5;\r\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\r\n        //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice;\r\n    }\r\n\r\n\r\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\r\n\r\n\r\n        this.setState({ [spinnerIndex]: true })\r\n\r\n        var token = sectorItem.token;\r\n        var symbol = sectorItem.symbol;\r\n\r\n        if (isAutomatic != \"Automatic\") {\r\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\r\n        AdminService.getLTP(ltpdata).then(res => {\r\n            let ltpres = resolveResponse(res, 'noPop');\r\n            var LtpData = ltpres && ltpres.data;\r\n            console.log(symbol, \" ltd data \", LtpData);\r\n            let quantity = 0;\r\n            if (LtpData && LtpData.ltp) {\r\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\r\n            }\r\n\r\n\r\n            quantity = quantity > 0 ? 1 : 0;\r\n            console.log(symbol, \"  quantity can be order \", quantity);\r\n\r\n            if (quantity) {\r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                console.log(\"beginningTime\", beginningTime);\r\n\r\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\r\n                var startdate = moment(new Date()).subtract(time);\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": token,\r\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n                    \"fromdate\": moment(startdate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    // console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\r\n                        candleData.reverse();\r\n                        lowestLow = candleData[0][3];\r\n                        highestHigh = candleData[0][2];\r\n                        if (candleData && candleData.length > 0) {\r\n                            for (let index = 0; index < 20; index++) {\r\n                                if (candleData[index]) {\r\n                                    clossest += candleData[index][4]; //close  \r\n                                    lowerest += candleData[index][3];  //low\r\n                                    highestsum += candleData[index][2];  //low\r\n                                    if (candleData[index][2] > highestHigh) {\r\n                                        console.log(index, highestHigh, candleData[index][2]);\r\n                                        highestHigh = candleData[index][2];\r\n                                    }\r\n                                    if (candleData[index][3] <= lowestLow) {\r\n                                        lowestLow = candleData[index][3];\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\r\n\r\n                            var bbmiddleValue = clossest / devideLen;\r\n                            var bblowerValue = lowerest / devideLen;\r\n                            var bbhigerValue = highestsum / devideLen;\r\n\r\n                            var stoploss = 0, stoplossPer = 0;\r\n\r\n                            if (orderType == \"BUY\") {\r\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\r\n                                stoploss = this.getMinPriceAllowTick(stoploss);\r\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\r\n\r\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\r\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\r\n\r\n                            }\r\n\r\n\r\n                            if (orderType == \"SELL\") {\r\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\r\n                                stoploss = this.getMinPriceAllowTick(stoploss);\r\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\r\n\r\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\r\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\r\n\r\n                            }\r\n\r\n\r\n\r\n                            var orderOption = {\r\n                                transactiontype: orderType,\r\n                                tradingsymbol: symbol,\r\n                                symboltoken: token,\r\n                                buyPrice: 0,\r\n                                quantity: quantity,\r\n                                stopLossPrice: stoploss\r\n                            }\r\n                            if (quantity) {\r\n\r\n                                this.placeOrderMethod(orderOption);\r\n                                this.setState({ [spinnerIndex]: false })\r\n\r\n                            } else {\r\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\r\n                                console.log(symbol + \" its not fullfilled\");\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        Notify.showError(symbol + \" candle data emply\");\r\n                        console.log(symbol + \" candle data emply\");\r\n                        this.setState({ [spinnerIndex]: true })\r\n                    }\r\n                })\r\n\r\n            }else{\r\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\r\n                this.setState({ [spinnerIndex]: false })\r\n            }\r\n        }).catch(function(error){\r\n            this.setState({ [spinnerIndex]: true })\r\n        })\r\n        // await new Promise(r => setTimeout(r, 2000)); \r\n    }\r\n\r\n\r\n//     loadIndexesList() {\r\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\r\n\r\n//         AdminService.getAllIndices()\r\n//             .then((res) => {\r\n//                 if (res.data) {\r\n//                     var data = res.data, sectorStockList = [];\r\n//                     this.setState({ indexTimeStamp: data.timestamp })\r\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\r\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\r\n//                   //  this.setState({sectorList :  softedData});\r\n                  \r\n// //                    this.setState({ sectorList: []});\r\n//                     function sleep(ms) {\r\n//                         return new Promise(resolve => setTimeout(resolve, ms));\r\n//                     }\r\n//                     var updateLtpOnInterval = async (ref, softedData) => {\r\n\r\n//                             var middleSector = []; \r\n//                             for (let i = 0; i < softedData.length; i++) {\r\n\r\n//                                 var length = 1;                                     \r\n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\r\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\r\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \r\n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\r\n//                                     softedData[i].stockList = sectorStocks;\r\n//                                     length = sectorStocks.length; \r\n//                                     if (sectorStocks && sectorStocks.length) {\r\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\r\n//                                     }\r\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\r\n//                                 }else{\r\n//                                     softedData[i].stockList = sectorStocks;\r\n//                                     middleSector.push(softedData[i]); \r\n//                                 }\r\n\r\n                                \r\n                            \r\n//                                 await sleep(length / 10 * 1500);\r\n//                             }\r\n\r\n\r\n//                             middleSector.forEach(element => {\r\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\r\n//                             });\r\n//                         }\r\n//                         updateLtpOnInterval(this, softedData);\r\n//                 }\r\n//             })\r\n//             .catch((reject) => {\r\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\r\n//                 this.speckIt(\"All Indices API Failed\");\r\n\r\n//             })\r\n\r\n//         this.setState({ refreshFlag: true });\r\n\r\n//     }\r\n\r\n    loadIndexesList() {\r\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\r\n\r\n        AdminService.allIndicesDirectJSON()\r\n            .then((res) => {\r\n\r\n\r\n                if (res.data) {\r\n\r\n        \r\n\r\n                    var data = res.data && res.data.data, sectorStockList = [];\r\n                   // this.setState({ indexTimeStamp: data.timestamp })\r\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\r\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\r\n                  //  this.setState({sectorList :  softedData});\r\n\r\n                  console.log(softedData); \r\n\r\n                    this.setState({ sectorList: []});  \r\n                    function sleep(ms) {\r\n                        return new Promise(resolve => setTimeout(resolve, ms));\r\n                    }\r\n                    var updateLtpOnInterval = async (ref, softedData) => {\r\n\r\n                            var middleSector = []; \r\n                            for (let i = 0; i < softedData.length; i++) {\r\n\r\n                                var length = 1;                                     \r\n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\r\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\r\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \r\n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\r\n\r\n                                    if(sectorStocks && sectorStocks.length){\r\n                                        softedData[i].stockList = sectorStocks;\r\n                                        length = sectorStocks.length; \r\n                                        if (sectorStocks && sectorStocks.length) {\r\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\r\n                                        }\r\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\r\n                                    }\r\n                                }else{\r\n                                    if(sectorStocks && sectorStocks.length>=1){\r\n                                        softedData[i].stockList = sectorStocks;\r\n                                        middleSector.push(softedData[i]); \r\n                                    }\r\n                                  \r\n                                }\r\n\r\n                                await sleep(length / 10 * 150);\r\n                            }\r\n\r\n\r\n                            middleSector.forEach(element => {\r\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\r\n                            });\r\n                        }\r\n                        updateLtpOnInterval(this, softedData);\r\n                }\r\n            })\r\n            .catch((reject) => {\r\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\r\n          //      this.speckIt(\"All Indices API Failed\");\r\n\r\n            })\r\n\r\n        this.setState({ refreshFlag: true });\r\n\r\n    }\r\n\r\n\r\n    updateLTPMannually = (index) => {\r\n\r\n        var sectorStocks = this.state.staticData[index];\r\n        this.refreshSectorLtp(sectorStocks, index);\r\n    }\r\n\r\n\r\n    refreshSectorLtp = async (sectorStocks, index) => {\r\n\r\n        this.setState({stockUpdate : index});\r\n\r\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\r\n        this.setState({ refreshFlag: false, failedCount: 0 });\r\n        var sectorUpdate = [];\r\n        var sectorStockList = this.state.sectorStockList;\r\n\r\n        for (let index = 0; index < sectorStocks.length; index++) {\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"tradingsymbol\": sectorStocks[index].symbol,\r\n                \"symboltoken\": sectorStocks[index].token,\r\n            }\r\n\r\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\r\n\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n\r\n\r\n                if (LtpData.symboltoken == sectorStocks[index].token) {\r\n\r\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\r\n\r\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\r\n                    var indexData = sectorStocks[index];\r\n                    indexData.ltp = LtpData.ltp;\r\n                    indexData.nc = todayChange;\r\n                    indexData.cng = (LtpData.ltp - LtpData.close);\r\n                    indexData.ltt = new Date().toLocaleString();\r\n\r\n\r\n                    sectorUpdate.push(indexData);\r\n                }\r\n\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n\r\n                console.log(sectorStocks[index].symbol, error);\r\n\r\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\r\n            })\r\n\r\n\r\n\r\n            await new Promise(r => setTimeout(r, 101));\r\n\r\n\r\n        }\r\n\r\n\r\n        if (index) {\r\n            this.state.sectorList.forEach((element, i) => {\r\n                if (element.index == index) {\r\n                    this.state.sectorList[i].stockList = sectorUpdate;\r\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\r\n                    this.setState({ sectorList: this.state.sectorList });\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.setState({ refreshFlag: true });\r\n       // this.refreshSectorCandleManually(index); \r\n      //  this.checkLast5MinMovement(index); \r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n    checkLast5MinMovement = async (index) => {\r\n\r\n        var sectorStocks = this.state.staticData[index];\r\n     //   this.refreshSectorLtp(sectorStocks, index);\r\n\r\n\r\n        this.setState({ refreshFlagCandle: false });\r\n        console.log(\"sectorStockList\", index);\r\n\r\n\r\n        for (let index = 0; index < sectorStocks.length; index++) {\r\n           \r\n           \r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n            var time = moment.duration(\"00:06:00\");\r\n            var startdate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": sectorStocks[index].token,\r\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                if (histdata && histdata.data && histdata.data.length) {\r\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \r\n\r\n                    \r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\r\n                    candleData.forEach((element, index) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n\r\n                    });\r\n\r\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\r\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\r\n\r\n\r\n                    // var inputRSI = { values: closeingData, period: 14 };\r\n                    // var lastRsiValue = RSI.calculate(inputRSI)\r\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\r\n\r\n\r\n                    // var inputVWAP = {\r\n                    //     open: openData,\r\n                    //     high: highData,\r\n                    //     low: lowData,\r\n                    //     close: closeingData,\r\n                    //     volume: valumeData\r\n                    // };\r\n\r\n\r\n                    // if (candleData.length > 0) {\r\n                    //     sectorStocks[index].candleChartData = candleChartData;\r\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\r\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\r\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\r\n                    // }\r\n\r\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\r\n                }\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n\r\n        if (index) {\r\n            this.state.sectorList.forEach((element, i) => {\r\n                if (element.index == index) {\r\n                    this.state.sectorList[i].stockList = sectorStocks;\r\n                    this.setState({ sectorList: this.state.sectorList });\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        this.setState({ refreshFlagCandle: true });\r\n\r\n\r\n\r\n\r\n        console.log(\"sectorStockswithcandle\", sectorStocks);\r\n    }\r\n    refreshSectorCandleManually = async (index) => {\r\n\r\n        var sectorStocks = this.state.staticData[index];\r\n     //   this.refreshSectorLtp(sectorStocks, index);\r\n\r\n\r\n        this.setState({ refreshFlagCandle: false });\r\n        console.log(\"sectorStockList\", index);\r\n\r\n\r\n        for (let index = 0; index < sectorStocks.length; index++) {\r\n           \r\n           \r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n            var time = moment.duration(\"22:00:00\");\r\n            var startdate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": sectorStocks[index].token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\r\n                    candleData.forEach((element, index) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n\r\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n\r\n                    });\r\n\r\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\r\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\r\n\r\n\r\n                    var inputRSI = { values: closeingData, period: 14 };\r\n                    var lastRsiValue = RSI.calculate(inputRSI)\r\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\r\n\r\n                    var inputVWAP = {\r\n                        open: openData,\r\n                        high: highData,\r\n                        low: lowData,\r\n                        close: closeingData,\r\n                        volume: valumeData\r\n                    };\r\n\r\n                    var input = {\r\n                    period : 20, \r\n                    values : bbdata,\r\n                    stdDev : 2\r\n                    }\r\n\r\n                    var bb = BollingerBands.calculate(input); \r\n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\r\n\r\n\r\n                    if (candleData.length > 0) {\r\n                        sectorStocks[index].candleChartData = candleChartData;\r\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\r\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\r\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\r\n                    }\r\n\r\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\r\n                }\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n\r\n        if (index) {\r\n            this.state.sectorList.forEach((element, i) => {\r\n                if (element.index == index) {\r\n                    this.state.sectorList[i].stockList = sectorStocks;\r\n                    this.setState({ sectorList: this.state.sectorList });\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        this.setState({ refreshFlagCandle: true });\r\n\r\n\r\n\r\n\r\n        console.log(\"sectorStockswithcandle\", sectorStocks);\r\n    }\r\n\r\n\r\n    refreshSectorCandle = async () => {\r\n\r\n        this.setState({ refreshFlagCandle: false });\r\n\r\n        var sectorStockList = this.state.sectorStockList;\r\n\r\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\r\n\r\n\r\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n            var time = moment.duration(\"61:00:00\");\r\n            var startdate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": this.state.sectorStockList[index].token,\r\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [];\r\n                    candleData.forEach(element => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    });\r\n\r\n\r\n                    if (candleData.length > 0) {\r\n\r\n                        sectorStockList[index].candleChartData = candleChartData;\r\n                        var sectorList = this.state.sectorList;\r\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\r\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\r\n\r\n                                if (foundLive.length) {\r\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\r\n                                }\r\n                            });\r\n                        });\r\n                        this.setState({ sectorList: sectorList });\r\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\r\n                    }\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\r\n                }\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n\r\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n        this.setState({ refreshFlagCandle: true });\r\n    }\r\n\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n\r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = () => {\r\n\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\r\n\r\n        if (!wsClintSectorUpdate) return;\r\n        wsClintSectorUpdate.send(firstTime_req);\r\n\r\n        this.updateSocketWatch();\r\n    }\r\n\r\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\r\n\r\n        //  candleData  = candleData && candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\r\n        localStorage.setItem('cadleChartSymbol', symbol);\r\n        localStorage.setItem('candlePriceShow', price);\r\n        localStorage.setItem('candleChangeShow', change);\r\n        localStorage.setItem('vwapDataChart', vwapDataChart);\r\n\r\n\r\n\r\n        if (candleData && candleData.length > 0) {\r\n            document.getElementById('showCandleChart').click();\r\n        }\r\n    }\r\n\r\n    updateSocketWatch = () => {\r\n\r\n\r\n\r\n        var channel = [];\r\n        this.state.sectorList.forEach(element => {\r\n            if (element.percentChange >= 0.75) {\r\n                element.stockList && element.stockList.forEach(stock => {\r\n                    channel.push('nse_cm|' + stock.token);\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        if (channel && channel.length) {\r\n            var updateWatch = {\r\n                \"task\": \"mw\",\r\n                \"channel\": channel.join('&'),\r\n                \"token\": this.state.feedToken,\r\n                \"user\": this.state.clientcode,\r\n                \"acctid\": this.state.clientcode\r\n            }\r\n\r\n            console.log(\"update watch channel\", updateWatch);\r\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n    get2DecimalNumber =(number)=>{\r\n\r\n        if(number){\r\n            return number.toFixed(2); \r\n        }else{\r\n            return number;  \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\r\n                return b.nc - a.nc;\r\n            });\r\n        });\r\n\r\n\r\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\r\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\r\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\r\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\r\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\r\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\r\n                        if (index2 < 2) {\r\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\r\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\r\n                            if (!isThere.length) {\r\n                                element.foundAt = new Date().toLocaleString();\r\n                                autoTradeTopList.push(element);\r\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\r\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\r\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\r\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \r\n                            }\r\n                        }\r\n\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n\r\n                <ChartDialog />\r\n\r\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n                    <Grid item xs={12} sm={12} >\r\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\r\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\r\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\r\n\r\n                            &nbsp;\r\n\r\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\r\n                            &nbsp; */}\r\n\r\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\r\n\r\n\r\n\r\n\r\n                        </Typography>\r\n\r\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\r\n\r\n\r\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\r\n\r\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\r\n\r\n\r\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\r\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\r\n\r\n                                </Button>\r\n                                &nbsp;\r\n\r\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\r\n                                    <ShowChartIcon />\r\n                                </Button>\r\n\r\n\r\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\r\n\r\n\r\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\r\n\r\n                                        <Grid item xs={12} sm={6} >\r\n                                            <Paper style={{ textAlign: \"center\" }} >\r\n\r\n                                                {/* {sectorItem.cng} */}\r\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\r\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\r\n                                                </Typography>\r\n\r\n                                          \r\n                                            \r\n\r\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\r\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \r\n                                                </span> : \"\"}\r\n\r\n                                                {sectorItem.vwapValue ? \r\n                                                <Typography >\r\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\r\n                                                    &nbsp;\r\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\r\n                                                </Typography>\r\n                                               : \"\"}\r\n\r\n\r\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\r\n                                                    options={{\r\n                                                        chart: {\r\n                                                            type: 'candlestick',\r\n                                                            //  height: 40\r\n\r\n                                                        },\r\n                                                        title: {\r\n                                                            text: '',\r\n                                                            align: 'left'\r\n                                                        },\r\n                                                        xaxis: {\r\n                                                            type: 'datetime',\r\n                                                        },\r\n                                                        yaxis: {\r\n                                                            tooltip: {\r\n                                                                enabled: true\r\n                                                            }\r\n                                                        }\r\n                                                    }}\r\n                                                    series={[{\r\n                                                        data: sectorItem.candleChartData\r\n\r\n                                                    }]}\r\n                                                    type=\"candlestick\"\r\n                                        \r\n                                                /> : \"\"} */}\r\n\r\n\r\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\r\n\r\n                                                <Grid item>\r\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\r\n                                                </Grid>\r\n\r\n                                                <Grid item >\r\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\r\n                                                </Grid>\r\n\r\n                                                <Grid item >\r\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n\r\n\r\n                                            </Paper>\r\n\r\n                                            \r\n                                        </Grid>\r\n\r\n                                    ))\r\n                                    }\r\n\r\n                                </Grid>\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n\r\n\r\n                    )) : <Spinner />}\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { packs: state.packs.packs.data };\r\n}\r\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\r\n","import React, { useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\n\r\nimport LineChart from \"./LineChart\";\r\nimport LightChartCom from './LightChartCom';\r\n\r\nimport Test from './Test';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  var [values, setValues] = React.useState({\r\n    data: [],\r\n    candledata: {}\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n   \r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showLightCandleChart\" color=\"primary\" style={{ display: \"none\" }} onClick={handleClickOpen}>\r\n        Chart\r\n      </Button>\r\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} style={{color : props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change > 0 ? \"green\" : \"red\" }}>\r\n          {props.LightChartData.selectedSymbol}  {props.LightChartData.InstrumentLTP && props.LightChartData.InstrumentLTP.ltp}    ({props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change.toFixed(2)}%) \r\n          <br />\r\n\r\n\r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"chart\">\r\n\r\n        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n          <br />\r\n\r\n          {props.LightChartData && props.LightChartData.InstrumentLTP ?\r\n            <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\r\n\r\n              <div style={{ background: '#bdbdbd' }}>\r\n                <b>  Daily: {props.LightChartData.selectedSymbol}</b> <br />\r\n\r\n                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                  Daily Avg Price: {props.LightChartData.DailyBulishStatus && props.LightChartData.DailyBulishStatus.toFixed(0)} {props.LightChartData.DailyBulishStatus ? props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\r\n                </span><br />\r\n\r\n\r\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\r\n                  <b>Daily Avg Volume:</b>  {(props.LightChartData.dailyAvgValume / 100000).toFixed(2)}L\r\n                </span><br />\r\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\r\n                  {props.LightChartData.todayCurrentVolume > props.LightChartData.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(props.LightChartData.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (props.LightChartData.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\r\n                </span>\r\n              </div>\r\n              <br />\r\n\r\n\r\n\r\n              <b>  Intraday: {props.LightChartData.timeFrame} : {props.LightChartData.tradingsymbol}</b> <br />\r\n              {props.LightChartData.bblastValue ? <span item xs={12} sm={12} >\r\n\r\n                <span title=\"Green color mean price running above upper bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp >= props.LightChartData.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {props.LightChartData.bblastValue.upper.toFixed(2)}</span><br />\r\n                BB Middle(20 SMA): {props.LightChartData.bblastValue.middle.toFixed(2)}<br />\r\n                <span title=\"Green red mean price running below lower bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp <= props.LightChartData.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {props.LightChartData.bblastValue.lower.toFixed(2)}</span><br />\r\n              </span> : \"\"}\r\n\r\n              <span item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                VWAP:  {props.LightChartData.vwapvalue && props.LightChartData.vwapvalue.toFixed(2)}\r\n              </span>\r\n              <br />\r\n              <b> RSI: </b>{props.LightChartData.rsiValues && props.LightChartData.rsiValues.map((item, j) => (\r\n                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\r\n              ))}\r\n\r\n\r\n              <br />\r\n              <b>Vol:</b> {props.LightChartData.valumeData && props.LightChartData.valumeData.map((item, j) => (\r\n                <span style={{ color: item > props.LightChartData.dailyAvgValume ? \"green\" : \"\", fontWeight: item > props.LightChartData.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\r\n              ))}\r\n\r\n              <br />  <br />\r\n\r\n            </Grid>\r\n            : \"\"}\r\n\r\n\r\n\r\n          {/* <Grid item xs={12} sm={9}  >\r\n            <div id=\"showChartTitle\">\r\n            </div>\r\n            <div id=\"tvchart\"></div>\r\n          </Grid> */}\r\n\r\n\r\n            <Grid item xs={12} sm={9}  >\r\n            {localStorage.getItem('candleChartData') ? <ReactApexChart\r\n            options={{\r\n              chart: {\r\n                type: 'candlestick',\r\n                height: 350\r\n              },\r\n              title: {\r\n                text: '',\r\n                align: 'left'\r\n              },\r\n              xaxis: {\r\n                type: 'datetime',\r\n              },\r\n              yaxis: {\r\n                tooltip: {\r\n                  enabled: true\r\n                }\r\n              }\r\n            }}\r\n            series={[{\r\n              data: props.LightChartData.chartStaticData\r\n\r\n            }]}\r\n            type=\"candlestick\"\r\n            width={500}\r\n            height={350}\r\n          /> : \"\"}\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n\r\n\r\n\r\n          {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n          <Grid item>\r\n             <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' )}>BUY</Button> \r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={props.LightChartData.qtyToTake} onChange={this.onChangeQty} />\r\n          </Grid>\r\n\r\n          <Grid item >\r\n            <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked')}>SELL</Button> \r\n          </Grid>\r\n          </Grid> */}\r\n\r\n          {/* body data\r\n        <ReactApexChart\r\n              options={props.data && props.data.options}\r\n              series={props.data && props.data.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            /> */}\r\n\r\n         \r\n\r\n\r\n          {/* below line chart \r\n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\r\n          */}\r\n          {/* {props.LightChartData.chartStaticData ? <Test ChartData={props.LightChartData} /> : \"\"} */}\r\n\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonMethods from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\n\r\n\r\nclass OrderBook extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oderbookData: [],\r\n            listofzones: [],\r\n            selectedZone: [],\r\n            zone: '',\r\n            selectAllzone: 'Select All',\r\n            triggerprice: 0,\r\n            price: 0,\r\n            lotsize: 0,\r\n            firstTimeFlag: true,\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist: localStorage.getItem('clickedIndexName') ? localStorage.getItem('clickedIndexName') :  'NIFTY BANK', //decodeURIComponent(window.location.href.split('?')[1].split('=')[1]),\r\n            totalStockToWatch: 0,\r\n            timeFrame: \"TEN_MINUTE\",\r\n            chartStaticData: [],\r\n            qtyToTake: '',\r\n            BBBlastType: \"BBBlastOnly\",\r\n            liveBidsList: [],  //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\r\n            sortedType: \"pChange\",\r\n            backupDeleverydata: [],\r\n            backupBidata: [],\r\n            backupDateList: [],\r\n            backDate : ''\r\n\r\n        }\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n        AdminService.retrieveOrderBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data && data.data) {\r\n                    var orderlist = data.data;\r\n                    orderlist.sort(function (a, b) {\r\n                        return new Date(b.updatetime) - new Date(a.updatetime);\r\n                    });\r\n\r\n                    this.setState({ oderbookData: orderlist });\r\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\r\n\r\n                    // var pendingOrder = orderlist.filter(function(row){\r\n                    //     return row.status == \"trigger pending\";\r\n                    // }); \r\n                    // this.setState({pendingOrder: pendingOrder});\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    // getDerivedStateFromProps(){\r\n    //     //console.log(' this.props.indexName', this.props.indexName)\r\n    //    // this.setState({selectedWatchlist : this.props.indexName }); \r\n    // }\r\n\r\n    componentDidMount() {\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            console.log(\"setInterval\");\r\n            setInterval(() => {\r\n                this.checkLiveBids();\r\n            }, 5 * 60000);\r\n        }\r\n\r\n        // setInterval(() => {\r\n        //     this.checkLiveBids();\r\n        // }, 5 * 60000);\r\n\r\n\r\n      this.checkLiveBids();\r\n\r\n\r\n        this.getBackUpDate();\r\n\r\n        console.log(\"ddd\", this.state.selectedWatchlist);\r\n    }\r\n\r\n\r\n\r\n    onChangeWatchlist = (e) => {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.findlast5minMovement(); //one time only\r\n            //this.startSearching();\r\n            this.checkLiveBids();\r\n\r\n        });\r\n    }\r\n\r\n    onChangeBackDate = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            this.getByDateBidHistory();\r\n\r\n        });\r\n    }\r\n\r\n    backupData = () => {\r\n        console.log(this.state.backupDeleverydata);\r\n        AdminService.saveDeliveryData({ backupDeleverydata: this.state.backupDeleverydata }).then(storeRes => {\r\n            console.log(\"storeRes\", new Date().toLocaleTimeString(), storeRes);\r\n        });\r\n    }\r\n\r\n    updatebidHistory =(storeResData)=> {\r\n\r\n        console.log(\"storeResData\", storeResData);\r\n\r\n\r\n        this.state.liveBidsList.forEach(element => {\r\n                \r\n            let symbolHist = storeResData.length &&  storeResData.filter(item => item.symbol == element.symbol); \r\n\r\n            \r\n            let buyHist = [], sellHist=[], lastbuybid=0, lastsellbid=0;  \r\n            symbolHist.forEach((element , index)=> {\r\n              \r\n               if(lastbuybid){\r\n                   buyHist.push(((element.totalBuyBid - lastbuybid)*100/lastbuybid).toFixed(2)); \r\n               }\r\n\r\n               if(lastsellbid){\r\n                   sellHist.push(((element.totalSellBid - lastsellbid)*100/lastsellbid).toFixed(2)); \r\n               }\r\n               lastbuybid = element.totalBuyBid; \r\n               lastsellbid = element.totalSellBid; \r\n              \r\n            });\r\n\r\n            element.buybidHistory = buyHist; \r\n            element.sellbidHistory = sellHist; \r\n             \r\n           });\r\n\r\n           this.setState({liveBidsList : this.state.liveBidsList}); \r\n    }\r\n\r\n    storeBidData = () => {\r\n        console.log(this.state.backupBidata);\r\n\r\n        let data = { backupBiddata: this.state.backupBidata, dbUpdateTime: moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\") }; \r\n        AdminService.saveBidData(data).then(storeRes => {\r\n            let storeResData = resolveResponse(storeRes, \"noPop\");\r\n            this.updatebidHistory(storeResData.result); \r\n        });\r\n    }\r\n\r\n\r\n    checkLiveBids = async () => {\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        this.setState({ liveBidsList: [], backupDeleverydata: [], backupBidata: [] });\r\n\r\n        console.log(\"watchList\", this.state.staticData)\r\n\r\n        var delData = [];\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const row = watchList[index];\r\n\r\n            AdminService.checkLiveBids(row.name).then(resd => {\r\n                // let histdatad = resolveResponse(resd, 'noPop');\r\n\r\n               // console.log(\"bid\", resd.data.data)\r\n\r\n                if (resd.data && resd.data.data.length) {\r\n                    let bidlivedata = resd.data.data[0];\r\n                    let biddata = {\r\n                        quantityTraded: parseFloat(bidlivedata.quantityTraded.split(\",\").join('')),\r\n                        deliveryQuantity: parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')),\r\n                        deliveryToTradedQuantity: parseFloat(bidlivedata.deliveryToTradedQuantity.split(\",\").join('')),\r\n                        symbol: bidlivedata.symbol,\r\n                        todayChange: bidlivedata.pChange,\r\n                        ltp: parseFloat(bidlivedata.lastPrice.split(\",\").join('')),\r\n                        datetime: moment(bidlivedata.secDate).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                        averagePrice: parseFloat(bidlivedata.averagePrice.split(\",\").join('')),\r\n                    }\r\n                    // delData.push(biddata);\r\n\r\n                    let bidLivedata = {\r\n                        symbol: bidlivedata.symbol,\r\n                        priceChangePer: bidlivedata.pChange,\r\n                        ltp: parseFloat(bidlivedata.lastPrice.split(\",\").join('')),\r\n                        updatedTime: moment(bidlivedata.secDate).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                        totalBuyBid: parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) ? parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join(''))  : 0,\r\n                        totalSellBid: parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) ? parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : 0, \r\n                   \r\n                        quantityTraded : bidlivedata.quantityTraded != '-' ? parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : 0, \r\n                        deliveryToTradedQuantity: parseFloat(bidlivedata.deliveryToTradedQuantity.split(\",\").join('')),  \r\n                        deliveryQuantity: parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')), \r\n                 \r\n                        averagePrice: parseFloat(bidlivedata.averagePrice.split(\",\").join('')),\r\n                        buyPrice1: parseFloat(bidlivedata.buyPrice1.split(\",\").join('')),\r\n                        buyPrice2:  parseFloat(bidlivedata.buyPrice2.split(\",\").join('')),\r\n                        buyPrice3:  parseFloat(bidlivedata.buyPrice3.split(\",\").join('')),\r\n                        buyPrice4:  parseFloat(bidlivedata.buyPrice4.split(\",\").join('')),\r\n                        buyPrice5:  parseFloat(bidlivedata.buyPrice5.split(\",\").join('')),\r\n                        buyQuantity1:  parseFloat(bidlivedata.buyQuantity1.split(\",\").join('')),\r\n                        buyQuantity2:  parseFloat(bidlivedata.buyQuantity2.split(\",\").join('')),\r\n                        buyQuantity3:  parseFloat(bidlivedata.buyQuantity3.split(\",\").join('')),\r\n                        buyQuantity4:  parseFloat(bidlivedata.buyQuantity4.split(\",\").join('')),\r\n                        buyQuantity5:  parseFloat(bidlivedata.buyQuantity5.split(\",\").join('')),\r\n\r\n                        sellPrice1:  parseFloat(bidlivedata.sellPrice1.split(\",\").join('')),\r\n                        sellPrice2:  parseFloat(bidlivedata.sellPrice2.split(\",\").join('')),\r\n                        sellPrice3:  parseFloat(bidlivedata.sellPrice3.split(\",\").join('')),\r\n                        sellPrice4:  parseFloat(bidlivedata.sellPrice4.split(\",\").join('')),\r\n                        sellPrice5:  parseFloat(bidlivedata.sellPrice5.split(\",\").join('')),\r\n                        sellQuantity1:  parseFloat(bidlivedata.sellQuantity1.split(\",\").join('')),\r\n                        sellQuantity2:  parseFloat(bidlivedata.sellQuantity2.split(\",\").join('')),\r\n                        sellQuantity3:  parseFloat(bidlivedata.sellQuantity3.split(\",\").join('')),\r\n                        sellQuantity4:  parseFloat(bidlivedata.sellQuantity4.split(\",\").join('')),\r\n                        sellQuantity5:  parseFloat(bidlivedata.sellQuantity5.split(\",\").join('')),\r\n                        \r\n                       \r\n\r\n                    }\r\n\r\n\r\n                    this.setState({ backupBidata: [...this.state.backupBidata, bidLivedata] });\r\n\r\n                    if (index === watchList.length - 1) {\r\n                        setTimeout(() => {\r\n                            console.log(\"last loaggged\")\r\n                            this.storeBidData();\r\n                        }, 1000);\r\n                    }\r\n\r\n                    this.setState({ backupDeleverydata: [...this.state.backupDeleverydata, biddata] });\r\n\r\n\r\n                    bidlivedata.quantityTraded = bidlivedata.quantityTraded != '-' ? parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : \"0\";\r\n                    bidlivedata.deliveryQuantity = bidlivedata.deliveryQuantity != '-' ? parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')) : \"0\";\r\n\r\n                    bidlivedata.totalBuyQuantity = bidlivedata.totalBuyQuantity != '-' ? parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) : \"0\";\r\n\r\n                    bidlivedata.totalSellQuantity = bidlivedata.totalSellQuantity != '-' ? parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : \"0\";\r\n                    bidlivedata.totalTradedVolume = bidlivedata.totalTradedVolume != '-' ? parseFloat(bidlivedata.totalTradedVolume.split(\",\").join('')) : \"0\";\r\n                    bidlivedata.totalTradedValue = bidlivedata.totalTradedValue != '-' ? parseFloat(bidlivedata.totalTradedValue.split(\",\").join('')) : \"0\";\r\n\r\n\r\n                    bidlivedata.buytosellTime = bidlivedata.totalBuyQuantity / bidlivedata.totalSellQuantity;\r\n                    bidlivedata.selltobuyTime = bidlivedata.totalSellQuantity / bidlivedata.totalBuyQuantity;\r\n\r\n                    this.state.liveBidsList.sort(function (a, b) {\r\n                        return b.pChange - a.pChange;\r\n                    });\r\n\r\n\r\n                    if (bidlivedata.totalBuyQuantity / bidlivedata.totalSellQuantity > 1.25) {\r\n                        // CommonMethods.speckIt(bidlivedata.symbol + \" \" + (bidlivedata.totalBuyQuantity / bidlivedata.totalSellQuantity).toFixed(2) + \" time buying\");\r\n                        bidlivedata.highlightbuy = true;\r\n                    }\r\n\r\n                    if (bidlivedata.totalSellQuantity / bidlivedata.totalBuyQuantity > 1.25) {\r\n                        //  CommonMethods.speckIt(bidlivedata.symbol + \"  \" + (bidlivedata.totalSellQuantity / bidlivedata.totalBuyQuantity).toFixed(2) + \" time selling\");\r\n                        bidlivedata.highlightsell = true;\r\n                    }\r\n\r\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, bidlivedata], lastUpdateTime: resd.data.lastUpdateTime }, function () {\r\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList));\r\n                        window.document.title = \"Del: \" + this.state.liveBidsList[0].symbol;\r\n                    });\r\n\r\n\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 200));\r\n        }\r\n\r\n        // if(watchList.length == delData.length)\r\n        // console.log(\"delData\",  delData);\r\n\r\n    }\r\n\r\n    getDeliveryHistory = () => {\r\n\r\n\r\n        for (let index = 0; index < this.state.liveBidsList.length; index++) {\r\n            const element = this.state.liveBidsList[index];\r\n            AdminService.getDeliveryDataFromDb(element.symbol)\r\n                .then((res) => {\r\n                    let data = resolveResponse(res, \"noPop\");\r\n                    console.log(\"hist data\", data.result);\r\n                    if (data && data.result) {\r\n                        var result = data.result;\r\n                        element.delHistory = result;\r\n                        console.log(element.symbol, result);\r\n\r\n                        this.setState({ liveBidsList: this.state.liveBidsList });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    getByDateBidHistory = () => {\r\n        this.setState({ liveBidsList: []});\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        let allSymbol = []; \r\n        watchList.forEach(element => {\r\n            allSymbol.push( \"'\" + element.name+\"'\"); \r\n        });\r\n\r\n        AdminService.getBidDataFromDb(this.state.backDate,  allSymbol.join(','), allSymbol.length )\r\n            .then((res) => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                console.log(\"hist bidHistoty\",data.result);\r\n                \r\n                if (data && data.result) {\r\n                    var result = data.result;\r\n                \r\n                    for (let index = 0; index < result.length; index++) {\r\n                        const bidlivedata = result[index];\r\n                        \r\n                        let data = {\r\n                            quantityTraded : bidlivedata.quantityTraded,\r\n                            deliveryQuantity : bidlivedata.deliveryQuantity, \r\n                            totalBuyQuantity :  bidlivedata.totalBuyBid , \r\n                            totalSellQuantity : bidlivedata.totalSellBid, \r\n                            lastPrice : bidlivedata.ltp, \r\n                            pChange: bidlivedata.priceChangePer,\r\n                            symbol : bidlivedata.symbol,\r\n                            updatedTime :bidlivedata.updatedTime \r\n\r\n                        }\r\n\r\n    \r\n                        data.buytosellTime = bidlivedata.totalBuyBid / bidlivedata.totalSellBid;\r\n                        data.selltobuyTime = bidlivedata.totalSellBid / bidlivedata.totalBuyBid;\r\n    \r\n                        if (bidlivedata.totalBuyBid / bidlivedata.totalSellBid > 1.25) {\r\n                            data.highlightbuy = true;\r\n                        }\r\n    \r\n                        if (bidlivedata.totalSellBid / bidlivedata.totalBuyBid > 1.25) {\r\n                            data.highlightsell = true;\r\n                        }\r\n    \r\n                    \r\n                        this.setState({ liveBidsList: [...this.state.liveBidsList, data], lastUpdateTime: this.state.backDate }, function () {\r\n                           \r\n                            this.state.liveBidsList.sort(function (a, b) {\r\n                                return b.pChange - a.pChange;\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                    this.updatebidHistory(data.bidHistoty); \r\n                }\r\n            });\r\n    }\r\n\r\n    getBackUpDate = () => {\r\n        AdminService.getBackUpdateList()\r\n            .then((res) => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                console.log(data);\r\n                if (data && data.result) {\r\n\r\n                    let result = [];\r\n                    data.result.forEach(element => {\r\n                        if (element.dbUpdateTime) {\r\n                            result.push(moment(element.dbUpdateTime).format(\"YYYY-MM-DD HH:mm:ss\"));\r\n                        }\r\n                    });\r\n\r\n                    this.setState({ backupDateList: result }, function () {\r\n                       // console.log(\"dates\", this.state.backupDateList)\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n\r\n    convertToFloat = (str) => {\r\n        if (!isNaN(str)) {\r\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\r\n        }\r\n\r\n    }\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n    sortByColumn = (type) => {\r\n\r\n        this.state.liveBidsList.sort(function (a, b) {\r\n            return b[type] - a[type];\r\n        });\r\n\r\n        this.setState({ liveBidsList: this.state.liveBidsList, sortedType: type });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {window.location.hash === \"#/delivery\" ? <PostLoginNavBar /> : \"\"}\r\n\r\n\r\n                <Grid direction=\"row\" alignItems=\"center\" container>\r\n                     <Grid item xs={12} sm={12} >\r\n\r\n                        <Paper style={{ padding: \"10px\" }} >\r\n\r\n                            <Grid justify=\"space-between\"\r\n                                container spacing={1}>\r\n\r\n                                <Grid item xs={12} sm={4} >\r\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                        {this.state.selectedWatchlist} ({this.state.liveBidsList.length}) updated at {this.state.lastUpdateTime}\r\n                                    </Typography>\r\n\r\n                                    <span>Sorted By:  {this.state.sortedType} </span>\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={3} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkLiveBids()}>Refresh</Button>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={1} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.backupData()}>BackUp</Button>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={1} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Back Date</InputLabel>\r\n                                        <Select value={this.state.backDate} name=\"backDate\" onChange={this.onChangeBackDate}>\r\n                                            <MenuItem value={\"\"}>{\"Select Date\"}</MenuItem>\r\n                                            {this.state.backupDateList && this.state.backupDateList.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\r\n\r\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                    <TableRow variant=\"head\" >\r\n\r\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}>buyTosell</Button>  </TableCell>\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}>sellTobuy</Button>  </TableCell>\r\n\r\n\r\n\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalBuyQuantity\")}> Total Buy Quantity</Button>  </TableCell>\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalSellQuantity\")}> Total Sell Quantity</Button>  </TableCell>\r\n\r\n\r\n\r\n                                        <TableCell align=\"center\">Average Price</TableCell>\r\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell>\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\r\n                                        <TableCell align=\"center\" ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell>\r\n\r\n\r\n\r\n                                        {/* <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell>\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell> */}\r\n\r\n                                        {/* <TableCell  align=\"center\">Day Open</TableCell>\r\n                                        <TableCell  align=\"center\">Day High</TableCell>\r\n                                        <TableCell  align=\"center\">Day Low</TableCell>\r\n                                        <TableCell  align=\"center\">Previous Close</TableCell> */}\r\n\r\n\r\n                                        <TableCell align=\"center\" ><Button onClick={() => this.getDeliveryHistory()}>Delivery History</Button>  </TableCell>\r\n\r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n\r\n                                    {this.state.liveBidsList ? this.state.liveBidsList.map((row, i) => (\r\n                                        <TableRow hover key={i} style={{ background: this.getPercentageColor(row.pChange) }}>\r\n\r\n                                            <TableCell align=\"left\">{row.symbol} {row.lastPrice} ({row.pChange}%)</TableCell>\r\n                                            <TableCell style={{ background: row.highlightbuy ? \"lightgray\" : \"\" }} align=\"center\">\r\n                                              \r\n                                                {row.buytosellTime.toFixed(2)} time buy</TableCell>\r\n\r\n                                            <TableCell style={{ background: row.highlightsell ? \"lightgray\" : \"\" }} align=\"center\">\r\n                                             \r\n                                                {row.selltobuyTime.toFixed(2)} time sell</TableCell>\r\n\r\n                                     \r\n\r\n                                            <TableCell align=\"center\" style={{background: \"#eceff1\" }}>\r\n                                                    {row.buybidHistory &&  row.buybidHistory.map(item => (\r\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\r\n                                                    ))}\r\n                                                <br />\r\n                                                {row.totalBuyQuantity} {this.convertToFloat(row.totalBuyQuantity)}</TableCell>\r\n                                            <TableCell align=\"center\" style={{background: \"#eceff1\" }}>\r\n                                                    {row.sellbidHistory &&  row.sellbidHistory.map(item => (\r\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\r\n                                                    ))}\r\n                                                <br />\r\n                                                {row.totalSellQuantity} {this.convertToFloat(row.totalSellQuantity)}</TableCell>\r\n\r\n                                            <TableCell align=\"left\">{row.averagePrice}</TableCell>\r\n\r\n\r\n                                            <TableCell align=\"center\">{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell>\r\n                                            <TableCell align=\"center\">{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\r\n                                            <TableCell align=\"center\">{row.deliveryToTradedQuantity}%</TableCell>\r\n\r\n                                            {/* <TableCell align=\"center\">{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell>\r\n                                            <TableCell align=\"center\">{row.totalTradedValue}L</TableCell> */}\r\n\r\n                                            {/* <TableCell  align=\"center\">{row.open}</TableCell>\r\n                                    <TableCell  align=\"center\">{row.dayHigh}</TableCell>\r\n                                    <TableCell  align=\"center\">{row.dayLow}</TableCell>\r\n                                    <TableCell  align=\"center\">{row.previousClose}</TableCell> */}\r\n\r\n                                            <TableCell style={{ background: \"#eceff1\" }} align=\"center\">\r\n\r\n                                                {row.delHistory && row.delHistory.map(item => (\r\n                                                    <span> {new Date(item.datetime).toLocaleDateString()}  &nbsp;\r\n                                                        <span title={\"quantityTraded \" + item.quantityTraded}> {(item.quantityTraded / 100000).toFixed(2)}L  </span>  &nbsp;\r\n                                                        <span title={\"deliveryToTradedQuantity\"}> {item.deliveryToTradedQuantity}%  </span>  &nbsp;\r\n                                                        <span title={\"deliveryQuantity \" + item.deliveryQuantity}> {(item.deliveryQuantity / 100000).toFixed(2)}L  </span>  &nbsp;\r\n                                                        <span style={{ color: item.todayChange > 0 ? \"green\" : \"red\" }}> ({item.todayChange}%)   </span>\r\n                                                        &nbsp;  <br /></span>\r\n                                                ))}\r\n\r\n                                            </TableCell>\r\n\r\n\r\n                                        </TableRow>\r\n                                    )) : <Spinner />}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog';\r\nimport ChartMultiple from './ChartMultiple';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Parser from 'html-react-parser';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartMultiple from \"./LightChartMultiple\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createChart } from 'lightweight-charts';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist:  localStorage.getItem('clickedIndexName') ? localStorage.getItem('clickedIndexName') :  'NIFTY BANK',  //decodeURIComponent(window.location.href.split('?')[1].split('=')[1]),\r\n            totalStockToWatch: 0,\r\n            chartSize: 300, \r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            chartStaticData: [],\r\n            BBBlastType: \"BBStrongBreakout\",\r\n            qtyToTake: '',\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n            findlast5minMovement: [],\r\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\r\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n\r\n        window.document.title = \"Index Charts\";\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        this.setState({ totalStockToWatch: watchList && watchList.length });\r\n        // this.findlast5minMovement(); //one time only\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n\r\n        var tostartInteral = setInterval(() => {\r\n            var time = new Date();\r\n            //console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\r\n            if (time.getMinutes() % 10 === 0) {\r\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\r\n\r\n                setTimeout(() => {\r\n                    this.find10MinBBBlast();\r\n                }, 70000);\r\n                this.setState({\r\n                    stop10bbSearch:\r\n                        setInterval(() => {\r\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\r\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n                                this.find10MinBBBlast();\r\n                            }\r\n                        }, 60000 * 10 + 70000)\r\n                });\r\n\r\n                clearInterval(tostartInteral);\r\n            }\r\n        }, 1000);\r\n\r\n\r\n        this.find10MinBBBlast();\r\n\r\n    }\r\n\r\n\r\n    stopSearching = () => {\r\n        console.log(\"stop the search\")\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n\r\n    }\r\n\r\n\r\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        localStorage.setItem('candlePriceShow', ltp);\r\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //  clearInterval(this.state.findlast5minMovementInterval);\r\n        //        clearInterval(this.state.stop10bbSearch);\r\n        // clearInterval(this.state.scaninterval);\r\n        //  clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.findlast5minMovement(); //one time only\r\n            this.find10MinBBBlast();\r\n\r\n        });\r\n    }\r\n    shouldComponentUpdate(flag, nextProps, nextState) {\r\n        return flag //!equals(nextProps, this.props); // equals() is your implementation\r\n    }\r\n    onChangeQty = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    // startSearching = () => {\r\n\r\n    //     console.log(\"Starting the search\");\r\n\r\n    //     var beginningTime = moment('9:15am', 'h:mma');\r\n    //     var endTime = moment('3:30pm', 'h:mma');\r\n    //     const friday = 5; // for friday\r\n    //     var currentTime = moment(new Date(), \"h:mma\");\r\n    //     const today = moment().isoWeekday();\r\n    //     //market hours\r\n\r\n    //     if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n    //         var intervaltime = 60000;\r\n    //         if (this.state.totalStockToWatch > 180) {\r\n    //             intervaltime = this.state.totalStockToWatch * 333;\r\n    //         }\r\n    //       //  this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\r\n    //     }\r\n    // }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                return \"200:00:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                    return \"1000:00:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                    return \"1500:00:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                return \"2160:00:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"4320:00:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"8320:00:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"15000:00:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    calculateSMA =(data, count) => {\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getRSIBBString=(row)=>{\r\n        var str = ''; \r\n        if(row.BB){\r\n            if(row.ltp >= row.BB.upper){\r\n                str +=  '<span style=\"color:green\">BBupr:' + row.BB.upper+'</span>';\r\n            }else{\r\n                str += '<span style=\"color:red\">BBupr:' + row.BB.upper+'</span>';\r\n            }\r\n    \r\n            if(row.ltp <= row.BB.lower){\r\n                str +=  ' <span style=\"color:green\">BBlwr:' + row.BB.lower+'</span>';\r\n            }else{\r\n                str += ' <span style=\"color:red\">BBlwr:' + row.BB.lower+'</span>';\r\n            }\r\n        }\r\n       \r\n\r\n        str += \"<br/>RSI:\"; \r\n        row.RSI.forEach(element => {\r\n            if(element >= 60){\r\n                str +=  ' <span style=\"color:green\">' + element+'</span>';\r\n            }else if(element >= 40 && element <= 59){\r\n                str +=  ' <span style=\"color:black\">' + element+'</span>';\r\n            }else{\r\n                str += ' <span style=\"color:red\">' + element+'</span>';\r\n            }\r\n        });\r\n\r\n        return str; \r\n    }\r\n\r\n    createMultpleChart = (row) => {\r\n\r\n        var div = document.createElement(\"div\");\r\n        div.style.display = 'block';\r\n        div.style.padding = 10 + 'px';\r\n        div.style.marginLeft = 10 + 'px';\r\n        div.style.marginTop = 10 + 'px';\r\n        div.style.border =  \"2px solid \"+CommonOrderMethod.getPercentageColor(row.perChange);      \r\n\r\n        var legend = document.createElement('div');\r\n        //legend.className = 'sma-legend';\r\n        div.appendChild(legend);\r\n        legend.style.display = 'block';\r\n        legend.style.left = 3 + 'px';\r\n        legend.style.top = 3 + 'px';\r\n\r\n        if(row.perChange > 0){\r\n            legend.style.color = 'green';\r\n        }else{\r\n            legend.style.color = 'red';\r\n        }\r\n\r\n        legend.innerHTML = row.name + \" \" + row.ltp + \" (\"+ row.perChange +'%) <br />';\r\n\r\n\r\n        var legendTitle = document.createElement('div');\r\n        //legend.className = 'sma-legend';\r\n        div.appendChild(legendTitle);\r\n//        legendTitle.style.display = 'block';\r\n        legendTitle.style.fontSize = '10px';\r\n\r\n\r\n        //  const domElement = document.getElementById('tvchart');\r\n        //   document.getElementById('tvchart').innerHTML = '';\r\n\r\n\r\n        const chart = createChart(div, { width: this.state.chartSize, height: this.state.chartSize, timeVisible: true, secondsVisible: true });\r\n\r\n        \r\n        var candleSeries = chart.addCandlestickSeries({\r\n            upColor: 'green',\r\n            downColor: 'red',\r\n            borderDownColor: 'red',\r\n            borderUpColor: 'green',\r\n            wickDownColor: 'red',\r\n            wickUpColor: 'green',\r\n        });\r\n\r\n        candleSeries.setData(row.lightChartData);\r\n\r\n        var smaData = this.calculateSMA(row.lightChartData, 20);\r\n\t\tvar smaLine = chart.addLineSeries({\r\n\t\t\tcolor: 'rgba(4, 111, 232, 1)',\r\n\t\t\tlineWidth: 2,\r\n\t\t});\r\n\t\tsmaLine.setData(smaData);\r\n        \r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n        volumeSeries.setData(row.volumeSeriesData);\r\n        var legend = document.createElement('div');\r\n        //legend.className = 'sma-legend';\r\n        div.append(legend);\r\n        legend.style.display = 'block';\r\n\r\n        legend.innerHTML =  this.getRSIBBString(row); \r\n        document.getElementById(\"allchart\") && document.getElementById(\"allchart\").append(div);\r\n\r\n\r\n        chart.subscribeCrosshairMove((param) => {\r\n\r\n\t\t\tvar getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n\t\t\tvar string = \"\";\r\n\t\t\tvar change = \"\";\r\n\r\n\t\t\tfor (var elem of getit) {\r\n\r\n\t\t\t\t//console.log(elem);\r\n\t\t\t\tif (typeof elem[1] == 'object') {\r\n\t\t\t\t\tstring += \" O: <b>\" + elem[1].open + \"</b>\";\r\n\t\t\t\t\tstring += \" H: <b>\" + elem[1].high + \"</b>\";\r\n\t\t\t\t\tstring += \" L: <b>\" + elem[1].low + \"</b>\";\r\n\t\t\t\t\tstring += \" C: <b>\" + elem[1].close + \"</b>\";\r\n\t\t\t\t\tchange = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n\t\t\t\t\tstring += \" CH: <b>\" + change.toFixed(2) + '%</b><br />';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstring += \" \" + elem[1].toFixed(2) + \" \";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (param.time)\r\n\t\t\t\tstring += \" Time:<b> \" + new Date(param.time).toLocaleString()+ \"</b>\" ;\r\n\r\n\t\t\tvar str = \"<span style=color:green>\" + string + \"</span> \";\r\n\t\t\tif (change < 0)\r\n\t\t\t\tstr = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n             legendTitle.innerHTML = str;\r\n\t\t});\r\n    \r\n        this.sortTheChart(); \r\n    }\r\n\r\n    \r\n\r\n    sortTheChart =()=> {\r\n       \r\n        let allchart = document.getElementById(\"allchart\");\r\n        let createNewArray = []; \r\n        function getItem(name){\r\n                document.querySelector('#allchart').childNodes.forEach(function(e){\r\n                    if(e.innerText && e.innerText.split(' ')[0] == name){ \r\n                        console.log(\"item\",name, e.innerText.split(' ')[0], e)\r\n                        allchart.appendChild(e); \r\n                        createNewArray.push(e);   \r\n                     //   return e; \r\n                    }\r\n                }) \r\n        }\r\n\r\n        for (let index = 0; index < this.state.findlast5minMovement.length; index++) {\r\n            const element = this.state.findlast5minMovement[index];\r\n            let item = getItem(element.name); \r\n        }\r\n\r\n    }\r\n\r\n\r\n    updateToLocalStorage = (row) => {\r\n\r\n        let foundAt = new Date(row.foundAt).toLocaleString();\r\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\r\n        console.log(\"isfound\", isfound);\r\n        if (!isfound.length) {\r\n            var updateData = {\r\n                token: row.token,\r\n                foundAt: foundAt,\r\n                ltp: row.ltp,\r\n                symbol: row.symbol,\r\n                nc: row.perChange.toFixed(2),\r\n                orderType: row.orderType\r\n            }\r\n            this.state.fastMovementList.push(updateData);\r\n            //this.setState({ fastMovementList: [..., updateData] });\r\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\r\n            return true;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    find10MinBBBlast = async () => {\r\n       \r\n        if(document.getElementById(\"allchart\")){\r\n            document.getElementById(\"allchart\").innerHTML = ''\r\n        } \r\n\r\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        if (this.state.selectedWatchlist == \"gainerList\") {\r\n            watchList = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList'));\r\n        }\r\n        if (this.state.selectedWatchlist == \"looserList\") {\r\n            watchList = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList'));\r\n        }\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n        this.setState({ totalStockToWatch: watchList && watchList.length });\r\n\r\n\r\n        if (watchList && watchList.length) {\r\n            for (let index = 0; index < watchList.length; index++) {\r\n\r\n                this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\r\n\r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n                var time = moment.duration(\"1000:00:00\");  //22:00:00\" for last day  2hours  timeDuration\r\n                var startDate = moment(new Date()).subtract(timeDuration);\r\n\r\n                var data = {\r\n                    \"exchange\": watchList[index].exch_seg,\r\n                    \"symboltoken\": watchList[index].token,\r\n                    \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                    \"fromdate\": moment(startDate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    // console.log(\"candle history\", histdata);\r\n\r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var candleData = histdata.data;\r\n                        var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                        candleData.forEach((element, loopindex) => {\r\n\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n\r\n                            vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                            closeingData.push(element[4]);\r\n                            highData.push(element[2]);\r\n                            lowData.push(element[3]);\r\n                            openData.push(element[3]);\r\n                            valumeData.push(element[5]);\r\n                            bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                            volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n\r\n                        });\r\n\r\n                        // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\r\n\r\n                        var sma = SMA.calculate({ period: 20, values: closeingData });\r\n                        //   console.log(watchList[index].symbol, \"SMA\", sma);\r\n\r\n\r\n                        var inputRSI = { values: closeingData, period: 14 };\r\n                        var lastRsiValue = RSI.calculate(inputRSI);\r\n\r\n                        // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\r\n                        // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                        var inputVWAP = {\r\n                            open: openData,\r\n                            high: highData,\r\n                            low: lowData,\r\n                            close: closeingData,\r\n                            volume: valumeData\r\n                        };\r\n\r\n                        var input = {\r\n                            period: 20,\r\n                            values: bbdata,\r\n                            stdDev: 2\r\n\r\n                        }\r\n\r\n                        var bb = BollingerBands.calculate(input);\r\n\r\n                        var vwapdata = VWAP.calculate(inputVWAP);\r\n                        //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\r\n                      //  console.log(watchList[index].symbol, \"vwap daa\", VWAP.calculate(inputVWAP));\r\n\r\n                        var bbvlastvalue = bb[bb.length - 1];\r\n                        if (bbvlastvalue) {\r\n                            bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\r\n                            bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\r\n                            bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\r\n\r\n                        }\r\n\r\n                        const lightChartData = candleData.map(d => {\r\n                            return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                        });\r\n\r\n\r\n                        var dataltp = {\r\n                            \"exchange\": \"NSE\",\r\n                            \"tradingsymbol\": watchList[index].symbol,\r\n                            \"symboltoken\": watchList[index].token,\r\n                        }\r\n\r\n                        AdminService.getLTP(dataltp).then(res => {\r\n                            let data = resolveResponse(res, 'noPop');\r\n                            var LtpData = data && data.data;\r\n                            //console.log(LtpData);\r\n                            if (LtpData && LtpData.ltp) {\r\n                                let data = {\r\n                                    symbol: watchList[index].symbol,\r\n                                    token: watchList[index].token,\r\n                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                    RSI: lastRsiValue.slice(Math.max(lastRsiValue.length - 8, 1)),\r\n                                    valumeData: valumeData.slice(Math.max(valumeData.length - 8, 1)),\r\n                                    VWAP: vwapdata[vwapdata.length - 1], //vwap(vwapdata),\r\n                                    BB: bbvlastvalue,\r\n                                    candleChartData: candleChartData,\r\n                                    foundAt: candleData && new Date(candleData[candleData.length - 1][0]).toLocaleString(),\r\n                                    name: watchList[index].name,\r\n                                    lightChartData: lightChartData,\r\n                                    volumeSeriesData: volumeSeriesData\r\n                                }\r\n\r\n                                data.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\r\n                                data.ltp = LtpData.ltp;\r\n\r\n\r\n\r\n                                this.setState({ findlast5minMovement: [...this.state.findlast5minMovement, data] }, function(){\r\n                                  \r\n                                    this.state.findlast5minMovement && this.state.findlast5minMovement.sort(function (a, b) {\r\n                                        return b.perChange - a.perChange;\r\n                                    });\r\n                                    this.createMultpleChart(data);\r\n                                    \r\n                                });\r\n                                                                \r\n                              \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        console.log(watchList[index].symbol, \"  emply candle found\");\r\n                    }\r\n                })\r\n\r\n                await new Promise(r => setTimeout(r, 600));\r\n            }\r\n        } else {\r\n            Notify.showError(\"No Stock Found\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    callbackAfterOrderDone = (order) => {\r\n        // setValues({ ...values, ['buyFlag']: order.status });\r\n        // setValues({ ...values, ['sellFlag']:  order.status  });\r\n        //  this.setState({ [spineerId]: order.status}); \r\n        console.log(\"order executed\", order);\r\n    }\r\n\r\n\r\n\r\n    handleClick = (row, type, spinnerIndex) => {\r\n\r\n        console.log(row);\r\n        if (row.token && row.symbol) {\r\n            if (type == 'BUY') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake\r\n                }\r\n                console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n\r\n            }\r\n\r\n            if (type == 'SELL') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake\r\n                }\r\n                console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n            }\r\n        } else {\r\n            Notify.showError(\" Symbol Not found!!!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                 {window.location.hash === \"#/index-charts\" ? <PostLoginNavBar /> : \"\"}\r\n\r\n                <br />\r\n                <ChartDialog /> <ChartMultiple />\r\n\r\n                <Grid justify=\"space-between\"\r\n                    container spacing={1}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                            &nbsp; {this.state.selectedWatchlist} Stocks ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\r\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Chart Size</InputLabel>\r\n                            <Select value={this.state.chartSize} name=\"chartSize\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={250}>{'250px'}</MenuItem>\r\n                                <MenuItem value={300}>{'300px'}</MenuItem>\r\n                                <MenuItem value={350}>{'350px'}</MenuItem>\r\n                                <MenuItem value={450}>{'450px'}</MenuItem>\r\n                                <MenuItem value={550}>{'550px'}</MenuItem>\r\n                                <MenuItem value={650}>{'650px'}</MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={2} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={\"gainerList\"}>{\"Gainer List (\" +  this.state.gainerList.length +\")\"}</MenuItem>\r\n                                <MenuItem value={\"looserList\"}>{\"Looser List (\" +  this.state.looserList.length +\")\"}</MenuItem>\r\n\r\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                    <MenuItem value={element}>{element}</MenuItem>\r\n                                ))\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\r\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\r\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\r\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\r\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\r\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\r\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    \r\n                    {/* \r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\r\n       \r\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\r\n\r\n\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid> */}\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={2} style={{padding:'10px'}} id=\"allchart\" >\r\n\r\n\r\n                    {/* {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\r\n\r\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.name} {row.ltp} {row.perChange ? \"(\" + row.perChange + \"%\" + \")\" : \"\"} <span> &nbsp;&nbsp;  {row.foundAt}</span></Typography>\r\n\r\n                            \r\n                                {row.candleChartData.length > 0 ? <ReactApexChart\r\n                                    options={{\r\n                                        chart: {\r\n                                            type: 'candlestick',\r\n                                            height: 350\r\n                                          },\r\n                                          title: {\r\n                                            text: 'CandleStick Chart',\r\n                                            align: 'left'\r\n                                          },\r\n                                          xaxis: {\r\n                                            type: 'datetime',\r\n                                          },\r\n                                          yaxis: {\r\n                                            tooltip: {\r\n                                              enabled: true\r\n                                            }\r\n                                          }\r\n                                       \r\n                                    }}\r\n                                   \r\n                                    series={[{\r\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 100, 1))\r\n                                    },\r\n                                    ]}\r\n\r\n                                    type=\"candlestick\"\r\n                                    width={350}\r\n                                    height={250}\r\n\r\n                                /> : \"\"}\r\n\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n\r\n\r\n\r\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\r\n                                    </Grid> : \"\"}\r\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        VWAP:  {row.VWAP}\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={12} >\r\n                                        BB {row.BB ? <>\r\n                                            &nbsp; <span style={{ color: row.ltp >= row.BB && row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB && row.BB.upper}</span>\r\n                                            &nbsp; <span style={{ color: row.ltp >= row.BB.middle ? \"green\" : \"red\", fontWeight: \"bold\" }}>Middle: {row.BB && row.BB.middle}</span>\r\n                                            &nbsp; <span style={{ color: row.ltp <= row.BB && row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB && row.BB.lower}</span>\r\n\r\n                                        </> : \"\"}\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={12}>\r\n                                        RSI: {row.RSI.map((item, j) => (\r\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} </span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} </span>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12}>\r\n                                        Volume: {row.valumeData.map((item, j) => (\r\n                                            <span> {(item / 100000).toFixed(2)}L </span>\r\n                                        ))}\r\n                                    </Grid>\r\n\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n                                    <Grid item>\r\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <TextField style={{ marginTop: '-15px' }} label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item >\r\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n\r\n                    )) : ''} */}\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport OrderWatchlist from \"./OrderWatchlist\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {}\r\n})\r\n\r\n\r\n \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"visible\"}} onClick={handleClickOpen}>\r\n        Add to OW\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n    \r\n        <DialogContent dividers id=\"chart\">\r\n            <OrderWatchlist />\r\n      \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartMultiple from './ChartMultiple';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Parser from 'html-react-parser';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartMultiple from \"./LightChartMultiple\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createChart } from 'lightweight-charts';\r\nimport OrderWatchlistDialog from './OrderWatchlistDialog'\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist: localStorage.getItem('clickedIndexName') ? localStorage.getItem('clickedIndexName') : 'NIFTY BANK',  //decodeURIComponent(window.location.href.split('?')[1].split('=')[1]),\r\n            totalStockToWatch: 0,\r\n            chartSize: 300, \r\n            timeFrame: \"ONE_DAY\",\r\n            chartStaticData: [],\r\n            BBBlastType: \"BBStrongBreakout\",\r\n            qtyToTake: '',\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n            strongChartList: [],\r\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\r\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\r\n            sortBy: \"perChange\",\r\n            softedIndexList: [],\r\n            sluglist: {\r\n                'NIFTY 50': 'nifty',\r\n                'NIFTY AUTO': 'cnxAuto',\r\n                'NIFTY BANK': 'bankNifty',\r\n                'NIFTY ENERGY': 'cnxEnergy',\r\n                'NIFTY FIN SERVICE': 'cnxFinance',\r\n                'NIFTY FMCG': 'cnxFMCG',\r\n                'NIFTY IT': 'cnxit',\r\n                'NIFTY MEDIA': 'cnxMedia',\r\n                'NIFTY METAL': 'cnxMetal',\r\n                'NIFTY PHARMA': 'cnxPharma',\r\n                'NIFTY PSU BANK': 'cnxPSU',\r\n                'NIFTY REALTY': 'cnxRealty',\r\n                'NIFTY PVT BANK': 'niftyPvtBank',\r\n                'NIFTY CONSUMPTION': 'cnxConsumption',\r\n                'NIFTY CPSE': 'cpse',\r\n                'NIFTY INFRA': 'cnxInfra',\r\n                'NIFTY MNC': 'cnxMNC',\r\n                'NIFTY PSE': 'cnxPSE',\r\n            },\r\n\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n\r\n        window.document.title = \"Index Charts\";\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        this.setState({ totalStockToWatch: watchList && watchList.length });\r\n        // this.strongChartList(); //one time only\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n\r\n    // var tostartInteral = setInterval(() => {\r\n    //     var time = new Date();\r\n    //     //console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\r\n    //     if (time.getMinutes() % 10 === 0) {\r\n    //         //  console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\r\n\r\n    //         setTimeout(() => {\r\n    //             this.findStrongCharts();\r\n    //         }, 70000);\r\n    //         this.setState({\r\n    //             stop10bbSearch:\r\n    //                 setInterval(() => {\r\n    //                     console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\r\n    //                     if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n    //                         this.findStrongCharts();\r\n    //                     }\r\n    //                 }, 60000 * 10 + 70000)\r\n    //         });\r\n\r\n    //         clearInterval(tostartInteral);\r\n    //     }\r\n    // }, 1000);\r\n\r\n\r\n      //  this.getUpdateIndexData()\r\n        //  this.findStrongCharts();\r\n\r\n\r\n    }\r\n\r\n\r\n    stopSearching = () => {\r\n        //console.log(\"stop the search\")\r\n        clearInterval(this.state.strongChartListInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n        this.setState({ stopChart: true })\r\n\r\n\r\n    }\r\n\r\n\r\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        localStorage.setItem('candlePriceShow', ltp);\r\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //  clearInterval(this.state.strongChartListInterval);\r\n        //        clearInterval(this.state.stop10bbSearch);\r\n        // clearInterval(this.state.scaninterval);\r\n        //  clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        clearInterval(this.state.strongChartListInterval);\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.strongChartList(); //one time only\r\n            this.findStrongCharts();\r\n\r\n        });\r\n    }\r\n    shouldComponentUpdate(flag, nextProps, nextState) {\r\n        return flag //!equals(nextProps, this.props); // equals() is your implementation\r\n    }\r\n    onChangeQty = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    // startSearching = () => {\r\n\r\n    //     console.log(\"Starting the search\");\r\n\r\n    //     var beginningTime = moment('9:15am', 'h:mma');\r\n    //     var endTime = moment('3:30pm', 'h:mma');\r\n    //     const friday = 5; // for friday\r\n    //     var currentTime = moment(new Date(), \"h:mma\");\r\n    //     const today = moment().isoWeekday();\r\n    //     //market hours\r\n\r\n    //     if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n    //         var intervaltime = 60000;\r\n    //         if (this.state.totalStockToWatch > 180) {\r\n    //             intervaltime = this.state.totalStockToWatch * 333;\r\n    //         }\r\n    //       //  this.setState({ strongChartListInterval: setInterval(() => { this.strongChartList(); }, intervaltime) });\r\n    //     }\r\n    // }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                return \"200:00:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                return \"1500:00:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                return \"2160:00:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"4320:00:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"8320:00:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"15000:00:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    calculateSMA = (data, count) => {\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getRSIBBString = (row) => {\r\n        var str = '';\r\n\r\n        if (row.BB) {\r\n            if (row.ltp >= row.BB.upper) {\r\n                str += '<span style=\"color:green\">BBupr:' + row.BB.upper + '</span>';\r\n            } else {\r\n                str += '<span style=\"color:red\">BBupr:' + row.BB.upper + '</span>';\r\n            }\r\n\r\n            if (row.ltp <= row.BB.lower) {\r\n                str += ' <span style=\"color:green\">BBlwr:' + row.BB.lower + '</span>';\r\n            } else {\r\n                str += ' <span style=\"color:red\">BBlwr:' + row.BB.lower + '</span>';\r\n            }\r\n        }\r\n\r\n\r\n        str += \"<br/>RSI:\";\r\n        row.RSI.forEach(element => {\r\n            if (element >= 60) {\r\n                str += ' <span style=\"color:green\">' + element + '</span>';\r\n            } else if (element >= 40 && element <= 59) {\r\n                str += ' <span style=\"color:black\">' + element + '</span>';\r\n            } else {\r\n                str += ' <span style=\"color:red\">' + element + '</span>';\r\n            }\r\n        });\r\n\r\n        return str;\r\n    }\r\n\r\n    createMultpleChart = (row) => {\r\n\r\n        var div = document.createElement(\"div\");\r\n        div.style.display = 'block';\r\n        div.style.padding = 10 + 'px';\r\n        div.style.marginLeft = 10 + 'px';\r\n        div.style.marginTop = 10 + 'px';\r\n        div.style.border = \"2px solid \" + CommonOrderMethod.getPercentageColor(row.perChange);\r\n\r\n        var legend = document.createElement('div');\r\n        //legend.className = 'sma-legend';\r\n        div.appendChild(legend);\r\n        legend.style.display = 'block';\r\n        legend.style.left = 3 + 'px';\r\n        legend.style.top = 3 + 'px';\r\n\r\n        if (row.perChange > 0) {\r\n            legend.style.color = 'green';\r\n        } else {\r\n            legend.style.color = 'red';\r\n        }\r\n\r\n\r\n        let str = row.name + \" \" + row.ltp + \" (<b>\" + row.perChange + '%</b>)  &nbsp;&nbsp; <b title=\"previous volume broken count\" >VBC:  ' + row.candleVolBrokenCount + ' </b><br />';\r\n\r\n        str += '<span style=\"color:black\">Emotions: </span> ';\r\n        if (row.strongPer) {\r\n            if (row.strongPer >= 75) {\r\n                str += '<span style=\"color:green\"><b>Buying :' + row.strongPer.toFixed(2) + '%</b></span>';\r\n            } else {\r\n                str += '<span  style=\"color:black\">Buying:' + row.strongPer.toFixed(2) + '% </span>';\r\n            }\r\n        }\r\n\r\n        if (row.strongPer) {\r\n            if (row.strongPer <= 25) {\r\n                str += '<span style=\"color:red\"><b> Selling :' + (100 - row.strongPer).toFixed(2) + '%</b></span>';\r\n            } else {\r\n                str += '<span  style=\"color:black\"> Selling:' + (100 - row.strongPer).toFixed(2) + '%</span>';\r\n            }\r\n        }\r\n\r\n        str += '<br />';\r\n        legend.innerHTML = str;\r\n\r\n        var legendTitle = document.createElement('div');\r\n        //legend.className = 'sma-legend';\r\n        div.appendChild(legendTitle);\r\n        //        legendTitle.style.display = 'block';\r\n        legendTitle.style.fontSize = '10px';\r\n\r\n\r\n        //  const domElement = document.getElementById('tvchart');\r\n        //   document.getElementById('tvchart').innerHTML = '';\r\n\r\n\r\n        const chart = createChart(div, { width: this.state.chartSize, height: this.state.chartSize, timeVisible: true, secondsVisible: true });\r\n\r\n        var candleSeries = chart.addCandlestickSeries({\r\n            upColor: 'green',\r\n            downColor: 'red',\r\n            borderDownColor: 'red',\r\n            borderUpColor: 'green',\r\n            wickDownColor: 'red',\r\n            wickUpColor: 'green',\r\n        });\r\n\r\n        candleSeries.setData(row.lightChartData);\r\n\r\n        var smaData = this.calculateSMA(row.lightChartData, 20);\r\n        var smaLine = chart.addLineSeries({\r\n            color: 'rgba(4, 111, 232, 1)',\r\n            lineWidth: 2,\r\n        });\r\n        smaLine.setData(smaData);\r\n\r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n        volumeSeries.setData(row.volumeSeriesData);\r\n        var legend = document.createElement('div');\r\n        //legend.className = 'sma-legend';\r\n        div.append(legend);\r\n        legend.style.display = 'block';\r\n\r\n        legend.innerHTML = this.getRSIBBString(row);\r\n        document.getElementById(\"allchart\") && document.getElementById(\"allchart\").append(div);\r\n\r\n\r\n        chart.subscribeCrosshairMove((param) => {\r\n\r\n            var getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n            var string = \"\";\r\n            var change = \"\";\r\n\r\n            for (var elem of getit) {\r\n\r\n                //console.log(elem);\r\n                if (typeof elem[1] == 'object') {\r\n                    string += \" O: <b>\" + elem[1].open + \"</b>\";\r\n                    string += \" H: <b>\" + elem[1].high + \"</b>\";\r\n                    string += \" L: <b>\" + elem[1].low + \"</b>\";\r\n                    string += \" C: <b>\" + elem[1].close + \"</b>\";\r\n                    change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n                    string += \" CH: <b>\" + change.toFixed(2) + '%</b><br />';\r\n                } else {\r\n                    string += \" \" + elem[1].toFixed(2) + \" \";\r\n                }\r\n            }\r\n\r\n            if (param.time)\r\n                string += \" Time:<b> \" + moment(param.time).format(\"DD-MM-YYYY hh:mm A\") + \"</b>\";\r\n\r\n            var str = \"<span style=color:green>\" + string + \"</span> \";\r\n            if (change < 0)\r\n                str = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n            legendTitle.innerHTML = str;\r\n        });\r\n\r\n        //  this.sortTheChart(); \r\n    }\r\n\r\n\r\n\r\n    sortTheChart = () => {\r\n\r\n        let allchart = document.getElementById(\"allchart\");\r\n        let createNewArray = [];\r\n        function getItem(name) {\r\n            document.querySelector('#allchart').childNodes.forEach(function (e) {\r\n                if (e.innerText && e.innerText.split(' ')[0] == name) {\r\n                    //   console.log(\"item\",name, e.innerText.split(' ')[0], e)\r\n                    allchart.appendChild(e);\r\n                    createNewArray.push(e);\r\n                    //   return e; \r\n                }\r\n            })\r\n        }\r\n\r\n        for (let index = 0; index < this.state.strongChartList.length; index++) {\r\n            const element = this.state.strongChartList[index];\r\n            let item = getItem(element.name);\r\n        }\r\n\r\n    }\r\n\r\n    shortByVolume = (type, emotions) => {\r\n\r\n        this.state.strongChartList.sort(function (a, b) {\r\n            if (emotions === 'selling')\r\n                return a[type] - b[type];\r\n            else\r\n                return b[type] - a[type];\r\n        });\r\n\r\n        this.setState({ strongChartList: this.state.strongChartList, sortBy: type }, function () {\r\n            if (document.getElementById(\"allchart\")) {\r\n                document.getElementById(\"allchart\").innerHTML = ''\r\n            }\r\n            for (let index = 0; index < this.state.strongChartList.length; index++) {\r\n                const element = this.state.strongChartList[index];\r\n                this.createMultpleChart(element);\r\n            }\r\n        })\r\n\r\n        if (type === 'strongPer' && emotions === 'selling') {\r\n            this.setState({ sortBy: \"Selling%\" })\r\n        } else if (type === 'strongPer') {\r\n            this.setState({ sortBy: \"Buying%\" })\r\n        }\r\n\r\n        this.setState({ filterByCount: this.state.strongChartList.length + ' Stocks Found' })\r\n    }\r\n\r\n    getUpdateIndexData = () => {\r\n        this.setState({ softedIndexList: [] })\r\n        AdminService.allIndicesDirectJSON()\r\n            .then((res) => {\r\n\r\n                if (res.data) {\r\n\r\n                    var softedData = res.data && res.data.data;\r\n                    softedData.sort(function (a, b) {\r\n                        return b.percChange - a.percChange;\r\n                    });\r\n\r\n                    for (let index = 0; index < softedData.length; index++) {\r\n                        const element = softedData[index];\r\n                        var slugName = this.state.sluglist[element.indexName];\r\n                        if (slugName) {\r\n                            this.setState({ softedIndexList: [...this.state.softedIndexList, element] }, () => {\r\n\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    this.findStrongCharts()\r\n                }\r\n            })\r\n            .catch((reject) => {\r\n                // Notify.showError(\"All Indices API Failed\");\r\n            }).finally((ok) => {\r\n            })\r\n    }\r\n\r\n    filterByVolumePrice = (type) => {\r\n\r\n        if (document.getElementById(\"allchart\")) {\r\n            document.getElementById(\"allchart\").innerHTML = ''\r\n        }\r\n\r\n        let filteredList = [];\r\n\r\n        for (let index = 0; index < this.state.strongChartList.length; index++) {\r\n            const element = this.state.strongChartList[index];\r\n            let candledata = element.candleChartData;\r\n            if (element.candleChartData.length >= 1) {\r\n                let lastCandle = candledata[candledata.length - 1];\r\n                if (lastCandle)\r\n                    var lastCanPrs = (lastCandle[4] - lastCandle[1]) * 100 / lastCandle[1];\r\n                let secondCandle = candledata[candledata.length - 2];\r\n                if (secondCandle)\r\n                    var secondCandlePer = (secondCandle[4] - secondCandle[1]) * 100 / secondCandle[1];\r\n                // this.state.timeFrame\r\n\r\n                if (type === 'Buy V+P') {\r\n                    console.log(\"Buy V+P section\")\r\n                    if (element.candleVolBrokenCount > 9 && (lastCanPrs >= 0.5)) {  //|| secondCandlePer  >= 0.3\r\n                        filteredList.push(element);\r\n                        console.log(element.name, element.candleVolBrokenCount, lastCanPrs, secondCandlePer);\r\n                    }\r\n                }\r\n\r\n                if (type === 'Sell V+P') {\r\n                    console.log(\"Sell V+P section\", lastCanPrs)\r\n\r\n                    if (element.candleVolBrokenCount > 9 && (lastCanPrs <= -0.5)) { // || secondCandlePer  <= -0.3\r\n                        filteredList.push(element);\r\n                        console.log(element.name, type, element.candleVolBrokenCount, lastCanPrs, secondCandlePer);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log(\"filteredList\", filteredList)\r\n\r\n\r\n        // this.setState({ strongChartList:filteredList, sortBy: type }, function () { \r\n        //     for (let index = 0; index < this.state.strongChartList.length; index++) {\r\n        //         const element = this.state.strongChartList[index];\r\n        //         this.createMultpleChart(element);\r\n        //     }\r\n        // })\r\n\r\n\r\n        for (let index = 0; index < filteredList.length; index++) {\r\n            const element = filteredList[index];\r\n            this.createMultpleChart(element);\r\n        }\r\n        this.setState({ filterBy: type, filterByCount: filteredList.length + ' Stocks Found' })\r\n\r\n\r\n    }\r\n\r\n\r\n    updateToLocalStorage = (row) => {\r\n\r\n        let foundAt = new Date(row.foundAt).toLocaleString();\r\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\r\n        //  console.log(\"isfound\", isfound);\r\n        if (!isfound.length) {\r\n            var updateData = {\r\n                token: row.token,\r\n                foundAt: foundAt,\r\n                ltp: row.ltp,\r\n                symbol: row.symbol,\r\n                nc: row.perChange.toFixed(2),\r\n                orderType: row.orderType\r\n            }\r\n            this.state.fastMovementList.push(updateData);\r\n            //this.setState({ fastMovementList: [..., updateData] });\r\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\r\n            return true;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    findStrongCharts = async () => {\r\n\r\n        if (document.getElementById(\"allchart\")) {\r\n            document.getElementById(\"allchart\").innerHTML = ''\r\n        }\r\n\r\n        this.setState({ strongChartListUpdate: '', strongChartList: [] });\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        if (this.state.selectedWatchlist == \"gainerList\") {\r\n            watchList = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList'));\r\n        }\r\n        if (this.state.selectedWatchlist == \"looserList\") {\r\n            watchList = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList'));\r\n        }\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n        this.setState({ totalStockToWatch: watchList && watchList.length, stopChart: false });\r\n\r\n        console.log(\"select wathlist\", watchList)\r\n\r\n        if (watchList && watchList.length) {\r\n            for (let index = 0; index < watchList.length; index++) {\r\n\r\n                this.setState({ strongChartListUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\r\n\r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n                var time = moment.duration(\"1000:00:00\");  //22:00:00\" for last day  2hours  timeDuration\r\n                var startDate = moment(new Date()).subtract(timeDuration);\r\n\r\n                if (this.state.stopChart) {\r\n                    break;\r\n                }\r\n\r\n                var data = {\r\n                    \"exchange\": watchList[index].exch_seg,\r\n                    \"symboltoken\": watchList[index].token,\r\n                    \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                    \"fromdate\": moment(startDate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    // console.log(\"candle history\", histdata);\r\n\r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var candleData = histdata.data;\r\n                        var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n\r\n\r\n                        let lastCandle = candleData[candleData.length - 1];\r\n                        let changePer = (lastCandle[4] - lastCandle[1]) * 100 / lastCandle[1];\r\n                        let candleDistance = lastCandle[2] - lastCandle[3]; //high - low\r\n                        let strongPer = ((lastCandle[4] - lastCandle[3]) * 100) / candleDistance; // close-low*100/distance \r\n                        //                        console.log(watchList[index].symbol, candleData[candleData.length - 1], strongPer);\r\n\r\n                        if (true) {   //changePer >= 0.3 ||  changePer <= -0.3\r\n                            candleData.forEach((element, loopindex) => {\r\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                                closeingData.push(element[4]);\r\n                                highData.push(element[2]);\r\n                                lowData.push(element[3]);\r\n                                openData.push(element[3]);\r\n                                valumeData.push(element[5]);\r\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                                volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n                            });\r\n\r\n                            var sma = SMA.calculate({ period: 20, values: closeingData });\r\n\r\n                            var inputRSI = { values: closeingData, period: 14 };\r\n                            var lastRsiValue = RSI.calculate(inputRSI);\r\n\r\n                            var inputVWAP = {\r\n                                open: openData,\r\n                                high: highData,\r\n                                low: lowData,\r\n                                close: closeingData,\r\n                                volume: valumeData\r\n                            };\r\n\r\n                            var input = {\r\n                                period: 20,\r\n                                values: bbdata,\r\n                                stdDev: 2\r\n\r\n                            }\r\n                            var bb = BollingerBands.calculate(input);\r\n                            var vwapdata = VWAP.calculate(inputVWAP);\r\n                            var bbvlastvalue = bb[bb.length - 1];\r\n                            if (bbvlastvalue) {\r\n                                bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\r\n                                bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\r\n                                bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\r\n\r\n                            }\r\n\r\n                            const lightChartData = candleData.map(d => {\r\n                                return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                            });\r\n\r\n                            let candleVolBrokenCount = 0, lastVol = valumeData[valumeData.length - 1];\r\n                            if (valumeData && valumeData.length) {\r\n                                valumeData.reverse();\r\n                                for (let indexVol = 1; indexVol < valumeData.length; indexVol++) {\r\n                                    const volelement = valumeData[indexVol];\r\n                                    if (volelement < lastVol) {\r\n                                        candleVolBrokenCount++;\r\n                                    } else {\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            //  console.log(watchList[index].symbol, candleVolBrokenCount)\r\n\r\n\r\n                            var dataltp = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"tradingsymbol\": watchList[index].symbol,\r\n                                \"symboltoken\": watchList[index].token,\r\n                            }\r\n\r\n                            AdminService.getLTP(dataltp).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                var LtpData = data && data.data;\r\n                                //console.log(LtpData);\r\n                                if (LtpData && LtpData.ltp) {\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue.slice(Math.max(lastRsiValue.length - 8, 1)),\r\n                                        valumeData: valumeData.slice(Math.max(valumeData.length - 8, 1)),\r\n                                        VWAP: vwapdata[vwapdata.length - 1], //vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        foundAt: candleData && new Date(candleData[candleData.length - 1][0]).toLocaleString(),\r\n                                        name: watchList[index].name, //index+1 +'. '+ \r\n                                        lightChartData: lightChartData,\r\n                                        volumeSeriesData: volumeSeriesData,\r\n                                        strongPer: strongPer,\r\n                                        candleVolBrokenCount: candleVolBrokenCount\r\n                                    }\r\n\r\n\r\n\r\n                                    data.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\r\n                                    data.ltp = LtpData.ltp;\r\n                                    let sortBy = this.state.sortBy;\r\n\r\n                                    this.setState({ strongChartList: [...this.state.strongChartList, data] }, function () {\r\n\r\n                                        this.state.strongChartList && this.state.strongChartList.sort(function (a, b) {\r\n                                            return b[sortBy] - a[sortBy];\r\n                                        });\r\n\r\n                                        this.createMultpleChart(data);\r\n\r\n                                    });\r\n\r\n\r\n                                }\r\n                            });\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        console.log(watchList[index].symbol, \"  emply candle found\");\r\n                    }\r\n                })\r\n\r\n                await new Promise(r => setTimeout(r, 600));\r\n            }\r\n        } else {\r\n            Notify.showError(\"No Stock Found\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    callbackAfterOrderDone = (order) => {\r\n        // setValues({ ...values, ['buyFlag']: order.status });\r\n        // setValues({ ...values, ['sellFlag']:  order.status  });\r\n        //  this.setState({ [spineerId]: order.status}); \r\n        console.log(\"order executed\", order);\r\n    }\r\n\r\n\r\n\r\n    handleClick = (row, type, spinnerIndex) => {\r\n\r\n        //   console.log(row);\r\n        if (row.token && row.symbol) {\r\n            if (type == 'BUY') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake\r\n                }\r\n                //   console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n\r\n            }\r\n\r\n            if (type == 'SELL') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake\r\n                }\r\n                //   console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n            }\r\n        } else {\r\n            Notify.showError(\" Symbol Not found!!!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <PostLoginNavBar />\r\n\r\n                <br />\r\n\r\n                <Grid justify=\"space-between\"\r\n                    container spacing={1}>\r\n                   \r\n\r\n\r\n                    <Grid item xs={12} sm={5} >\r\n\r\n                        <Typography color=\"primary\" >\r\n                            &nbsp; {this.state.selectedWatchlist} ({this.state.strongChartList && this.state.strongChartList.length})\r\n                            &nbsp; Sorted: <span style={{ color: 'blue' }}>{this.state.sortBy} </span>\r\n                            &nbsp; Filter: <span style={{ color: 'blue' }}>{this.state.filterBy} </span>\r\n                            <span id=\"stockTesting\" style={{ color: 'gray' }}> {this.state.strongChartListUpdate} </span>\r\n\r\n\r\n                        </Typography>\r\n\r\n\r\n                        <Button style={{ marginRight: '20px' }} onClick={() => this.shortByVolume('perChange')}>Chng%</Button>\r\n                        <Button title='previous volume broken count' style={{ marginRight: '20px' }} onClick={() => this.shortByVolume('candleVolBrokenCount')}>VBC</Button>\r\n\r\n                        <Button title='Emotions: Buying%' style={{ marginRight: '20px' }} onClick={() => this.shortByVolume('strongPer')}>Buying%</Button>\r\n                        <Button title='Emotions: Selling%' style={{ marginRight: '20px' }} onClick={() => this.shortByVolume('strongPer', 'selling')}>Selling%</Button>\r\n\r\n\r\n                        <Button title=' 9 or more candles volume with price >= 0.3 breakout ' style={{ marginRight: '20px' }} onClick={() => this.filterByVolumePrice('Buy V+P')}>Buy V+P</Button>\r\n                        <Button title=' 9 or more candles volume with price <= -0.3 breakout ' style={{ marginRight: '20px' }} onClick={() => this.filterByVolumePrice('Sell V+P')}>Sell V+P</Button>\r\n\r\n                        <span style={{ fontStyle: 'italic', fontSize: 'smaller', color: 'gray' }}>{this.state.filterByCount}</span>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <OrderWatchlistDialog />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Chart Size</InputLabel>\r\n                            <Select value={this.state.chartSize} name=\"chartSize\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={250}>{'250px'}</MenuItem>\r\n                                <MenuItem value={300}>{'300px'}</MenuItem>\r\n                                <MenuItem value={350}>{'350px'}</MenuItem>\r\n                                <MenuItem value={450}>{'450px'}</MenuItem>\r\n                                <MenuItem value={550}>{'550px'}</MenuItem>\r\n                                <MenuItem value={650}>{'650px'}</MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={2} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={\"gainerList\"}>{\"Gainer List (\" + this.state.gainerList.length + \")\"}</MenuItem>\r\n                                <MenuItem value={\"looserList\"}>{\"Looser List (\" + this.state.looserList.length + \")\"}</MenuItem>\r\n\r\n                                {/* <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem> */}\r\n                                {this.state.softedIndexList && this.state.softedIndexList.map(element => (\r\n                                    <MenuItem style={{ color: element.percChange > 0 ? \"green\" : \"red\" }} value={element.indexName}>{element.indexName} ({element.percChange}%)</MenuItem>\r\n                                ))\r\n                                }\r\n\r\n                                {\r\n                                    this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                        <MenuItem value={element}>{element}</MenuItem>\r\n                                    ))\r\n                                }\r\n                                <MenuItem value={\"Securities in F&O\"}>{\"Securities in F&O\"}</MenuItem>\r\n\r\n                            </Select>\r\n\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\r\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\r\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\r\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\r\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\r\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\r\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    {/* \r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\r\n       \r\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\r\n\r\n\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid> */}\r\n\r\n                    <Grid item xs={12} sm={2} >\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.getUpdateIndexData()}>Start</Button>\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n                <Grid container spacing={2} style={{ padding: '10px' }} id=\"allchart\" >\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\n\r\nimport LineChart from \"./LineChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\nimport DeliveryData from \"./DeliveryData\";\r\nimport IndexCharts from \"./IndexCharts\";\r\nimport StrongCharts from \"./StrongCharts\";\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {}\r\n})\r\n\r\n\r\n  //console.log('props.indexName',props)\r\n \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"fullModelId\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\r\n        Chart \r\n      </Button>\r\n      <Dialog fullScreen onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} onClick={handleClose}>\r\n        <Button fullWidth={true} autoFocus onClick={handleClose} color=\"primary\">\r\n            {localStorage.getItem('clickedIndexName') } {localStorage.getItem('clickedIndexType')}\r\n         </Button>\r\n        \r\n         \r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"chart\">\r\n\r\n            {localStorage.getItem('clickedIndexType') == 'Charts' ?  <StrongCharts /> : <DeliveryData /> }\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPackLoaded } from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport \"./ViewStyle.css\";\r\nimport MyDialog from './MyDialog'\r\nimport Notify from \"../../utils/Notify\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport pako from 'pako';\r\nimport { w3cwebsocket } from 'websocket';\r\nimport ChartDialog from './ChartDialog';\r\nimport LightChartDialog from './LightChartDialog';\r\nimport LineChart from \"./LineChart\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport vwap from 'vwap';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport FullModel from './FullModel';\r\n\r\n\r\n\r\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n\r\nclass MyView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // sectorList: [],\r\n            sluglist: {\r\n                'NIFTY 50': 'nifty',\r\n                'NIFTY AUTO': 'cnxAuto',\r\n                'NIFTY BANK': 'bankNifty',\r\n                'NIFTY ENERGY': 'cnxEnergy',\r\n                'NIFTY FIN SERVICE': 'cnxFinance',\r\n                'NIFTY FMCG': 'cnxFMCG',\r\n                'NIFTY IT': 'cnxit',\r\n                'NIFTY MEDIA': 'cnxMedia',\r\n                'NIFTY METAL': 'cnxMetal',\r\n                'NIFTY PHARMA': 'cnxPharma',\r\n                'NIFTY PSU BANK': 'cnxPSU',\r\n                'NIFTY REALTY': 'cnxRealty',\r\n                'NIFTY PVT BANK': 'niftyPvtBank',\r\n                'NIFTY CONSUMPTION': 'cnxConsumption',\r\n                'NIFTY CPSE': 'cpse',\r\n                'NIFTY INFRA': 'cnxInfra',\r\n                'NIFTY MNC': 'cnxMNC',\r\n                'NIFTY PSE': 'cnxPSE',\r\n\r\n                //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\r\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\r\n                // 'NIFTY GROWSECT 15': 'ni15',H\r\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\r\n                // 'NIFTY SERV SECTOR': 'cnxService',\r\n                // 'NIFTY100 LIQ 15': 'nseliquid',\r\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\r\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\r\n                // 'NIFTY50 VALUE 20': 'nv20',\r\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\r\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\r\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\r\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\r\n                // 'NIFTY NEXT 50': 'juniorNifty',\r\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\r\n            },\r\n            stopnview: '',\r\n            indexTimeStamp: '',\r\n            refreshFlag: true,\r\n            topGLCount: 0,\r\n            refreshFlagCandle: true,\r\n            switchToListViewFlag: true,\r\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || [],\r\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\r\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\r\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\r\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\r\n            timeFrame: \"FIFTEEN_MINUTE\"\r\n\r\n        }\r\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.location.reload(); \r\n\r\n        window.document.title = \"Hit Map2\";\r\n\r\n\r\n        this.loadIndexesList();\r\n\r\n\r\n        var tokens = localStorage.getItem(\"userTokens\") && JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n        var userProfile = localStorage.getItem(\"userProfile\") && JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n\r\n            wsClintSectorUpdate.onopen = (res) => {\r\n                // this.makeConnection();\r\n                // this.updateSocketWatch();\r\n            }\r\n\r\n\r\n            wsClintSectorUpdate.onmessage = (message) => {\r\n                var decoded = window.atob(message.data);\r\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n                var liveData = JSON.parse(data);\r\n\r\n                //  console.log(\"sector live data\", liveData);\r\n                window.document.title = \"Sector Live WS: \" + liveData.length;\r\n\r\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n\r\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\r\n                        var foundLive = liveData.filter(row => row.tk == element.token);\r\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\r\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\r\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\r\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\r\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\r\n\r\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.setState({ sectorList: this.state.sectorList });\r\n                // this.setState({ sectorList: sectorList });\r\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\r\n\r\n                // if(index){\r\n                //     this.state.sectorList.forEach((element, i) => {\r\n                //         if(element.index == index){\r\n                //             this.state.sectorList[i].stockList = sectorUpdate; \r\n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \r\n                //             this.setState({ sectorList: this.state.sectorList  });\r\n                //             return; \r\n                //         }\r\n                //     });\r\n                // }\r\n            }\r\n\r\n            wsClintSectorUpdate.onerror = (e) => {\r\n                console.log(\"socket error\", e);\r\n                window.location.reload();\r\n            }\r\n\r\n            // setInterval(() => {\r\n            //     this.makeConnection();\r\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\r\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\r\n            //     wsClintSectorUpdate.send(_req);\r\n            // }, 59000);\r\n\r\n            setInterval(() => {\r\n                this.loadIndexesList();\r\n            }, 120000);\r\n\r\n\r\n\r\n        } else {\r\n            // wsClintSectorUpdate.close();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n        AdminService.retrieveOrderBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if (data && data.data) {\r\n                    var orderlist = data.data;\r\n                    orderlist.sort(function (a, b) {\r\n                        return new Date(b.updatetime) - new Date(a.updatetime);\r\n                    });\r\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    updateTokenSymbol = (gainerList) => {\r\n\r\n        var gainerList = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [];\r\n\r\n        for (let index = 0; index < gainerList.length; index++) {\r\n            const element = gainerList[index];\r\n\r\n\r\n\r\n            if(!element.token && !element.symbol){\r\n                AdminService.autoCompleteSearch(element.name).then(searchRes => {\r\n                    let searchResdata = searchRes.data;\r\n                    if (searchResdata.length) {\r\n                        var uppercaseNameEQ = element.name.toUpperCase() + \"-EQ\";\r\n                        var uppercaseNameBE = element.name.toUpperCase() + \"-BE\";\r\n                        var found = searchResdata.filter(row => row.name === element.name && (row.symbol === uppercaseNameEQ || row.symbol === uppercaseNameBE));\r\n                        if (found.length) {\r\n                            element.symbol = found[0].symbol;\r\n                            element.token = found[0].token;\r\n                            element.exch_seg = found[0].exch_seg; \r\n                            localStorage.setItem('gainerList', JSON.stringify(gainerList));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        var looserList = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [];\r\n\r\n        for (let index = 0; index < looserList.length; index++) {\r\n            const element = looserList[index];\r\n            if(!element.token && !element.symbol){\r\n                AdminService.autoCompleteSearch(element.name).then(searchRes => {\r\n                    let searchResdata = searchRes.data;\r\n                    if (searchResdata.length) {\r\n                        var uppercaseNameEQ = element.name.toUpperCase() + \"-EQ\";\r\n                        var uppercaseNameBE = element.name.toUpperCase() + \"-BE\";\r\n                        var found = searchResdata.filter(row => row.name === element.name && (row.symbol === uppercaseNameEQ || row.symbol === uppercaseNameBE));\r\n                        if (found.length) {\r\n                            element.symbol = found[0].symbol;\r\n                            element.token = found[0].token;\r\n                            element.exch_seg = found[0].exch_seg; \r\n                            localStorage.setItem('looserList', JSON.stringify(looserList));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n          \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    loadIndexesList() {\r\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\r\n\r\n        AdminService.allIndicesDirectJSON()\r\n            .then((res) => {\r\n\r\n\r\n                if (res.data) {\r\n\r\n                    var softedData = res.data && res.data.data;\r\n                    softedData.sort(function (a, b) {\r\n                        return b.percChange - a.percChange;\r\n                    });\r\n\r\n\r\n                    this.setState({ indexTimeStamp: softedData[0].timeVal });\r\n\r\n                    var gainerList = [], looserList = [];\r\n\r\n                    for (let index = 0; index < softedData.length; index++) {\r\n                        const element = softedData[index];\r\n                        var slugName = this.state.sluglist[element.indexName];\r\n                        console.log(\"element\", slugName, element.percChange);\r\n\r\n                        if (slugName) {\r\n                            console.log(\"secName\", element.indexName, slugName);\r\n                            AdminService.checkSectorApiOther(slugName).then(res => {\r\n                                console.log(element.indexName, res.data.data);\r\n                                softedData[index].stockList = res.data && res.data.data;\r\n                                softedData[index].time = res.data && res.data.time;\r\n                                this.setState({ sectorList: softedData });\r\n\r\n                                if (element.percChange >= 0.75 || (softedData[index].indexName == \"NIFTY 50\" && element.percChange >= 0.25)) {\r\n\r\n                                    for (let indexStock = 0; indexStock < res.data.data.length - 3; indexStock++) {\r\n                                        const stockElement = res.data.data[indexStock];\r\n                                        var stockInfo = {\r\n                                            name: stockElement.symbol,\r\n                                            ltp: stockElement.ltP,\r\n                                            nc: stockElement.iislPercChange,\r\n                                            sector: softedData[index].indexName,\r\n                                            foundAt: new Date().toLocaleString()\r\n                                        }\r\n\r\n                                        let glist = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [];\r\n                                        var isfound = glist.filter(row => row.name == stockElement.symbol);\r\n\r\n                                        console.log(stockElement.symbol, isfound);\r\n                                        if (!isfound.length) {\r\n                                            gainerList.push(stockInfo);\r\n                                            localStorage.setItem('gainerList', JSON.stringify(gainerList));\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                                if (element.percChange <= -0.75 || (softedData[index].indexName == \"NIFTY 50\" && element.percChange <= -0.25)) {\r\n\r\n                                    var sectorStock = res.data.data;\r\n                                    sectorStock.reverse();\r\n\r\n                                    for (let indexStock = 0; indexStock < res.data.data.length - 5; indexStock++) {\r\n                                        const stockElement = res.data.data[indexStock];\r\n                                        var stockInfo = {\r\n                                            name: stockElement.symbol,\r\n                                            ltp: stockElement.ltP,\r\n                                            nc: stockElement.iislPercChange,\r\n                                            sector: softedData[index].indexName,\r\n                                            foundAt: new Date().toLocaleString()\r\n                                        }\r\n\r\n                                        let llist = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [];\r\n\r\n                                        var isfound = llist.filter(row => row.name == stockElement.symbol);\r\n\r\n                                        console.log(\"looseer\", stockElement.symbol, isfound);\r\n                                        if (!isfound.length) {\r\n                                            looserList.push(stockInfo);\r\n                                            localStorage.setItem('looserList', JSON.stringify(looserList));\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            }).catch(error => {\r\n                                // Notify.showError(element.indexName + \"fail to get stockdata\"); \r\n                                console.log(\"list fetch error\", error)\r\n                            })\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n            })\r\n            .catch((reject) => {\r\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\r\n                //      this.speckIt(\"All Indices API Failed\");\r\n\r\n            }).finally((ok) => {\r\n\r\n\r\n                setTimeout(() => {\r\n                    this.updateTokenSymbol(\"ok\");\r\n                }, 5000);\r\n\r\n\r\n\r\n            })\r\n\r\n        this.setState({ refreshFlag: true });\r\n\r\n    }\r\n\r\n\r\n    updateLTPMannually = (index) => {\r\n\r\n        var sectorStocks = this.state.staticData[index];\r\n        this.refreshSectorLtp(sectorStocks, index);\r\n    }\r\n\r\n\r\n    refreshSectorLtp = async (sectorStocks, index) => {\r\n\r\n        this.setState({ stockUpdate: index });\r\n\r\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\r\n        this.setState({ refreshFlag: false, failedCount: 0 });\r\n        var sectorUpdate = [];\r\n        var sectorStockList = this.state.sectorStockList;\r\n\r\n        for (let index = 0; index < sectorStocks.length; index++) {\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"tradingsymbol\": sectorStocks[index].symbol,\r\n                \"symboltoken\": sectorStocks[index].token,\r\n            }\r\n\r\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\r\n\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n\r\n\r\n                if (LtpData.symboltoken == sectorStocks[index].token) {\r\n\r\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\r\n\r\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\r\n                    var indexData = sectorStocks[index];\r\n                    indexData.ltp = LtpData.ltp;\r\n                    indexData.nc = todayChange;\r\n                    indexData.cng = (LtpData.ltp - LtpData.close);\r\n                    indexData.ltt = new Date().toLocaleString();\r\n\r\n\r\n                    sectorUpdate.push(indexData);\r\n                }\r\n\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n\r\n                console.log(sectorStocks[index].symbol, error);\r\n\r\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\r\n            })\r\n\r\n\r\n\r\n            await new Promise(r => setTimeout(r, 101));\r\n\r\n\r\n        }\r\n\r\n\r\n        if (index) {\r\n            this.state.sectorList.forEach((element, i) => {\r\n                if (element.index == index) {\r\n                    this.state.sectorList[i].stockList = sectorUpdate;\r\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\r\n                    this.setState({ sectorList: this.state.sectorList });\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.setState({ refreshFlag: true });\r\n        // this.refreshSectorCandleManually(index); \r\n        //  this.checkLast5MinMovement(index); \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    checkLast5MinMovement = async (index) => {\r\n\r\n        var sectorStocks = this.state.staticData[index];\r\n        //   this.refreshSectorLtp(sectorStocks, index);\r\n\r\n\r\n        this.setState({ refreshFlagCandle: false });\r\n        console.log(\"sectorStockList\", index);\r\n\r\n\r\n        for (let index = 0; index < sectorStocks.length; index++) {\r\n\r\n\r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n            var time = moment.duration(\"00:06:00\");\r\n            var startdate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": sectorStocks[index].token,\r\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                if (histdata && histdata.data && histdata.data.length) {\r\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\r\n\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\r\n                    candleData.forEach((element, index) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n\r\n                    });\r\n\r\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\r\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\r\n\r\n\r\n                    // var inputRSI = { values: closeingData, period: 14 };\r\n                    // var lastRsiValue = RSI.calculate(inputRSI)\r\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\r\n\r\n\r\n                    // var inputVWAP = {\r\n                    //     open: openData,\r\n                    //     high: highData,\r\n                    //     low: lowData,\r\n                    //     close: closeingData,\r\n                    //     volume: valumeData\r\n                    // };\r\n\r\n\r\n                    // if (candleData.length > 0) {\r\n                    //     sectorStocks[index].candleChartData = candleChartData;\r\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\r\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\r\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\r\n                    // }\r\n\r\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\r\n                }\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n\r\n        if (index) {\r\n            this.state.sectorList.forEach((element, i) => {\r\n                if (element.index == index) {\r\n                    this.state.sectorList[i].stockList = sectorStocks;\r\n                    this.setState({ sectorList: this.state.sectorList });\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        this.setState({ refreshFlagCandle: true });\r\n\r\n\r\n\r\n\r\n        console.log(\"sectorStockswithcandle\", sectorStocks);\r\n    }\r\n    refreshSectorCandleManually = async (index) => {\r\n\r\n        var sectorStocks = this.state.staticData[index];\r\n        //   this.refreshSectorLtp(sectorStocks, index);\r\n\r\n\r\n        this.setState({ refreshFlagCandle: false });\r\n        console.log(\"sectorStockList\", index);\r\n\r\n\r\n        for (let index = 0; index < sectorStocks.length; index++) {\r\n\r\n\r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n            var time = moment.duration(\"22:00:00\");\r\n            var startdate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": sectorStocks[index].token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\r\n                    candleData.forEach((element, index) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n\r\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n\r\n                    });\r\n\r\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\r\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\r\n\r\n\r\n                    var inputRSI = { values: closeingData, period: 14 };\r\n                    var lastRsiValue = RSI.calculate(inputRSI)\r\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\r\n\r\n\r\n                    var inputVWAP = {\r\n                        open: openData,\r\n                        high: highData,\r\n                        low: lowData,\r\n                        close: closeingData,\r\n                        volume: valumeData\r\n                    };\r\n\r\n                    var input = {\r\n                        period: 20,\r\n                        values: bbdata,\r\n                        stdDev: 2\r\n\r\n                    }\r\n\r\n                    var bb = BollingerBands.calculate(input);\r\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\r\n\r\n\r\n                    if (candleData.length > 0) {\r\n                        sectorStocks[index].candleChartData = candleChartData;\r\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\r\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\r\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\r\n                    }\r\n\r\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\r\n                }\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n\r\n        if (index) {\r\n            this.state.sectorList.forEach((element, i) => {\r\n                if (element.index == index) {\r\n                    this.state.sectorList[i].stockList = sectorStocks;\r\n                    this.setState({ sectorList: this.state.sectorList });\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        this.setState({ refreshFlagCandle: true });\r\n\r\n\r\n\r\n\r\n        console.log(\"sectorStockswithcandle\", sectorStocks);\r\n    }\r\n\r\n\r\n    refreshSectorCandle = async () => {\r\n\r\n        this.setState({ refreshFlagCandle: false });\r\n\r\n        var sectorStockList = this.state.sectorStockList;\r\n\r\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\r\n\r\n\r\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n            var time = moment.duration(\"61:00:00\");\r\n            var startdate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": this.state.sectorStockList[index].token,\r\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [];\r\n                    candleData.forEach(element => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    });\r\n\r\n\r\n                    if (candleData.length > 0) {\r\n\r\n                        sectorStockList[index].candleChartData = candleChartData;\r\n                        var sectorList = this.state.sectorList;\r\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\r\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\r\n\r\n                                if (foundLive.length) {\r\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\r\n                                }\r\n                            });\r\n                        });\r\n                        this.setState({ sectorList: sectorList });\r\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\r\n                    }\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\r\n                }\r\n            }).catch(error => {\r\n                this.setState({ failedCount: this.state.failedCount + 1 });\r\n\r\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 350));\r\n        }\r\n\r\n        this.setState({ refreshFlagCandle: true });\r\n    }\r\n\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n\r\n        return newarray.join('');\r\n    }\r\n\r\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\r\n\r\n        //  candleData  = candleData && candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\r\n        localStorage.setItem('cadleChartSymbol', symbol);\r\n        localStorage.setItem('candlePriceShow', price);\r\n        localStorage.setItem('candleChangeShow', change);\r\n        localStorage.setItem('vwapDataChart', vwapDataChart);\r\n\r\n\r\n\r\n        if (candleData && candleData.length > 0) {\r\n            document.getElementById('showCandleChart').click();\r\n        }\r\n    }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\r\n                    return \"19:00:00\";\r\n                else\r\n                    return \"01:00:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\r\n                    return \"23:00:00\";\r\n                else\r\n                    return \"03:00:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\r\n                    return \"24:21:00\";\r\n                else\r\n                    return \"07:00:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\r\n                    return \"28:01:00\";\r\n                else\r\n                    return \"10:01:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"100:01:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"200:01:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"1000:01:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    dailyBasisInfoCheck = (token, element) => {\r\n        //this.setState({DailyBulishStatus: ''}); \r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\r\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n        var startDateforDaily = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": 'ONE_DAY',\r\n            \"fromdate\": moment(startDateforDaily).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0;\r\n\r\n\r\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n                    if (element) {\r\n                        closeingDatadaily.push(element[4]);\r\n                        valumeSum += element[5];\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\r\n                this.setState({ dailyAvgValume: valumeSum / 20 });\r\n\r\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\r\n                console.log(token, \"DSMA\", DSMALastValue);\r\n\r\n                if (DSMALastValue) {\r\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\r\n                }\r\n\r\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\r\n                    console.log(\"crosssed voliue\", element);\r\n                    //   this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    showCandleChartPopUp = (symbol) => {\r\n\r\n\r\n        // //  candleData  = candleData && candleData.reverse();\r\n\r\n        // // localStorage.setItem('candleChartData', JSON.stringify(candleData));\r\n        // localStorage.setItem('cadleChartSymbol', symbol);\r\n        // // localStorage.setItem('candlePriceShow', price);\r\n        // // localStorage.setItem('candleChangeShow', change);\r\n        // // localStorage.setItem('vwapDataChart', vwapDataChart);\r\n\r\n        // document.getElementById('showCandleChart').click();\r\n\r\n\r\n\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\r\n        var isThere = watchList.filter(row => row.name === symbol);\r\n        if (isThere && isThere.length) {\r\n\r\n            let stock = isThere[0];\r\n\r\n\r\n\r\n            this.dailyBasisInfoCheck(stock.token);\r\n\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n\r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \r\n            // var beginningTime = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": stock.token,\r\n                \"interval\": this.state.timeFrame,  //'FIVE_MINUTE',\r\n                \"fromdate\": moment(beginningTime).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let historyData = resolveResponse(res, 'noPop');\r\n                console.log(\"candledata\", historyData);\r\n                if (historyData && historyData.data) {\r\n\r\n                    var data = historyData.data;\r\n\r\n                    const cdata = data.map(d => {\r\n                        return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                    });\r\n\r\n\r\n\r\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                    data.forEach((element, loopindex) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                        volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                    });\r\n\r\n                    var input = {\r\n                        period: 20,\r\n                        values: bbdata,\r\n                        stdDev: 2\r\n                    }\r\n\r\n                    var bb = BollingerBands.calculate(input);\r\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\r\n\r\n                    var bb = BollingerBands.calculate(input);\r\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\r\n\r\n                    var inputRSI = { values: closeingData, period: 14 };\r\n                    var rsiValues = RSI.calculate(inputRSI);\r\n\r\n                    console.log(stock.symbol, \"Rsi\", inputRSI, rsiValues);\r\n                    console.log(stock.symbol, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                    var data = {\r\n                        \"exchange\": stock.exch_seg,\r\n                        \"tradingsymbol\": stock.symbol,\r\n                        \"symboltoken\": stock.token,\r\n                    }\r\n                    AdminService.getLTP(data).then(res => {\r\n                        let data = resolveResponse(res, 'noPop');\r\n                        var LtpData = data && data.data;\r\n\r\n                        LtpData.change = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n\r\n\r\n\r\n                        this.showCandleChart(candleChartData, stock.symbol, LtpData.ltp, LtpData.change);\r\n\r\n\r\n                        // this.setState({InstrumentLTP: LtpData , selectedSymbol : stock.symbol,  chartStaticData: candleChartData, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\r\n\r\n                        //     document.getElementById('showLightCandleChart').click();\r\n                        // });\r\n\r\n\r\n                    })\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    updateSocketWatch = () => {\r\n\r\n\r\n\r\n        var channel = [];\r\n        this.state.sectorList.forEach(element => {\r\n            if (element.percentChange >= 0.75) {\r\n                element.stockList && element.stockList.forEach(stock => {\r\n                    channel.push('nse_cm|' + stock.token);\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        if (channel && channel.length) {\r\n            var updateWatch = {\r\n                \"task\": \"mw\",\r\n                \"channel\": channel.join('&'),\r\n                \"token\": this.state.feedToken,\r\n                \"user\": this.state.clientcode,\r\n                \"acctid\": this.state.clientcode\r\n            }\r\n\r\n            console.log(\"update watch channel\", updateWatch);\r\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n    get2DecimalNumber = (number) => {\r\n\r\n        if (number) {\r\n            return number.toFixed(2);\r\n        } else {\r\n            return number;\r\n        }\r\n    }\r\n    switchToListView = () => {\r\n        this.setState({ switchToListViewFlag: !this.state.switchToListViewFlag });\r\n    }\r\n\r\n    get5DaysMoveCount = (symbol) => {\r\n        var isThere = this.state.slowMotionStockList.filter(row => row.name === symbol);\r\n        if (isThere.length) {\r\n            return \"SM: \" + isThere[0].bigCandleCount;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getDeliveryInfo = (symbol) => {\r\n\r\n        AdminService.getDeliveryData(symbol).then(resd => {\r\n            if (resd && resd.data && resd.data.length)\r\n                return \"D2T%: \" + resd.data[0].deliveryToTradedQuantity;\r\n        });\r\n\r\n    }\r\n    showDeliveryData=(indexName)=>{\r\n     //  window.open('#/delivery?indexName='+indexName,'_blank');\r\n       \r\n      // this.setState({clickedIndexName : indexName})\r\n       localStorage.setItem('clickedIndexName', indexName); \r\n       localStorage.setItem('clickedIndexType', \"Depth\"); \r\n       document.getElementById('fullModelId').click();\r\n    }\r\n    showAllChart =(indexName)=> {\r\n        localStorage.setItem('clickedIndexName', indexName); \r\n        localStorage.setItem('clickedIndexType', \"Charts\"); \r\n        document.getElementById('fullModelId').click();\r\n        //window.open('#/index-charts?indexName='+indexName,'_blank');\r\n    }\r\n    render() {\r\n\r\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\r\n        //         return b.nc - a.nc;\r\n        //     });\r\n        // });\r\n\r\n\r\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\r\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\r\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\r\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\r\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\r\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\r\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\r\n                        if (index2 < 2) {\r\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\r\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\r\n                            if (!isThere.length) {\r\n                                element.foundAt = new Date().toLocaleString();\r\n                                autoTradeTopList.push(element);\r\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\r\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\r\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\r\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \r\n                            }\r\n                        }\r\n\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n\r\n                <ChartDialog />\r\n                <FullModel indexName={this.state.clickedIndexName} />\r\n                <LightChartDialog LightChartData={{ InstrumentLTP: this.state.InstrumentLTP, DailyBulishStatus: this.state.DailyBulishStatus, todayCurrentVolume: this.state.todayCurrentVolume, selectedSymbol: this.state.selectedSymbol, chartStaticData: this.state.chartStaticData, bblastValue: this.state.bblastValue, vwapvalue: this.state.vwapvalue, rsiValues: this.state.rsiValues, valumeData: this.state.valumeData }} />\r\n\r\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n                    <Grid item xs={12} sm={6} >\r\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\r\n                            &nbsp;\r\n                            <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button>\r\n\r\n                            &nbsp;\r\n\r\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\r\n                            &nbsp; */}\r\n\r\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\r\n\r\n\r\n\r\n                            <Button onClick={() => this.switchToListView()}>switch to list view</Button>\r\n                        </Typography>\r\n\r\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2} >\r\n                        <FormControl style={{ minWidth: '100%' }} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChange} >\r\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\r\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\r\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\r\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\r\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\r\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\r\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    {!this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\r\n\r\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\r\n                        indexdata.stockList ? <Grid item xs={12} sm={3}>\r\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\r\n\r\n\r\n                                {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\r\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\r\n                            </Button>\r\n                            &nbsp;\r\n\r\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\r\n                                <ShowChartIcon />\r\n                            </Button> */}\r\n\r\n                                <Typography variant=\"body1\" >\r\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13, 8)}\r\n                                </Typography>\r\n\r\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\r\n\r\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\r\n                                        <Grid item xs={12} sm={6} >\r\n                                            <Paper style={{ textAlign: \"center\" }} >\r\n                                                {/* {sectorItem.cng} */}\r\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\r\n                                                    {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\r\n                                                </Typography>\r\n\r\n\r\n                                                {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\r\n                                                    <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\r\n                                                </span> : \"\"}\r\n\r\n                                                {sectorItem.vwapValue ?\r\n                                                    <Typography >\r\n                                                        {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\r\n                                                        &nbsp;\r\n                                                        {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\r\n                                                    </Typography>\r\n                                                    : \"\"}\r\n\r\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\r\n                                                options={{\r\n                                                    chart: {\r\n                                                        type: 'candlestick',\r\n                                                        //  height: 40\r\n\r\n                                                    },\r\n                                                    title: {\r\n                                                        text: '',\r\n                                                        align: 'left'\r\n                                                    },\r\n                                                    xaxis: {\r\n                                                        type: 'datetime',\r\n                                                    },\r\n                                                    yaxis: {\r\n                                                        tooltip: {\r\n                                                            enabled: true\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                                series={[{\r\n                                                    data: sectorItem.candleChartData\r\n\r\n                                                }]}\r\n                                                type=\"candlestick\"\r\n                                    \r\n                                            /> : \"\"} */}\r\n\r\n\r\n                                                {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n\r\n                                                <Grid item>\r\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\r\n                                                </Grid>\r\n\r\n                                                <Grid item >\r\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\r\n                                                </Grid>\r\n\r\n                                                <Grid item >\r\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            */}\r\n\r\n\r\n                                            </Paper>\r\n\r\n\r\n                                        </Grid>\r\n                                    ))\r\n                                    }\r\n                                </Grid>\r\n\r\n                            </Paper>\r\n                        </Grid> : \"\"\r\n\r\n                    )) : \"\"}\r\n\r\n\r\n                    <Table id=\"tabledata\" aria-label=\"a dense table\" stickyHeader size=\"small\" >\r\n                        <TableBody hover style={{ whiteSpace: \"nowrap\" }} >\r\n\r\n\r\n                            {this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\r\n\r\n                                indexdata.stockList ? <TableRow hover={true} key={index}>\r\n                                    <TableCell style={{ background: '#0068ff45' }} >\r\n                                           <Button style={{ background: this.getPercentageColor(indexdata.percChange) }} variant=\"contained\"   onClick={() => this.showAllChart(indexdata.indexName )}>\r\n                                            {indexdata.indexName + \" \" + indexdata.last}({indexdata.percChange}%)<EqualizerIcon />\r\n                                          </Button>\r\n                                          &nbsp;\r\n                                          <Button variant=\"contained\"   onClick={() => this.showDeliveryData(indexdata.indexName )}>\r\n                                            Depth\r\n                                          </Button>\r\n                                    </TableCell>\r\n\r\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\r\n                                        <TableCell style={{ textAlign: \"left\", }}  >\r\n                                              <Button  onClick={() => this.showCandleChartPopUp(sectorItem.symbol)}>\r\n                                                    <span style={{ background: this.getPercentageColor(sectorItem.iislPercChange) }}>  <b>{i + 1}.</b> {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%) </span>\r\n                                                    <span title=\"last 5 days 5min big movement  maximum count\">&nbsp;{this.get5DaysMoveCount(sectorItem.symbol)}  </span>\r\n\r\n                                                    {/* <span title=\"Delivery Info\">&nbsp;{this.getDeliveryInfo(sectorItem.symbol)}  </span>  */}\r\n                                                    \r\n                                                </Button>\r\n\r\n\r\n                                        </TableCell>\r\n                                    ))\r\n                                    }\r\n\r\n                                </TableRow>\r\n                                    : \"\"\r\n\r\n                            )) : ''}\r\n\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { packs: state.packs.packs.data };\r\n}\r\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog';\r\nimport ChartMultiple from './ChartMultiple';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Parser from 'html-react-parser';\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist: \"NIFTY 50\",\r\n            totalStockToWatch: 0,\r\n            timeFrame: \"TEN_MINUTE\",\r\n            chartStaticData: [],\r\n            qtyToTake:'',\r\n            BBBlastType : \"BBBlastOnly\",\r\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n\r\n\r\n        };\r\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\r\n        this.startSearching = this.startSearching.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"Fast Movement\";\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        this.setState({ totalStockToWatch: watchList.length });\r\n\r\n        // this.findlast5minMovement(); //one time only\r\n        //   this.startSearching();\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n\r\n        var tostartInteral = setInterval(() => {\r\n            var time = new Date();\r\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\r\n            if (time.getMinutes() % 5 === 0) {\r\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\r\n\r\n                setTimeout(() => {\r\n                    this.find10MinBBBlast();\r\n                }, 70000);\r\n                this.setState({\r\n                    stop10bbSearch:\r\n                        setInterval(() => {\r\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\r\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n                                this.find10MinBBBlast();\r\n                            }\r\n                        }, 60000 * 5 + 70000)\r\n                });\r\n\r\n                clearInterval(tostartInteral);\r\n            }\r\n        }, 1000);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    stopSearching = () => {\r\n        console.log(\"stop the search\")\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n\r\n    }\r\n    onChangeQty = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n\r\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        localStorage.setItem('candlePriceShow', ltp);\r\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n        // clearInterval(this.state.scaninterval);\r\n        //  clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.findlast5minMovement(); //one time only\r\n            //this.startSearching();\r\n            this.find10MinBBBlast();\r\n\r\n        });\r\n    }\r\n\r\n    startSearching = () => {\r\n\r\n        console.log(\"Starting the search\");\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            var intervaltime = 60000;\r\n            if (this.state.totalStockToWatch > 180) {\r\n                intervaltime = this.state.totalStockToWatch * 333;\r\n            }\r\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\r\n        }\r\n    }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n        \r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\r\n                    return \"18:21:00\";\r\n                else\r\n                    return \"00:21:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\r\n                    return \"19:41:00\";\r\n                else\r\n                    return \"01:41:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\r\n                    return \"21:21:00\";\r\n                else\r\n                    return \"03:21:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\r\n                    return \"23:01:00\";\r\n                else\r\n                    return \"05:01:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"84:01:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"168:01:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"744:01:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateToLocalStorage =(row)=>{\r\n\r\n        let foundAt = new Date(row.foundAt).toLocaleString();\r\n      \r\n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\r\n       console.log(\"isfound\", isfound); \r\n\r\n        if(!isfound.length){\r\n\r\n            var updateData = {\r\n                token: row.token, \r\n                foundAt: foundAt, \r\n                ltp: row.ltp, \r\n                symbol: row.symbol, \r\n                nc:  row.perChange.toFixed(2),\r\n                orderType: row.orderType\r\n            }\r\n            this.state.fastMovementList.push(updateData); \r\n            //this.setState({ fastMovementList: [..., updateData] });\r\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  ); \r\n        }\r\n\r\n    }\r\n\r\n    find10MinBBBlast = async () => {\r\n\r\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n\r\n        this.setState({ totalStockToWatch: watchList.length })\r\n\r\n\r\n        var foundData = [];\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n\r\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\r\n\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\r\n            var startDate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": watchList[index].exch_seg,\r\n                \"symboltoken\": watchList[index].token,\r\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                // console.log(\"candle history\", histdata);\r\n\r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\r\n                    candleData.forEach((element, loopindex) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n\r\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\r\n                      \r\n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\r\n                        lightcandleChartData.push({\r\n                            x: new Date(element[0]).getTime(),\r\n                            y:  (element[2] + element[3] + element[4]) / 3\r\n                          });\r\n                           \r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n\r\n                    });\r\n\r\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\r\n\r\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\r\n                    console.log(watchList[index].symbol, \"SMA\", sma);\r\n\r\n\r\n                    var inputRSI = { values: closeingData, period: 14 };\r\n                    var lastRsiValue = RSI.calculate(inputRSI);\r\n\r\n                    console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\r\n                    console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                    var inputVWAP = {\r\n                        open: openData,\r\n                        high: highData,\r\n                        low: lowData,\r\n                        close: closeingData,\r\n                        volume: valumeData\r\n                    };\r\n\r\n                    var input = {\r\n                        period: 20,\r\n                        values: bbdata,\r\n                        stdDev: 2\r\n\r\n                    }\r\n\r\n                    var bb = BollingerBands.calculate(input);\r\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\r\n\r\n\r\n                    var bbvlastvalue = bb[bb.length - 1];\r\n                    if (bbvlastvalue) {\r\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\r\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\r\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\r\n\r\n                    }\r\n                    var dataltp = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"tradingsymbol\": watchList[index].symbol,\r\n                        \"symboltoken\": watchList[index].token,\r\n                    }\r\n\r\n                    AdminService.getLTP(dataltp).then(res => {\r\n                        let data = resolveResponse(res, 'noPop');\r\n                        var LtpData = data && data.data;\r\n                        //console.log(LtpData);\r\n                        if (LtpData && LtpData.ltp) {\r\n\r\n\r\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\r\n\r\n                            var upsidecount = 0, downsidecount = 0, startingRsiupside = lastRsiValue[2], startingRsiDownside = lastRsiValue[2];\r\n                            lastRsiValue.forEach((element, i) => {\r\n                                if (i > 2 && element >= 55 && element <= 65) {\r\n                                    if (startingRsiupside <= element) {\r\n                                        startingRsiupside = element;\r\n                                        upsidecount += 1;\r\n                                    }\r\n                                }\r\n\r\n                                if (i > 2 && element >= 35 && element <= 45) {\r\n                                    if (element <= startingRsiDownside) {\r\n                                        startingRsiDownside = element;\r\n                                        downsidecount += 1;\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            var volumeUpside = valumeData[2], volUpCount =0;                          \r\n                            valumeData.forEach((element, i) => {\r\n                                if (i > 2 && volumeUpside < element) {\r\n                                    volumeUpside = element;\r\n                                    volUpCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            console.log(watchList[index].symbol, \"valumeData\", valumeData, );\r\n\r\n                            console.log(watchList[index].symbol, \"last continue rsi\", upsidecount);\r\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" RSI rising :\" + upsidecount });\r\n                        \r\n\r\n                            if (upsidecount >= 2 || downsidecount >= 2) {\r\n                                if (this.state.BBBlastType == 'BBBlastOnly') {\r\n                                    if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\r\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                        let data = {\r\n                                            symbol: watchList[index].symbol,\r\n                                            token: watchList[index].token,\r\n                                            ltp: LtpData.ltp,\r\n                                            perChange: perChange,\r\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                            RSI: lastRsiValue,\r\n                                            VWAP: vwap(vwapdata),\r\n                                            BB: bbvlastvalue,\r\n                                            candleChartData: candleChartData,\r\n                                            lightcandleChartData: lightcandleChartData,\r\n                                            foundAt : candleData && candleData[candleData.length-1][0],\r\n                                            orderType: \"BUY\",\r\n                                            name: watchList[index].name,\r\n                                        }\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.updateToLocalStorage(data); \r\n\r\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\r\n                                        window.document.title = \"FM: Buy \" + watchList[index].symbol;\r\n                                    }\r\n                                    if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\r\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                       let data = {\r\n                                            symbol: watchList[index].symbol,\r\n                                            token: watchList[index].token,\r\n                                            ltp: LtpData.ltp,\r\n                                            perChange: perChange,\r\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                            RSI: lastRsiValue,\r\n                                            VWAP: vwap(vwapdata),\r\n                                            BB: bbvlastvalue,\r\n                                            candleChartData: candleChartData,\r\n                                            lightcandleChartData: lightcandleChartData,\r\n                                            foundAt : candleData && candleData[candleData.length-1][0],\r\n                                            orderType: \"SELL\",\r\n                                            name: watchList[index].name,\r\n                                        }\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.updateToLocalStorage(data); \r\n\r\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\r\n                                        window.document.title = \"FM: Sell \" + watchList[index].symbol;\r\n                                    }\r\n                                } else {\r\n\r\n                                    let timeDuration = this.getTimeFrameValue('ONE_DAY');\r\n                                    var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n                                    var startDateforDaily = moment(new Date()).subtract(time);\r\n                                    var dataDay = {\r\n                                        \"exchange\": watchList[index].exch_seg,\r\n                                        \"symboltoken\": watchList[index].token,\r\n                                        \"interval\": 'ONE_DAY',\r\n                                        \"fromdate\": moment(startDateforDaily).format(format1),\r\n                                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                                    }\r\n                                    AdminService.getHistoryData(dataDay).then(resd => {\r\n                                        let histdatad = resolveResponse(resd, 'noPop');\r\n                                        var DSMA = '';\r\n                                        if (histdatad && histdatad.data && histdatad.data.length) {\r\n                                            var candleDatad = histdatad.data;\r\n                                            var closeingDatadaily = [];\r\n                                            candleDatad.forEach((element, loopindex) => {\r\n                                                closeingDatadaily.push(element[4]);\r\n                                            });\r\n\r\n                                            DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\r\n\r\n                                            var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\r\n                                            console.log(watchList[index].symbol, \"DSMA\", DSMALastValue);\r\n\r\n                                            if (LtpData.ltp > DSMALastValue && bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\r\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                                \r\n                                                let data = {\r\n                                                    symbol: watchList[index].symbol,\r\n                                                    token: watchList[index].token,\r\n                                                    ltp: LtpData.ltp,\r\n                                                    perChange: perChange,\r\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                                    RSI: lastRsiValue,\r\n                                                    VWAP: vwap(vwapdata),\r\n                                                    BB: bbvlastvalue,\r\n                                                    DSMALastValue: DSMALastValue,\r\n                                                    candleChartData: candleChartData,\r\n                                                    lightcandleChartData: lightcandleChartData,\r\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\r\n                                                    orderType: \"BUY\",\r\n                                                    name: watchList[index].name,\r\n                                                    \r\n                                                }; \r\n                                                \r\n                                                foundData.push(data)\r\n                                                this.setState({ findlast5minMovement: foundData });\r\n                                                this.updateToLocalStorage(data); \r\n\r\n                                                this.speckIt(watchList[index].symbol + ' BB  buy');\r\n                                                window.document.title = \"FM: Buy \" + watchList[index].symbol;\r\n\r\n                                            }\r\n                                            if (LtpData.ltp < DSMALastValue && bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\r\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                                let data = {\r\n                                                    symbol: watchList[index].symbol,\r\n                                                    token: watchList[index].token,\r\n                                                    ltp: LtpData.ltp,\r\n                                                    perChange: perChange,\r\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                                    RSI: lastRsiValue,\r\n                                                    VWAP: vwap(vwapdata),\r\n                                                    BB: bbvlastvalue,\r\n                                                    DSMALastValue: DSMALastValue,\r\n                                                    candleChartData: candleChartData,\r\n                                                    lightcandleChartData: lightcandleChartData,\r\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\r\n                                                    orderType: \"SELL\",\r\n                                                    name: watchList[index].name,\r\n                                                }\r\n                                                foundData.push(data)\r\n                                                this.setState({ findlast5minMovement: foundData });\r\n                                                this.updateToLocalStorage(data); \r\n\r\n                                                this.speckIt(watchList[index].symbol + ' BB sell');\r\n                                                window.document.title = \"FM: Sell \" + watchList[index].symbol;\r\n                                            }\r\n                                        }\r\n\r\n\r\n                                    });\r\n\r\n                                }\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(watchList[index].symbol, \"  emply candle found\");\r\n                }\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 600));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    findlast5minMovement = async () => {\r\n\r\n        this.setState({ findlast5minMovementUpdate: '' });\r\n\r\n        var timediff = moment.duration(\"00:05:00\");\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\r\n\r\n        this.setState({ totalStockToWatch: watchList.length })\r\n\r\n\r\n        var foundData = [];\r\n\r\n        if (watchList && watchList.length) {\r\n            for (let index = 0; index < watchList.length; index++) {\r\n                const element = watchList[index];\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                    \"fromdate\": moment(startdate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                var updateMsg = index + 1 + \". \" + element.symbol;\r\n                this.setState({ findlast5minMovementUpdate: updateMsg });\r\n\r\n                window.document.title = \"FM: \" + updateMsg;\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    //console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var percentChangeList = []; var foundCount = 0;\r\n                        histdata.data.forEach(element => {\r\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\r\n\r\n                            if (changePer >= 0.3) {\r\n                                foundCount = foundCount + 1;\r\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\r\n                            }\r\n                            if (changePer <= -0.3) {\r\n                                foundCount = foundCount + 1;\r\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\r\n                            }\r\n\r\n                        });\r\n\r\n\r\n                        var ttophistCandle = [];\r\n                        histdata.data.forEach(element => {\r\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n\r\n\r\n                        if (percentChangeList.length) {\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"tradingsymbol\": watchList[index].symbol,\r\n                                \"symboltoken\": watchList[index].token,\r\n                            }\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                var LtpData = data && data.data;\r\n                                //console.log(LtpData);\r\n                                if (LtpData && LtpData.ltp) {\r\n\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    foundData.push({\r\n                                        symbol: watchList[index].symbol,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        percentChangeList: percentChangeList.join(\" | \"),\r\n                                        candleChartData: ttophistCandle,\r\n                                    })\r\n                                    console.log(\"foundData\", foundData);\r\n                                    this.setState({ findlast5minMovement: foundData })\r\n\r\n                                }\r\n\r\n                            })\r\n\r\n\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        console.log(\" candle data emply\");\r\n                    }\r\n                })\r\n                await new Promise(r => setTimeout(r, 333));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    callbackAfterOrderDone = (order) => {\r\n        // setValues({ ...values, ['buyFlag']: order.status });\r\n        // setValues({ ...values, ['sellFlag']:  order.status  });\r\n        //  this.setState({ [spineerId]: order.status}); \r\n\r\n\r\n        console.log(\"order executed\", order);\r\n\r\n    }\r\n\r\n\r\n\r\n    handleClick = (row, type, spinnerIndex) => {\r\n\r\n\r\n        console.log(row);\r\n        if (row.token && row.symbol) {\r\n            if (type == 'BUY') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake : this.state.qtyToTake\r\n                }\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n\r\n            }\r\n\r\n            if (type == 'SELL') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake : this.state.qtyToTake\r\n                }\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n            }\r\n        } else {\r\n            Notify.showError(\" Symbol Not found!!!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <br />\r\n                <ChartDialog /> <ChartMultiple />\r\n\r\n                <Grid justify=\"space-between\"\r\n                    container spacing={1}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\r\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={2} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                    <MenuItem value={element}>{element}</MenuItem>\r\n                                ))\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\r\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\r\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\r\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\r\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\r\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\r\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\r\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \r\n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\r\n                            <TableRow hover key={row.symbol}>\r\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\r\n                                <TableCell align=\"left\">{row.percentChangeList}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        )):''}\r\n                    </TableBody>\r\n                </Table> */}\r\n                <Grid container spacing={2} >\r\n\r\n\r\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\r\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\r\n\r\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\r\n                                \r\n\r\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \r\n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\r\n                                </div>\r\n                                : \"\"} */}\r\n\r\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\r\n                                    options={{\r\n                                        chart: {\r\n                                            type: 'candlestick',\r\n                                            height: 250\r\n                                        },\r\n                                        title: {\r\n                                            text: \"\",\r\n                                            align: 'left'\r\n                                        },\r\n                                        xaxis: {\r\n                                            type: 'datetime',\r\n                                        },\r\n                                        yaxis: {\r\n                                            tooltip: {\r\n                                                enabled: true\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    series={[{\r\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\r\n                                    }, \r\n                                    // {\r\n                                    //     name: 'line',\r\n                                    //     type: 'line',\r\n                                    //     data: [\r\n                                    //         row.lightcandleChartData\r\n                                    //     ]\r\n                                    //   }\r\n                                \r\n                                    ]}\r\n                                   \r\n                                    type=\"candlestick\"\r\n                                    width={350}\r\n                                    height={250}\r\n\r\n                                    \r\n\r\n                                /> : \"\"}\r\n\r\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n\r\n\r\n\r\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\r\n                                    </Grid> : \"\"}\r\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        VWAP:  {row.VWAP}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12}>\r\n\r\n                                        RSI: {row.RSI.map((item, j) => (\r\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\r\n                                        ))}\r\n\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} >\r\n                                        BB\r\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\r\n                                        &nbsp; Middle: {row.BB.middle}\r\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n                                    <Grid item>\r\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item>\r\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item >\r\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\r\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n\r\n                    )) : ''}\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog';\r\nimport ChartMultiple from './ChartMultiple';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Parser from 'html-react-parser';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands, MACD } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist: \"NIFTY 50\",\r\n            totalStockToWatch: 0,\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            chartStaticData: [],\r\n            BBBlastType: \"BBStrongBreakout\",\r\n            qtyToTake: '',\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n\r\n\r\n        };\r\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\r\n        this.startSearching = this.startSearching.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"FM2\";\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        this.setState({ totalStockToWatch: watchList.length });\r\n\r\n        // this.findlast5minMovement(); //one time only\r\n        //   this.startSearching();\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n\r\n        var tostartInteral = setInterval(() => {\r\n            var time = new Date();\r\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\r\n            if (time.getMinutes() % 2 === 0) {\r\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\r\n\r\n                setTimeout(() => {\r\n                    this.find10MinBBBlast();\r\n                }, 70000);\r\n                this.setState({\r\n                    stop10bbSearch:\r\n                        setInterval(() => {\r\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\r\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n                                this.find10MinBBBlast();\r\n                            }\r\n                        }, 60000 * 2 + 70000)\r\n                });\r\n\r\n                clearInterval(tostartInteral);\r\n            }\r\n        }, 1000);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    stopSearching = () => {\r\n        console.log(\"stop the search\")\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n\r\n    }\r\n\r\n\r\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        localStorage.setItem('candlePriceShow', ltp);\r\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n        // clearInterval(this.state.scaninterval);\r\n        //  clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.findlast5minMovement(); //one time only\r\n            //this.startSearching();\r\n            this.find10MinBBBlast();\r\n\r\n        });\r\n    }\r\n    onChangeQty = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    startSearching = () => {\r\n\r\n        console.log(\"Starting the search\");\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            var intervaltime = 60000;\r\n            if (this.state.totalStockToWatch > 180) {\r\n                intervaltime = this.state.totalStockToWatch * 333;\r\n            }\r\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\r\n        }\r\n    }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\r\n                    return \"18:21:00\";\r\n                else\r\n                    return \"00:21:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\r\n                    return \"19:41:00\";\r\n                else\r\n                    return \"01:41:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\r\n                    return \"21:21:00\";\r\n                else\r\n                    return \"03:21:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\r\n                    return \"23:01:00\";\r\n                else\r\n                    return \"05:01:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"84:01:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"168:01:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"744:01:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateToLocalStorage = (row) => {\r\n\r\n        let foundAt = new Date(row.foundAt).toLocaleString();\r\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\r\n        console.log(\"isfound\", isfound);\r\n        if (!isfound.length) {\r\n            var updateData = {\r\n                token: row.token,\r\n                foundAt: foundAt,\r\n                ltp: row.ltp,\r\n                symbol: row.symbol,\r\n                nc: row.perChange.toFixed(2),\r\n                orderType: row.orderType\r\n            }\r\n            this.state.fastMovementList.push(updateData);\r\n            //this.setState({ fastMovementList: [..., updateData] });\r\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\r\n            return true;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    find10MinBBBlast = async () => {\r\n\r\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n\r\n        this.setState({ totalStockToWatch: watchList.length })\r\n\r\n\r\n        var foundData = [];\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n\r\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\r\n\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\r\n            var startDate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": watchList[index].exch_seg,\r\n                \"symboltoken\": watchList[index].token,\r\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                // console.log(\"candle history\", histdata);\r\n\r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [], lightcandleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\r\n                    candleData.forEach((element, loopindex) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n\r\n                        var time = { year: new Date(element[0]).getFullYear(), month: new Date(element[0]).getMonth(), day: new Date(element[0]).getDate() }\r\n\r\n                        //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\r\n                        lightcandleChartData.push({\r\n                            x: new Date(element[0]).getTime(),\r\n                            y: (element[2] + element[3] + element[4]) / 3\r\n                        });\r\n\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n\r\n                    });\r\n\r\n                    // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\r\n\r\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\r\n                    //   console.log(watchList[index].symbol, \"SMA\", sma);\r\n\r\n\r\n                    var inputRSI = { values: closeingData, period: 14 };\r\n                    var lastRsiValue = RSI.calculate(inputRSI);\r\n\r\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\r\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                    var inputVWAP = {\r\n                        open: openData,\r\n                        high: highData,\r\n                        low: lowData,\r\n                        close: closeingData,\r\n                        volume: valumeData\r\n                    };\r\n\r\n                    var input = {\r\n                        period: 20,\r\n                        values: bbdata,\r\n                        stdDev: 2\r\n\r\n                    }\r\n\r\n                    var bb = BollingerBands.calculate(input);\r\n                    //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\r\n\r\n\r\n                    var bbvlastvalue = bb[bb.length - 1];\r\n                    if (bbvlastvalue) {\r\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\r\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\r\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\r\n\r\n                    }\r\n\r\n                    var macdInput = {\r\n                        values: closeingData,\r\n                        fastPeriod: 12,\r\n                        slowPeriod: 26,\r\n                        signalPeriod: 9,\r\n                        SimpleMAOscillator: false,\r\n                        SimpleMASignal: false\r\n                    }\r\n\r\n                    let macd = MACD.calculate(macdInput);\r\n                    let macdLastValue = macd[macd.length - 1];\r\n\r\n\r\n                    // MACD: -3.5573380320065553\r\n                    // histogram: -0.7420963576240767\r\n                    // signal: -2.8152416743824786\r\n\r\n                    if (macdLastValue && macdLastValue.MACD >= macdLastValue.signal) {\r\n                        console.log(\"macd\", watchList[index].symbol, macdLastValue);\r\n                    }\r\n\r\n                    var dataltp = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"tradingsymbol\": watchList[index].symbol,\r\n                        \"symboltoken\": watchList[index].token,\r\n                    }\r\n\r\n                    AdminService.getLTP(dataltp).then(res => {\r\n                        let data = resolveResponse(res, 'noPop');\r\n                        var LtpData = data && data.data;\r\n                        //console.log(LtpData);\r\n                        if (LtpData && LtpData.ltp) {\r\n\r\n\r\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\r\n\r\n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \r\n                            // valumeData.forEach((element, i) => {\r\n                            //     if (i > 2 && volumeUpside < element) {\r\n                            //         volumeUpside = element;\r\n                            //         volUpCount += 1;\r\n                            //     }\r\n                            // });\r\n\r\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\" });\r\n\r\n                            let isFound = false;\r\n\r\n                            if (this.state.BBBlastType == 'BBStrongBreakout') {\r\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length - 1][2] == candleData[candleData.length - 1][4]) {\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue,\r\n                                        VWAP: vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        lightcandleChartData: lightcandleChartData,\r\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\r\n                                        orderType: \"BUY\",\r\n                                        name: watchList[index].name,\r\n                                    }\r\n\r\n                                    if (this.updateToLocalStorage(data)) {\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\r\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\r\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" BUY Eligible\" });\r\n                                    }\r\n\r\n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length - 1][3] == candleData[candleData.length - 1][4]) {\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue,\r\n                                        VWAP: vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        lightcandleChartData: lightcandleChartData,\r\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\r\n                                        orderType: \"SELL\",\r\n                                        name: watchList[index].name,\r\n                                    }\r\n                                    if (this.updateToLocalStorage(data)) {\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\r\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\r\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" SELL Eligible\" });\r\n                                    }\r\n\r\n                                } else {\r\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Not Eligible\" });\r\n                                }\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(watchList[index].symbol, \"  emply candle found\");\r\n                }\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 600));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    findlast5minMovement = async () => {\r\n\r\n        this.setState({ findlast5minMovementUpdate: '' });\r\n\r\n        var timediff = moment.duration(\"00:05:00\");\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\r\n\r\n        this.setState({ totalStockToWatch: watchList.length })\r\n\r\n\r\n        var foundData = [];\r\n\r\n        if (watchList && watchList.length) {\r\n            for (let index = 0; index < watchList.length; index++) {\r\n                const element = watchList[index];\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                    \"fromdate\": moment(startdate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                var updateMsg = index + 1 + \". \" + element.symbol;\r\n                this.setState({ findlast5minMovementUpdate: updateMsg });\r\n\r\n                window.document.title = \"FM: \" + updateMsg;\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    //console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var percentChangeList = []; var foundCount = 0;\r\n                        histdata.data.forEach(element => {\r\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\r\n\r\n                            if (changePer >= 0.3) {\r\n                                foundCount = foundCount + 1;\r\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\r\n                            }\r\n                            if (changePer <= -0.3) {\r\n                                foundCount = foundCount + 1;\r\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\r\n                            }\r\n\r\n                        });\r\n\r\n\r\n                        var ttophistCandle = [];\r\n                        histdata.data.forEach(element => {\r\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n\r\n\r\n                        if (percentChangeList.length) {\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"tradingsymbol\": watchList[index].symbol,\r\n                                \"symboltoken\": watchList[index].token,\r\n                            }\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                var LtpData = data && data.data;\r\n                                //console.log(LtpData);\r\n                                if (LtpData && LtpData.ltp) {\r\n\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    foundData.push({\r\n                                        symbol: watchList[index].symbol,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        percentChangeList: percentChangeList.join(\" | \"),\r\n                                        candleChartData: ttophistCandle,\r\n                                    })\r\n                                    console.log(\"foundData\", foundData);\r\n                                    this.setState({ findlast5minMovement: foundData })\r\n\r\n                                }\r\n\r\n                            })\r\n\r\n\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        console.log(\" candle data emply\");\r\n                    }\r\n                })\r\n                await new Promise(r => setTimeout(r, 333));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    callbackAfterOrderDone = (order) => {\r\n        // setValues({ ...values, ['buyFlag']: order.status });\r\n        // setValues({ ...values, ['sellFlag']:  order.status  });\r\n        //  this.setState({ [spineerId]: order.status}); \r\n\r\n\r\n        console.log(\"order executed\", order);\r\n\r\n    }\r\n\r\n\r\n\r\n    handleClick = (row, type, spinnerIndex) => {\r\n\r\n\r\n        console.log(row);\r\n        if (row.token && row.symbol) {\r\n            if (type == 'BUY') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake,\r\n                    producttype: 'DELIVERY'\r\n                }\r\n                console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n\r\n            }\r\n\r\n            if (type == 'SELL') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake,\r\n                    producttype: 'DELIVERY'\r\n                }\r\n                console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n            }\r\n        } else {\r\n            Notify.showError(\" Symbol Not found!!!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <br />\r\n                <ChartDialog /> <ChartMultiple />\r\n\r\n                <Grid justify=\"space-between\"\r\n                    container spacing={1}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\r\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={2} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                    <MenuItem value={element}>{element}</MenuItem>\r\n                                ))\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\r\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\r\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\r\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\r\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\r\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\r\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\r\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\r\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\r\n\r\n\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \r\n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\r\n                            <TableRow hover key={row.symbol}>\r\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\r\n                                <TableCell align=\"left\">{row.percentChangeList}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        )):''}\r\n                    </TableBody>\r\n                </Table> */}\r\n                <Grid container spacing={2} >\r\n\r\n\r\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\r\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\r\n\r\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\r\n\r\n\r\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \r\n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\r\n                                </div>\r\n                                : \"\"} */}\r\n\r\n                                {row.candleChartData.length > 0 ? <ReactApexChart\r\n                                    options={{\r\n                                        chart: {\r\n                                            type: 'candlestick',\r\n                                            height: 250\r\n                                        },\r\n                                        title: {\r\n                                            text: \"\",\r\n                                            align: 'left'\r\n                                        },\r\n                                        xaxis: {\r\n                                            type: 'datetime',\r\n                                        },\r\n                                        yaxis: {\r\n                                            tooltip: {\r\n                                                enabled: true\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    series={[{\r\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\r\n                                    },\r\n                                        // {\r\n                                        //     name: 'line',\r\n                                        //     type: 'line',\r\n                                        //     data: [\r\n                                        //         row.lightcandleChartData\r\n                                        //     ]\r\n                                        //   }\r\n\r\n                                    ]}\r\n\r\n                                    type=\"candlestick\"\r\n                                    width={350}\r\n                                    height={250}\r\n\r\n\r\n\r\n                                /> : \"\"}\r\n\r\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n\r\n\r\n\r\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\r\n                                    </Grid> : \"\"}\r\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        VWAP:  {row.VWAP}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12}>\r\n\r\n                                        RSI: {row.RSI.map((item, j) => (\r\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\r\n                                        ))}\r\n\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} >\r\n                                        BB\r\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\r\n                                        &nbsp; Middle: {row.BB.middle}\r\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n                                    <Grid item>\r\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item >\r\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\r\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n\r\n                    )) : ''}\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog';\r\nimport ChartMultiple from './ChartMultiple';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Notify from \"../../utils/Notify\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Parser from 'html-react-parser';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands, MACD } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n        this.state = {\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist: \"NIFTY 50\",\r\n            totalStockToWatch: 0,\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            chartStaticData: [],\r\n            BBBlastType: \"selectAll\",\r\n            qtyToTake: '',\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n\r\n\r\n        };\r\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\r\n        this.startSearching = this.startSearching.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"FM2\";\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        this.setState({ totalStockToWatch: watchList.length });\r\n\r\n        // this.findlast5minMovement(); //one time only\r\n        //   this.startSearching();\r\n\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n\r\n        var tostartInteral = setInterval(() => {\r\n            var time = new Date();\r\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\r\n            if (time.getMinutes() % 2 === 0) {\r\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\r\n\r\n                setTimeout(() => {\r\n                    this.find10MinBBBlast();\r\n                }, 70000);\r\n                this.setState({\r\n                    stop10bbSearch:\r\n                        setInterval(() => {\r\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\r\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n                                this.find10MinBBBlast();\r\n                            }\r\n                        }, 60000 * 2 + 70000)\r\n                });\r\n\r\n                clearInterval(tostartInteral);\r\n            }\r\n        }, 1000);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    stopSearching = () => {\r\n        console.log(\"stop the search\")\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n\r\n    }\r\n\r\n\r\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n        localStorage.setItem('candlePriceShow', ltp);\r\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        clearInterval(this.state.stop10bbSearch);\r\n        // clearInterval(this.state.scaninterval);\r\n        //  clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        clearInterval(this.state.findlast5minMovementInterval);\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.findlast5minMovement(); //one time only\r\n            //this.startSearching();\r\n            this.find10MinBBBlast();\r\n\r\n        });\r\n    }\r\n    onChangeQty = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    startSearching = () => {\r\n\r\n        console.log(\"Starting the search\");\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            var intervaltime = 60000;\r\n            if (this.state.totalStockToWatch > 180) {\r\n                intervaltime = this.state.totalStockToWatch * 333;\r\n            }\r\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\r\n        }\r\n    }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\r\n                    return \"18:21:00\";\r\n                else\r\n                    return \"00:21:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\r\n                    return \"19:41:00\";\r\n                else\r\n                    return \"01:41:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\r\n                    return \"21:21:00\";\r\n                else\r\n                    return \"03:21:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\r\n                    return \"23:01:00\";\r\n                else\r\n                    return \"05:01:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"84:01:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"168:01:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"744:01:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateToLocalStorage = (row) => {\r\n\r\n        let foundAt = new Date(row.foundAt).toLocaleString();\r\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\r\n        console.log(\"isfound\", isfound);\r\n        if (!isfound.length) {\r\n            var updateData = {\r\n                token: row.token,\r\n                foundAt: foundAt,\r\n                ltp: row.ltp,\r\n                symbol: row.symbol,\r\n                nc: row.perChange.toFixed(2),\r\n                orderType: row.orderType\r\n            }\r\n            this.state.fastMovementList.push(updateData);\r\n            //this.setState({ fastMovementList: [..., updateData] });\r\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\r\n            return true;\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    find10MinBBBlast = async () => {\r\n\r\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n\r\n        this.setState({ totalStockToWatch: watchList.length })\r\n\r\n\r\n        var foundData = [];\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n\r\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\r\n\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\r\n            var startDate = moment(new Date()).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": watchList[index].exch_seg,\r\n                \"symboltoken\": watchList[index].token,\r\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                // console.log(\"candle history\", histdata);\r\n\r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    var candleChartData = [], lightcandleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\r\n                    candleData.forEach((element, loopindex) => {\r\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n\r\n                        var time = { year: new Date(element[0]).getFullYear(), month: new Date(element[0]).getMonth(), day: new Date(element[0]).getDate() }\r\n\r\n                        //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\r\n                        lightcandleChartData.push({\r\n                            x: new Date(element[0]).getTime(),\r\n                            y: (element[2] + element[3] + element[4]) / 3\r\n                        });\r\n\r\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                        closeingData.push(element[4]);\r\n                        highData.push(element[2]);\r\n                        lowData.push(element[3]);\r\n                        openData.push(element[3]);\r\n                        valumeData.push(element[5]);\r\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n\r\n                    });\r\n\r\n                    // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\r\n\r\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\r\n                    //   console.log(watchList[index].symbol, \"SMA\", sma);\r\n\r\n\r\n                    var inputRSI = { values: closeingData, period: 14 };\r\n                    var lastRsiValue = RSI.calculate(inputRSI);\r\n\r\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\r\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                    var inputVWAP = {\r\n                        open: openData,\r\n                        high: highData,\r\n                        low: lowData,\r\n                        close: closeingData,\r\n                        volume: valumeData\r\n                    };\r\n\r\n                    var input = {\r\n                        period: 20,\r\n                        values: bbdata,\r\n                        stdDev: 2\r\n\r\n                    }\r\n\r\n                    var bb = BollingerBands.calculate(input);\r\n                    //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\r\n\r\n\r\n                    var bbvlastvalue = bb[bb.length - 1];\r\n                    if (bbvlastvalue) {\r\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\r\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\r\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\r\n\r\n                    }\r\n\r\n                    var macdInput = {\r\n                        values: closeingData,\r\n                        fastPeriod: 12,\r\n                        slowPeriod: 26,\r\n                        signalPeriod: 9,\r\n                        SimpleMAOscillator: false,\r\n                        SimpleMASignal: false\r\n                    }\r\n\r\n                    let macd = MACD.calculate(macdInput);\r\n                    let macdLastValue = macd[macd.length - 1];\r\n\r\n\r\n                    // MACD: -3.5573380320065553\r\n                    // histogram: -0.7420963576240767\r\n                    // signal: -2.8152416743824786\r\n\r\n                    if (macdLastValue && macdLastValue.MACD >= macdLastValue.signal) {\r\n                        console.log(\"macd\", watchList[index].symbol, macdLastValue);\r\n                    }\r\n\r\n                    var dataltp = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"tradingsymbol\": watchList[index].symbol,\r\n                        \"symboltoken\": watchList[index].token,\r\n                    }\r\n\r\n                    AdminService.getLTP(dataltp).then(res => {\r\n                        let data = resolveResponse(res, 'noPop');\r\n                        var LtpData = data && data.data;\r\n                        //console.log(LtpData);\r\n                        if (LtpData && LtpData.ltp) {\r\n\r\n\r\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\r\n\r\n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \r\n                            // valumeData.forEach((element, i) => {\r\n                            //     if (i > 2 && volumeUpside < element) {\r\n                            //         volumeUpside = element;\r\n                            //         volUpCount += 1;\r\n                            //     }\r\n                            // });\r\n\r\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\" });\r\n\r\n                            let isFound = false;\r\n\r\n                            if (this.state.BBBlastType == 'selectAll'  || this.state.BBBlastType == 'macdCrossOver') {\r\n\r\n                                if (macdLastValue && macdLastValue.MACD >= macdLastValue.signal) {\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue,\r\n                                        VWAP: vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        lightcandleChartData: lightcandleChartData,\r\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\r\n                                        orderType: \"BUY\",\r\n                                        name: watchList[index].name,\r\n                                        macdData : macd.slice(Math.max(macd.length - 6, 1)), \r\n                                        patternName: \"MACD Cossed Up\"\r\n                                    }\r\n\r\n                                    if (this.updateToLocalStorage(data)) {\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.speckIt(watchList[index].symbol + ' macd  buy');\r\n                                        window.document.title = \"macd: Buy \" + watchList[index].symbol;\r\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" BUY Eligible\" });\r\n                                    }\r\n\r\n                                } else if (macdLastValue && macdLastValue.MACD <= macdLastValue.signal) {\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue,\r\n                                        VWAP: vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        lightcandleChartData: lightcandleChartData,\r\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\r\n                                        orderType: \"SELL\",\r\n                                        name: watchList[index].name,\r\n                                        macdData : macd.slice(Math.max(macd.length - 6, 1)),\r\n                                        patternName: \"MACD Cossed Down\"\r\n\r\n                                    }\r\n                                    if (this.updateToLocalStorage(data)) {\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.speckIt(watchList[index].symbol + ' macd sell');\r\n                                        window.document.title = \"macd: Sell \" + watchList[index].symbol;\r\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" SELL Eligible\" });\r\n                                    }\r\n\r\n                                } else {\r\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Not Eligible\" });\r\n                                }\r\n                            }\r\n\r\n                            if (this.state.BBBlastType == 'selectAll'  || this.state.BBBlastType == 'BBStrongBreakout') {\r\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length - 1][2] == candleData[candleData.length - 1][4]) {\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue,\r\n                                        VWAP: vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        lightcandleChartData: lightcandleChartData,\r\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\r\n                                        orderType: \"BUY\",\r\n                                        name: watchList[index].name,\r\n                                        patternName: \"BB Strong Buy\"\r\n\r\n                                    }\r\n\r\n                                    if (this.updateToLocalStorage(data)) {\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\r\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\r\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" BUY Eligible\" });\r\n                                    }\r\n\r\n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length - 1][3] == candleData[candleData.length - 1][4]) {\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    let data = {\r\n                                        symbol: watchList[index].symbol,\r\n                                        token: watchList[index].token,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\r\n                                        RSI: lastRsiValue,\r\n                                        VWAP: vwap(vwapdata),\r\n                                        BB: bbvlastvalue,\r\n                                        candleChartData: candleChartData,\r\n                                        lightcandleChartData: lightcandleChartData,\r\n                                        foundAt: candleData && candleData[candleData.length - 1][0],\r\n                                        orderType: \"SELL\",\r\n                                        name: watchList[index].name,\r\n                                        patternName: \"BB Strong Sell\"\r\n\r\n                                    }\r\n                                    if (this.updateToLocalStorage(data)) {\r\n                                        foundData.push(data)\r\n                                        this.setState({ findlast5minMovement: foundData });\r\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\r\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\r\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" SELL Eligible\" });\r\n                                    }\r\n\r\n                                } else {\r\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Not Eligible\" });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(watchList[index].symbol, \"  emply candle found\");\r\n                }\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 600));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    findlast5minMovement = async () => {\r\n\r\n        this.setState({ findlast5minMovementUpdate: '' });\r\n\r\n        var timediff = moment.duration(\"00:05:00\");\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\r\n\r\n        this.setState({ totalStockToWatch: watchList.length })\r\n\r\n\r\n        var foundData = [];\r\n\r\n        if (watchList && watchList.length) {\r\n            for (let index = 0; index < watchList.length; index++) {\r\n                const element = watchList[index];\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                    \"fromdate\": moment(startdate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                var updateMsg = index + 1 + \". \" + element.symbol;\r\n                this.setState({ findlast5minMovementUpdate: updateMsg });\r\n\r\n                window.document.title = \"FM: \" + updateMsg;\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    //console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var percentChangeList = []; var foundCount = 0;\r\n                        histdata.data.forEach(element => {\r\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\r\n\r\n                            if (changePer >= 0.3) {\r\n                                foundCount = foundCount + 1;\r\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\r\n                            }\r\n                            if (changePer <= -0.3) {\r\n                                foundCount = foundCount + 1;\r\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\r\n                            }\r\n\r\n                        });\r\n\r\n\r\n                        var ttophistCandle = [];\r\n                        histdata.data.forEach(element => {\r\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n\r\n\r\n                        if (percentChangeList.length) {\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"tradingsymbol\": watchList[index].symbol,\r\n                                \"symboltoken\": watchList[index].token,\r\n                            }\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                var LtpData = data && data.data;\r\n                                //console.log(LtpData);\r\n                                if (LtpData && LtpData.ltp) {\r\n\r\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\r\n                                    foundData.push({\r\n                                        symbol: watchList[index].symbol,\r\n                                        ltp: LtpData.ltp,\r\n                                        perChange: perChange,\r\n                                        percentChangeList: percentChangeList.join(\" | \"),\r\n                                        candleChartData: ttophistCandle,\r\n                                    })\r\n                                    console.log(\"foundData\", foundData);\r\n                                    this.setState({ findlast5minMovement: foundData })\r\n\r\n                                }\r\n\r\n                            })\r\n\r\n\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        console.log(\" candle data emply\");\r\n                    }\r\n                })\r\n                await new Promise(r => setTimeout(r, 333));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    callbackAfterOrderDone = (order) => {\r\n        // setValues({ ...values, ['buyFlag']: order.status });\r\n        // setValues({ ...values, ['sellFlag']:  order.status  });\r\n        //  this.setState({ [spineerId]: order.status}); \r\n\r\n\r\n        console.log(\"order executed\", order);\r\n\r\n    }\r\n\r\n\r\n\r\n    handleClick = (row, type, spinnerIndex) => {\r\n\r\n\r\n        console.log(row);\r\n        if (row.token && row.symbol) {\r\n            if (type == 'BUY') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake\r\n                }\r\n                console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n\r\n            }\r\n\r\n            if (type == 'SELL') {\r\n                this.setState({ [spinnerIndex]: true });\r\n                var symbolInfo = {\r\n                    token: row.token,\r\n                    symbol: row.symbol,\r\n                    qtyToTake: this.state.qtyToTake\r\n                }\r\n                console.log(symbolInfo);\r\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                this.setState({ [spinnerIndex]: false });\r\n            }\r\n        } else {\r\n            Notify.showError(\" Symbol Not found!!!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <br />\r\n                <ChartDialog /> <ChartMultiple />\r\n\r\n                <Grid justify=\"space-between\"\r\n                    container spacing={1}>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\r\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} sm={2} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                    <MenuItem value={element}>{element}</MenuItem>\r\n                                ))\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\r\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\r\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\r\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\r\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\r\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\r\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\r\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={1} >\r\n                        <FormControl style={styles.selectStyle} >\r\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\r\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\r\n                                {/* <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\r\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem> */}\r\n                                <MenuItem value={'selectAll'}>{'Select All'}</MenuItem>\r\n\r\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\r\n                                <MenuItem value={'macdCrossOver'}>{'Macd Cross Over'}</MenuItem>\r\n\r\n\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\r\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \r\n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\r\n                            <TableRow hover key={row.symbol}>\r\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\r\n                                <TableCell align=\"left\">{row.percentChangeList}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        )):''}\r\n                    </TableBody>\r\n                </Table> */}\r\n                <Grid container spacing={2} >\r\n\r\n\r\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\r\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b> &nbsp;&nbsp; {row.patternName}</Typography>\r\n\r\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\r\n\r\n\r\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \r\n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\r\n                                </div>\r\n                                : \"\"} */}\r\n\r\n                                {row.candleChartData.length > 0 ? <ReactApexChart\r\n                                    options={{\r\n                                        chart: {\r\n                                            type: 'candlestick',\r\n                                            height: 250\r\n                                        },\r\n                                        title: {\r\n                                            text: \"\",\r\n                                            align: 'left'\r\n                                        },\r\n                                        xaxis: {\r\n                                            type: 'datetime',\r\n                                        },\r\n                                        yaxis: {\r\n                                            tooltip: {\r\n                                                enabled: true\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    series={[{\r\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\r\n                                    },\r\n                                        // {\r\n                                        //     name: 'line',\r\n                                        //     type: 'line',\r\n                                        //     data: [\r\n                                        //         row.lightcandleChartData\r\n                                        //     ]\r\n                                        //   }\r\n\r\n                                    ]}\r\n\r\n                                    type=\"candlestick\"\r\n                                    width={350}\r\n                                    height={250}\r\n\r\n\r\n\r\n                                /> : \"\"}\r\n\r\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n\r\n\r\n\r\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\r\n                                    </Grid> : \"\"}\r\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                        VWAP:  {row.VWAP}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12}>\r\n                                        RSI: {row.RSI.map((item, j) => (\r\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} >\r\n                                        BB\r\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\r\n                                        &nbsp; Middle: {row.BB.middle}\r\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12}>\r\n                                        MACD: {row.macdData.map((item, j) => (\r\n                                            <span> {item.MACD && item.MACD.toFixed(2)} &nbsp;</span>\r\n                                        ))}\r\n                                        <br />\r\n                                        MACD Signal: {row.macdData.map((item, j) => (\r\n                                            <span> {item.signal && item.signal.toFixed(2)} &nbsp;</span>\r\n                                        ))}\r\n                                        <br />\r\n                                        MACD histogram: {row.macdData.map((item, j) => (\r\n                                            <span> {item.histogram && item.histogram.toFixed(2)} &nbsp;</span>\r\n                                        ))}\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\r\n                                    <Grid item>\r\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item >\r\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\r\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n\r\n                    )) : ''}\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport LineChart from \"./LineChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n  var lightChartData = props.chartData.chartStaticData; //localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\r\n \r\n  console.log('lightChartData', lightChartData); \r\n\r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {},\r\n    timeFrame: \"FIVE_MINUTE\"\r\n})\r\n\r\n\r\n  const handleTimeFrame = (e) => {\r\n    console.log(e.target.value);\r\n    props.chartData.updateTimeFrameChart(lightChartData.token,e.target.value );\r\n\r\n    setValues({timeFrame: e.target.value}); \r\n  };\r\n \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showLightChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\r\n        Chart \r\n      </Button>\r\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n      \r\n\r\n{/* \r\n        <FormControl style={{minWidth: '10%', }} >\r\n            <Select value={values.timeFrame} name=\"timeFrame\" onChange={handleTimeFrame}>\r\n                <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n            </Select>\r\n        </FormControl> */}\r\n\r\n        &nbsp;\r\n         \r\n        {lightChartData.name}   {lightChartData.ltp}  ({lightChartData.change}%)\r\n\r\n        \r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"chart\">\r\n\r\n        \r\n        <LightChartCom chartData={{candleSeries:lightChartData.lightChartData, volumeSeries: lightChartData.volumeSeriesData}}/>\r\n       \r\n\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n\r\n       \r\n\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport * as moment from 'moment';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport CommonMethods from \"../../utils/CommonMethods\";\r\nimport LightChart from \"./LightChart\";\r\nimport LightChartCom from \"./LightChartCom\";\r\nimport Parser from 'html-react-parser';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\nimport ChartDialog from './ChartDialog';\r\nimport LightChartModel from './LightChartModel';\r\n\r\n\r\n\r\nclass OrderBook extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oderbookData: [],\r\n            listofzones: [],\r\n            selectedZone: [],\r\n            zone: '',\r\n            selectAllzone: 'Select All',\r\n            triggerprice: 0,\r\n            price: 0,\r\n            lotsize: 0,\r\n            firstTimeFlag: true,\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            selectedWatchlist: \"NIFTY BANK\",\r\n            totalStockToWatch: 0,\r\n            timeFrame: \"TEN_MINUTE\",\r\n            qtyToTake: '',\r\n            BBBlastType: \"BBBlastOnly\",\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n            sortedType: \"isActivated\",\r\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || []\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n\r\n            var tostartInteral = setInterval(() => {\r\n                var time = new Date();\r\n                if (time.getMinutes() % 5 === 0) {\r\n                    setTimeout(() => {\r\n                        this.checkSlowMotionCheckLive();\r\n                    }, 70000);\r\n                    setInterval(() => {\r\n                        this.checkSlowMotionCheckLive();\r\n                        this.activationToLtpChange();\r\n                    }, 60000 * 5 + 70000);\r\n                    clearInterval(tostartInteral);\r\n                }\r\n            }, 1000);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    onChangeWatchlist = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            // this.findlast5minMovement(); //one time only\r\n            //this.startSearching();\r\n            this.checkSlowMotion();\r\n\r\n        });\r\n    }\r\n\r\n\r\n    checkSlowMotion = async () => {\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n\r\n        if (this.state.selectedWatchlist == \"selectall\") {\r\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\r\n        }\r\n\r\n\r\n\r\n        this.setState({ scanUpdate: \"\" });\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const row = watchList[index];\r\n\r\n            var isfound = this.state.slowMotionStockList.filter(item => item.token == row.token);\r\n            if (!isfound.length) {\r\n                this.checkSlowMotionStock(row.token, row, index + 1);\r\n                await new Promise(r => setTimeout(r, 310));\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    getTimeFrameValue = (timeFrame) => {\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n        switch (timeFrame) {\r\n            case 'ONE_MINUTE':\r\n                return \"720:00:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                    return \"2160:00:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                    return \"2160:00:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                return \"2160:00:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"4320:00:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"4320:00:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"8760:00:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    updateTimeFrameChart=(token, timeFrame)=>{\r\n\r\n        console.log( token,timeFrame );\r\n\r\n        let time = this.getTimeFrameValue(timeFrame);\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var startDate = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": timeFrame,\r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\r\n\r\n                for (let index = 0; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n                }\r\n\r\n                const lightChartData = candleDatad.map(d => {\r\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                });\r\n   \r\n\r\n                var lightChartinfo = localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\r\n\r\n                lightChartinfo.lightChartData = lightChartData; \r\n                lightChartinfo.volumeSeriesData = volumeSeriesData; \r\n               // localStorage.setItem('lightChartData', JSON.stringify(lightChartinfo)); \r\n\r\n                this.setState({chartStaticData: lightChartinfo});\r\n            }\r\n\r\n     \r\n        });\r\n  }\r\n\r\n\r\n\r\n    checkSlowMotionStock = (token, stock, stockindex) => {\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \r\n        var startDate = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": 'FIVE_MINUTE',\r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\r\n\r\n                var bigCandleCount = 0;\r\n\r\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n\r\n                    if (element) {\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n\r\n                        if (per >= 0.4) {\r\n                            bigCandleCount += 1;\r\n\r\n                        }\r\n                        if (per <= -0.4) {\r\n                            bigCandleCount += 1;\r\n\r\n                        }\r\n                    }\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                }\r\n\r\n\r\n                console.log(\"Totalcount\", stock.name, bigCandleCount, volumeSeriesData);\r\n\r\n                this.setState({ scanUpdate: \"Scan: \" + stockindex + \". \" + stock.name + \" maxCount: \" + bigCandleCount })\r\n\r\n                if (bigCandleCount <= 15) {\r\n\r\n                    var isfound = this.state.slowMotionStockList.filter(item => item.token == token);\r\n                    if (!isfound.length) {\r\n                        stock.bigCandleCount = bigCandleCount;\r\n                        stock.sectorName = this.state.selectedWatchlist;\r\n\r\n                        var candleChartData = []; \r\n                        candleDatad.forEach(element => {\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n\r\n\r\n                        const lightChartData = candleDatad.map(d => {\r\n                            return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                        });\r\n        \r\n\r\n\r\n                       // stock.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1));  \r\n                        stock.candleChartData = candleChartData;  \r\n                        stock.lightChartData =  lightChartData; \r\n                        stock.volumeSeriesData =  volumeSeriesData;\r\n\r\n                        this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\r\n                         //   localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\r\n                        });\r\n                    }\r\n        \r\n\r\n                   \r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    checkSlowMotionCheckLive = async () => {\r\n\r\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\r\n            const row = this.state.slowMotionStockList[index];\r\n\r\n            if (!row.isActivated) {\r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                var time = moment.duration(\"50:00:00\");  //22:00:00\" for last day  2hours \r\n                var startDate = moment(new Date()).subtract(time);\r\n                var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n                var dataDay = {\r\n                    \"exchange\": 'NSE',\r\n                    \"symboltoken\": row.token,\r\n                    \"interval\": 'FIVE_MINUTE',\r\n                    \"fromdate\": moment(startDate).format(format1),\r\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n                AdminService.getHistoryData(dataDay).then(resd => {\r\n                    let histdatad = resolveResponse(resd, 'noPop');\r\n                    var DSMA = '';\r\n                    if (histdatad && histdatad.data && histdatad.data.length) {\r\n                        var candleDatad = histdatad.data;\r\n                        var closeingDatadaily = [], valumeSum = 0;\r\n\r\n                        var bigCandleCount = 0, midBullishCount = 0, bullishCount = 0, activationTime = \"\", activationPrice = 0;\r\n\r\n                        for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\r\n                            const element = candleDatad[index];\r\n\r\n                            if (element) {\r\n                                var per = (element[4] - element[1]) * 100 / element[1];\r\n                                if (per >= 1) {\r\n                                    bigCandleCount += 1;\r\n                                    activationPrice = element[2];\r\n                                    activationTime = new Date(element[0]).toLocaleString();\r\n                                }\r\n                                if (per >= 0.5) {\r\n                                    midBullishCount += 1;\r\n                                    activationPrice = element[2];\r\n                                    activationTime = new Date(element[0]).toLocaleString();\r\n                                }\r\n                                if (per >= 0) {\r\n                                    bullishCount += 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        var candleChartData = [];\r\n                        candleDatad.forEach(element => {\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n\r\n                        //row.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1)); \r\n                        row.candleChartData = candleChartData; \r\n                        \r\n                        \r\n                        let update = Parser(\"Update: \" + (index + 1) + \".\" + row.name + \" large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b>\" ); \r\n                \r\n                        this.setState({ scanUpdate:  update})\r\n                        console.log(row.symbol, bigCandleCount, midBullishCount, bullishCount);\r\n\r\n                        let updatetopage = \"large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b> at \" + new Date(candleDatad[candleDatad.length-1][0]).toLocaleTimeString(); \r\n\r\n                        row.update = updatetopage; \r\n\r\n                        if (bigCandleCount >= 1 || (midBullishCount >= 1 && bullishCount >= 2)) {\r\n\r\n                            row.isActivated = true;\r\n                            row.activationTime = activationTime;\r\n                            row.activationPrice = activationPrice;\r\n\r\n                            window.document.title = \"SM: \" + row.symbol;\r\n                            console.log('hey, slow motion stock' + row.symbol + \" broken\");\r\n\r\n                            this.speckIt('hey, slow motion stock' + row.symbol + \" broken\");\r\n                            this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\r\n                                this.sortByColumn(\"isActivated\");\r\n                                //localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\r\n                            })\r\n                            \r\n                        }\r\n\r\n                       \r\n\r\n                    }\r\n\r\n                });\r\n                await new Promise(r => setTimeout(r, 310));\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    activationToLtpChange = async() => {\r\n\r\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\r\n            const row = this.state.slowMotionStockList[index];\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"tradingsymbol\": row.symbol,\r\n                \"symboltoken\": row.token,\r\n            }\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                //console.log(LtpData);\r\n                if (LtpData && LtpData.ltp) {\r\n                   row.ltp = LtpData.ltp;\r\n                   row.change = ((LtpData.ltp -  LtpData.close)*100/LtpData.close).toFixed(2);\r\n\r\n                   if(row.activationPrice){\r\n                    row.AtoltpChng = ((LtpData.ltp-row.activationPrice)*100/row.activationPrice).toFixed(2); \r\n                   }\r\n              \r\n                   this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\r\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\r\n                    })\r\n                }\r\n\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 125));\r\n        }\r\n    }\r\n\r\n\r\n    showLightChart = (row) => {\r\n\r\n\r\n        console.log(\"row\",row)\r\n        \r\n        if(row.lightChartData.length>0){\r\n            localStorage.setItem('lightChartData', JSON.stringify(row));\r\n            this.setState({chartStaticData: row}, function(){\r\n                document.getElementById('showLightChart').click();\r\n            });\r\n        }\r\n       \r\n    }\r\n\r\n    \r\n\r\n\r\n    deleteAllScan = () => {\r\n\r\n        if(window.confirm(\"Are you sure to delete all scan stocks?\")){\r\n            this.setState({ slowMotionStockList: []})\r\n            localStorage.setItem(\"slowMotionStockList\",[]);\r\n        }\r\n     \r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n\r\n    convertToFloat = (str) => {\r\n        if (!isNaN(str)) {\r\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\r\n        }\r\n\r\n\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n    sortByColumn = (type) => {\r\n\r\n        this.state.slowMotionStockList.sort(function (a, b) {\r\n            if (type == \"isActivated\" && a.isActivated) {\r\n                return (a.isActivated === b.isActivated) ? 0 : a ? -1 : 1;\r\n            } else {\r\n                return b[type] - a[type];\r\n            }\r\n        });\r\n\r\n        this.setState({ slowMotionStockList: this.state.slowMotionStockList, sortedType: type });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n                {window.location.hash !== \"#/position\" ? <PostLoginNavBar /> : \"\"}\r\n\r\n\r\n                <ChartDialog />\r\n\r\n                {this.state.chartStaticData ? \r\n                <LightChartModel chartData={{updateTimeFrameChart : this.updateTimeFrameChart, chartStaticData : this.state.chartStaticData}} /> \r\n                : \"\"}\r\n                <Grid direction=\"row\" alignItems=\"center\" container>\r\n                    <Grid item xs={12} sm={12} >\r\n\r\n                        <Paper style={{ padding: \"10px\" }} >\r\n\r\n                            <Grid justify=\"space-between\"\r\n                                container spacing={1}>\r\n\r\n                                <Grid item xs={12} sm={4} >\r\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                      Slow Motion ({this.state.slowMotionStockList.length})  <DeleteIcon  onClick={() => this.deleteAllScan()}/>  found at {new Date().toLocaleString()}\r\n                                    </Typography>\r\n                                    {this.state.sortedType ? <> <b> Sorted By: </b> {this.state.sortedType}  </> : \"\"}\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n\r\n\r\n\r\n                                <Grid item xs={12} sm={4} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotion()}>Scan</Button>\r\n                            \r\n                                    {this.state.scanUpdate ? <>{this.state.scanUpdate}  </> : \"\"}\r\n                                    </Grid>\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotionCheckLive()}>Refresh</Button>\r\n                                </Grid>\r\n\r\n                                \r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\r\n\r\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                    <TableRow variant=\"head\">\r\n                                        <TableCell align=\"left\">Sr.</TableCell>\r\n\r\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pchange\")}>Symbol</Button> </TableCell>\r\n                                        <TableCell align=\"center\">Sector</TableCell>\r\n\r\n                                        <TableCell align=\"center\">Max Count</TableCell>\r\n\r\n\r\n\r\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"isActivated\")}>Is Activated</Button></TableCell>\r\n                                        <TableCell align=\"center\">Activate Time</TableCell>\r\n                                        <TableCell align=\"center\">Activation Price</TableCell>\r\n                                        <TableCell align=\"center\">Last Update</TableCell>\r\n                                        <TableCell align=\"center\"><Button onClick={() => this.activationToLtpChange()}>A.toLtpChng</Button></TableCell>\r\n\r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n\r\n\r\n                                    {this.state.slowMotionStockList ? this.state.slowMotionStockList.map((row, i) => (\r\n                                        <TableRow hover key={i} style={{ background: row.isActivated ? \"lightgray\" : \"\" }}>\r\n                                            <TableCell align=\"left\">{i + 1}</TableCell>\r\n\r\n                                            <TableCell align=\"left\"> <Button size=\"small\" variant=\"contained\" style={{ color: !row.change ? '' : row.change > 0 ? 'green' : 'red' }} onClick={() => this.showLightChart(row)}> {row.name} {row.ltp}  {row.change ? \"(\" + row.change+ \"%)\" : \"\" }  <EqualizerIcon /> </Button></TableCell>\r\n\r\n\r\n                                            \r\n                                            <TableCell align=\"center\">{row.sectorName}</TableCell>\r\n                                            <TableCell align=\"center\">{row.bigCandleCount}</TableCell>\r\n\r\n                                            <TableCell align=\"center\">{row.isActivated ? \"Yes\" : \"No\"}</TableCell>\r\n                                            <TableCell align=\"center\">{row.activationTime}</TableCell>\r\n                                            <TableCell align=\"center\">{row.activationPrice}</TableCell>\r\n                                            <TableCell align=\"center\">{row.update ? Parser(row.update): \"\"}</TableCell>\r\n                                            <TableCell align=\"center\">{row.ltp} {row.AtoltpChng ? \"(\" + row.AtoltpChng+ \"%)\" : \"\" }</TableCell>\r\n\r\n                                        </TableRow> \r\n                                    )) : <Spinner />}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\nimport { w3cwebsocket } from 'websocket';\r\n//import ChartDialog from './ChartDialog';\r\nimport pako from 'pako';\r\nimport AdminService from \"../service/AdminService\";\r\nimport Notify from \"../../utils/Notify\";\r\nimport { createChart } from 'lightweight-charts';\r\nimport * as moment from 'moment';\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\n// import vwap from 'vwap';\r\n// import { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\n// import SimpleExpansionPanel from \"./SimpleExpansionPanel\";\r\n// import SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\r\n// import LiveBidsExpantion from \"./LiveBidsExpantion\";\r\n// import WatchListTab from \"./WatchListTab\"; \r\n// import OrderWatchlist from './OrderWatchlist';\r\n\r\n\r\nclass LiveBid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\r\n            symbolList :  [],\r\n            actionList : localStorage.getItem('actionList') && JSON.parse(localStorage.getItem('actionList')) || [],\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            softedIndexList:[],\r\n            cursor: '',\r\n            isSpeek: localStorage.getItem('isSpeek') === 'true' ? true : false, \r\n            sortedType: \"pChange\", \r\n            sluglist: {\r\n                'NIFTY 50': 'nifty',\r\n                'NIFTY AUTO': 'cnxAuto',\r\n                'NIFTY BANK': 'bankNifty',\r\n                'NIFTY ENERGY': 'cnxEnergy',\r\n                'NIFTY FIN SERVICE': 'cnxFinance',\r\n                'NIFTY FMCG': 'cnxFMCG',\r\n                'NIFTY IT': 'cnxit',\r\n                'NIFTY MEDIA': 'cnxMedia',\r\n                'NIFTY METAL': 'cnxMetal',\r\n                'NIFTY PHARMA': 'cnxPharma',\r\n                'NIFTY PSU BANK': 'cnxPSU',\r\n                'NIFTY REALTY': 'cnxRealty',\r\n                'NIFTY PVT BANK': 'niftyPvtBank',\r\n                'NIFTY CONSUMPTION': 'cnxConsumption',\r\n                'NIFTY CPSE': 'cpse',\r\n                'NIFTY INFRA': 'cnxInfra',\r\n                'NIFTY MNC': 'cnxMNC',\r\n                'NIFTY PSE': 'cnxPSE',\r\n\r\n                //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\r\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\r\n                // 'NIFTY GROWSECT 15': 'ni15',H\r\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\r\n                // 'NIFTY SERV SECTOR': 'cnxService',\r\n                // 'NIFTY100 LIQ 15': 'nseliquid',\r\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\r\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\r\n                // 'NIFTY50 VALUE 20': 'nv20',\r\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\r\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\r\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\r\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\r\n                 'NIFTY NEXT 50': 'juniorNifty',\r\n                 'NIFTY MIDCAP 50': 'niftyMidcap50',\r\n                 'NIFTY HEALTHCARE': \"notfound\",\r\n                 'NIFTY OIL AND GAS':\"notfound\",\r\n                 'NIFTY 100':\"notfound\", \r\n                 'NIFTY CONSR DURBL':'notfond'\r\n            },\r\n        };\r\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\r\n\r\n    }\r\n    makeConnection = (wsClint) => {\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        wsClint.send(firstTime_req);\r\n        this.updateSocketWatch(wsClint);\r\n    }\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n      //  console.log(newarray.join(''))\r\n        return newarray.join('');\r\n    }\r\n\r\n   \r\n\r\n    updateSocketWatch = (wsClint) => {\r\n        var channel = this.state.symbolList.map(element => {\r\n            return 'nse_cm|' + element.token;\r\n        });\r\n        channel = channel.join('&');\r\n        var updateSocket = {\r\n            \"task\": \"mw\",\r\n            \"channel\": channel,\r\n            \"token\": this.state.feedToken,\r\n            \"user\": this.state.clientcode,\r\n            \"acctid\": this.state.clientcode\r\n        }\r\n    \r\n        wsClint.send(JSON.stringify(updateSocket));\r\n    }\r\n\r\n    takeAction =(symbol,   action )=>{\r\n        let isfound =  this.state.actionList.length && this.state.actionList.filter(item => item.symbol === symbol); \r\n        if(!isfound.length){\r\n            let data = {symbol:symbol, action:action, updateTime: new Date().toLocaleTimeString() }; \r\n            this.setState({actionList: [...this.state.actionList , data]}, function(){\r\n                localStorage.setItem('actionList', JSON.stringify(this.state.actionList) ); \r\n                this.speckIt(symbol +\" \" + action); \r\n\r\n                console.log(data.symbol +\" \" + data.action + \" \"+data.updateTime); \r\n                this.setState({lastUpdateAction: data.symbol +\" \" + data.action + \" \"+data.updateTime }); \r\n            }); \r\n        }\r\n    }\r\n    updateSocketDetails = (wsClint) => {\r\n        wsClint.onopen = (res) => {\r\n            this.makeConnection(wsClint);\r\n            this.updateSocketWatch(wsClint);\r\n        }\r\n        wsClint.onmessage = (message) => {\r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n            var liveData = JSON.parse(data);\r\n        \r\n            var symbolListArray = this.state.symbolList;\r\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\r\n                var foundLive = liveData.filter(row => row.tk == element.token);\r\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\r\n\r\n                    console.log(foundLive[0]); \r\n\r\n                    symbolListArray[index].ltp = foundLive[0].ltp;\r\n                    symbolListArray[index].pChange = foundLive[0].nc;\r\n                    symbolListArray[index].totalBuyQuantity = foundLive[0].tbq;\r\n                    symbolListArray[index].totalSellQuantity = foundLive[0].tsq;\r\n                    symbolListArray[index].totalTradedVolume = foundLive[0].v;\r\n                    symbolListArray[index].averagePrice = foundLive[0].ap;\r\n                    symbolListArray[index].lowPrice = foundLive[0].lo;\r\n                    symbolListArray[index].highPrice = foundLive[0].h;\r\n                    symbolListArray[index].openPrice = foundLive[0].op;\r\n\r\n                    symbolListArray[index].bestbuyquantity = foundLive[0].bq;\r\n                    symbolListArray[index].bestbuyprice = foundLive[0].bp;\r\n                    symbolListArray[index].bestsellquantity = foundLive[0].bs;\r\n                    symbolListArray[index].bestsellprice = foundLive[0].sp;\r\n                   \r\n                    // symbolListArray[index].upperCircuitLimit = foundLive[0].ucl;\r\n                    // symbolListArray[index].lowerCircuitLimit = foundLive[0].lcl;\r\n\r\n                    symbolListArray[index].buytosellTime = (foundLive[0].tbq / foundLive[0].tsq).toFixed(2);\r\n                    symbolListArray[index].selltobuyTime =  (foundLive[0].tsq / foundLive[0].tbq).toFixed(2); \r\n                    \r\n                    if (foundLive[0].tbq / foundLive[0].tsq > 2) {\r\n                        symbolListArray[index].highlightbuy = true;\r\n                        this.takeAction(element.symbol, ' buying') \r\n                    }else{\r\n                        symbolListArray[index].highlightbuy = false;\r\n                    }\r\n\r\n                    if (foundLive[0].tsq / foundLive[0].tbq > 2) {\r\n                        symbolListArray[index].highlightsell = true;\r\n                        this.takeAction(element.symbol, ' selling')\r\n\r\n                    }else{\r\n                        symbolListArray[index].highlightsell = false;\r\n                    }\r\n\r\n                    //console.log(\"ws onmessage: \", foundLive);\r\n                }\r\n            });\r\n\r\n           \r\n            let shortBy = this.state.sortedType; \r\n            symbolListArray && symbolListArray.sort(function (a, b) {\r\n                return b[shortBy] - a[shortBy] ;\r\n            });\r\n            this.setState({ symbolList: symbolListArray });\r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e);\r\n        }\r\n\r\n        setInterval(() => {\r\n            //  this.makeConnection();\r\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n             console.log(\"Request :- \" + _req);\r\n            wsClint.send(_req);\r\n        }, 59000);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"WS Bid Live\";\r\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode }, function(){\r\n            this.wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n            this.updateSocketDetails(this.wsClint);  \r\n        });\r\n\r\n        const domElement = document.getElementById('tvchart');\r\n        document.getElementById('tvchart').innerHTML = '';\r\n        let heigh =  window.innerWidth;    \r\n        \r\n        const chart = createChart(domElement, { width: heigh/2, height: 400, timeVisible: true, secondsVisible: true, });\r\n        const candleSeries = chart.addCandlestickSeries();\r\n        var smaLineSeries = chart.addLineSeries({\r\n            color: 'rgba(4, 111, 232, 1)',\r\n            lineWidth: 2,\r\n        });\r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\r\n\r\n        this.getUpdateIndexData()\r\n\r\n        setInterval(() => {\r\n            if(this.state.token){\r\n                this.showStaticChart();\r\n            }\r\n        }, 1000);\r\n       \r\n    }\r\n\r\n    getUpdateIndexData=()=>{\r\n        this.setState({softedIndexList : []})\r\n        AdminService.allIndicesDirectJSON()\r\n        .then((res) => {\r\n\r\n            if (res.data) {\r\n\r\n                var softedData = res.data && res.data.data;\r\n                softedData.sort(function (a, b) {\r\n                    return b.percChange - a.percChange;\r\n                });\r\n\r\n                for (let index = 0; index < softedData.length; index++) {\r\n                    const element = softedData[index];\r\n                    var slugName = this.state.sluglist[element.indexName];\r\n                    if (slugName) {\r\n                        this.setState({ softedIndexList: [...this.state.softedIndexList ,element] });\r\n                    }\r\n                }\r\n              \r\n                this.makeConnection(this.wsClint)\r\n              //  this.updateSocketWatch(this.wsClint);\r\n            }\r\n        })\r\n        .catch((reject) => {\r\n         // Notify.showError(\"All Indices API Failed\");\r\n        }).finally((ok) => {\r\n        })\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        if(this.state.isSpeek){\r\n            var msg = new SpeechSynthesisUtterance();\r\n            msg.text = text.toString();\r\n            window.speechSynthesis.speak(msg);\r\n        }\r\n    }\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n            this.setState({ symbolList: watchList},()=> this.updateSocketWatch(this.wsClint));\r\n        });\r\n    }\r\n    sortByColumn = (type) => {\r\n        this.state.symbolList.sort(function (a, b) {\r\n            return b[type] - a[type];\r\n        });\r\n        this.setState({ symbolList: this.state.symbolList, sortedType: type });\r\n    }\r\n\r\n    // checkLiveBids = async () => {\r\n    //     var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n    //     this.setState({ symbolList: watchList});\r\n    // }\r\n    // getLTP = (symbol, token) => {\r\n    //     var data = {\r\n    //         \"exchange\": \"NSE\",\r\n    //         \"tradingsymbol\": symbol,\r\n    //         \"symboltoken\": token,\r\n    //     }\r\n    //     AdminService.getLTP(data).then(res => {\r\n    //         let data = resolveResponse(res, 'noPop');\r\n    //         var LtpData = data && data.data;\r\n\r\n    //         if (LtpData && LtpData.ltp)\r\n    //             this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close) });\r\n    //     })\r\n    // } \r\n    \r\n    convertToDecimal=(num)=>{\r\n        if (!isNaN(num)) {\r\n            \r\n            return num.toFixed(2);\r\n        }else{\r\n            return num; \r\n        }\r\n    }\r\n\r\n\r\n    convertToFloat = (str) => {\r\n        if (!isNaN(str)) {\r\n            return \"(\" + ((str / 100000).toFixed(2)) + \"L)\";\r\n        }\r\n    }\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            //    console.log(\"time\", this.state.timeFrame);\r\n            this.showStaticChart();\r\n        });\r\n    }\r\n    handleKeyDown = (e, token) => {\r\n\r\n        console.log(\"key\", e, token);\r\n        //38 for down and 40 for up key\r\n        if (e.keyCode === 38 && this.state.cursor > 0) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\r\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\r\n        }  \r\n\r\n        setTimeout(() => {\r\n            this.showStaticChart();\r\n        }, 100);\r\n\r\n    }\r\n    handleChange = (event) => {\r\n\r\n        localStorage.setItem('isSpeek', event.target.checked);\r\n        this.setState({isSpeek :  event.target.checked},()=>{\r\n            console.log(\"isSpeek\", this.state.isSpeek, event.target.checked);\r\n        })\r\n      \r\n      };\r\n    calculateSMA = (data, count) => {\r\n\r\n        //  console.log(\"smarowdata\", data, count);\r\n\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n    showStaticChart = (token, symbol) => {\r\n\r\n        //console.log('token, symbol', token, symbol)\r\n\r\n        if(token)\r\n        this.setState({ chartStaticData: '' , lightChartSymbol :symbol, token : token }, function () {\r\n            console.log('reset done', token);\r\n        });\r\n        \r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        let beginningTime = moment('9:15am', 'h:mma');    \r\n\r\n        if(this.state.timeFrame == 'ONE_MINUTE'){\r\n              var time = moment.duration(\"00:60:00\");\r\n              beginningTime = moment(new Date()).subtract(time);\r\n        }\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token || this.state.token,\r\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(beginningTime).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n   \r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let historyData = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (historyData && historyData.data) {\r\n\r\n                var data = historyData.data;\r\n\r\n                const cdata = data.map(d => {\r\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                });\r\n\r\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                data.forEach((element, loopindex) => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                    closeingData.push(element[4]);\r\n                    highData.push(element[2]);\r\n                    lowData.push(element[3]);\r\n                    openData.push(element[3]);\r\n                    valumeData.push(element[5]);\r\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                });\r\n\r\n                var input = {\r\n                    period: 20,\r\n                    values: bbdata,\r\n                    stdDev: 2\r\n                }\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n             //   console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n              //  console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var inputRSI = { values: closeingData, period: 14 };\r\n                var rsiValues = RSI.calculate(inputRSI);\r\n\r\n                // console.log(token, \"Rsi\", inputRSI, rsiValues);\r\n                // console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\r\n                    // candleSeries.setData(this.state.chartStaticData); \r\n                    this.state.candleSeries.setData(this.state.chartStaticData);\r\n\r\n                    this.state.volumeSeries.setData(volumeSeriesData);\r\n\r\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\r\n\r\n                    this.state.smaLineSeries.setData(smaData);\r\n\r\n\r\n                    this.state.chart.subscribeCrosshairMove((param) => {\r\n\r\n                        var getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n                        var string = \"\";\r\n                        var change = \"\";\r\n\r\n                        for (var elem of getit) {\r\n\r\n                            if (typeof elem[1] == 'object') {\r\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\r\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\r\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\r\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\r\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\r\n                            } else {\r\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\r\n                            }\r\n                        }\r\n\r\n                        if (param.time)\r\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\r\n                        else\r\n                            string += \" <b>Time: </b>\";\r\n\r\n\r\n                        const domElement = document.getElementById('showChartTitle');\r\n\r\n\r\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\r\n                        if (change < 0)\r\n                            str = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n                        domElement.innerHTML = str;\r\n                    });\r\n\r\n\r\n                });\r\n\r\n                data && data.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (data.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\r\n                    this.setState({ InstrumentHistroy: data });\r\n\r\n\r\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\r\n                    data.forEach(element => {\r\n\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n                        if (per >= 0.3) {\r\n                            upsideMoveCount += 1;\r\n                        }\r\n                        if (per <= -0.3) {\r\n                            downMoveCount += 1;\r\n                        }\r\n\r\n                        totalSum += per;\r\n\r\n                    });\r\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount });\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        // if(this.state.softedIndexList.length == 0)  {\r\n        //     this.setState({softedIndexList  : this.state.totalWatchlist})\r\n        // }\r\n        //console.log(\"symbolList\",this.state.symbolList)\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar LoadSymbolDetails ={this.LoadSymbolDetails} />\r\n                {/* <ChartDialog /> */}\r\n                \r\n                \r\n                <Grid direction=\"row\"  container>\r\n                     <Grid item xs={6} sm={6} >\r\n\r\n                        <Paper style={{ padding: \"10px\" }} >\r\n\r\n                            <Grid justify=\"space-between\"\r\n                                container spacing={1}>\r\n\r\n                                <Grid item xs={12} sm={4} >\r\n                                    {/* <Typography color=\"primary\" gutterBottom>\r\n                                      {this.state.selectedWatchlist} ({this.state.symbolList.length})  \r\n                                      \r\n                                      \r\n                                    </Typography> */}\r\n\r\n                                    <span>Sorted By:  {this.state.sortedType} </span> <br />\r\n                                    <span>Update: {this.state.lastUpdateAction} </span> \r\n\r\n                                   \r\n                                    \r\n                                    {/* <input onKeyDown={this.handleKeyDown} /> */}\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                            {/* <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem> */}\r\n\r\n                                            {this.state.softedIndexList && this.state.softedIndexList.map(element => (\r\n                                                <MenuItem style={{color: element.percChange>0 ? \"green\": \"red\"}} value={element.indexName}>{element.indexName} ({element.percChange}%)</MenuItem>\r\n                                            )) \r\n                                            }\r\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            )) \r\n                                            }π\r\n                                            <MenuItem value={\"Securities in F&O\"}>{\"Securities in F&O\"}</MenuItem>\r\n                                     \r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n\r\n                                {/* <Grid item xs={12} sm={3} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.getUpdateIndexData()}>Refresh</Button>\r\n                                    \r\n                                       <FormGroup>\r\n                                        <FormControlLabel\r\n                                        control={<Switch checked={this.state.isSpeek} onChange={this.handleChange} aria-label=\"Speek ON/OFF\" />}\r\n                                        label={this.state.isSpeek ? 'Speak Yes'  : 'Speak No'}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Grid> */}\r\n\r\n                                {/* <Grid item xs={12} sm={1} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.backupData()}>BackUp</Button>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={1} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Back Date</InputLabel>\r\n                                        <Select value={this.state.backDate} name=\"backDate\" onChange={this.onChangeBackDate}>\r\n                                            <MenuItem value={\"\"}>{\"Select Date\"}</MenuItem>\r\n                                            {this.state.backupDateList && this.state.backupDateList.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> */}\r\n\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\r\n\r\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                    <TableRow variant=\"head\" >\r\n\r\n                                        {/* <TableCell >US Limit</TableCell>\r\n                                        <TableCell >LS Limit</TableCell> */}\r\n\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}>buyTosell(x)</Button>  </TableCell>\r\n                                        <TableCell  ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}>sellTobuy(x)</Button>  </TableCell> */}\r\n\r\n                                        <TableCell  ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}> T B Q</Button>  </TableCell>\r\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\r\n                                        {/* <TableCell >VWAP Price</TableCell> */}\r\n\r\n                                        <TableCell ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}> T S Q</Button>  </TableCell>\r\n                                        {/* <TableCell >Other Details </TableCell>\r\n                                        <TableCell >High Price</TableCell>\r\n                                        <TableCell >Low Price</TableCell> */}\r\n\r\n                                        {/* <TableCell ><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell> */}\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\r\n                                        <TableCell  ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell> */}\r\n\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell> */}\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell> */}\r\n\r\n                                        {/* <TableCell  >Day Open</TableCell>\r\n                                        <TableCell  >Day High</TableCell>\r\n                                        <TableCell  >Day Low</TableCell>\r\n                                        <TableCell  >Previous Close</TableCell> */}\r\n\r\n\r\n                                        {/* <TableCell  ><Button onClick={() => this.getDeliveryHistory()}>Delivery History</Button>  </TableCell> */}\r\n\r\n{/* \r\n                                        <TableCell >Best Buy Qty</TableCell>\r\n                                        <TableCell >Best Buy Price</TableCell>\r\n                                        <TableCell >Best Sell Qty</TableCell>\r\n                                        <TableCell >Best Sell Price</TableCell> */}\r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                </Table>\r\n                                <div style={{overflow:\"auto\", maxHeight:\"720px\"}}> \r\n                                <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\r\n                                <TableBody>\r\n                                \r\n\r\n                               \r\n\r\n\r\n                                    {this.state.symbolList ? this.state.symbolList.map((row, i) => (\r\n                                        <TableRow selected={this.state.cursor === i ? 'active' : null} \r\n                                            // onKeyDown={(e) => this.handleKeyDown(e)}\r\n                                         style={{cursor:\"pointer\"}} hover key={i} onClick={() => this.showStaticChart(row.token, row.symbol)}>\r\n\r\n                                            {/* <TableCell >{row.upperCircuitLimit}</TableCell>\r\n                                            <TableCell >{row.lowerCircuitLimit}</TableCell> */}\r\n\r\n                                            {/* <TableCell style={{ background: row.highlightbuy ? \"lightgray\" : \"\" }} >\r\n                                                {row.buytosellTime ? row.buytosellTime +\" time buy\" : \"\"}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ background: row.highlightsell ? \"lightgray\" : \"\" }} >\r\n                                                {row.selltobuyTime ? row.selltobuyTime+\" time sell\" : \"\"} \r\n                                            </TableCell> */}\r\n\r\n                                            <TableCell title=\"total buying bids qty\"  style={{ background: row.highlightbuy ? \"#FFFF00\" : \"\" }}  >\r\n                                                    {/* {row.buybidHistory &&  row.buybidHistory.map(item => (\r\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\r\n                                                    ))} */}\r\n                                                {row.buytosellTime ? `B: ${row.buytosellTime}` : \"\"}\r\n\r\n                                                {/* &nbsp; {row.totalBuyQuantity}  */}\r\n                                                {this.convertToFloat(row.totalBuyQuantity)}\r\n\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ background: this.getPercentageColor(row.pChange)  }} >    {row.name} {row.ltp} {row.pChange ? `(${row.pChange}%)` : \"\"} </TableCell>\r\n                                            <TableCell title=\"Average Price\" style={{height:'25px', background: row.ltp ? row.ltp >= row.averagePrice ? \"green\" : \"red\" : \"white\"}}>AP:{row.averagePrice}</TableCell>\r\n\r\n\r\n                                            <TableCell title=\"total selling bid qty\" style={{ background: row.highlightsell ? \"#FFFF00\" : \"\" }}>\r\n                                                    {/* {row.sellbidHistory &&  row.sellbidHistory.map(item => (\r\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\r\n                                                    ))} */}\r\n                                            {row.selltobuyTime ? `S: ${row.selltobuyTime}` : \"\"} \r\n\r\n                                            {/* &nbsp; {row.totalSellQuantity}  */}\r\n                                            {this.convertToFloat(row.totalSellQuantity)}\r\n                                  \r\n                                            </TableCell>\r\n                                            <TableCell  title=\"Open Price\">O:{row.openPrice}</TableCell>\r\n                                            <TableCell  title=\"High Price\">H:{row.highPrice}</TableCell>\r\n                                            <TableCell title=\"Low Price\" >L:{row.lowPrice}</TableCell>\r\n\r\n                                            {/* <TableCell >{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell> */}\r\n                                            {/* <TableCell >{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\r\n                                            <TableCell >{row.deliveryToTradedQuantity}%</TableCell> */}\r\n\r\n                                            {/* <TableCell >{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell> */}\r\n                                            {/* <TableCell >{row.totalTradedValue}L</TableCell> */}\r\n\r\n                                            {/* <TableCell  >{row.open}</TableCell>\r\n                                                <TableCell  >{row.dayHigh}</TableCell>\r\n                                                <TableCell  >{row.dayLow}</TableCell>\r\n                                                <TableCell  >{row.previousClose}</TableCell> */}\r\n\r\n                                            {/* <TableCell style={{ background: \"#eceff1\" }} >\r\n\r\n                                                {row.delHistory && row.delHistory.map(item => (\r\n                                                    <span> {new Date(item.datetime).toLocaleDateString()}  &nbsp;\r\n                                                        <span title={\"quantityTraded \" + item.quantityTraded}> {(item.quantityTraded / 100000)}L  </span>  &nbsp;\r\n                                                        <span title={\"deliveryToTradedQuantity\"}> {item.deliveryToTradedQuantity}%  </span>  &nbsp;\r\n                                                        <span title={\"deliveryQuantity \" + item.deliveryQuantity}> {(item.deliveryQuantity / 100000)}L  </span>  &nbsp;\r\n                                                        <span style={{ color: item.todayChange > 0 ? \"green\" : \"red\" }}> ({item.todayChange}%)   </span>\r\n                                                        &nbsp;  <br /></span>\r\n                                                ))}\r\n\r\n                                            </TableCell> */}\r\n\r\n                                            {/* <TableCell >{row.bestbuyquantity}</TableCell>\r\n                                            <TableCell >{row.bestbuyprice}</TableCell>\r\n                                            <TableCell >{row.bestsellquantity}</TableCell>\r\n                                            <TableCell >{row.bestsellprice}</TableCell> */}\r\n\r\n                                               \r\n\r\n                                        </TableRow>\r\n                                    )) : <Spinner />}\r\n                                 \r\n                                    </TableBody>\r\n\r\n                             \r\n                            </Table>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n\r\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n                                \r\n                                <Grid item xs={12} sm={12}  >\r\n\r\n                                    <Grid  spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n                                        <Grid item xs={12} sm={10} > \r\n                                         <Typography><b> {this.state.lightChartSymbol} </b></Typography>\r\n\r\n                                         </Grid>\r\n                                        \r\n\r\n                                        <Grid item xs={12} sm={2} > \r\n                                         <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\r\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\r\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n                                        </Select>\r\n                                        </FormControl>\r\n                                    \r\n\r\n                                         </Grid>\r\n                                       \r\n                                    </Grid>\r\n                                    \r\n\r\n                                        \r\n\r\n                                    <div id=\"showChartTitle\"></div>\r\n                                    <div id=\"tvchart\"></div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"40vh\" }} >\r\n                                <Typography> <b> {this.state.lightChartSymbol} </b> </Typography>\r\n\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol<b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\r\n\r\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\r\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\r\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )) : ''}\r\n\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    \r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    }\r\n};\r\n\r\nexport default LiveBid;\r\n\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\nimport { w3cwebsocket } from 'websocket';\r\n//import ChartDialog from './ChartDialog';\r\nimport pako from 'pako';\r\nimport AdminService from \"../service/AdminService\";\r\nimport Notify from \"../../utils/Notify\";\r\nimport { createChart } from 'lightweight-charts';\r\nimport * as moment from 'moment';\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport { SMA, RSI, VWAP, BollingerBands, rsi } from 'technicalindicators';\r\nimport vwap from 'vwap';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport \"./ViewStyle.css\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\r\n\r\n// import vwap from 'vwap';\r\n// import { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\n// import SimpleExpansionPanel from \"./SimpleExpansionPanel\";\r\n// import SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\r\n// import LiveBidsExpantion from \"./LiveBidsExpantion\";\r\n// import WatchListTab from \"./WatchListTab\"; \r\n// import OrderWatchlist from './OrderWatchlist';\r\n\r\n\r\nclass LiveBid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O', 'NIFTY BANK'\r\n            symbolList: [],\r\n            dayhighLow: [],\r\n            actionList: localStorage.getItem('actionList') && JSON.parse(localStorage.getItem('actionList')) || [],\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            softedIndexList: [],\r\n            listofHighLow: localStorage.getItem('listofHighLow') && JSON.parse(localStorage.getItem('listofHighLow')) || [], \r\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\r\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\r\n            liveCandleHistory: localStorage.getItem('liveCandleHistory') && JSON.parse(localStorage.getItem('liveCandleHistory')) || [],\r\n            cursor: 0,\r\n            volumePriceBONames:'', \r\n            candleHistoryFlag: false,\r\n            lightChartSymbol: \"Select Symbol for Chart\",\r\n            isSpeek: localStorage.getItem('isSpeek') === 'true' ? true : false,\r\n            sortedType: \"pChange\",\r\n            sluglist: {\r\n                'NIFTY 50': 'nifty',\r\n                'NIFTY AUTO': 'cnxAuto',\r\n                'NIFTY BANK': 'bankNifty',\r\n                'NIFTY ENERGY': 'cnxEnergy',\r\n                'NIFTY FIN SERVICE': 'cnxFinance',\r\n                'NIFTY FMCG': 'cnxFMCG',\r\n                'NIFTY IT': 'cnxit',\r\n                'NIFTY MEDIA': 'cnxMedia',\r\n                'NIFTY METAL': 'cnxMetal',\r\n                'NIFTY PHARMA': 'cnxPharma',\r\n                'NIFTY PSU BANK': 'cnxPSU',\r\n                'NIFTY REALTY': 'cnxRealty',\r\n                'NIFTY PVT BANK': 'niftyPvtBank',\r\n                'NIFTY CONSUMPTION': 'cnxConsumption',\r\n                'NIFTY CPSE': 'cpse',\r\n                'NIFTY INFRA': 'cnxInfra',\r\n                'NIFTY MNC': 'cnxMNC',\r\n                'NIFTY PSE': 'cnxPSE',\r\n\r\n                //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\r\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\r\n                // 'NIFTY GROWSECT 15': 'ni15',H\r\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\r\n                // 'NIFTY SERV SECTOR': 'cnxService',\r\n                // 'NIFTY100 LIQ 15': 'nseliquid',\r\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\r\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\r\n                // 'NIFTY50 VALUE 20': 'nv20',\r\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\r\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\r\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\r\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\r\n                'NIFTY NEXT 50': 'juniorNifty',\r\n                'NIFTY MIDCAP 50': 'niftyMidcap50',\r\n                'NIFTY HEALTHCARE': \"notfound\",\r\n                'NIFTY OIL AND GAS': \"notfound\",\r\n                'NIFTY 100': \"notfound\",\r\n                'HIGH BETA STOCK': \"notfound\",\r\n\r\n                'NIFTY CONSR DURBL': 'notfond'\r\n            },\r\n        };\r\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\r\n        this.nameInput = React.createRef();\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"WS Bid Live\";\r\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist],  originalList: this.state.staticData[this.state.selectedWatchlist] }, ()=> {\r\n          \r\n\r\n           const FIVE_MIN = (1000 * 60 * 15);\r\n        //   this.waitAndDoSomething(FIVE_MIN); \r\n        this.calculateCandleVolume(); \r\n            var msToNextRounded5Min = FIVE_MIN - (Date.now() % FIVE_MIN);\r\n             msToNextRounded5Min = msToNextRounded5Min - 1000 ;\r\n\r\n             let interval = 5; \r\n             if(this.state.timeFrame == 'FIFTEEN_MINUTE')\r\n             interval = 15; \r\n             if(this.state.timeFrame == 'TEN_MINUTE')\r\n             interval = 10; \r\n             else if(this.state.timeFrame == 'FIVE_MINUTE') \r\n             interval = 5; \r\n             else if(this.state.timeFrame == 'ONE_MINUTE') \r\n             interval = 1; \r\n\r\n            var date = new Date();\r\n            let nextExec = (59 - date.getSeconds()) * 1000; \r\n            console.log(\"next59Exec\", nextExec, 'msToNextRounded5Min', msToNextRounded5Min,  new Date().toLocaleTimeString()); \r\n            setTimeout(() => {\r\n                setInterval(this.calculateCandleVolume, 60000 * interval);\r\n                console.log(\"nextExeced\",new Date().toLocaleTimeString() ); \r\n\r\n                this.calculateCandleVolume(); \r\n\r\n            }, msToNextRounded5Min);\r\n\r\n        });\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode }, function () {\r\n            this.wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n            this.updateSocketDetails(this.wsClint);\r\n        });\r\n\r\n        const domElement = document.getElementById('tvchart');\r\n        document.getElementById('tvchart').innerHTML = '';\r\n\r\n        let width = window.screen.width / 3.1, height = window.screen.height / 2;\r\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n            width = window.screen.width ;\r\n        }\r\n\r\n\r\n        const chart = createChart(domElement, { width: width, height: height, timeVisible: true, secondsVisible: true, });\r\n        const candleSeries = chart.addCandlestickSeries();\r\n        var smaLineSeries = chart.addLineSeries({\r\n            color: 'rgba(4, 111, 232, 1)',\r\n            lineWidth: 2,\r\n        });\r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\r\n\r\n        this.getUpdateIndexData()\r\n\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n            setInterval(() => {\r\n                if (this.state.token) {\r\n                    this.showStaticChart(this.state.token, this.state.lightChartSymbol,0);\r\n                }\r\n            }, 5000);\r\n        }\r\n\r\n        this.updatePreviousVolume(); \r\n        // setTimeout(() => {\r\n    \r\n        //     this.storeChartData();\r\n\r\n        // },1000);\r\n\r\n       // this.updateDayChartHighLow(); \r\n       \r\n    }\r\n    makeConnection = (wsClint) => {\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        wsClint.send(firstTime_req);\r\n        this.updateSocketWatch(wsClint);\r\n    }\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n        //  console.log(newarray.join(''))\r\n        return newarray.join('');\r\n    }\r\n\r\n\r\n\r\n    updateSocketWatch = (wsClint) => {\r\n\r\n        var channel = this.state.symbolList.map(element => {\r\n            return 'nse_cm|' + element.token;\r\n        });\r\n        channel = channel.join('&');\r\n        var updateSocket = {\r\n            \"task\": \"mw\",\r\n            \"channel\": channel,\r\n            \"token\": this.state.feedToken,\r\n            \"user\": this.state.clientcode,\r\n            \"acctid\": this.state.clientcode\r\n        }\r\n      //  console.log(\"wsClint\", wsClint)\r\n\r\n        wsClint.send(JSON.stringify(updateSocket));\r\n    }\r\n\r\n    takeAction = (symbol, action) => {\r\n        let isfound = this.state.actionList.length && this.state.actionList.filter(item => item.symbol === symbol);\r\n        if (!isfound.length) {\r\n            let data = { symbol: symbol, action: action, updateTime: new Date().toLocaleTimeString() };\r\n            this.setState({ actionList: [...this.state.actionList, data] }, function () {\r\n                localStorage.setItem('actionList', JSON.stringify(this.state.actionList));\r\n            //    this.speckIt(symbol + \" \" + action);\r\n\r\n                console.log(data.symbol + \" \" + data.action + \" \" + data.updateTime);\r\n                this.setState({ lastUpdateAction: data.symbol + \" \" + data.action + \" \" + data.updateTime });\r\n\r\n                window.document.title = data.symbol + \" \" + data.action + \" \" + data.updateTime;\r\n            });\r\n        }\r\n    }\r\n    updateSocketDetails = (wsClint) => {\r\n        wsClint.onopen = (res) => {\r\n            this.makeConnection(wsClint);\r\n            this.updateSocketWatch(wsClint);\r\n        }\r\n        wsClint.onmessage = (message) => {\r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n            var liveData = JSON.parse(data);\r\n\r\n            var symbolListArray = this.state.symbolList;\r\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\r\n                var foundLive = liveData.filter(row => row.tk == element.token);\r\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\r\n\r\n                    symbolListArray[index].ltp = foundLive[0].ltp;\r\n                    symbolListArray[index].pChange = foundLive[0].nc;\r\n                    symbolListArray[index].totalBuyQuantity = foundLive[0].tbq;\r\n                    symbolListArray[index].totalSellQuantity = foundLive[0].tsq;\r\n                    symbolListArray[index].totalTradedVolume = foundLive[0].v;\r\n                    symbolListArray[index].averagePrice = foundLive[0].ap;\r\n                    symbolListArray[index].lowPrice = foundLive[0].lo;\r\n                    symbolListArray[index].highPrice = foundLive[0].h;\r\n                    symbolListArray[index].openPrice = foundLive[0].op;\r\n                    symbolListArray[index].volume = foundLive[0].v;\r\n\r\n                    symbolListArray[index].bestbuyquantity = foundLive[0].bq;\r\n                    symbolListArray[index].bestbuyprice = foundLive[0].bp;\r\n                    symbolListArray[index].bestsellquantity = foundLive[0].bs;\r\n                    symbolListArray[index].bestsellprice = foundLive[0].sp;\r\n                    symbolListArray[index].ltt = moment(foundLive[0].ltt,'YYYY-MM-DD HH:mm:ss').toString();\r\n\r\n                    // symbolListArray[index].upperCircuitLimit = foundLive[0].ucl;\r\n                    // symbolListArray[index].lowerCircuitLimit = foundLive[0].lcl;\r\n\r\n                    symbolListArray[index].buytosellTime = (foundLive[0].tbq / foundLive[0].tsq).toFixed(2);\r\n                    symbolListArray[index].selltobuyTime = (foundLive[0].tsq / foundLive[0].tbq).toFixed(2);\r\n\r\n                    let voldata = this.comparePreviousVolume(element.symbol, foundLive[0].v, foundLive[0].ltp, element.token,element.name ); \r\n\r\n                    let highlow =  this.updateHighLow(element.name, foundLive[0].ltp, foundLive[0].v, element.token); \r\n                    symbolListArray[index].high = highlow &&  highlow.high; \r\n                    symbolListArray[index].low = highlow &&  highlow.low; \r\n\r\n                    symbolListArray[index].highupdated = highlow &&  highlow.highupdated; \r\n                    symbolListArray[index].lowupdated = highlow &&  highlow.lowupdated; \r\n\r\n                    \r\n\r\n                    symbolListArray[index].volBreakoutCount = voldata.brokenCount; \r\n                    symbolListArray[index].priceVolBreakout = voldata.priceVolBreakout; \r\n                    symbolListArray[index].rsi = voldata.rsi; \r\n\r\n                    if (foundLive[0].tbq / foundLive[0].tsq > 2) {\r\n                        symbolListArray[index].highlightbuy = true;\r\n                        this.takeAction(element.symbol, ' buying')\r\n                    } else {\r\n                        symbolListArray[index].highlightbuy = false;\r\n                    }\r\n\r\n                    if (foundLive[0].tsq / foundLive[0].tbq > 2) {\r\n                        symbolListArray[index].highlightsell = true;\r\n                        this.takeAction(element.symbol, ' selling')\r\n\r\n                    } else {\r\n                        symbolListArray[index].highlightsell = false;\r\n                    }\r\n\r\n                    if (this.state.token == element.token) {\r\n                        this.setState({ livePrice: foundLive[0].ltp, livePChange: foundLive[0].nc })\r\n                    }\r\n\r\n                    \r\n                    // let found = []; //this.state.listofHighLow.filter(item => item.symbol == element.symbol); \r\n                    // if(found.length > 0 && foundLive[0].ltp >= 200 && foundLive[0].ltp <= 10000 && new Date().getHours() < 9 && new Date().getMinutes() <= 30){\r\n                    //     if(!localStorage.getItem(symbolListArray[index].symbol)){\r\n                    //         if(symbolListArray[index].symbol == found[0].symbol && foundLive[0].ltp > found[0].high){\r\n                    //             localStorage.setItem(symbolListArray[index].symbol, \"ok\")\r\n                    //             this.speckIt((symbolListArray[index].symbol +' previous day high broken ').toLocaleLowerCase())\r\n                    //             console.log(symbolListArray[index].name, foundLive[0].ltp, \"previous day high broken BUY\")\r\n                    //             var symbolInfo = {\r\n                    //                 token: symbolListArray[index].token,\r\n                    //                 symbol: symbolListArray[index].symbol,\r\n                    //                 qtyToTake: 1,\r\n                    //                 producttype: 'INTRADAY'\r\n                    //             }\r\n                    //             CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                    //         }\r\n                    //         if(symbolListArray[index].symbol == found[0].symbol && foundLive[0].ltp < found[0].low){\r\n                    //             localStorage.setItem(symbolListArray[index].symbol, \"ok\")\r\n                    //             this.speckIt((symbolListArray[index].symbol +' previous day low broken ').toLocaleLowerCase())\r\n                    //             console.log(symbolListArray[index].name, foundLive[0].ltp, \"previous day high broken SELL\")\r\n                    //             var symbolInfo = {\r\n                    //                 token: symbolListArray[index].token,\r\n                    //                 symbol: symbolListArray[index].symbol,\r\n                    //                 qtyToTake: 1,\r\n                    //                 producttype: 'INTRADAY'\r\n                    //             }\r\n                    //             CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                    //         }\r\n                    //     }\r\n                    // } \r\n\r\n                    if(voldata.priceVolBreakout && foundLive[0].ltp >= 200 && foundLive[0].ltp <= 10000 && new Date().getHours() > 10 && new Date().getHours() < 15){\r\n                        if(!localStorage.getItem(symbolListArray[index].symbol)){\r\n                            localStorage.setItem(symbolListArray[index].symbol, \"found at \" + new Date().toLocaleTimeString())\r\n                            this.speckIt((symbolListArray[index].symbol +' price volume Breakout ').toLocaleLowerCase())\r\n                            console.log(symbolListArray[index].name, foundLive[0].ltp,\" price volume Breakout\")\r\n                            var symbolInfo = {\r\n                                token: symbolListArray[index].token,\r\n                                symbol: symbolListArray[index].symbol,\r\n                                qtyToTake: 1,\r\n                                producttype: 'INTRADAY'\r\n                            }\r\n                            CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\r\n                            // if(symbolListArray[index].symbol == found[0].symbol && foundLive[0].ltp < found[0].low){\r\n                            //     localStorage.setItem(symbolListArray[index].symbol, \"ok\")\r\n                            //     this.speckIt((symbolListArray[index].symbol +' previous day low broken ').toLocaleLowerCase())\r\n                            //     console.log(symbolListArray[index].name, foundLive[0].ltp, \"previous day high broken SELL\")\r\n                            //     var symbolInfo = {\r\n                            //         token: symbolListArray[index].token,\r\n                            //         symbol: symbolListArray[index].symbol,\r\n                            //         qtyToTake: 1,\r\n                            //         producttype: 'INTRADAY'\r\n                            //     }\r\n                            //     CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\r\n                            // }\r\n                        }\r\n                    }\r\n                    localStorage.setItem(symbolListArray[index].symbol, \"ok\") \r\n               //     console.log(\"ws onmessage: \", foundLive[0]);\r\n\r\n                  \r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            let shortBy = this.state.sortedType;\r\n            symbolListArray && symbolListArray.sort(function (a, b) {\r\n                return b[shortBy] - a[shortBy];\r\n            });\r\n            this.setState({ symbolList: symbolListArray }, ()=> {\r\n              //  console.log('updated',  this.state.symbolList )\r\n            });\r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e);\r\n            this.makeConnection(this.wsClint);\r\n        }\r\n\r\n        setInterval(() => {\r\n            console.log(\"this.wsClint\", this.wsClint)\r\n\r\n            if(this.wsClint.readyState != 1){\r\n                this.makeConnection(this.wsClint);\r\n            }\r\n\r\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n            console.log(\"Request :- \" + _req);\r\n            wsClint.send(_req);\r\n        }, 59000);\r\n    }\r\n\r\n    calculateRSI = (candles) => {\r\n\r\n        let closePrice = []; \r\n        candles.forEach(element => {\r\n            closePrice.push(element.p); \r\n        });\r\n\r\n    //    closePrice.slice(Math.max(closePrice.length - 14, closePrice.length))\r\n\r\n        var inputRSI = { values: closePrice, period: 14 };\r\n        var rsiValues = RSI.calculate(inputRSI);\r\n\r\n      //  console.log('calculateRSI',  candles[candles.length-1], rsiValues)\r\n\r\n        return rsiValues;  \r\n        \r\n    }\r\n\r\n    comparePreviousVolume = (symbol, volume, ltp, token, name) => {   \r\n         let liveCandleHistory = localStorage.getItem('liveCandleHistory') && JSON.parse(localStorage.getItem('liveCandleHistory')) || [];\r\n        let candle =  liveCandleHistory.filter((item) => item.s == symbol); \r\n        if(candle.length>0){\r\n            let currentCandleVol = volume - candle[candle.length-1].v;  let brokenCount=0, priceVolBreakout = 0, dayPriceVolBreakout = 0, rsi=0;\r\n            rsi = this.calculateRSI(candle); \r\n\r\n            if(currentCandleVol > candle[candle.length-1].cv){\r\n                for (let index = candle.length-1; index > 0; index--) {\r\n                    if(currentCandleVol > candle[index].cv){\r\n                        brokenCount++;\r\n                    }else{\r\n                        break; \r\n                    }\r\n                }\r\n                let lastCandleChange = (ltp - candle[candle.length-1].p) * 100/candle[candle.length-1].p; \r\n                let log = symbol + ' '+ brokenCount +\" candles volume broken with \" + lastCandleChange.toFixed(2) +'%'; \r\n               // console.log(log, candle[candle.length-1],  currentCandleVol, new Date().toLocaleTimeString() );\r\n              //  this.speckIt(log);\r\n                if(brokenCount >= 5 && (lastCandleChange >= 0.45)){ // || lastCandleChange <= -0.5\r\n                  \r\n                    if(!localStorage.getItem(symbol)){\r\n                        this.speckIt(log);\r\n                        let log = \"price and volume breakout in \" + symbol + ' with '+ brokenCount +\" candles with \" + lastCandleChange.toFixed(2) +'%'; \r\n                        console.log(log, candle[candle.length-1],  currentCandleVol, new Date().toLocaleTimeString() );\r\n                        this.setState({ volumePriceBONames : this.state.volumePriceBONames+ \" VP Buy\"+name + \"at\" + new Date().toLocaleTimeString() + '\\n' });\r\n                        this.showStaticChart(token, name, 0);\r\n                    }\r\n                    priceVolBreakout = 1;   \r\n                }\r\n                \r\n                // if( brokenCount == candle.length-1 && (lastCandleChange >= 0.5 || lastCandleChange <= -0.5)){\r\n                //     dayPriceVolBreakout = 1; \r\n                //     let log = \"Day price and volume breakout in \" + symbol + ' with '+ brokenCount +\" candles with \" + lastCandleChange.toFixed(2) +'%'; \r\n                //     console.log(log, candle[candle.length-1],  currentCandleVol, new Date().toLocaleTimeString() );\r\n                // //    this.speckIt(log);\r\n                // }\r\n            }\r\n            return {cv : currentCandleVol,  brokenCount:  brokenCount,  priceVolBreakout: priceVolBreakout, dayPriceVolBreakout: dayPriceVolBreakout,  rsi: rsi[rsi.length-1]}; \r\n        }else{\r\n            return {cv : volume,  brokenCount:  0, priceVolBreakout: 0,  dayPriceVolBreakout: 0, rsi:0}; \r\n        }\r\n    }\r\n\r\n    updateHighLow =(name, ltp, volume, token)=> {\r\n\r\n        let OriginalHist = localStorage.getItem('OriginalHist') && JSON.parse(localStorage.getItem('OriginalHist')) || [];\r\n        let stockcandle =  OriginalHist.filter((item) => item.s == name); \r\n\r\n        let candle = stockcandle.length ? stockcandle[0].d : []; \r\n\r\n        let lastCandleInfo = candle[candle.length-1]; \r\n         \r\n      //  console.log(\"previous candle before\", name, lastCandleInfo)\r\n\r\n        //['2022-03-14T12:45:00+05:30', 41.65, 41.7, 41.55, 41.7, 213369]\r\n        const timeFrameMs = (1000 * 60 * 15);\r\n        var roundOffMin = (timeFrameMs - (Date.now() % timeFrameMs))-1000;\r\n    //    console.log(\"roundOffMin\", name, roundOffMin)\r\n        \r\n\r\n        let highupdated = false, lowupdated = false; \r\n        if(roundOffMin == 0){\r\n            candle.push([moment(new Date()).format('YYYY-MM-DDTHH:mm:ss+05:30'), ltp, ltp, ltp, ltp, 0])\r\n        }else{\r\n\r\n            if(lastCandleInfo){\r\n                if(ltp > lastCandleInfo[2]){\r\n                    lastCandleInfo[2] = ltp; \r\n                }\r\n                \r\n                if(ltp < lastCandleInfo[3]){\r\n                    lastCandleInfo[3] = ltp; \r\n                }\r\n    \r\n                let intradayVol = 0, higerhigh=0, lowerlow=candle[0][3]; \r\n                for (let index = 0; index < candle.length; index++) {\r\n                    const histElement = candle[index];\r\n                    if(new Date(histElement[0]).getDate() == new Date().getDate()){\r\n                        intradayVol += histElement[5]; \r\n\r\n                        if(histElement[2] > higerhigh){\r\n                            higerhigh = histElement[2]; \r\n                        }\r\n\r\n                        if(histElement[3] < lowerlow){\r\n                            lowerlow = histElement[3]; \r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(ltp > higerhigh){\r\n                    highupdated = true;\r\n                    console.log(\"higher high updated\", name, ltp, higerhigh);\r\n                    this.setState({ dayhighLow: [...this.state.dayhighLow, {name : name,token:token, type:\"dayhigh\", time: new Date().toLocaleTimeString()}]})\r\n                    this.showStaticChart(token, name, 0);\r\n                    this.speckIt(name + ' at day high'); \r\n                }\r\n                if(ltp < lowerlow){\r\n                    lowupdated = true;\r\n                    this.setState({ dayhighLow: [...this.state.dayhighLow, {name : name,token:token, type:\"daylow\", time: new Date().toLocaleTimeString()}]})\r\n                    console.log(\"lower low updated\", name, ltp, lowerlow);\r\n                    this.showStaticChart(token, name, 0);\r\n                    this.speckIt(name + ' at day low'); \r\n                }\r\n\r\n\r\n                lastCandleInfo[5] = volume -  intradayVol; \r\n            }\r\n\r\n            localStorage.setItem('OriginalHist', JSON.stringify(OriginalHist) );\r\n            return { high: lastCandleInfo && lastCandleInfo[2], low: lastCandleInfo && lastCandleInfo[3],  lowupdated: lowupdated, highupdated: highupdated };\r\n        }\r\n\r\n      //  console.log(\"previous candle after\", name, lastCandleInfo)\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    calculateCandleVolume = (noSyncVol) => {\r\n\r\n        this.state.symbolList.forEach(element => {\r\n\r\n            let voldata = this.comparePreviousVolume(element.symbol, element.volume,element.ltp, element.token, element.name); \r\n            var data = {\r\n                s: element.symbol, \r\n                t: new Date(),     //new Date().toLocaleTimeString(\"en-GB\", { hour: \"2-digit\",minute: \"2-digit\"}), \r\n                v: element.volume, \r\n                cv: voldata.cv, \r\n                p: element.ltp, \r\n                ch:element.pChange \r\n            }\r\n            element.volBreakoutCount = voldata.brokenCount; \r\n            element.priceVolBreakout = voldata.priceVolBreakout; \r\n            element.rsi = voldata.rsi; \r\n            console.log(element.symbol , \" RSI \", voldata.rsi, new Date().toLocaleTimeString())\r\n\r\n          //  console.log(\"candle live data\",data); \r\n            this.setState({symbolList : this.state.symbolList })\r\n\r\n            this.setState({ liveCandleHistory: [...this.state.liveCandleHistory, data] }, () => {\r\n                if(noSyncVol != 'noSyncVol')\r\n                localStorage.setItem('liveCandleHistory', JSON.stringify(this.state.liveCandleHistory) )\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    callbackAfterOrderDone = (order) => {\r\n        console.log(\"order executed\", order);\r\n    }\r\n\r\n    // waitAndDoSomething =(FIVE_MIN) => {\r\n    // const msToNextRounded5Min = FIVE_MIN - (Date.now() % FIVE_MIN);\r\n    // console.log(`Waiting ${msToNextRounded5Min/60000} min. to next rounded ${FIVE_MIN}.`,new Date().toLocaleTimeString());\r\n    \r\n    //     setTimeout(() => {\r\n    //         console.log('It is now rounded 5 min', new Date().toLocaleTimeString());\r\n    //         this.calculateCandleVolume(); \r\n    //         this.waitAndDoSomething(FIVE_MIN);\r\n    //     }, msToNextRounded5Min);\r\n    // }\r\n\r\n    storeChartData =()=>{\r\n\r\n        let data = {\r\n            dtime : moment( new Date(),'YYYY-MM-DD HH:mm:ss').toString(),\r\n            symbolList : [this.state.symbolList[0]] ,\r\n            analysis: true\r\n        }\r\n\r\n        AdminService.saveCandleHistory(data)\r\n        .then((res) => {\r\n            if (res.data) {\r\n                console.log(res.data)\r\n            }\r\n        })\r\n        .catch((reject) => {\r\n        }).finally((ok) => {\r\n        })\r\n    }\r\n\r\n    getUpdateIndexData = () => {\r\n        this.setState({ softedIndexList: [] })\r\n        AdminService.allIndicesDirectJSON()\r\n            .then((res) => {\r\n\r\n                if (res.data) {\r\n\r\n                    var softedData = res.data && res.data.data;\r\n                    softedData.sort(function (a, b) {\r\n                        return b.percChange - a.percChange;\r\n                    });\r\n\r\n                    for (let index = 0; index < softedData.length; index++) {\r\n                        const element = softedData[index];\r\n                        var slugName = this.state.sluglist[element.indexName];\r\n                        if (slugName) {\r\n                            this.setState({ softedIndexList: [...this.state.softedIndexList, element] });\r\n                        }\r\n                    }\r\n\r\n                    this.makeConnection(this.wsClint)\r\n                    //  this.updateSocketWatch(this.wsClint);\r\n                }\r\n            })\r\n            .catch((reject) => {\r\n                // Notify.showError(\"All Indices API Failed\");\r\n            }).finally((ok) => {\r\n            })\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        if (this.state.isSpeek) {\r\n            var msg = new SpeechSynthesisUtterance();\r\n            msg.text = text.toString();\r\n            window.speechSynthesis.speak(msg);\r\n        }\r\n    }\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value, cursor:0 }, function () {\r\n            var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n            \r\n            if (this.state.selectedWatchlist == \"gainerList\") {\r\n                watchList = localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList'));\r\n            }\r\n            if (this.state.selectedWatchlist == \"looserList\") {\r\n                watchList = localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList'));\r\n            }\r\n\r\n            this.setState({ symbolList: watchList, originalList: watchList}, () => watchList && this.updateSocketWatch(this.wsClint));\r\n\r\n          //  this.updateDayChartHighLow(); \r\n\r\n          if(e.target.name != 'candleHistoryFlag'){\r\n         //   watchList &&  this.updatePreviousVolume(); \r\n            this.updateOriginalHist(); \r\n          }\r\n        });\r\n    }\r\n  \r\n    updateOriginalHist= async()=> {\r\n\r\n           let OriginalHist = localStorage.getItem('OriginalHist') && JSON.parse(localStorage.getItem('OriginalHist')) || [];                                          \r\n\r\n        //    var watchList = this.state.staticData['NIFTY 100']; //NIFTY 100 Securities in F&O\r\n            var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n    \r\n            for (let index = 0; index < watchList.length; index++) { //watchList.length\r\n                const element = watchList[index];\r\n    \r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                let enddate = moment(new Date());\r\n                let startDate = moment(enddate, \"DD-MM-YYYY\").subtract(4, 'days');\r\n    \r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                    \"fromdate\": moment(startDate).format(format1),\r\n                    \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n                        var candleData = histdata.data.slice(histdata.data.length-20, histdata.data.length);;\r\n                        let found =  OriginalHist.filter((item) => item.s == element.name); \r\n                        if(found.length > 0){\r\n                            for (let index = 0; index < OriginalHist.length; index++) {\r\n                                console.log(\"OriginalHist\", OriginalHist[index].s,  element.name); \r\n                                if(OriginalHist[index].s == element.name){\r\n                                    OriginalHist[index].d = candleData; \r\n                                }                                \r\n                            }\r\n                        }else{\r\n                            OriginalHist.push({ s:  element.name, d:  candleData })\r\n                        }\r\n\r\n                        localStorage.setItem('OriginalHist', JSON.stringify(OriginalHist) );\r\n                    } else {\r\n                        console.log(\"candle data emply\");\r\n                    }\r\n                })\r\n        \r\n              \r\n    \r\n                await new Promise(r => setTimeout(r, 310));\r\n            }\r\n    \r\n           \r\n        }\r\n    updateDayChartHighLow= async()=> {\r\n\r\n    //    var watchList = this.state.staticData['NIFTY 100']; //NIFTY 100 Securities in F&O\r\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n\r\n        for (let index = 0; index < watchList.length; index++) { //watchList.length\r\n            const element = watchList[index];\r\n\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            let enddate = moment(new Date());\r\n            let startDate = moment(enddate, \"DD-MM-YYYY\").subtract(7, 'days');\r\n\r\n            let found =  this.state.listofHighLow.filter(item => item.symbol == element.symbol); \r\n\r\n            if(found.length == 0){\r\n\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                    \"fromdate\": moment(startDate).format(format1),\r\n                    \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n                }\r\n        \r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    //console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n        \r\n                        var candleData = histdata.data;\r\n                        candleData.reverse();\r\n                        //    console.log(\"candleData\",element, candleData);\r\n                        console.log(\"lastday\", element, candleData[1]);\r\n                        let lastdayinfo = candleData[1];\r\n                        \r\n                      \r\n                        let high = candleData[0][2]; \r\n                        let low = candleData[0][3]; \r\n\r\n                        if(candleData[1][2] > high){\r\n                            high = candleData[1][2];  \r\n                        }\r\n                        if(candleData[1][3] < low){\r\n                            low = candleData[1][3];  \r\n                        }\r\n\r\n                        var beginningTime = moment('9:15am', 'h:mma');\r\n                        var endTime = moment('3:30pm', 'h:mma');\r\n                        const friday = 5; // for friday\r\n                        var currentTime = moment(new Date(), \"h:mma\");\r\n                        const today = moment().isoWeekday();\r\n                        //market hours\r\n                        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n                             high = candleData[1][2]; \r\n                             low = candleData[1][3]; \r\n\r\n                            if(candleData[2][2] > high){\r\n                                high = candleData[2][2];  \r\n                            }\r\n                            if(candleData[2][3] < low){\r\n                                low = candleData[2][3];  \r\n                            }\r\n                            // if(candleData[1]){\r\n                            //     high = candleData[1][2];  \r\n                            //     low = candleData[1][3]; \r\n                            // }\r\n                          \r\n                        }\r\n                      \r\n    \r\n                        let data = {\r\n                            symbol : element.symbol, \r\n                            high: high, \r\n                            low: low, \r\n                        }\r\n                        \r\n                        this.setState({ listofHighLow: [...this.state.listofHighLow, data] }, function(){\r\n                            console.log(\"highlow\", this.state.listofHighLow)\r\n                            localStorage.setItem(\"listofHighLow\", JSON.stringify(this.state.listofHighLow))\r\n                        });\r\n    \r\n                        // console.log(\"Open=High\", element.symbol, LtpData);                     \r\n                        //var stopLossPrice = LtpData.low - (LtpData.low * TradeConfig.perTradeStopLossPer / 100);\r\n        \r\n                        // if (LtpData.ltp > lastdayinfo[2]) {\r\n                        //    // let stopLossPrice = LtpData.low - (LtpData.low / 10) / 100;\r\n        \r\n                        //     let stopLossPrice = lastdayinfo[3] - (lastdayinfo[3] / 10) / 100;\r\n                        //     stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); //stopLossPrice\r\n                        //     let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\r\n                        //     let quantity = 1// Math.floor(perTradeExposureAmt / LtpData.ltp);\r\n                        //     console.log(element.symbol + 'ltp ' + LtpData.ltp, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\r\n                        //     var orderOption = {\r\n                        //         transactiontype: 'BUY',\r\n                        //         tradingsymbol: element.symbol,\r\n                        //         symboltoken: element.token,\r\n                        //         buyPrice: 0,\r\n                        //         quantity: quantity,\r\n                        //         stopLossPrice: stopLossPrice\r\n                        //     }\r\n                        //     let mySL = 3.5;\r\n                        //     if (LtpData.ltp >= 200 && LtpData.ltp <= 10000 && stopLossPrice && quantity) {\r\n                        //         this.placeOrderMethod(orderOption);\r\n                        //     }\r\n                        // }\r\n        \r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        console.log(\" candle data emply\");\r\n                    }\r\n                })\r\n            }\r\n    \r\n          \r\n\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    updatePreviousVolume= async()=> {\r\n\r\n        //    var watchList = this.state.staticData['NIFTY 100']; //NIFTY 100 Securities in F&O\r\n            var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n    \r\n            for (let index = 0; index < watchList.length; index++) { //watchList.length\r\n                const element = watchList[index];\r\n    \r\n                const format1 = \"YYYY-MM-DD HH:mm\";\r\n                let enddate = moment(new Date());\r\n                let startDate = moment(enddate, \"DD-MM-YYYY\").subtract(2, 'days');\r\n    \r\n                let found =  this.state.listofHighLow.filter(item => item.symbol == element.symbol); \r\n\r\n                if(found.length == 0){\r\n    \r\n                    var data = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"symboltoken\": element.token,\r\n                        \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                        \"fromdate\": moment(startDate).format(format1),\r\n                        \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n                    }\r\n\r\n            \r\n                    AdminService.getHistoryData(data).then(res => {\r\n                        let histdata = resolveResponse(res, 'noPop');\r\n                        //console.log(\"candle history\", histdata); \r\n\r\n\r\n\r\n                        if (histdata && histdata.data && histdata.data.length) {\r\n            \r\n                            var candleData = histdata.data.slice(histdata.data.length-20, histdata.data.length);;\r\n\r\n                            //    console.log(\"candleData\",element, candleData);\r\n                            console.log(\"history\",element.symbol, candleData);\r\n\r\n                            this.deletePrevVolume(element.symbol)\r\n\r\n                            let intradayVol = 0; \r\n                            let storedPrevVol = JSON.parse(localStorage.getItem('liveCandleHistory')) && JSON.parse(localStorage.getItem('liveCandleHistory')) || [];                     \r\n\r\n                            for (let index = 0; index < candleData.length; index++) {\r\n                                const histElement = candleData[index];\r\n                               \r\n                                if(new Date(histElement[0]).getDate() == new Date().getDate()){\r\n                                    intradayVol += histElement[5]; \r\n                                }\r\n                                \r\n                                var data = {\r\n                                    s: element.symbol, \r\n                                    t: histElement[0],   //new Date(histElement[0]).toLocaleTimeString(\"en-GB\", { hour: \"2-digit\",minute: \"2-digit\"}), \r\n                                    v: intradayVol, \r\n                                    cv: histElement[5], \r\n                                    p: histElement[4], \r\n                                    ch:0\r\n                                }\r\n                                storedPrevVol.push(data); \r\n                            }\r\n\r\n                            localStorage.setItem('liveCandleHistory', JSON.stringify(storedPrevVol) )\r\n\r\n                        } else {\r\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                            console.log(\" candle data emply\");\r\n                        }\r\n                    })\r\n                }\r\n        \r\n              \r\n    \r\n                await new Promise(r => setTimeout(r, 310));\r\n            }\r\n    \r\n           \r\n        }\r\n\r\n    deletePrevVolume = (symbol) => {\r\n        let storedPrevVol = JSON.parse(localStorage.getItem('liveCandleHistory')) && JSON.parse(localStorage.getItem('liveCandleHistory')) || [];                     \r\n        let newData = [];                       \r\n        for (let index = 0; index < storedPrevVol.length; index++) {\r\n            const element = storedPrevVol[index];\r\n            if(symbol != element.s){\r\n                newData.push(element);\r\n            }\r\n        }\r\n        console.log(\"delete symbol data\", symbol, newData  )\r\n        localStorage.setItem('liveCandleHistory', JSON.stringify(newData) )\r\n        return true; \r\n    }\r\n    sortByColumn = (type) => {\r\n        this.state.symbolList.sort(function (a, b) {\r\n            return b[type] - a[type];\r\n        });\r\n        this.setState({ symbolList: this.state.symbolList, sortedType: type });\r\n    }\r\n\r\n    // checkLiveBids = async () => {\r\n    //     var watchList = this.state.staticData[this.state.selectedWatchlist];\r\n    //     this.setState({ symbolList: watchList});\r\n    // }\r\n    // getLTP = (symbol, token) => {\r\n    //     var data = {\r\n    //         \"exchange\": \"NSE\",\r\n    //         \"tradingsymbol\": symbol,\r\n    //         \"symboltoken\": token,\r\n    //     }\r\n    //     AdminService.getLTP(data).then(res => {\r\n    //         let data = resolveResponse(res, 'noPop');\r\n    //         var LtpData = data && data.data;\r\n\r\n    //         if (LtpData && LtpData.ltp)\r\n    //             this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close) });\r\n    //     })\r\n    // } \r\n\r\n    convertToDecimal = (num) => {\r\n        if (!isNaN(num)) {\r\n\r\n            return num.toFixed(2);\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n\r\n    convertToFloat = (str) => {\r\n        if (!isNaN(str)) {\r\n            return \"(\" + ((str / 100000).toFixed(2)) + \"L)\";\r\n        }\r\n    }\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            //    console.log(\"time\", this.state.timeFrame);\r\n            this.showStaticChart();\r\n        });\r\n    }\r\n    handleKeyDown = (e) => {\r\n\r\n        //38 for down and 40 for up key\r\n        if (e.keyCode === 38 && this.state.cursor > 0) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\r\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\r\n        }\r\n\r\n        if(this.state.cursor === this.state.symbolList.length-1){\r\n            this.setState({ cursor: 0});\r\n        }\r\n      //  console.log(\"e\", e, \"cursor\", this.state.cursor, \"this.state.symbolList.length\", this.state.symbolList.length);\r\n\r\n        setTimeout(() => {\r\n            this.updateCandleOnkey();\r\n        }, 100);\r\n\r\n    }\r\n\r\n\r\n    updateCandleOnkey = () => {\r\n        var selectedKeyRow = localStorage.getItem('selectedKeyRow') && JSON.parse(localStorage.getItem('selectedKeyRow'));\r\n        \r\n        if (selectedKeyRow && selectedKeyRow.token && selectedKeyRow.symbol) {\r\n            this.setState({ tradingsymbol: selectedKeyRow.symbol, symboltoken: selectedKeyRow.token }, function () {\r\n                this.showStaticChart(selectedKeyRow.token, selectedKeyRow.symbol, this.state.cursor);\r\n            });\r\n\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n\r\n        localStorage.setItem('isSpeek', event.target.checked);\r\n        this.setState({ isSpeek: event.target.checked }, () => {\r\n            console.log(\"isSpeek\", this.state.isSpeek, event.target.checked);\r\n        })\r\n\r\n    };\r\n    calculateSMA = (data, count) => {\r\n\r\n        //  console.log(\"smarowdata\", data, count);\r\n\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n    showStaticChart = (token, symbol, index) => {\r\n\r\n        console.log('token, symbol', token, symbol)\r\n        \r\n\r\n\r\n        if (token)\r\n            this.setState({ chartStaticData: '', token: token }, function () {\r\n                console.log('reset done', token);\r\n            });\r\n\r\n        console.log(\"cursor\", this.state.cursor, \"this.state.symbolList.length\", this.state.symbolList.length);\r\n\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        let beginningTime = moment('9:15am', 'h:mma');\r\n\r\n        if (this.state.timeFrame == 'ONE_MINUTE') {\r\n            var time = moment.duration(\"00:60:00\");\r\n            beginningTime = moment(new Date()).subtract(time);\r\n        }\r\n\r\n        if (this.state.candleHistoryFlag) {\r\n            var time = moment.duration(\"1000:00:00\");\r\n            if (this.state.timeFrame == 'ONE_MINUTE')\r\n                time = moment.duration(\"100:00:00\");\r\n            beginningTime = moment(new Date()).subtract(time);\r\n        }\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token || this.state.token,\r\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(beginningTime).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let historyData = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (historyData && historyData.data) {\r\n\r\n                var data = historyData.data;\r\n\r\n\r\n                const cdata = data.map(d => {\r\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                });\r\n\r\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                data.forEach((element, loopindex) => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                    closeingData.push(element[4]);\r\n                    highData.push(element[2]);\r\n                    lowData.push(element[3]);\r\n                    openData.push(element[3]);\r\n                    valumeData.push(element[5]);\r\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                });\r\n\r\n                var input = {\r\n                    period: 20,\r\n                    values: bbdata,\r\n                    stdDev: 2\r\n                }\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                //   console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                //  console.log(token, \"Bolinger band\", input, bb);\r\n\r\n\r\n                var inputRSI = { values: closeingData, period: 14 };\r\n                var rsiValues = RSI.calculate(inputRSI);\r\n\r\n               console.log(symbol,data[data.length-1],  \"Rsi\", inputRSI, rsiValues);\r\n             //   console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\r\n            \r\n\r\n                this.setState({  lightChartSymbol: symbol, chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\r\n                    // candleSeries.setData(this.state.chartStaticData); \r\n                    this.state.candleSeries.setData(this.state.chartStaticData);\r\n\r\n                    this.state.volumeSeries.setData(volumeSeriesData);\r\n\r\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\r\n\r\n                    this.state.smaLineSeries.setData(smaData);\r\n\r\n\r\n                    this.state.chart.subscribeCrosshairMove((param) => {\r\n\r\n                        var getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n                        var string = \"\";\r\n                        var change = \"\";\r\n\r\n                        for (var elem of getit) {\r\n\r\n                            if (typeof elem[1] == 'object') {\r\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n                                string += \" Chg%: <b>\" + change.toFixed(2) + '%</b>';\r\n                                string += \" Chg: <b>\" + (elem[1].close - elem[1].open).toFixed(2) + '</b>';\r\n                                string += \" O: <b>\" + elem[1].open + \"</b>\";\r\n                                string += \" H: <b>\" + elem[1].high + \"</b>\";\r\n                                string += \" L: <b>\" + elem[1].low + \"</b>\";\r\n                                string += \" C: <b>\" + elem[1].close + \"</b>\";\r\n                             \r\n                            } else {\r\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\r\n                            }\r\n                        }\r\n\r\n                        if (param.time)\r\n                            string += \" T: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\r\n                        else\r\n                            string += \" <b>Time: </b>\";\r\n\r\n\r\n                        const domElement = document.getElementById('showChartTitle');\r\n\r\n\r\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\r\n                        if (change < 0)\r\n                            str = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n                        domElement.innerHTML = str;\r\n                    });\r\n\r\n\r\n                });\r\n\r\n                data && data.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (data.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\r\n                    this.setState({ InstrumentHistroy: data });\r\n\r\n\r\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\r\n                    data.forEach(element => {\r\n\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n                        if (per >= 0.3) {\r\n                            upsideMoveCount += 1;\r\n                        }\r\n                        if (per <= -0.3) {\r\n                            downMoveCount += 1;\r\n                        }\r\n\r\n                        totalSum += per;\r\n\r\n                    });\r\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount,cursor: index });\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    findSymbol = (e) => {\r\n\r\n\r\n        let input = e.target.value; \r\n\r\n        let found =  this.state.originalList.filter(item => item.name.includes(input.toUpperCase())); \r\n        \r\n        this.setState({ symbolList : found}); \r\n\r\n        console.log(input, found);\r\n\r\n        if(!input){\r\n            this.setState({ symbolList : this.state.originalList}); \r\n        }\r\n    }\r\n    copyName =(name)=> {\r\n        navigator.clipboard\r\n        .writeText(name)\r\n        .then(() => {\r\n          Notify.showSuccess(name + \" copied\");\r\n        })\r\n        .catch(() => {\r\n          alert(\"something went wrong\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        // if(this.state.softedIndexList.length == 0)  {\r\n        //     this.setState({softedIndexList  : this.state.totalWatchlist})\r\n        // }\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar LoadSymbolDetails={this.LoadSymbolDetails} />\r\n                {/* <ChartDialog /> */}\r\n                <Grid direction=\"row\" container>\r\n\r\n                \r\n\r\n                    <Grid item xs={12} sm={6} >\r\n\r\n                        <Paper style={{ padding: \"10px\" }} >\r\n\r\n                            <Grid justify=\"space-between\"\r\n                                container spacing={1}>\r\n\r\n\r\n\r\n\r\n                                <Grid item xs={8} sm={6} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                            {/* <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem> */}\r\n                                            <MenuItem value={\"gainerList\"}>{\"Gainer List (\" + this.state.gainerList.length + \")\"}</MenuItem>\r\n                                             <MenuItem value={\"looserList\"}>{\"Looser List (\" + this.state.looserList.length + \")\"}</MenuItem>\r\n                                            {this.state.softedIndexList && this.state.softedIndexList.map(element => (\r\n                                                <MenuItem style={{ color: element.percChange > 0 ? \"green\" : \"red\" }} value={element.indexName}>{element.indexName} ({element.percChange}%)</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                            {/* {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            } */}\r\n                                            <MenuItem value={\"Securities in F&O\"}>{\"Securities in F&O\"}</MenuItem>\r\n\r\n                                            <MenuItem value={\"High Beta Stock\"}>{\"High Beta Stock\"}</MenuItem>\r\n\r\n                                            \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={4} > \r\n                                <form name='keyForm' >\r\n                                    {/* <InputLabel htmlFor=\"gender\">Search</InputLabel> */}\r\n\r\n                                    <input id='keyid' name='keyid'\r\n                                        placeholder='Search: tcs'\r\n                                        onKeyDown={this.handleKeyDown} \r\n                                        onChange={this.findSymbol}\r\n                                        autofocus=\"true\"\r\n                                        type='text'\r\n                                        />\r\n                                </form>\r\n                              \r\n                                </Grid>\r\n\r\n                                <Grid item xs={4} sm={2} > \r\n                                 {/* this.calculateCandleVolume(); this.getUpdateIndexData() */}\r\n                                    <Button variant=\"\" style={{ marginRight: '20px' }} onClick={() => this.calculateCandleVolume('noSyncVol')}>Refresh</Button>                              \r\n                                </Grid>\r\n\r\n\r\n                                \r\n\r\n\r\n\r\n                                {/* <Grid item xs={12} sm={3} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.getUpdateIndexData()}>Refresh</Button>\r\n                                    \r\n                                       <FormGroup>\r\n                                        <FormControlLabel\r\n                                        control={<Switch checked={this.state.isSpeek} onChange={this.handleChange} aria-label=\"Speek ON/OFF\" />}\r\n                                        label={this.state.isSpeek ? 'Speak Yes'  : 'Speak No'}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Grid> */}\r\n\r\n                                {/* <Grid item xs={12} sm={1} >\r\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.backupData()}>BackUp</Button>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={1} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Back Date</InputLabel>\r\n                                        <Select value={this.state.backDate} name=\"backDate\" onChange={this.onChangeBackDate}>\r\n                                            <MenuItem value={\"\"}>{\"Select Date\"}</MenuItem>\r\n                                            {this.state.backupDateList && this.state.backupDateList.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> */}\r\n\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\r\n\r\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                    <TableRow variant=\"head\" >\r\n\r\n                                        {/* <TableCell >US Limit</TableCell>\r\n                                        <TableCell >LS Limit</TableCell> */}\r\n\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"buytosellTime\")}>buyTosell(x)</Button>  </TableCell>\r\n                                        <TableCell  ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}>sellTobuy(x)</Button>  </TableCell> */}\r\n\r\n                                        <TableCell  style={{background: this.state.sortedType == 'buytosellTime'?'lightgray': \"\"}}><Button onClick={() => this.sortByColumn(\"buytosellTime\")}>Buy Bids</Button>  </TableCell>\r\n                                        <TableCell  style={{background: this.state.sortedType == 'pChange'?'lightgray': \"\"}} align=\"left\"><Button onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\r\n                                        {/* <TableCell >VWAP Price</TableCell> */}\r\n\r\n                                        <TableCell style={{background: this.state.sortedType == 'selltobuyTime'?'lightgray': \"\"}}  ><Button onClick={() => this.sortByColumn(\"selltobuyTime\")}>Sell Bids</Button>  </TableCell>\r\n                                        {/* <TableCell ><Button onClick={() => this.sortByColumn(\"volume\")}> Volume</Button>  </TableCell> */}\r\n                              \r\n                                        <TableCell style={{background: this.state.sortedType == 'volBreakoutCount'?'lightgray': \"\"}}  ><Button onClick={() => this.sortByColumn(\"volBreakoutCount\")}>Volume</Button>  </TableCell>\r\n                                        <TableCell style={{background: this.state.sortedType == 'priceVolBreakout'?'lightgray': \"\"}}  ><Button onClick={() => this.sortByColumn(\"priceVolBreakout\")}>Vol+Price</Button>  </TableCell>\r\n                                        <TableCell  style={{background: this.state.sortedType == 'rsi'?'lightgray': \"\"}} ><Button onClick={() => this.sortByColumn(\"rsi\")}>RSI</Button>  </TableCell>\r\n                                        <TableCell  style={{background: this.state.sortedType == 'highupdated'?'lightgray': \"\"}} ><Button onClick={() => this.sortByColumn(\"highupdated\")}>High</Button>  </TableCell>\r\n                                        <TableCell style={{background: this.state.sortedType == 'lowupdated'?'lightgray': \"\"}} ><Button onClick={() => this.sortByColumn(\"lowupdated\")}>Low</Button>  </TableCell>\r\n\r\n\r\n                                    \r\n                                        \r\n                                        {/* <TableCell >Other Details </TableCell>\r\n                                        <TableCell >High Price</TableCell>\r\n                                        <TableCell >Low Price</TableCell> */}\r\n\r\n                                        {/* <TableCell ><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell> */}\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\r\n                                        <TableCell  ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell> */}\r\n\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell> */}\r\n                                        {/* <TableCell  ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell> */}\r\n\r\n                                        {/* <TableCell  >Day Open</TableCell>\r\n                                        <TableCell  >Day High</TableCell>\r\n                                        <TableCell  >Day Low</TableCell>\r\n                                        <TableCell  >Previous Close</TableCell> */}\r\n\r\n\r\n                                        {/* <TableCell  ><Button onClick={() => this.getDeliveryHistory()}>Delivery History</Button>  </TableCell> */}\r\n\r\n                                        {/* \r\n                                        <TableCell >Best Buy Qty</TableCell>\r\n                                        <TableCell >Best Buy Price</TableCell>\r\n                                        <TableCell >Best Sell Qty</TableCell>\r\n                                        <TableCell >Best Sell Price</TableCell> */}\r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                            </Table>\r\n                            <div style={{ overflow: \"auto\", maxHeight: \"650px\" }}>\r\n                                <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\r\n                                    <TableBody>\r\n\r\n                                        {this.state.symbolList ? this.state.symbolList.map((row, i) => (\r\n                                            <TableRow  onKeyDown={this.handleKeyDown}  selected={this.state.cursor === i ? 'active' : null}\r\n                                                \r\n\r\n                                                style={{ cursor: \"pointer\" }} hover key={i} >\r\n                                                 {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\r\n\r\n                                                {/* <TableCell >{row.upperCircuitLimit}</TableCell>\r\n                                            <TableCell >{row.lowerCircuitLimit}</TableCell> */}\r\n\r\n                                                {/* <TableCell style={{ background: row.highlightbuy ? \"lightgray\" : \"\" }} >\r\n                                                {row.buytosellTime ? row.buytosellTime +\" time buy\" : \"\"}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ background: row.highlightsell ? \"lightgray\" : \"\" }} >\r\n                                                {row.selltobuyTime ? row.selltobuyTime+\" time sell\" : \"\"} \r\n                                            </TableCell> */}\r\n\r\n                                                <TableCell title=\"total buying bids qty\" style={{ background: row.highlightbuy ? \"#FFFF00\" : \"\" }}  >\r\n                                                    {/* {row.buybidHistory &&  row.buybidHistory.map(item => (\r\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\r\n                                                    ))} */}\r\n                                                    {row.buytosellTime ? `${row.buytosellTime}` : \"\"}x\r\n\r\n                                                    {/* &nbsp; {row.totalBuyQuantity}  */}\r\n                                                    <br />\r\n                                                    {this.convertToFloat(row.totalBuyQuantity)}\r\n\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\"  > \r\n                                                    <Button style={{ background: this.getPercentageColor(row.pChange) }} variant='contained'  onClick={() => this.showStaticChart(row.token, row.name, i)}> \r\n                                                    {i+1}.  {row.name} <br /> {row.ltp} {row.pChange ? `(${row.pChange}%)` : \"\"} \r\n\r\n                                                    </Button>\r\n\r\n\r\n                                                    <Button onClick={() => this.copyName(row.name)}> copy </Button> \r\n                                                </TableCell>\r\n                                                <TableCell title=\"Average Price\" style={{ height: '25px', background: row.ltp ? row.ltp >= row.averagePrice ? \"green\" : \"red\" : \"white\" }}>AP<br />{row.averagePrice}</TableCell>\r\n\r\n\r\n                                                <TableCell title=\"total selling bid qty\" style={{ background: row.highlightsell ? \"#FFFF00\" : \"\" }}>\r\n                                                    {/* {row.sellbidHistory &&  row.sellbidHistory.map(item => (\r\n                                                        <span style={{color: item>0 ? \"green\" : \"red\"}}> {item}% </span>\r\n                                                    ))} */}\r\n                                                    {row.selltobuyTime ? `${row.selltobuyTime}` : \"\"}x\r\n\r\n                                                    {/* &nbsp; {row.totalSellQuantity}  */}\r\n                                                    <br />\r\n                                                    {this.convertToFloat(row.totalSellQuantity)}\r\n\r\n                                                </TableCell>\r\n                                                {/* <TableCell title=\"Open Price\">O:{row.openPrice}</TableCell>\r\n                                                <TableCell title=\"High Price\">H:{row.highPrice}</TableCell>\r\n                                                <TableCell title=\"Low Price\" >L:{row.lowPrice}</TableCell>\r\n                                                <TableCell title=\"volume\" >{row.volume}</TableCell> */}\r\n\r\n                                                <TableCell title=\"vbc\" > {row.volBreakoutCount ? 'V: '+row.volBreakoutCount : '-'}  </TableCell>\r\n                                                <TableCell title=\"v+P breakout\" style={{ background: row.priceVolBreakout ? \"#FFFF00\" : \"\" }} > {row.priceVolBreakout ? \"VP: Yes\": \"-\"}\r\n                                                {row.dayPriceVolBreakout ? \"Day VP\" : ''}\r\n                                                </TableCell>\r\n                                                <TableCell title=\"vbc\" > {row.rsi ? 'RSI: '+row.rsi : '-'}</TableCell>\r\n                                                <TableCell style={{ background: row.highupdated ? \"green\" : \"\" }}  title={this.state.timeFrame + '\\s high'} > {row.high ? row.high : '-'}</TableCell>\r\n                                                <TableCell style={{ background: row.lowupdated ? \"red\" : \"\" }}  title={this.state.timeFrame + '\\s low'} > {row.high ? row.low : '-'}</TableCell>\r\n\r\n\r\n\r\n                                                {/* <TableCell >{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell> */}\r\n                                                {/* <TableCell >{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\r\n                                            <TableCell >{row.deliveryToTradedQuantity}%</TableCell> */}\r\n\r\n                                                {/* <TableCell >{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell> */}\r\n                                                {/* <TableCell >{row.totalTradedValue}L</TableCell> */}\r\n\r\n                                                {/* <TableCell  >{row.open}</TableCell>\r\n                                                <TableCell  >{row.dayHigh}</TableCell>\r\n                                                <TableCell  >{row.dayLow}</TableCell>\r\n                                                <TableCell  >{row.previousClose}</TableCell> */}\r\n\r\n                                                {/* <TableCell style={{ background: \"#eceff1\" }} >\r\n\r\n                                                {row.delHistory && row.delHistory.map(item => (\r\n                                                    <span> {new Date(item.datetime).toLocaleDateString()}  &nbsp;\r\n                                                        <span title={\"quantityTraded \" + item.quantityTraded}> {(item.quantityTraded / 100000)}L  </span>  &nbsp;\r\n                                                        <span title={\"deliveryToTradedQuantity\"}> {item.deliveryToTradedQuantity}%  </span>  &nbsp;\r\n                                                        <span title={\"deliveryQuantity \" + item.deliveryQuantity}> {(item.deliveryQuantity / 100000)}L  </span>  &nbsp;\r\n                                                        <span style={{ color: item.todayChange > 0 ? \"green\" : \"red\" }}> ({item.todayChange}%)   </span>\r\n                                                        &nbsp;  <br /></span>\r\n                                                ))}\r\n\r\n                                            </TableCell> */}\r\n\r\n                                                {/* <TableCell >{row.bestbuyquantity}</TableCell>\r\n                                            <TableCell >{row.bestbuyprice}</TableCell>\r\n                                            <TableCell >{row.bestsellquantity}</TableCell>\r\n                                            <TableCell >{row.bestsellprice}</TableCell> */}\r\n\r\n\r\n\r\n                                            </TableRow>\r\n                                        )) : <Spinner />}\r\n\r\n                                    </TableBody>\r\n\r\n\r\n                                </Table>\r\n                            </div>\r\n\r\n                            <hr />\r\n                            <Grid item xs={12} sm={12} >\r\n                                {/* <Typography color=\"primary\" gutterBottom>\r\n                                      {this.state.selectedWatchlist} ({this.state.symbolList.length})  \r\n                                      \r\n                                      \r\n                                    </Typography> */}\r\n\r\n                                <span>Sorted By:  {this.state.sortedType} </span> <br />\r\n                                <span>Update: {this.state.lastUpdateAction} </span>\r\n\r\n\r\n\r\n                               \r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6} >\r\n\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={<Switch checked={this.state.isSpeek} onChange={this.handleChange} aria-label=\"Speek ON/OFF\" />}\r\n                                        label={this.state.isSpeek ? 'Speak Yes' : 'Speak No'}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Paper>\r\n\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n\r\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n\r\n                                <Grid item xs={12} sm={12}  >\r\n\r\n                                    <Grid spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n                                        <Grid item xs={10} sm={8} >\r\n                                            <Typography> {this.state.lightChartSymbol} {this.state.livePrice} {this.state.livePChange ? `(${this.state.livePChange}%)` : \"\"}  </Typography>\r\n\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item xs={2} sm={2} >\r\n                                            <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\r\n                                            <InputLabel htmlFor=\"candleHistoryFlag\">Time</InputLabel>\r\n\r\n                                                <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\r\n                                                    <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                                                    <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                                                    <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                                                    <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                                                    <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                                                    <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                                                    <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={2} sm={2} >\r\n                                                <FormControl style={styles.selectStyle} >\r\n                                                    <InputLabel htmlFor=\"candleHistoryFlag\">History</InputLabel>\r\n                                                    <Select title='History' value={this.state.candleHistoryFlag} name=\"candleHistoryFlag\" onChange={this.onChangeWatchlist}>\r\n\r\n                                                        <MenuItem value={true}>{\"Yes\"}</MenuItem>\r\n                                                        <MenuItem value={false}>{\"No\"}</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                    </Grid>\r\n\r\n\r\n\r\n\r\n                                    <div id=\"showChartTitle\"></div>\r\n                                    <div id=\"tvchart\"></div>\r\n                                </Grid>\r\n\r\n                                <Hidden xsDown>\r\n                                    <Paper style={{ padding: \"10px\" }} >\r\n\r\n                                        <b> {this.state.lightChartSymbol}</b> <br />\r\n\r\n                                        \r\n\r\n\r\n                                        <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\r\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\r\n                                        ))}\r\n\r\n\r\n                                        <br />\r\n                                        <b>Vol:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\r\n                                            <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\r\n                                        ))}\r\n\r\n                                        <br />\r\n                                        {this.state.bblastValue ? <span item xs={12} sm={12} >\r\n\r\n                                            <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.livePrice >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\r\n                                            BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\r\n                                            <span title=\"Green red mean price running below lower bb band\" style={{ color: this.state.livePrice <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\r\n                                        </span> : \"\"}\r\n\r\n                                        <span item xs={12} sm={12} style={{ color: this.state.livePrice > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\r\n                                            VWAP:  {this.state.vwapvalue && this.state.vwapvalue.toFixed(2)}\r\n                                        </span>\r\n\r\n\r\n                                        <br />  <br />\r\n\r\n\r\n                                    </Paper>\r\n\r\n                                    <Paper style={{ padding: \"1\" }} >\r\n                                        <Typography> Vol+Price Breakout</Typography>\r\n                                        {this.state.volumePriceBONames}\r\n                                    </Paper>\r\n\r\n                                    <Paper style={{ padding: \"1\" }} >\r\n\r\n                                       <Typography> Day high Low</Typography>\r\n                                       {\r\n                                       this.state.dayhighLow && this.state.dayhighLow.map((item, j) => (\r\n                                            <span style={{ color: item.type == 'dayhigh' ? 'green' : \"red\" }}>{j+1}{item.name} <br /></span>\r\n                                        ))\r\n                                       }\r\n\r\n                                       \r\n\r\n                                    </Paper>\r\n                                   \r\n                                    \r\n\r\n                                    \r\n                                </Hidden>\r\n\r\n                                {/* <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"40vh\" }} >\r\n                                <Typography> <b> {this.state.lightChartSymbol} </b> </Typography>\r\n\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol<b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\r\n\r\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\r\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\r\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )) : ''}\r\n\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid> */}\r\n\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    }\r\n};\r\n\r\nexport default LiveBid;\r\n\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport Notify from \"../../utils/Notify\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\nimport { createChart } from 'lightweight-charts';\r\nimport ChartDialog from './ChartDialog';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport vwap from 'vwap';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport CsvDownload from 'react-json-to-csv'\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sumPercentage: 0,\r\n            InstrumentPerChange: \"\",\r\n            autoSearchList: [],\r\n            isDasable: false,\r\n            isError: false,\r\n            InstrumentLTP: {},\r\n            ifNotBought: true,\r\n            autoSearchTemp: [],\r\n            backTestResult: [],\r\n            backTestResultCSV: [], \r\n            backTestFlag: true,\r\n            patternType: \"VolumePrice\",  //NR4ForNextDay  NR4_SameDay NR4\r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"INTRADAY\",\r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\r\n            longExitPriceType: 4,\r\n            shortExitPriceType: 4,\r\n            candleChartData: [],\r\n            stopScaningFlag: false,\r\n            backTestResultDateRange: [],\r\n            searchFailed: 0,\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            cursor: '',\r\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n \r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            //  console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            //    console.log(\"time\", this.state.timeFrame);\r\n            if (this.state.tradingsymbol) {\r\n                this.showStaticChart(this.state.symboltoken);\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangePattern = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.value == 'NR4_Daywide_daterage') {\r\n\r\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\r\n\r\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\r\n\r\n        }\r\n    }\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var staticData = this.state.staticData;\r\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\r\n            this.setState({ cursor: '' });\r\n        });\r\n\r\n        if (e.target.value == \"selectall\") {\r\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\r\n                //      this.updateSocketWatch();\r\n                //  this.checkOpenEqualToLow();\r\n                this.setState({ cursor: '' });\r\n            });\r\n        }\r\n    }\r\n    checkOpenEqualToLow = async () => {\r\n\r\n        this.setState({\r\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\r\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: [], closeingEqualHighList: []\r\n        });\r\n\r\n\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            const element = this.state.symbolList[index];\r\n\r\n            var data = {\r\n                \"exchange\": element.exch_seg,\r\n                \"tradingsymbol\": element.symbol,\r\n                \"symboltoken\": element.token,\r\n            }\r\n            AdminService.getLTP(data).then(res => {\r\n                let data = resolveResponse(res, 'noPop');\r\n                var LtpData = data && data.data;\r\n                if (LtpData) {\r\n\r\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\r\n                    LtpData.nc = change;\r\n                    LtpData.symbol = element.symbol;\r\n\r\n                    this.state.symbolList[index].ltp = LtpData.ltp;\r\n                    this.state.symbolList[index].nc = change;\r\n\r\n                    if (LtpData && LtpData.open == LtpData.low) {\r\n                        console.log(\"o=l\", LtpData);\r\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\r\n                        if (!isfound.length)\r\n                            this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\r\n                    }\r\n                    console.log(element.symbol, \"ltp=newhigh\", LtpData.ltp, (LtpData.high - LtpData.high * 0.5 / 100));\r\n\r\n                    if (LtpData && LtpData.ltp >= (LtpData.high - LtpData.high * 0.5 / 100)) {\r\n                        var isfound = this.state.closeingEqualHighList.filter(row => row.symboltoken == element.token);\r\n                        if (!isfound.length)\r\n                            this.setState({ closeingEqualHighList: [...this.state.closeingEqualHighList, LtpData] });\r\n                    }\r\n\r\n                    if (LtpData && LtpData.open == LtpData.high) {\r\n                        console.log(\"o=h\", LtpData);\r\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\r\n                        if (!isfound.length)\r\n                            this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\r\n\r\n                    }\r\n\r\n                    if (LtpData.perChange > 0)\r\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\r\n                    else if (LtpData.perChange < 0)\r\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\r\n                    else\r\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\r\n\r\n\r\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\r\n                        return b.nc - a.nc;\r\n                    });\r\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\r\n\r\n                    //   this.dailyBasisInfoCheck(element.token, element);\r\n\r\n                    // this.checkSlowMotionStock(element.token, element);\r\n\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n            this.setState({ startDate: date });\r\n        } else if (fromDate === \"END_DATE\") {\r\n            this.setState({ endDate: date });\r\n        }\r\n    };\r\n    getLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            this.setState({ InstrumentLTP: LtpData });\r\n\r\n            if (LtpData && LtpData.ltp)\r\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\r\n            //  this.dailyBasisInfoCheck(this.state.symboltoken);\r\n\r\n\r\n        })\r\n    }\r\n  \r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"Backtest\";\r\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\r\n\r\n        const domElement = document.getElementById('tvchart');\r\n        document.getElementById('tvchart').innerHTML = '';\r\n        const chart = createChart(domElement, { width: 550, height: 400, timeVisible: true, secondsVisible: true, });\r\n        const candleSeries = chart.addCandlestickSeries();\r\n        var smaLineSeries = chart.addLineSeries({\r\n            color: 'rgba(4, 111, 232, 1)',\r\n            lineWidth: 2,\r\n        });\r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n\r\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\r\n    }\r\n\r\n    stopBacktesting = () => {\r\n        this.setState({ stopScaningFlag: true });\r\n    }\r\n\r\n    backTestAnyPattern = async () => {\r\n\r\n        let filename = this.state.patternType +\" \"+ this.state.selectedWatchlist +\" \"+ moment(this.state.startDate).format(\"YYYY-MM-DD\") +\" \"+ moment(this.state.endDate).format(\"YYYY-MM-DD\") +\".csv\" ; \r\n        this.setState({ backTestResult: [], backTestFlag: false, filename: filename });\r\n\r\n\r\n        console.log('filename', filename ); \r\n\r\n        if (!this.state.patternType) {\r\n            Notify.showError(\"Select pattern type\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'NR4') {\r\n            this.backTestNR4();\r\n            return;\r\n        }\r\n        if (this.state.patternType === 'NR4Trail') {\r\n            this.backTestNR4Trail();\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'NR4ForNextDay') {\r\n            this.NR4ForNextDay();\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.patternType === 'NR4_SameDay') {\r\n            this.backTestNR4SameDay();\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'StrongCandle') {\r\n            this.backtestStrongCandle();\r\n            return;\r\n        }\r\n        \r\n        if (this.state.patternType === 'VolumePrice') {\r\n            this.backtestVolumePrice();\r\n            return;\r\n        }\r\n        if (this.state.patternType === 'VolumePriceSell') {\r\n            this.backtestVolumePriceSell();\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\r\n\r\n            var startdate = moment(this.state.startDate);\r\n            var enddate = moment(this.state.endDate);\r\n\r\n            const currentMoment = startdate;\r\n            const endMoment = enddate;\r\n\r\n\r\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\r\n\r\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\r\n\r\n                this.backTestNR4DatewiseRange(currentMoment);\r\n\r\n                if (this.state.stopScaningFlag) {\r\n                    break;\r\n                }\r\n\r\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\r\n\r\n\r\n                currentMoment.add(1, 'days');\r\n            }\r\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\r\n\r\n\r\n            return;\r\n        }\r\n\r\n\r\n\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n\r\n        console.log(\"pattername\", this.state.patternType);\r\n\r\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last10Candle = candleData.slice(index2, index2 + 10);\r\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \r\n\r\n                            switch (this.state.patternType) {\r\n                                case 'TweezerTop':\r\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                case 'TweezerBottom':\r\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n\r\n                        }\r\n                        runningTest += candleData.length;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    NR4ForNextDay = async () => {\r\n\r\n        this.setState({ FoundPatternList: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                break;\r\n            }\r\n\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\r\n\r\n\r\n\r\n            var time = moment.duration(\"240:00:00\");\r\n            var startdate = moment(this.state.endDate).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    candleData.reverse();\r\n\r\n                    // var startindex = index2 * 10; \r\n                    var last4Candle = candleData.slice(0, 4);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                    if (last4Candle.length >= 4) {\r\n\r\n                        //last4Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = [];\r\n                        last4Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n                        if (rgrangeCount == 4) {\r\n                            var firstCandle = last4Candle[0];\r\n                            var next5thCandle = candleData[0];\r\n\r\n\r\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\r\n\r\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                            var foundStock = {\r\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\r\n                                symbol: element.symbol,\r\n                                token: element.token,\r\n                                pattenName: \"NR4\",\r\n                                SellAt: sellenty,\r\n                                high: firstCandle[2],\r\n                                low: firstCandle[3],\r\n                                BuyAt: buyentry,\r\n                                candleChartData: candleChartData,\r\n                                close: firstCandle[4]\r\n                            }\r\n\r\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            }).catch(error => {\r\n                Notify.showError(element.symbol + \" Candle data not found!\");\r\n            })\r\n            await new Promise(r => setTimeout(r, 350));\r\n\r\n        }\r\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\r\n    }\r\n\r\n\r\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\r\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\r\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\r\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\r\n\r\n\r\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\r\n\r\n        console.log(element.symbol, \"result candle\", histdataInside);\r\n\r\n        if (histdataInside && histdataInside.length) {\r\n\r\n            for (let index = 0; index < histdataInside.length; index++) {\r\n                const candle5min = histdataInside[index];\r\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\r\n                if (candle5min[2] < buyHighest) {\r\n                    buyHighest = candle5min[3];\r\n                }\r\n\r\n            }\r\n\r\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\r\n                elementInside = histdataInside[insideIndex];\r\n\r\n                if (buyEntryFlag && elementInside[3] < buyentry) {\r\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\r\n                    longTradeFound = {\r\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\r\n                        symbol: element.symbol,\r\n                        sellEntyPrice: buyentry,\r\n                        stopLoss: buyentrySL,\r\n                        brokerageCharges: 0.06,\r\n                        quantity: Math.floor(100000 / buyentry),\r\n                        candleChartData: candleChartData,\r\n                    }\r\n                    buyEntryFlag = false;\r\n                }\r\n\r\n\r\n\r\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\r\n                console.log(element.symbol, \"perChange\", perChange);\r\n\r\n                //trailing sl  \r\n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \r\n                // }\r\n\r\n                //flat 1% profit booking\r\n                if (!buyEntryFlag && perChange >= 1) {\r\n\r\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\r\n                    longTradeFound.buyExitPrice = sellEntyPrice;\r\n                    longTradeFound.perChange = perChange;\r\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\r\n                    break;\r\n                }\r\n                console.log(element.symbol, \"high\", elementInside[2]);\r\n\r\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\r\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\r\n                    longTradeFound.buyExitPrice = buyentrySL;\r\n                    longTradeFound.perChange = perChng;\r\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                    longTradeFound.exitStatus = \"SL_Hit\";\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\r\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\r\n                longTradeFound.buyExitPrice = elementInside[4];\r\n                longTradeFound.perChange = perChng;\r\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                longTradeFound.exitStatus = \"Market_End\";\r\n            }\r\n\r\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\r\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\r\n                longTradeFound.highAndLow = buyHighest;\r\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\r\n                longTradeFound.candleChartDataInside = resultCandle;\r\n\r\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\r\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\r\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\r\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\r\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\r\n\r\n\r\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\r\n\r\n\r\n        if (histdataInside && histdataInside.length) {\r\n\r\n            for (let index = 0; index < histdataInside.length; index++) {\r\n                const candle5min = histdataInside[index];\r\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\r\n                if (buyHighest < histdataInside[index][2]) {\r\n                    buyHighest = histdataInside[index][2];\r\n                }\r\n            }\r\n\r\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\r\n                elementInside = histdataInside[insideIndex];\r\n\r\n                if (buyEntryFlag && elementInside[2] > buyentry) {\r\n                    longTradeFound = {\r\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\r\n                        symbol: element.symbol,\r\n                        buyExitPrice: buyentry,\r\n                        stopLoss: buyentrySL,\r\n                        brokerageCharges: 0.06,\r\n                        quantity: Math.floor(100000 / buyentry),\r\n                        candleChartData: candleChartData,\r\n                    }\r\n                    buyEntryFlag = false;\r\n                }\r\n\r\n\r\n\r\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\r\n\r\n\r\n                //flat 1% profit booking\r\n                // if(!buyEntryFlag && perChange >= 1){\r\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \r\n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\r\n                //     longTradeFound.perChange = perChange;\r\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \r\n                //     break;\r\n                // }\r\n\r\n                if (!buyEntryFlag) {\r\n\r\n                    if (firstTimeTrail && perChange >= 0.7) {\r\n                        trailCount += 1;\r\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\r\n                        longTradeFound.sellEntyPrice = minPrice;\r\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\r\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\r\n                        firstTimeTrail = false;\r\n                    } else {\r\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\r\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\r\n\r\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\r\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\r\n\r\n                        if (perchngfromTriggerPrice > 0.7) {\r\n                            trailCount += 1;\r\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\r\n                            longTradeFound.sellEntyPrice = minPrice;\r\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\r\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\r\n\r\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\r\n                            trailCount += 1;\r\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\r\n                            longTradeFound.sellEntyPrice = minPrice;\r\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\r\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\r\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\r\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\r\n\r\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\r\n                    longTradeFound.sellEntyPrice = buyentrySL;\r\n                    longTradeFound.perChange = perChng;\r\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                    longTradeFound.exitStatus = \"SL_Hit\";\r\n                    break;\r\n                }\r\n\r\n            } //candle loop end\r\n\r\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\r\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\r\n                longTradeFound.buyExitPrice = elementInside[4];\r\n                longTradeFound.perChange = perChng;\r\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\r\n                longTradeFound.exitStatus = \"Market_End\";\r\n            }\r\n\r\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\r\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\r\n                longTradeFound.highAndLow = buyHighest;\r\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\r\n                longTradeFound.candleChartDataInside = resultCandle;\r\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\r\n\r\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    backTestNR4SameDay = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                break;\r\n            }\r\n\r\n\r\n\r\n            var time = moment.duration(\"240:00:00\");\r\n            var startdate = moment(this.state.endDate).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    candleData.reverse();\r\n\r\n                    // var startindex = index2 * 10; \r\n                    var last4Candle = candleData.slice(1, 5);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                    if (last4Candle.length >= 4) {\r\n                        //last4Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = [];\r\n                        last4Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n                        if (rgrangeCount == 4) {\r\n                            var firstCandle = last4Candle[0];\r\n                            var next5thCandle = candleData[0];\r\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\r\n\r\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\r\n\r\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\r\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\r\n\r\n                            var data = {\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": element.token,\r\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n                            }\r\n\r\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\r\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\r\n                                histdataInside = histdataInside && histdataInside.data;\r\n\r\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\r\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \r\n\r\n\r\n                            }).catch(error => {\r\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\r\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n                            });\r\n\r\n\r\n\r\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n                            // if (next5thCandle[2] > buyentry) {\r\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\r\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                            //     sumPercentage += perChng;\r\n\r\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                            //     var foundStock = {\r\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                            //         symbol: element.symbol,\r\n                            //         sellEntyPrice: next5thCandle[4],\r\n                            //         highAndLow: next5thCandle[2],\r\n                            //         stopLoss: firstCandle[3],\r\n                            //         buyExitPrice: buyentry,\r\n                            //         brokerageCharges: 0.06,\r\n                            //         perChange: perChng.toFixed(2),\r\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\r\n                            //         candleChartData : candleChartData,\r\n                            //     }\r\n                            //     if (Math.floor(10000 / firstCandle[2])){ \r\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                            //     }\r\n                            // }\r\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n                            // if (next5thCandle[3] < sellenty) {\r\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\r\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                            //     sumPercentage += perChng;\r\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                            //     var foundStock = {\r\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                            //         symbol: element.symbol,\r\n                            //         sellEntyPrice: sellenty,\r\n                            //         stopLoss: firstCandle[2],\r\n                            //         buyExitPrice: next5thCandle[4],\r\n                            //         highAndLow: next5thCandle[3],\r\n                            //         brokerageCharges: 0.06,\r\n                            //         perChange: perChng.toFixed(2),\r\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\r\n                            //         candleChartData : candleChartData\r\n                            //     }\r\n                            //     if(Math.floor(10000 / firstCandle[3])){\r\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                            //     }\r\n\r\n\r\n                            // }\r\n\r\n                        }\r\n\r\n                    }\r\n                    runningTest = runningTest + candleData.length - 35;\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\r\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n\r\n                }\r\n            }).catch(error => {\r\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\r\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 305));\r\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    backTestNR4DatewiseRange = async (date) => {\r\n\r\n        this.setState({ backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                break;\r\n            }\r\n\r\n\r\n\r\n            var time = moment.duration(\"240:00:00\");\r\n            var startdate = moment(date).subtract(time);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    candleData.reverse();\r\n\r\n                    // var startindex = index2 * 10; \r\n                    var last4Candle = candleData.slice(1, 5);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                    if (last4Candle.length >= 4) {\r\n\r\n                        //last4Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = [];\r\n                        last4Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n                        if (rgrangeCount == 4) {\r\n                            var firstCandle = last4Candle[0];\r\n                            var next5thCandle = candleData[0];\r\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\r\n\r\n                            var currentDate = date.format('DD-MM-YYYY');\r\n\r\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\r\n\r\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\r\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\r\n\r\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\r\n\r\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                            if (next5thCandle[2] > buyentry) {\r\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\r\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                sumPercentage += perChng;\r\n\r\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                var foundStock = {\r\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                    symbol: element.symbol,\r\n                                    sellEntyPrice: next5thCandle[4],\r\n                                    highAndLow: next5thCandle[2],\r\n                                    stopLoss: firstCandle[3],\r\n                                    buyExitPrice: buyentry,\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                    quantity: Math.floor(10000 / firstCandle[2]),\r\n                                    candleChartData: candleChartData\r\n                                }\r\n                                if (Math.floor(10000 / firstCandle[2])) {\r\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                    datewisetrades.push(foundStock);\r\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\r\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                            if (next5thCandle[3] < sellenty) {\r\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\r\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                sumPercentage += perChng;\r\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                var foundStock = {\r\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                    symbol: element.symbol,\r\n                                    sellEntyPrice: sellenty,\r\n                                    stopLoss: firstCandle[2],\r\n                                    buyExitPrice: next5thCandle[4],\r\n                                    highAndLow: next5thCandle[3],\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                    quantity: Math.floor(10000 / firstCandle[3]),\r\n                                    candleChartData: candleChartData\r\n                                }\r\n                                if (Math.floor(10000 / firstCandle[3])) {\r\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                    datewisetrades.push(foundStock);\r\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\r\n\r\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\r\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\r\n\r\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \r\n\r\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\r\n\r\n                                }\r\n\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n                    runningTest = runningTest + candleData.length - 35;\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n    }\r\n\r\n    backTestNR4 = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                this.setState({stopScaningFlag : false})\r\n                break;\r\n            }\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(index2, index2 + 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                            last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = [];\r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[index2 + 4];\r\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n                                var stopLoss = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n\r\n                                    let exitPrice = next5thCandle[this.state.longExitPriceType], exitStatus = \"ME@3:30pm\";  \r\n                                    if(next5thCandle[this.state.longExitPriceType] <= stopLoss){\r\n                                        exitPrice = stopLoss; \r\n                                        exitStatus = \"SLHit\";\r\n                                    }\r\n\r\n\r\n                                    var perChng = (exitPrice - buyentry) * 100 / buyentry;\r\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n                                    let slPer = ((buyentry-stopLoss)*100/buyentry).toFixed(2); \r\n\r\n\r\n                                    var monthMinusOneName =  moment(next5thCandle[0]).subtract(0, \"month\").startOf(\"month\").format('MMMM');\r\n\r\n\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        monthName: monthMinusOneName, \r\n                                        symbol: element.symbol,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                        brokerageCharges: 0.06,\r\n                                        sellEntyPrice: exitPrice,\r\n                                        stopLoss: `${stopLoss} (${slPer}%)`,\r\n                                        exitStatus : exitStatus,\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                        token: element.token,\r\n                                        highAndLow: next5thCandle[2],\r\n                                        buyExitPrice: buyentry,\r\n                                        entryAt:  firstCandle[0],\r\n                                        squareOffAt: next5thCandle[0],\r\n                                        candleChartData: candleChartData,\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])) {\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n                                var stopLoss = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    let exitPrice = next5thCandle[this.state.longExitPriceType], exitStatus = \"ME@3:30pm\";  \r\n                                    if(next5thCandle[this.state.longExitPriceType] >= stopLoss){\r\n                                        exitPrice =  stopLoss; \r\n                                        exitStatus = \"SLHit\";\r\n                                    }\r\n                                    \r\n                                    var perChng = (sellenty - exitPrice) * 100 / firstCandle[3];\r\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n                                    let slPer = ((stopLoss-sellenty)*100/stopLoss).toFixed(2); \r\n                                    var monthMinusOneName =  moment(next5thCandle[0]).subtract(0, \"month\").startOf(\"month\").format('MMMM');\r\n\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        monthName: monthMinusOneName, \r\n                                        symbol: element.symbol,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                        brokerageCharges: 0.06,\r\n                                        sellEntyPrice: sellenty,\r\n                                        stopLoss:  `${stopLoss} (${slPer}%)`,\r\n                                        exitStatus : exitStatus, \r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                        token: element.token,\r\n                                        highAndLow: next5thCandle[3],\r\n                                        buyExitPrice: exitPrice,\r\n                                        entryAt:  firstCandle[0],\r\n                                        squareOffAt: next5thCandle[0],\r\n                                        candleChartData: candleChartData,\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[3])) {\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n    \r\n    \r\n   \r\n    backtestVolumePrice = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                this.setState({stopScaningFlag : false})\r\n                break;\r\n            }\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 7; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var backtestCandle = candleData.slice(index2, index2 + 7);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n\r\n                        if(new Date(candleData[index2][0]).toLocaleTimeString()  > \"09:30:00\" && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n                            var candleChartData = [];\r\n\r\n                            let currentCandle = backtestCandle[backtestCandle.length - 1]; \r\n\r\n\r\n                            let volBreakcount =0, curVol = currentCandle[5]; \r\n                            backtestCandle.forEach(elementback => {\r\n                                  if(curVol > elementback[5]){\r\n                                    volBreakcount++\r\n                                  } \r\n                                  candleChartData.push([elementback[0], elementback[1], elementback[2], elementback[3], elementback[4]]);\r\n\r\n                            });\r\n\r\n                            let candleDistance = currentCandle[2] - currentCandle[3]; //high - low\r\n                            let strongPer = ((currentCandle[4] - currentCandle[3]) * 100) / candleDistance; \r\n                            var changePer = (currentCandle[4] - currentCandle[1]) * 100 / currentCandle[1];\r\n\r\n                            if(volBreakcount >= 4 && strongPer >= 80 && changePer > 0.5) {  //(currentCandle[4] == currentCandle[2])\r\n                                console.log(element.symbol, 'backtestCandle',  backtestCandle, \"volBreakcount\",  volBreakcount);\r\n                               \r\n                                var foundStock = {\r\n                                    foundAt: moment(currentCandle[0]).format(\"DD-MM-YYYY HH:mm\"),\r\n                                    symbol: element.name,\r\n                                    token: element.token, \r\n                                    chartDate: currentCandle[0],\r\n                                    candleChartData:candleChartData\r\n\r\n                                }\r\n\r\n                                \r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] }, function(){\r\n                                   \r\n                                    let data = ''; \r\n                                    this.state.backTestResult.forEach((item)=> data+= item.foundAt + \"\\t\"+ item.symbol + \"\\n\")\r\n                                    \r\n                                    this.setState({ copydata: data});\r\n\r\n                                } );        \r\n                                \r\n                            }\r\n\r\n\r\n\r\n                            \r\n                        }\r\n\r\n                      \r\n                       \r\n                       \r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n       \r\n    }\r\n    backtestVolumePriceSell = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                this.setState({stopScaningFlag : false})\r\n                break;\r\n            }\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 7; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var backtestCandle = candleData.slice(index2, index2 + 7);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n\r\n                        if(new Date(candleData[index2][0]).toLocaleTimeString()  > \"09:30:00\" && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n                            var candleChartData = [];\r\n\r\n                            let currentCandle = backtestCandle[backtestCandle.length - 1]; \r\n\r\n\r\n                            let volBreakcount =0, curVol = currentCandle[5]; \r\n                            backtestCandle.forEach(elementback => {\r\n                                  if(curVol > elementback[5]){\r\n                                    volBreakcount++\r\n                                  } \r\n                                  candleChartData.push([elementback[0], elementback[1], elementback[2], elementback[3], elementback[4]]);\r\n\r\n                            });\r\n\r\n                            let candleDistance = currentCandle[2] - currentCandle[3]; //high - low\r\n                            let strongPer = ((currentCandle[4] - currentCandle[3]) * 100) / candleDistance; \r\n                            var changePer = (currentCandle[4] - currentCandle[1]) * 100 / currentCandle[1];\r\n\r\n                            if(volBreakcount >= 4 && strongPer <= 20 && changePer < -0.5) {  //(currentCandle[4] == currentCandle[2])\r\n                                console.log(element.symbol, 'backtestCandle',  backtestCandle, \"volBreakcount\",  volBreakcount);\r\n                               \r\n                                var foundStock = {\r\n                                    foundAt: moment(currentCandle[0]).format(\"DD-MM-YYYY HH:mm\"),\r\n                                    symbol: element.name,\r\n                                    token: element.token,\r\n                                    chartDate: currentCandle[0],\r\n                                    candleChartData:candleChartData\r\n\r\n                                }\r\n\r\n                                \r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] }, function(){\r\n                                   \r\n                                    let data = ''; \r\n                                    this.state.backTestResult.forEach((item)=> data+= item.foundAt + \"\\t\"+ item.symbol + \"\\n\")\r\n                                    \r\n                                    this.setState({ copydata: data});\r\n\r\n                                } );        \r\n                                \r\n                            }\r\n\r\n\r\n\r\n                            \r\n                        }\r\n\r\n                      \r\n                       \r\n                       \r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n       \r\n    }\r\n    \r\n    backtestStrongCandle = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                this.setState({stopScaningFlag : false})\r\n                break;\r\n            }\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(index2, index2 + 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                      //  last4Candle.reverse();\r\n\r\n                        var candleChartData = [];\r\n                        last4Candle.forEach(candleElement => {\r\n                            candleChartData.push([candleElement[0], candleElement[1], candleElement[2], candleElement[3], candleElement[4]]);\r\n\r\n                            let candleChangePer = (candleElement[2] - candleElement[3]) * 100 / candleElement[1];\r\n                            if(candleElement[1] == candleElement[3] && candleElement[2] == candleElement[4] && candleChangePer >= 0.3){\r\n                          \r\n                                var firstCandle = candleElement[0];\r\n                                var next5thCandle = candleData[index2 + 1];\r\n                               // candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\r\n    \r\n//                                var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\r\n                                var stopLoss = (firstCandle[3] - (firstCandle[3] / 100 / 10));\r\n    \r\n    \r\n                                let exitPrice = next5thCandle[2], exitStatus = \"Market End\";  \r\n                                if(next5thCandle[2] <= stopLoss){\r\n                                    exitPrice = stopLoss; \r\n                                    exitStatus = \"SL Hit\";\r\n                                }\r\n\r\n\r\n                                var perChng = (exitPrice - buyentry) * 100 / buyentry;\r\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                 sumPercentage += perChng;\r\n                                // console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n                                 let slPer = ((buyentry-stopLoss)*100/buyentry).toFixed(2); \r\n                                \r\n                                \r\n                                var foundStock = {\r\n                                    foundAt:  new Date(candleElement[0]).toLocaleString(),\r\n                                    symbol: element.symbol,\r\n                                    token: element.token,\r\n                                    sellEntyPrice: exitPrice,\r\n                                    stopLoss: `${stopLoss} (${slPer}%)`,\r\n                                    highAndLow: next5thCandle[2],\r\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                    buyExitPrice: buyentry,\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    entryAt:  firstCandle[0],\r\n                                    squareOffAt: next5thCandle[0],\r\n                                    quantity: Math.floor(10000 / firstCandle[2]),\r\n                                    candleChartData: candleChartData,\r\n                                    exitStatus : exitStatus\r\n                                }\r\n                                console.log(\"5min strong candle\", foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                this.setState({ backTestResult: this.state.backTestResult.reverse() });\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n                                // var stopLoss = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n    \r\n                                // if (next5thCandle[3] < sellenty) {\r\n                                //     let exitPrice = next5thCandle[this.state.longExitPriceType], exitStatus = \"Market End\";  \r\n                                //     if(next5thCandle[this.state.longExitPriceType] >= stopLoss){\r\n                                //         exitPrice =  stopLoss; \r\n                                //         exitStatus = \"SL Hit\";\r\n                                //     }\r\n                                    \r\n                                //     var perChng = (sellenty - exitPrice) * 100 / firstCandle[3];\r\n                                //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n    \r\n                                //     sumPercentage += perChng;\r\n                                //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n                                //     let slPer = ((stopLoss-sellenty)*100/stopLoss).toFixed(2); \r\n    \r\n                                //     var foundStock = {\r\n                                //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                //         symbol: element.symbol,\r\n                                //         token: element.token,\r\n                                //         sellEntyPrice: sellenty,\r\n                                //         perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                //         stopLoss:  `${stopLoss} (${slPer}%)`,\r\n                                //         highAndLow: next5thCandle[3],\r\n                                //         buyExitPrice: exitPrice,\r\n                                //         brokerageCharges: 0.06,\r\n                                //         perChange: perChng.toFixed(2),\r\n                                //         entryAt:  firstCandle[0],\r\n                                //         squareOffAt: next5thCandle[0],\r\n                                //         quantity: Math.floor(10000 / firstCandle[3]),\r\n                                //         candleChartData: candleChartData,\r\n                                //         exitStatus : \"Market End\"\r\n                                //     }\r\n                                //     if (Math.floor(10000 / firstCandle[3])) {\r\n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                //     }\r\n    \r\n    \r\n                                // }\r\n                            }\r\n\r\n\r\n\r\n                        });\r\n                       \r\n                       \r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n       \r\n    }\r\n    \r\n    backTestNR4Trail = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            if (this.state.stopScaningFlag) {\r\n                this.setState({stopScaningFlag : false})\r\n                break;\r\n            }\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(index2, index2 + 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                            last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = [];\r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[index2 + 4];\r\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\r\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        token: element.token,\r\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\r\n                                        stopLoss: firstCandle[3],\r\n                                        highAndLow: next5thCandle[2],\r\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                        buyExitPrice: buyentry,\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        entryAt:  firstCandle[0],\r\n                                        squareOffAt: next5thCandle[0],\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                        candleChartData: candleChartData\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])) {\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\r\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        token: element.token,\r\n                                        sellEntyPrice: sellenty,\r\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                        stopLoss: firstCandle[2],\r\n                                        highAndLow: next5thCandle[3],\r\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        entryAt:  firstCandle[0],\r\n                                        squareOffAt: next5thCandle[0],\r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                        candleChartData: candleChartData\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[3])) {\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n    \r\n\r\n\r\n    nr4CheckPastPerfommance = (token, foundStock) => {\r\n        var time = moment.duration(\"4320:00:00\");\r\n        var startdate = moment(this.state.endDate).subtract(time);\r\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\r\n        var longCandles = [], shortCandles = [];\r\n\r\n        console.log('starting function foundStock', foundStock)\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n        }\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let histdata = resolveResponse(res, 'noPop');\r\n            console.log(\"candle history\", histdata);\r\n            if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                var candleData = histdata.data;\r\n                //  candleData.reverse(); \r\n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                    // var startindex = index2 * 10; \r\n                    var last4Candle = candleData.slice(index2, index2 + 4);\r\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                        last4Candle.reverse();\r\n\r\n                        var rangeArr = [], candleChartData = [];\r\n                        last4Candle.forEach(element => {\r\n                            rangeArr.push(element[2] - element[3]);\r\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                        });\r\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                        rangeArr.forEach(element => {\r\n                            if (firstElement <= element) {\r\n                                firstElement = element;\r\n                                rgrangeCount += 1;\r\n                            }\r\n                        });\r\n\r\n                        if (rgrangeCount == 4) {\r\n\r\n                            var firstCandle = last4Candle[0];\r\n                            var next5thCandle = candleData[index2 + 4];\r\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\r\n\r\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\r\n\r\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                            if (next5thCandle[2] > buyentry) {\r\n\r\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\r\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\r\n\r\n                                var longData = {\r\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                    sellEntyPrice: next5thCandle[4],\r\n                                    stopLoss: firstCandle[3],\r\n                                    highAndLow: next5thCandle[2],\r\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\r\n                                    buyExitPrice: buyentry,\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                    quantity: Math.floor(10000 / firstCandle[2]),\r\n                                    candleChartData: candleChartData\r\n                                }\r\n                                longCandles.push(longData);\r\n\r\n                                totalLongs += 1;\r\n                                totalLongPer += perChng;\r\n                                totalLongHighPer += perChngOnHigh;\r\n\r\n                            }\r\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                            if (next5thCandle[3] < sellenty) {\r\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\r\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\r\n\r\n                                var shortData = {\r\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                    sellEntyPrice: sellenty,\r\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\r\n                                    stopLoss: firstCandle[2],\r\n                                    highAndLow: next5thCandle[3],\r\n                                    buyExitPrice: next5thCandle[4],\r\n                                    brokerageCharges: 0.06,\r\n                                    perChange: perChng.toFixed(2),\r\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                    quantity: Math.floor(10000 / firstCandle[3]),\r\n                                    candleChartData: candleChartData\r\n                                }\r\n                                shortCandles.push(shortData);\r\n\r\n                                totalShort += 1;\r\n                                totalShortPer += perChng;\r\n                                totalShortLowPer += perChngOnLow;\r\n\r\n                            }\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                var pastPerferm = {\r\n                    totalLongs: totalLongs,\r\n                    totalShort: totalShort,\r\n                    totalLongPer: totalLongPer.toFixed(2),\r\n                    totalShortPer: totalShortPer.toFixed(2),\r\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\r\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\r\n                }\r\n                if (foundStock)\r\n                    foundStock.pastPerferm = pastPerferm;\r\n                foundStock.longCandles = longCandles;\r\n                foundStock.shortCandles = shortCandles;\r\n\r\n\r\n                console.log(\"foundStock\", foundStock);\r\n                if (Math.floor(10000 / firstCandle[4])) {\r\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\r\n\r\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\r\n                }\r\n\r\n            } else {\r\n                //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                console.log(token, \" candle data emply\");\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\r\n\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\r\n                //1st candle #20d020 & 2nd candle is red check\r\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\r\n                                    squiredOffAt315 = higherStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //lowest of 3:15 profit booking\r\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\r\n                                    lowestOf315 = next10Candle[indexTarget2][4];\r\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = higherStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (priceDiff < -0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\r\n                                    flatSellingPrice = higherStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (rangePriceDiff <= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\r\n                                    rangeSellingPrice = higherStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: sellEntyPrice,\r\n                                    stopLoss: higherStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: 0,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / sellEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\r\n                                //   foundStock.buyExitPrice = squiredOffAt315; \r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.buyExitPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.buyExitPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\r\n                                foundStock.buyExitPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({ backTestFlag: true });\r\n    }\r\n\r\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\r\n                //1st candle #20d020 & 2nd candle is red check\r\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\r\n                                    squiredOffAt315 = LowerStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //highest of 3:15 profit booking\r\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\r\n                                    highestOf315 = next10Candle[indexTarget2][4];\r\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (priceDiff > 0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\r\n                                    flatSellingPrice = LowerStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (rangePriceDiff >= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\r\n                                    rangeSellingPrice = LowerStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: 0,\r\n                                    stopLoss: LowerStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: buyEntyPrice,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / buyEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\r\n                                foundStock.sellEntyPrice = squiredOffAt315;\r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n\r\n    }\r\n\r\n    getTimeFrameValue = (timeFrame) => {\r\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\r\n\r\n\r\n\r\n        switch (timeFrame) {\r\n            // case 'ONE_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"10:05:00\")\r\n            //         return \"19:00:00\";\r\n            //     else\r\n            //         return \"01:00:00\";\r\n            //     break;\r\n            // case 'FIVE_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"11:00:00\")\r\n            //         return \"23:00:00\";\r\n            //     else\r\n            //         return \"03:00:00\";\r\n            //     break;\r\n            // case 'TEN_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"12:35:00\")\r\n            //         return \"24:21:00\";\r\n            //     else\r\n            //         return \"07:00:00\";\r\n            //     break;\r\n            // case 'FIFTEEN_MINUTE':\r\n            //     if (new Date().toLocaleTimeString() < \"14:15:00\")\r\n            //         return \"28:01:00\";\r\n            //     else\r\n            //         return \"10:01:00\";\r\n            //     break;\r\n            // case 'THIRTY_MINUTE':\r\n            //     return \"100:01:00\";\r\n            //     break;\r\n            // case 'ONE_HOUR':\r\n            //     return \"200:01:00\";\r\n            //     break;\r\n            // case 'ONE_DAY':\r\n            //     return \"1000:01:00\";\r\n            //     break;\r\n            // default:\r\n            //     break;\r\n\r\n            case 'ONE_MINUTE':\r\n                return \"720:00:00\";\r\n                break;\r\n            case 'FIVE_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'TEN_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'FIFTEEN_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'THIRTY_MINUTE':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'ONE_HOUR':\r\n                return \"1000:00:00\";\r\n                break;\r\n            case 'ONE_DAY':\r\n                return \"1000:00:00\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    calculateSMA = (data, count) => {\r\n\r\n        //  console.log(\"smarowdata\", data, count);\r\n\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //   calculateBBValue = (data, type ) => {\r\n\r\n    //     console.log(\"smarowdata\", data , count); \r\n\r\n    //     var result = [];\r\n    //     for (var i=count - 1, len=data.length; i < len; i++){\r\n    //       var val = avg(data.slice(i - count + 1, i));\r\n    //       result.push({ time: data[i].time, value: val});\r\n    //     }\r\n    //     return result;\r\n    //   }\r\n\r\n\r\n\r\n    showStaticChart = (token, symbol, entryAt, exitAt) => {\r\n\r\n        \r\n\r\n        console.log('token, symbol, entryAt, exitAt', token, symbol, entryAt, exitAt)\r\n\r\n        this.setState({ chartStaticData: '' , lightChartSymbol :symbol }, function () {\r\n            console.log('reset done', token);\r\n        });\r\n\r\n    //     console.log(\"time in function \", this.state.timeFrame);\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n    //     // var time = moment.duration(\"10:50:00\");\r\n    //     // var startDate = moment(new Date()).subtract(time);\r\n    //     // var startdate = moment(this.state.startDate).subtract(time);\r\n    //     var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n    //     let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n    //     var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n    //    // var startDate = moment(new Date(foundAt)).set()\r\n     \r\n       var startDate = moment(entryAt).set(\"hour\", '09').set(\"minute\", '15');\r\n        var enddate = moment(exitAt).set(\"hour\", '15').set(\"minute\", '30');\r\n\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let historyData = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (historyData && historyData.data) {\r\n\r\n                var data = historyData.data;\r\n\r\n                const cdata = data.map(d => {\r\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                });\r\n\r\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                data.forEach((element, loopindex) => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                    closeingData.push(element[4]);\r\n                    highData.push(element[2]);\r\n                    lowData.push(element[3]);\r\n                    openData.push(element[3]);\r\n                    valumeData.push(element[5]);\r\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                });\r\n\r\n                var input = {\r\n                    period: 20,\r\n                    values: bbdata,\r\n                    stdDev: 2\r\n                }\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var inputRSI = { values: closeingData, period: 14 };\r\n                var rsiValues = RSI.calculate(inputRSI);\r\n\r\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\r\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\r\n                    // candleSeries.setData(this.state.chartStaticData); \r\n                    this.state.candleSeries.setData(this.state.chartStaticData);\r\n\r\n                    this.state.volumeSeries.setData(volumeSeriesData);\r\n\r\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\r\n\r\n                    this.state.smaLineSeries.setData(smaData);\r\n\r\n\r\n                    this.state.chart.subscribeCrosshairMove((param) => {\r\n\r\n                        var getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n                        var string = \"\";\r\n                        var change = \"\";\r\n\r\n                        for (var elem of getit) {\r\n\r\n                            if (typeof elem[1] == 'object') {\r\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\r\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\r\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\r\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\r\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\r\n                            } else {\r\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\r\n                            }\r\n                        }\r\n\r\n                        if (param.time)\r\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\r\n                        else\r\n                            string += \" <b>Time: </b>\";\r\n\r\n\r\n                        const domElement = document.getElementById('showChartTitle');\r\n\r\n\r\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\r\n                        if (change < 0)\r\n                            str = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n                        domElement.innerHTML = str;\r\n                    });\r\n\r\n\r\n                });\r\n\r\n\r\n                data && data.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (data.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\r\n                    this.setState({ InstrumentHistroy: data });\r\n\r\n\r\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\r\n                    data.forEach(element => {\r\n\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n                        if (per >= 0.3) {\r\n                            upsideMoveCount += 1;\r\n                        }\r\n                        if (per <= -0.3) {\r\n                            downMoveCount += 1;\r\n                        }\r\n\r\n                        totalSum += per;\r\n\r\n                    });\r\n\r\n\r\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    checkSlowMotionStock = (token, stock) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \r\n        var startDate = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": 'FIVE_MINUTE',\r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0;\r\n\r\n                var bigCandleCount = 0;\r\n\r\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n\r\n                    if (element) {\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n\r\n                        if (per >= 0.4) {\r\n                            bigCandleCount += 1;\r\n                            console.log(stock.symbol, per, element[0]);\r\n\r\n                        }\r\n                        if (per <= -0.4) {\r\n                            bigCandleCount += 1;\r\n                            console.log(stock.symbol, per, element[0]);\r\n\r\n                        }\r\n                    }\r\n                }\r\n                console.log(\"Totalcount\", stock.symbol, bigCandleCount);\r\n                if (bigCandleCount <= 15) {\r\n\r\n                    stock.bigCandleCount = bigCandleCount;\r\n\r\n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\r\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\r\n                    });\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    checkSlowMotionCheckLive = async () => {\r\n\r\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\r\n            const row = this.state.slowMotionStockList[index];\r\n            const format1 = \"YYYY-MM-DD HH:mm\";\r\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \r\n            var startDate = moment(new Date()).subtract(time);\r\n            var dataDay = {\r\n                \"exchange\": 'NSE',\r\n                \"symboltoken\": row.token,\r\n                \"interval\": 'FIVE_MINUTE',\r\n                \"fromdate\": moment(startDate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n            AdminService.getHistoryData(dataDay).then(resd => {\r\n                let histdatad = resolveResponse(resd, 'noPop');\r\n                var DSMA = '';\r\n                if (histdatad && histdatad.data && histdatad.data.length) {\r\n                    var candleDatad = histdatad.data;\r\n                    var closeingDatadaily = [], valumeSum = 0;\r\n\r\n                    var bigCandleCount = 0, bullishCount = 0;\r\n\r\n                    for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\r\n                        const element = candleDatad[index];\r\n\r\n                        if (element) {\r\n\r\n                            var per = (element[4] - element[1]) * 100 / element[1];\r\n                            if (per >= 0.7) {\r\n                                bigCandleCount += 1;\r\n                            }\r\n                            if (per >= 0) {\r\n                                bullishCount += 1;\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    if (bigCandleCount >= 1) {\r\n                        row.highlisht = true;\r\n                        window.document.title = \"SM: \" + row.symbol;\r\n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\r\n\r\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\r\n\r\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\r\n                    }\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 310));\r\n        }\r\n\r\n    }\r\n\r\n    copyAll =()=> {\r\n        navigator.clipboard.writeText(this.state.copydata);\r\n        Notify.showSuccess(\"Copied to clickboard\")\r\n    }\r\n    checkLiveBids = async () => {\r\n\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            const row = this.state.symbolList[index];\r\n\r\n            AdminService.checkLiveBids(row.name).then(resd => {\r\n                // let histdatad = resolveResponse(resd, 'noPop');\r\n\r\n                console.log(\"bid\", resd.data.data);\r\n\r\n                // adhocMargin: \"0.48\"\r\n                // applicableMargin: \"19.00\"\r\n                // averagePrice: \"705.27\"\r\n                // basePrice: \"717.15\"\r\n                // bcEndDate: \"-\"\r\n                // bcStartDate: \"-\"\r\n                // buyPrice1: \"710.60\"\r\n                // buyPrice2: \"710.55\"\r\n                // buyPrice3: \"710.50\"\r\n                // buyPrice4: \"710.45\"\r\n                // buyPrice5: \"710.40\"\r\n                // buyQuantity1: \"6\"\r\n                // buyQuantity2: \"50\"\r\n                // buyQuantity3: \"33\"\r\n                // buyQuantity4: \"153\"\r\n                // buyQuantity5: \"100\"\r\n                // change: \"-6.55\"\r\n                // closePrice: \"0.00\"\r\n                // cm_adj_high_dt: \"28-SEP-21\"\r\n                // cm_adj_low_dt: \"28-SEP-20\"\r\n                // cm_ffm: \"4,96,600.56\"\r\n                // companyName: \"ICICI Bank Limited\"\r\n                // css_status_desc: \"Listed\"\r\n                // dayHigh: \"710.95\"\r\n                // dayLow: \"701.30\"\r\n                // deliveryQuantity: \"55,54,344\"\r\n                // deliveryToTradedQuantity: \"63.08\"\r\n                // exDate: \"29-JUL-21\"\r\n                // extremeLossMargin: \"3.50\"\r\n                // faceValue: \"2.00\"\r\n                // high52: \"735.40\"\r\n                // indexVar: \"-\"\r\n                // isExDateFlag: false\r\n                // isinCode: \"INE090A01021\"\r\n                // lastPrice: \"710.60\"\r\n                // low52: \"349.10\"\r\n                // marketType: \"N\"\r\n                // ndEndDate: \"-\"\r\n                // ndStartDate: \"-\"\r\n                // open: \"707.35\"\r\n                // pChange: \"-0.91\"\r\n                // previousClose: \"717.15\"\r\n                // priceBand: \"No Band\"\r\n                // pricebandlower: \"645.45\"\r\n                // pricebandupper: \"788.85\"\r\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\r\n                // quantityTraded: \"88,05,883\"\r\n                // recordDate: \"30-JUL-21\"\r\n                // secDate: \"29-Sep-2021 14:00:00\"\r\n                // securityVar: \"15.02\"\r\n                // sellPrice1: \"710.65\"\r\n                // sellPrice2: \"710.70\"\r\n                // sellPrice3: \"710.75\"\r\n                // sellPrice4: \"710.80\"\r\n                // sellPrice5: \"710.85\"\r\n                // sellQuantity1: \"1,382\"\r\n                // sellQuantity2: \"719\"\r\n                // sellQuantity3: \"1,217\"\r\n                // sellQuantity4: \"4,159\"\r\n                // sellQuantity5: \"793\"\r\n                // series: \"EQ\"\r\n                // surv_indicator: \"-\"\r\n                // symbol: \"ICICIBANK\"\r\n                // totalBuyQuantity: \"10,31,358\"\r\n                // totalSellQuantity: \"8,75,359\"\r\n                // totalTradedValue: \"66,963.99\"\r\n                // totalTradedVolume: \"94,94,802\"\r\n\r\n                if (resd.data && resd.data.data.length) {\r\n\r\n                    let bidlivedata = resd.data.data[0];\r\n                    let biddata = {\r\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\r\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\r\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\r\n                        symbol: bidlivedata.symbol,\r\n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity,\r\n                        nc: bidlivedata.pChange,\r\n                        ltp: bidlivedata.lastPrice,\r\n                    }\r\n\r\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function () {\r\n\r\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList));\r\n                    });\r\n\r\n\r\n                }\r\n\r\n            });\r\n            await new Promise(r => setTimeout(r, 100));\r\n        }\r\n\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n\r\n    dailyBasisInfoCheck = (token, element) => {\r\n        //this.setState({DailyBulishStatus: ''}); \r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\r\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n        var startDateforDaily = moment(new Date()).subtract(time);\r\n        var dataDay = {\r\n            \"exchange\": 'NSE',\r\n            \"symboltoken\": token,\r\n            \"interval\": 'ONE_DAY',\r\n            \"fromdate\": moment(startDateforDaily).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n        AdminService.getHistoryData(dataDay).then(resd => {\r\n            let histdatad = resolveResponse(resd, 'noPop');\r\n            var DSMA = '';\r\n            if (histdatad && histdatad.data && histdatad.data.length) {\r\n                var candleDatad = histdatad.data;\r\n                var closeingDatadaily = [], valumeSum = 0;\r\n\r\n\r\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\r\n                    const element = candleDatad[index];\r\n                    if (element) {\r\n                        closeingDatadaily.push(element[4]);\r\n                        valumeSum += element[5];\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\r\n                this.setState({ dailyAvgValume: valumeSum / 20 });\r\n\r\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\r\n                console.log(token, \"DSMA\", DSMALastValue);\r\n\r\n                if (DSMALastValue) {\r\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\r\n                }\r\n\r\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\r\n                    console.log(\"crosssed voliue\", element);\r\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n   \r\n   \r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n\r\n  \r\n\r\n    getAveragePrice = (orderId) => {\r\n\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        var averageprice = 0;\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            if (oderbookData[index].orderid === 'orderId') {\r\n                averageprice = oderbookData[index].averageprice\r\n                this.setState({ averageprice: averageprice });\r\n                break;\r\n            }\r\n        }\r\n        return averageprice;\r\n    }\r\n    showCandleChart = (candleData, symbol, insiderow) => {\r\n\r\n\r\n        candleData = candleData && candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n\r\n        if (insiderow)\r\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\r\n\r\n\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    showCandleBothChart = (row) => {\r\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\r\n        localStorage.setItem('cadleChartSymbol', row.symbol)\r\n\r\n        var candleChartDataInside = row.candleChartDataInside;\r\n\r\n        if (candleChartDataInside)\r\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\r\n\r\n\r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n\r\n        console.log(\"key\", e.keyCode);\r\n        //38 for down and 40 for up key\r\n        if (e.keyCode === 38 && this.state.cursor > 0) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\r\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\r\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.updateCandleOnkey();\r\n        }, 100);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n    \r\n        console.log(\"backTestResult\", this.state.backTestResult)\r\n\r\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\r\n        var tradetotal = 0, totalWin = 0, totalLoss = 0, totalMarketEnd = 0, totalSlHit =0;\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar  />\r\n                <ChartDialog />\r\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={8}>\r\n\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest</Typography>\r\n\r\n                           \r\n\r\n                            <Grid direction=\"row\" container spacing={2}>\r\n\r\n\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <FormControl style={styles.selectStyle}>\r\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\r\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\r\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\r\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\r\n                                            <MenuItem value={\"NR4\"}>NR4 @ 3:30pm </MenuItem>\r\n                                            <MenuItem value={\"NR4Trail\"}>Narrow Range 4 - Trail</MenuItem>\r\n\r\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\r\n\r\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\r\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\r\n                                            <MenuItem value={\"StrongCandle\"}>5min Strong Candle</MenuItem>\r\n                                            <MenuItem value={\"VolumePrice\"}>Volume Price Buy</MenuItem>\r\n                                            <MenuItem value={\"VolumePriceSell\"}>Volume Price Sell</MenuItem>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid item xs={12} sm={4} style={{ marginTop: '5px' }}>\r\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop Scaning</Button> &nbsp;  {this.state.stockTesting} {this.state.runningTest}  </Button>   </>}\r\n                                    &nbsp; Failed: {this.state.searchFailed}\r\n\r\n                                </Grid>\r\n\r\n                               \r\n                            </Grid>\r\n\r\n                            <Grid direction=\"row\" container spacing={2}>\r\n\r\n                                <Grid item xs={12} sm={12}>\r\n\r\n\r\n                                <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                    <TableRow style={{ background: \"lightgray\" }}>\r\n\r\n                                        <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\r\n\r\n                                        {/* <TableCell style={{ color: \"#e66e6e\" }} ><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\r\n                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\r\n\r\n\r\n                                        <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} >{localStorage.getItem('sumPnlValue')}</TableCell>\r\n\r\n                                        <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\r\n                                        <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} >{localStorage.getItem('sumPnlValueOnHighLow')}</TableCell>\r\n\r\n\r\n\r\n\r\n                                        <TableCell  title='Total Trades'>T.T: {this.state.backTestResult && this.state.backTestResult.length} &nbsp; W: {localStorage.getItem('totalWin')} L: {localStorage.getItem('totalLoss')}</TableCell>\r\n\r\n\r\n                                        <TableCell  title='L:long S:short'  colSpan={2}>L: {localStorage.getItem('totalLongTrade')} S:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\r\n                                        <TableCell title='ME: MarketEnd SL: Stop Loss'  colSpan={2}> ME: {localStorage.getItem('totalMarketEnd')} SL: {localStorage.getItem('totalSlHit')}</TableCell>\r\n\r\n                                        <TableCell  title='TI: Total Invested ' colSpan={2}> TI:  {localStorage.getItem('totalInvestedValue')}</TableCell>\r\n\r\n                                        <TableCell title=\" Average gross/trade PnL: \"  colSpan={4}> A.g/t PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b>\r\n                                        \r\n                                        &nbsp; <CsvDownload filename={this.state.filename} data={this.state.backTestResult} />\r\n                                        <button onClick={()=> this.copyAll()} >Copy</button>\r\n                                        </TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" >CPnl% </TableCell>\r\n\r\n                                        {/* <TableCell className=\"TableHeadFormat\" >Charges</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" >Net PnL %</TableCell> */}\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" >CNetPnL </TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLPnL% </TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLNet PnL</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" >Entry</TableCell>\r\n                                        {/* <TableCell className=\"TableHeadFormat\" >SquiredOffAt</TableCell> */}\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" >ExitStatus</TableCell>\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" >Buy</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" >Sell(Qty)</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >High/Low</TableCell>\r\n\r\n\r\n                                        <TableCell className=\"TableHeadFormat\" >StopLoss</TableCell>\r\n                                        <TableCell className=\"TableHeadFormat\" >Day Chart </TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                </Table>\r\n\r\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' || this.state.patternType == 'StrongCandle' || this.state.patternType == 'VolumePrice' || this.state.patternType == 'VolumePriceSell'  ? \r\n                                        <div style={{overflow:\"auto\", maxHeight:\"550px\"}}> \r\n\r\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                      \r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\r\n\r\n\r\n\r\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n                                                <TableRow hover key={i}  >\r\n\r\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\r\n                                                    {/* <TableCell style={{ color: \"gray\" }}  {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\r\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\r\n        */}\r\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }}  > {tradetotal.toFixed(2)}</TableCell>\r\n\r\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> {row.perChngOnHighLow}%</TableCell>\r\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }}  >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\r\n\r\n\r\n\r\n                                                    <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n\r\n                                                    <TableCell  style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt.substr(0, 18)}</TableCell>\r\n                                                    {/* <TableCell >{row.squareOffAt.substr(0, 10)}</TableCell> */}\r\n\r\n                                                    <TableCell {...totalMarketEnd += row.exitStatus ==='ME@3:30pm' ? 1 : 0}{...totalSlHit += row.exitStatus ==='SLHit' ? 1 : 0} >{row.exitStatus}</TableCell>\r\n\r\n                                                    <TableCell >{row.buyExitPrice}</TableCell>\r\n\r\n                                                    <TableCell  {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\r\n                                                    <TableCell title=\"High on long side | Low in short side\" >{row.highAndLow}</TableCell>\r\n\r\n\r\n                                                    <TableCell >{row.stopLoss}</TableCell>\r\n                                                    <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showStaticChart(row.token, row.symbol, row.chartDate, row.chartDate)}>Day<ShowChartIcon /> </Button></TableCell>\r\n\r\n\r\n                                                </TableRow>\r\n\r\n\r\n\r\n                                            )) : ''}\r\n                                           \r\n\r\n                                            <TableRow style={{ background: \"lightgray\" }} >\r\n\r\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\r\n\r\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} ><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\r\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\r\n\r\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\r\n\r\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\r\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n\r\n                                                <TableCell  > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\r\n\r\n                                                <TableCell >{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n                                                <TableCell >{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)} {localStorage.setItem('totalMarketEnd', totalMarketEnd)} {localStorage.setItem('totalSlHit', totalSlHit)} </TableCell>\r\n\r\n\r\n                                                <TableCell  > </TableCell>\r\n                                                <TableCell > </TableCell>\r\n\r\n                                                <TableCell > </TableCell>\r\n                                                <TableCell > </TableCell>\r\n                                                <TableCell > </TableCell>\r\n                                                <TableCell > </TableCell>\r\n\r\n\r\n\r\n\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n\r\n\r\n                                        </Table>\r\n                                        </div>\r\n                                    \r\n\r\n                                        : \"\"}\r\n\r\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\r\n\r\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\r\n\r\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\r\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n\r\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\r\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" > {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\r\n                                                    </TableRow>\r\n\r\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\r\n\r\n\r\n                                                        <TableCell className=\"TableHeadFormat\" > CPnL% </TableCell>\r\n\r\n                                                        {/* <TableCell className=\"TableHeadFormat\" >Charges</TableCell>\r\n                        <TableCell className=\"TableHeadFormat\" >Net PnL %</TableCell> */}\r\n\r\n                                                        <TableCell className=\"TableHeadFormat\" >CNetPnL </TableCell>\r\n\r\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLPnL% </TableCell>\r\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >HLNet PnL</TableCell>\r\n\r\n                                                        <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\r\n                                                        <TableCell className=\"TableHeadFormat\" >FoundAt</TableCell>\r\n                                                        <TableCell className=\"TableHeadFormat\" >Buy</TableCell>\r\n                                                        <TableCell className=\"TableHeadFormat\" >Sell(Qty)</TableCell>\r\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" >High/Low</TableCell>\r\n\r\n\r\n                                                        <TableCell className=\"TableHeadFormat\" >SquiredOffAt</TableCell>\r\n                                                        <TableCell className=\"TableHeadFormat\" >StopLoss</TableCell>\r\n                                                        {/* <TableCell className=\"TableHeadFormat\" >Sr. </TableCell> */}\r\n\r\n\r\n                                                    </TableRow>\r\n\r\n                                                </TableHead>\r\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n\r\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\r\n\r\n\r\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n\r\n                                                        <TableRow hover key={i}  >\r\n\r\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\r\n                                                            {/* <TableCell style={{ color: \"gray\" }}  {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\r\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\r\n                        */}\r\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }}  > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\r\n\r\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }}  {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\r\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }}  >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\r\n\r\n\r\n\r\n                                                            <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n\r\n                                                            <TableCell  style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\r\n                                                            <TableCell >{row.buyExitPrice}</TableCell>\r\n\r\n                                                            <TableCell  {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\r\n                                                            <TableCell title=\"High on long side | Low in short side\" >{row.highAndLow}</TableCell>\r\n\r\n                                                            <TableCell >{row.squareOffAt}</TableCell>\r\n\r\n                                                            <TableCell >{row.stopLoss}</TableCell>\r\n                                                            {/* <TableCell >{i + 1}</TableCell> */}\r\n\r\n                                                        </TableRow>\r\n\r\n\r\n                                                    ))}\r\n\r\n\r\n\r\n                                                    <TableRow style={{ background: \"lightgray\" }} >\r\n\r\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\r\n\r\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} ><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\r\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\r\n\r\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\r\n\r\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\r\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} ><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n\r\n                                                        <TableCell  > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\r\n\r\n                                                        <TableCell >{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\r\n\r\n                                                        <TableCell ></TableCell>\r\n\r\n\r\n                                                        <TableCell  > </TableCell>\r\n                                                        <TableCell > </TableCell>\r\n\r\n                                                        <TableCell > </TableCell>\r\n                                                        <TableCell > </TableCell>\r\n\r\n\r\n\r\n\r\n                                                    </TableRow>\r\n\r\n                                                </TableBody>\r\n                                            </Table>\r\n\r\n\r\n\r\n                                        )) : ''}\r\n\r\n                                    </>\r\n\r\n                                        : \"\"}\r\n\r\n\r\n                                    {this.state.patternType == 'NR4ForNextDay' ?\r\n\r\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\r\n                                        </Typography>\r\n                                        : \"\"}\r\n\r\n                                    {this.state.patternType == 'NR4ForNextDay' ?\r\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n\r\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" >Sr </TableCell>\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" >Symbol </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >FoundAt </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Past Performance </TableCell>\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" >BuyAt</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >SellAt</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >High</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Low</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Close</TableCell>\r\n\r\n\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n\r\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\r\n\r\n\r\n\r\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n                                                    <TableRow hover key={i}  >\r\n                                                        <TableCell >{i + 1}</TableCell>\r\n                                                        <TableCell > <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n\r\n                                                        <TableCell >{row.foundAt.substr(0, 16)}</TableCell>\r\n                                                        <TableCell  title=\"based on last one 6 month\">\r\n\r\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\r\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\r\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\r\n                                                                <>\r\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\r\n\r\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\r\n                                                                </>\r\n                                                            ))}\r\n\r\n                                                            <br />\r\n\r\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\r\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\r\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\r\n                                                                <>\r\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\r\n\r\n\r\n                                                                </>\r\n                                                            ))}\r\n\r\n                                                        </TableCell>\r\n\r\n\r\n                                                        <TableCell >{row.BuyAt}</TableCell>\r\n                                                        <TableCell >{row.SellAt}</TableCell>\r\n                                                        <TableCell >{row.high}</TableCell>\r\n                                                        <TableCell >{row.low}</TableCell>\r\n                                                        <TableCell >{row.close}</TableCell>\r\n\r\n\r\n                                                    </TableRow>\r\n\r\n\r\n\r\n                                                )) : ''}\r\n\r\n                                            </TableBody>\r\n\r\n                                        </Table>\r\n\r\n                                        : \"\"}\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={4}>\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n\r\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n\r\n                                \r\n                                <Grid item xs={12} sm={12}  >\r\n                                    <Grid  spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n                                        <Grid item xs={12} sm={2} > \r\n                                         <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\r\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\r\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n                                        </Select>\r\n                                        </FormControl>\r\n                                    \r\n\r\n                                         </Grid>\r\n                                         <Grid item xs={12} sm={10} > \r\n                                         <Typography>Same Day Chart:  {this.state.lightChartSymbol}</Typography>\r\n\r\n                                         </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                    \r\n\r\n                                        \r\n\r\n                                    <div id=\"showChartTitle\"></div>\r\n                                    <div id=\"tvchart\"></div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"40vh\" }} >\r\n                                <Typography> Candle Data </Typography>\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Timestamp</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Open</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >High</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Low</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Close </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Volume</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\r\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\r\n\r\n                                                    <TableCell >{this.state.tradingsymbol}</TableCell>\r\n                                                    <TableCell >{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                                    <TableCell > <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\r\n                                                    <TableCell >{row[1]}</TableCell>\r\n                                                    <TableCell >{row[2]}</TableCell>\r\n                                                    <TableCell >{row[3]}</TableCell>\r\n                                                    <TableCell >{row[4]}</TableCell>\r\n                                                    <TableCell >{row[5]}</TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )) : ''}\r\n\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;\r\n\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport Notify from \"../../utils/Notify\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\nimport { createChart } from 'lightweight-charts';\r\nimport ChartDialog from './ChartDialog';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport vwap from 'vwap';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport CsvDownload from 'react-json-to-csv'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport worker_script from './worker';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sumPercentage: 0,\r\n            InstrumentPerChange: \"\",\r\n            autoSearchList: [],\r\n            isDasable: false,\r\n            isError: false,\r\n            InstrumentLTP: {},\r\n            ifNotBought: true,\r\n            autoSearchTemp: [],\r\n            backTestResult: [],\r\n            backTestResultCSV: [],\r\n            backTestFlag: true,\r\n            patternType: \"NR4\",  //NR4ForNextDay  NR4_SameDay\r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"INTRADAY\",\r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\r\n            longExitPriceType: 4,\r\n            shortExitPriceType: 4,\r\n            candleChartData: [],\r\n            stopScaningFlag: false,\r\n            backTestResultDateRange: [],\r\n            searchFailed: 0,\r\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\r\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\r\n            newJsonList: [],\r\n            timeFrame: \"FIFTEEN_MINUTE\",\r\n            overAllResult: [],\r\n            pertradePandL: 0,\r\n            pertradePandLNet: 0,\r\n            allQniqueStockList: [],\r\n            isSameDayDuplcate: true,\r\n            stockWiseListOverall: [],\r\n            filename: \"\",\r\n            overallMonthWise: [],\r\n            entryCandlePoint:5,\r\n            totalWinTrade:0, \r\n            maxDrowDown:0, \r\n            maxProfit:0, \r\n            crossedTargetCount: 0, \r\n            orderType:\"buy\",\r\n            targetPer: 0.5\r\n        \r\n        };\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            //    console.log(\"time\", this.state.timeFrame);\r\n            if (this.state.tradingsymbol) {\r\n                this.showStaticChart(this.state.symboltoken);\r\n            }\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n\r\n        this.setState({ isSameDayDuplcate: event.target.checked }, () => {\r\n            console.log(\"isSameDayDuplcate\", this.state.isSameDayDuplcate, event.target.checked);\r\n        })\r\n\r\n    };\r\n    componentDidMount() {\r\n\r\n\r\n\r\n        window.document.title = \"Backtest\";\r\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\r\n        var myWorker = new Worker(worker_script);\r\n        this.setState({ myWorker :  myWorker}); \r\n\r\n        const domElement = document.getElementById('tvchart');\r\n        document.getElementById('tvchart').innerHTML = '';\r\n        const chart = createChart(domElement, { width: 500, height: 250, timeVisible: true, secondsVisible: true, });\r\n        const candleSeries = chart.addCandlestickSeries();\r\n        var smaLineSeries = chart.addLineSeries({\r\n            color: 'rgba(4, 111, 232, 1)',\r\n            lineWidth: 2,\r\n        });\r\n        var volumeSeries = chart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: {\r\n                type: 'volume',\r\n            },\r\n            priceScaleId: '',\r\n            scaleMargins: {\r\n                top: 0.8,\r\n                bottom: 0,\r\n            },\r\n        });\r\n\r\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\r\n        \r\n        AdminService.updateStockList().then(res => {\r\n            this.setState({stockList:  res.data}); \r\n        })\r\n        \r\n\r\n\r\n\r\n    }\r\n\r\n    stopBacktesting = () => {\r\n        this.setState({ stopScaningFlag: true });\r\n    }\r\n\r\n    readCsv = async (callback) => {\r\n        this.setState({ newJsonList: [] })\r\n        let csvFormatInput = this.state.csvFormatInput.trim().split('\\n');\r\n        for (let index = 0; index < csvFormatInput.length; index++) {\r\n            const element = csvFormatInput[index];\r\n            let symbol = element.split('\\t')[1];\r\n            let startTime = element.split('\\t')[0];\r\n            this.setState({ stockTesting: index + 1 + \". \" + symbol + \" getting details\" })\r\n\r\n            //   console.log(element, symbol, startTime);\r\n\r\n            // \"13-01-2022 11:20\\tSHREEPUSHK\\tSmallcap\\tIndustrials\"\r\n\r\n            AdminService.autoCompleteSearch(symbol).then(searchRes => {\r\n\r\n                let searchResdata = searchRes.data;\r\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === symbol);\r\n                //     console.log(\"found\",  found)\r\n\r\n                if (found.length) {\r\n                    found[0].startTime = startTime;\r\n                    this.setState({ newJsonList: [...this.state.newJsonList, found[0]] }, () => {\r\n                        if (csvFormatInput.length - 1 == index) {\r\n                            callback()\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n\r\n            await new Promise(r => setTimeout(r, 150));\r\n        }\r\n    }\r\n\r\n    getAlltokenOfList = (callback) => {\r\n        let listofstockfound = [];\r\n        let allStockWithTime = [];\r\n        let updateList = [];\r\n        let csvFormatInput = this.state.csvFormatInput.trim().split('\\n');\r\n        for (let index = 0; index < csvFormatInput.length; index++) {\r\n            const element = csvFormatInput[index];\r\n\r\n            let name = element.split('\\t')[1];\r\n            let startTime = element.split('\\t')[0];\r\n\r\n            this.setState({ stockTesting: index + 1 + \". \" + name + \" getting details\" });\r\n            allStockWithTime.push({ name: name, startTime: startTime });\r\n            let found = listofstockfound.filter((item) => item.name === name);\r\n            if (!found[0]) {\r\n                listofstockfound.push({ name: name });\r\n            }\r\n        }\r\n        this.setState({ totaluniqueStocks: listofstockfound.length, allQniqueStockList: listofstockfound })\r\n\r\n        if (this.state.stockList.length > 0) {\r\n            for (let index = 0; index < allStockWithTime.length; index++) {\r\n                const element = allStockWithTime[index];\r\n                let filerdata = this.state.stockList.filter((item => item.name == element.name));\r\n                if (filerdata.length > 0) {\r\n                    let data = {\r\n                        symbol: filerdata[0].symbol,\r\n                        name: filerdata[0].name,\r\n                        startTime: element.startTime,\r\n                        token: filerdata[0].token,\r\n                    }\r\n                    updateList.push(data);\r\n                }\r\n            }\r\n            callback(updateList, listofstockfound, this.state.stockList);\r\n        }else{\r\n            AdminService.getAllListTokens(listofstockfound).then(searchRes => {\r\n                let searchResdata = searchRes.data;\r\n                if (searchResdata.length > 0) {\r\n                    for (let index = 0; index < allStockWithTime.length; index++) {\r\n                        const element = allStockWithTime[index];\r\n                        let filerdata = searchResdata.filter((item => item.name == element.name));\r\n                        if (filerdata.length > 0) {\r\n                            let data = {\r\n                                symbol: filerdata[0].symbol,\r\n                                name: filerdata[0].name,\r\n                                startTime: element.startTime,\r\n                                token: filerdata[0].token,\r\n                            }\r\n                            updateList.push(data);\r\n                        }\r\n                    }\r\n                }\r\n                callback(updateList, listofstockfound, searchResdata);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getDateFormate = (givendate, time) => {\r\n        let dateinfo = givendate.split(' ');\r\n        let sdate = dateinfo[0].split('-');\r\n        return moment(sdate[2] + '/' + sdate[1] + '/' + sdate[0] + ' ' + time);\r\n    }\r\n\r\n    convertDateFormat = (datetime) => {\r\n        let dateinfo = datetime.split(' ');\r\n        let date = dateinfo[0].split('-');\r\n        let input = date[2] + '/' + date[1] + '/' + date[0];\r\n        let time = '';\r\n        if (dateinfo && dateinfo[1]) {\r\n            time = moment(dateinfo[1], 'HH:mm').format('HH:mm');\r\n        }\r\n        // console.log(time)\r\n        return moment(input + ' ' + time);\r\n    }\r\n\r\n    getPerChangeOfStock = (histdata, stockInfo) => {\r\n\r\n        if (histdata.length > 0) {\r\n\r\n            var candleData = histdata;\r\n            let entryCandlePoint = this.state.entryCandlePoint; \r\n            let entryPrice = candleData[0][entryCandlePoint]\r\n            if(entryCandlePoint == 5){\r\n                entryPrice =  (candleData[0][2] + candleData[0][3]) / 2; \r\n            }\r\n\r\n            if(entryCandlePoint == 6){\r\n                candleData.forEach(element => {\r\n                    if(element[2] >  (candleData[0][2] + (candleData[0][2] / 100 / 10))){\r\n                        entryPrice = (candleData[0][2] + (candleData[0][2] / 100 / 10)); //candleData[0][2]; \r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            if(entryCandlePoint == 7){\r\n                candleData.forEach(element => {\r\n                    if(element[3] < (candleData[0][3] - (candleData[0][3] / 100 / 10))){\r\n                        entryPrice = (candleData[0][3] - (candleData[0][3] / 100 / 10)) //candleData[0][3]; \r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            \r\n            let stock = {\r\n                name: stockInfo.name,\r\n                symbol: stockInfo.symbol,\r\n                token: stockInfo.token,\r\n                entryPrice: entryPrice.toFixed(2),\r\n                foundAt: moment(candleData[0][0]).format('YYYY-MM-DD HH:mm')\r\n            }\r\n\r\n            let priceChangeList = [];  \r\n            for (let index2 = 1; index2 < candleData.length; index2++) {\r\n                let perChange = (candleData[index2][4] - stock.entryPrice) * 100 / stock.entryPrice;\r\n                let datetime = moment(candleData[index2][0]).format('h:mma')\r\n                if (this.state.timeFrame == 'ONE_DAY') {\r\n                    datetime = moment(candleData[index2][0]).format('DD/MM/YYYY h:mma')\r\n                }\r\n                if(perChange < this.state.maxDrowDown){\r\n                    this.setState({maxDrowDown : perChange.toFixed(2)}); \r\n                }\r\n                if(perChange > this.state.maxProfit){\r\n                    this.setState({maxProfit : perChange.toFixed(2)}); \r\n                }\r\n                priceChangeList.push({ perChange: perChange.toFixed(2), close: candleData[index2][4], datetime: datetime });\r\n            }\r\n\r\n            for (let index3 = 1; index3 < candleData.length; index3++) {\r\n                if(this.state.orderType == \"buy\") {\r\n                    let perChange = (candleData[index3][2] - stock.entryPrice) * 100 / stock.entryPrice;\r\n                    if(perChange > this.state.targetPer){\r\n                        this.setState({crossedTargetCount : this.state.crossedTargetCount+1 }); \r\n                        break; \r\n                    }\r\n                }\r\n                if(this.state.orderType == \"sell\"){\r\n                    let perChange = (candleData[index3][3] - stock.entryPrice) * 100 / stock.entryPrice;\r\n                    if(perChange < -this.state.targetPer){\r\n                        this.setState({crossedTargetCount : this.state.crossedTargetCount+1 }); \r\n                        break; \r\n                    }\r\n                }\r\n            }\r\n\r\n            stock.candleData = priceChangeList;\r\n            let isWinOnClosing = priceChangeList[priceChangeList.length-1].perChange > 0 ? true : false;\r\n            stock.isWinOnClosing = isWinOnClosing; \r\n            if(isWinOnClosing){\r\n                this.setState({ totalWinTrade: this.state.totalWinTrade+1 })\r\n            }\r\n            \r\n            if(stock.entryPrice > 0){\r\n                this.setState({ backTestResult: [...this.state.backTestResult, stock] }, () => {});\r\n            }\r\n        } else {\r\n            console.log(\" candle data emply\");\r\n            this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    backTestAnyPatternStockWise = () => {\r\n       \r\n        if(this.state.csvFormatInput){\r\n\r\n            this.setState({ backTestResult: [], overAllResult: [],stockWiseListOverall:[], backTestFlag: false, filename: '', searchFailed: 0, pertradePandL: 0, pertradePandLNet: 0 });\r\n            this.setState({ totalgross: 0, totalAvg: 0, totTrade: 0, totalNet: 0, totalExp: 0,totalWinTrade:0,   maxDrowDown:0, maxProfit:0, crossedTargetCount: 0 });\r\n    \r\n            this.getAlltokenOfList(async (newJsonList, listofstockfound, searchResdata) => {\r\n\r\n                //    newJsonList.sort((a, b) => a.startTime.localeCompare(b.startTime));\r\n                // console.log(\"newJsonList\",newJsonList[0].startTime, newJsonList[newJsonList.length-1 ].startTime);\r\n    \r\n                for (let index = 0; index < listofstockfound.length; index++) {\r\n    \r\n                    if (this.state.stopScaningFlag) {\r\n                        this.setState({ stopScaningFlag: false })\r\n                        break;\r\n                    }\r\n    \r\n                    const element = listofstockfound[index];\r\n                     console.log(\"unique loop\", element, new Date().toLocaleTimeString())\r\n    \r\n                    let filerdata = searchResdata.filter((item => item.name == element.name));\r\n                    let stocktoken = filerdata.length > 0 ? filerdata[0].token : \"\";\r\n                    if (stocktoken) {\r\n    \r\n                        \r\n                        let sameAllStock = newJsonList.filter((item => item.name == element.name));\r\n                      //  console.log(\"sameAllStock\",sameAllStock); \r\n    \r\n                        if(this.state.isSameDayDuplcate){\r\n                            let singleDatewiseSamestock = [];\r\n                            sameAllStock.forEach(elementstock => {\r\n                                let uniquestock = singleDatewiseSamestock.filter((item => moment(item.startTime).format('YYYY-MM-DD') == moment(elementstock.startTime).format('YYYY-MM-DD')));\r\n                                if(!uniquestock.length)\r\n                                singleDatewiseSamestock.push(elementstock); \r\n                            });\r\n                            sameAllStock = singleDatewiseSamestock;\r\n                        }\r\n                 \r\n                        let datelist = [];\r\n                        sameAllStock.forEach(elementsame => {\r\n                            datelist.push(this.convertDateFormat(elementsame.startTime))\r\n                        });\r\n    \r\n                        let momentsDates = datelist.map(d => moment(d));\r\n                        let startDate = moment.min(momentsDates);\r\n                        let endDate = moment.max(momentsDates);\r\n    \r\n                        if(this.state.entryTimeAt){\r\n                            startDate =  startDate.format(\"YYYY-MM-DD\")+ ' ' + this.state.entryTimeAt; \r\n                        }\r\n    \r\n    \r\n                        var data = {\r\n                            \"exchange\": \"NSE\",\r\n                            \"symboltoken\": stocktoken,\r\n                            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                            \"fromdate\": moment(startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                            \"todate\": moment(endDate.format(\"YYYY-MM-DD\")+ ' ' + '15:30').format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n                        }\r\n    \r\n                        AdminService.getHistoryData(data).then(res => {\r\n                            let histdata = resolveResponse(res, 'noPop');\r\n                            if (histdata && histdata.data && histdata.data.length) {\r\n    \r\n                                console.log(\"history\", element, new Date().toLocaleTimeString())\r\n    \r\n    \r\n                                for (let index = 0; index < sameAllStock.length; index++) {\r\n                                    const samestock = sameAllStock[index];\r\n    \r\n                                    let foundat = this.convertDateFormat(samestock.startTime);\r\n                                    let endtime = moment(foundat.format('YYYY-MM-DD') + ' ' + '15:30');\r\n                                    // console.log(\"startime\",foundat, endtime)\r\n    \r\n                                    let chunkCandleData = histdata.data.filter((candleInfo => moment(candleInfo[0]).isSameOrAfter(foundat) && moment(candleInfo[0]).isSameOrBefore(endtime)))  //isBetween(foundat, endtime);\r\n    \r\n                                  //    console.log(\"chunkdata\", stock,chunkCandleData )\r\n                             //     console.log(\"inside for loop start\", samestock, new Date().toLocaleTimeString())\r\n    \r\n                                    this.getPerChangeOfStock(chunkCandleData, samestock);\r\n                                //    console.log(\"inside\", samestock, new Date().toLocaleTimeString())\r\n                                }\r\n                                // sameAllStock.forEach((stock, i) => {\r\n    \r\n                                //     console.log(\"inside foreach loop\", stock, new Date().toLocaleTimeString())\r\n    \r\n                                //     let foundat = this.convertDateFormat(stock.startTime);\r\n                                //     let endtime = moment(foundat.format('YYYY-MM-DD') + ' ' + '15:30');\r\n                                //     // console.log(\"startime\",foundat, endtime)\r\n    \r\n                                //     let chunkCandleData = histdata.data.filter((candleInfo => moment(candleInfo[0]).isSameOrAfter(foundat) && moment(candleInfo[0]).isSameOrBefore(endtime)))  //isBetween(foundat, endtime);\r\n    \r\n                                //   //    console.log(\"chunkdata\", stock,chunkCandleData )\r\n                                //     this.getPerChangeOfStock(chunkCandleData, stock);\r\n    \r\n                                // //    this.state.myWorker.postMessage({chunkCandleData: chunkCandleData, stock: stock});\r\n    \r\n                                // });\r\n    \r\n                                // this.state.myWorker.onmessage = (m) => {\r\n                                //     console.log(\"msg from worker: \", m.data);\r\n                                // };\r\n    \r\n    \r\n                               //  this.updateOverall();\r\n                                 \r\n                               this.updateStockWiseOverall();\r\n                            //   this.updateMonthWise();\r\n                            } else {\r\n                                console.log(\" candle data emply\");\r\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n                            }\r\n                        }).catch((error) => {\r\n                            console.log(element.symbol, error)\r\n                            this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n                        })\r\n    \r\n                    } else {\r\n                        continue;\r\n                    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n                    await new Promise(r => setTimeout(r, 350));\r\n                    this.setState({ stockTesting: index + 1 + \". \" + element.name })\r\n                }\r\n    \r\n                this.setState({ backTestFlag: true });\r\n    \r\n            });\r\n        }else{\r\n            Notify.showError(\"Paste stocklist datetime  symbol format, tab format\")\r\n        }\r\n      \r\n    }\r\n\r\n    backTestAnyPattern = () => {\r\n        this.setState({ backTestResult: [], overAllResult: [],overallMonthWise:[], backTestFlag: false, filename: '', searchFailed: 0, pertradePandL: 0, pertradePandLNet: 0 });\r\n\r\n        this.getAlltokenOfList(async (newJsonList) => {\r\n            //  let newJsonList = this.state.newJsonList; \r\n            for (let index = 0; index < newJsonList.length; index++) {\r\n\r\n                if (this.state.stopScaningFlag) {\r\n                    this.setState({ stopScaningFlag: false })\r\n                    break;\r\n                }\r\n\r\n                const element = newJsonList[index];\r\n                //    console.log(element)\r\n\r\n                let dateinfo = element.startTime.split(' ');\r\n                let date = dateinfo[0].split('-');\r\n                let input = date[2] + '/' + date[1] + '/' + date[0];\r\n                let time = '9:15';\r\n                if (dateinfo && dateinfo[1]) {\r\n                    moment(dateinfo[1], 'HH:mm').format('HH:mm');\r\n                }\r\n                //   console.log(time)\r\n                var startDate = moment(input + ' ' + time);\r\n                var marketendtime = \"15:30\";\r\n                var endtime = moment(input + ' ' + marketendtime);\r\n                if (this.state.timeFrame == 'ONE_DAY') {\r\n\r\n                    endtime = moment(startDate, \"DD-MM-YYYY\").add(5, 'days');\r\n                    let nextdate = moment(endtime).format(\"YYYY-MM-DD\");\r\n                    endtime = moment(nextdate + ' ' + marketendtime);\r\n                }\r\n\r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                    \"fromdate\": moment(startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                    \"todate\": moment(endtime).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n                }\r\n\r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                        var candleData = histdata.data;\r\n                        let stock = {\r\n                            symbol: element.symbol,\r\n                            token: element.token,\r\n                            entryPrice: candleData[0][4],\r\n                            foundAt: moment(candleData[0][0]).format('YYYY-MM-DD HH:mm')\r\n                        }\r\n\r\n                        let priceChangeList = [];\r\n                        for (let index2 = 1; index2 < candleData.length; index2++) {\r\n                            let perChange = (candleData[index2][4] - stock.entryPrice) * 100 / stock.entryPrice;\r\n                            let datetime = moment(candleData[index2][0]).format('h:mma')\r\n                            if (this.state.timeFrame == 'ONE_DAY') {\r\n                                datetime = moment(candleData[index2][0]).format('DD/MM/YYYY h:mma')\r\n                            }\r\n                            priceChangeList.push({ perChange: perChange.toFixed(2), close: candleData[index2][4], datetime: datetime });\r\n                        }\r\n                        stock.candleData = priceChangeList;\r\n                        this.setState({ backTestResult: [...this.state.backTestResult, stock] }, () => {\r\n                            this.updateOverall();\r\n                        });\r\n                    } else {\r\n                        console.log(\" candle data emply\");\r\n                        this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(element.symbol, error)\r\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\r\n\r\n                })\r\n                await new Promise(r => setTimeout(r, 350));\r\n                this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\r\n            }\r\n            this.setState({ backTestFlag: true });\r\n        });\r\n\r\n        //    this.readCsv( );//callback end \r\n\r\n    }\r\n\r\n    updateOverall = () => {\r\n        // this.setState({ overAllResult : [] });\r\n\r\n        let timelist = [];\r\n        this.state.backTestResult.forEach(element => {\r\n            element.candleData.forEach((item) => {\r\n                let found = timelist.filter((time) => time === item.datetime);\r\n                if (!found[0]) {\r\n                    timelist.push(item.datetime);\r\n                }\r\n            });\r\n        });\r\n\r\n        let overallData = [];\r\n\r\n        timelist.forEach(timeelement => {\r\n            let sumofall = 0;\r\n            this.state.backTestResult.forEach(element => {\r\n                for (let index = 0; index < element.candleData.length; index++) {\r\n                    const item = element.candleData[index];\r\n                    if (timeelement === item.datetime) {\r\n                        sumofall += parseFloat(item.perChange)\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            let expence = this.state.backTestResult.length * 0.06;\r\n            overallData.push({\r\n                datetime: timeelement,\r\n                sumofall: sumofall.toFixed(2),\r\n                expence: expence.toFixed(2),\r\n                netOverAll: (sumofall - expence).toFixed(2),\r\n                noOfTrade: this.state.backTestResult.length\r\n            })\r\n        });\r\n\r\n        // overallData.reverse()\r\n        overallData.sort((a, b) => moment(b.datetime, 'h:mma') - moment(a.datetime, 'h:mma'));\r\n\r\n        this.setState({ overAllResult: overallData }, () => {\r\n            //  console.log('overAllResult', this.state.overAllResult)\r\n            if(this.state.overAllResult.length > 0){\r\n                let pertradePandLgross = (this.state.overAllResult[0].sumofall / this.state.overAllResult[0].noOfTrade);\r\n                let pertradePandLNet = pertradePandLgross - 0.06;\r\n                this.setState({ \"pertradePandL\": pertradePandLgross.toFixed(2), pertradePandLNet: pertradePandLNet.toFixed(2) });    \r\n            }\r\n         \r\n        });\r\n\r\n    }\r\n\r\n\r\n    updateStockWiseOverall = () => {\r\n        // this.setState({ overAllResult : [] });\r\n        this.setState({ stockWiseListOverall: [] })\r\n\r\n        let overall = []; \r\n      //  console.log(\"this.state.allQniqueStockList\", this.state.allQniqueStockList, this.state.backTestResult)\r\n\r\n        this.state.allQniqueStockList.forEach(stockelement => {\r\n\r\n         //   console.log('stockelement', stockelement); \r\n            let sumofall = 0, totalSameTrade = 0;\r\n            this.state.backTestResult.forEach(element => {\r\n                if (stockelement.name == element.name) {\r\n                 //   console.log('result element', element); \r\n\r\n                    if (element.candleData.length > 0) {\r\n                        sumofall += parseFloat(element.candleData[element.candleData.length - 1].perChange)\r\n                        totalSameTrade += 1;\r\n                    }\r\n                }\r\n            });\r\n            let expence = totalSameTrade * 0.06;\r\n            let data = {\r\n                name: stockelement.name,\r\n                totalSameTrade: totalSameTrade,\r\n                sumofall: sumofall,\r\n                expence: expence,\r\n                netPnL: (sumofall - expence)\r\n            }\r\n\r\n            overall.push(data); \r\n            \r\n        });\r\n\r\n\r\n        this.setState({ stockWiseListOverall: overall}, () => {\r\n\r\n            let totalgross = 0, totalAvg = 0, totTrade = 0, totalNet = 0, totalExp = 0, winCount=0,lossCount=0;\r\n            this.state.stockWiseListOverall.forEach(item => {\r\n                totalgross += item.sumofall;\r\n                totTrade += item.totalSameTrade;\r\n                totalNet += item.netPnL;\r\n                totalExp += item.expence;\r\n                winCount += item.netPnL>0 ? 1 : 0;\r\n                lossCount += item.netPnL<0 ? 1 : 0;\r\n            })\r\n\r\n            totalAvg = (totalgross/totTrade).toFixed(2);\r\n\r\n            let data = {\r\n                name: \"Total (Gross Avg%): \"+totalAvg,\r\n                totalSameTrade: totTrade,\r\n                sumofall: totalgross ,\r\n                expence: totalExp,\r\n                netPnL: totalNet,\r\n                winCount:winCount,\r\n                lossCount:lossCount\r\n            }\r\n\r\n            this.state.stockWiseListOverall.push(data); \r\n\r\n\r\n            this.setState({stockWiseListOverall: this.state.stockWiseListOverall, lossCount:lossCount,winCount:winCount,  totalgross: totalgross.toFixed(2), totalAvg: totalAvg, totTrade: totTrade, totalNet: totalNet.toFixed(2), totalExp: totalExp.toFixed(2) });\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    updateMonthWise = () => {\r\n        this.setState({ overallMonthWise: [] })\r\n        let months = [\r\n            {name: 'Jan'}, \r\n            {name: 'Feb'}, \r\n            {name: 'Mar'}, \r\n            {name: 'Apr'}, \r\n            {name: 'May'}, \r\n            {name: 'Jun'}, \r\n            {name: 'Jul'}, \r\n            {name: 'Aug'}, \r\n            {name: 'Sep'}, \r\n            {name: 'Nov'}, \r\n            {name: 'Dec'}, \r\n            \r\n        ]; \r\n        let overall = []; \r\n\r\n        let sumofall = 0, totalSameTrade = 0;\r\n       \r\n        months.forEach(month => {\r\n\r\n            //   console.log('stockelement', stockelement); \r\n               let sumofall = 0, totalSameTrade = 0;\r\n               this.state.backTestResult.forEach(element => {\r\n                   let tradeMonth = moment(element.foundAt).format('MMM'); \r\n                   if (month.name == tradeMonth) {\r\n                       if (element.candleData.length > 0) {\r\n                           sumofall += parseFloat(element.candleData[element.candleData.length - 1].perChange)\r\n                           totalSameTrade += 1;\r\n                       }\r\n                   }\r\n               });\r\n               let expence = totalSameTrade * 0.06;\r\n               let data = {\r\n                   name: month.name,\r\n                   totalSameTrade: totalSameTrade,\r\n                   sumofall: sumofall.toFixed(2),\r\n                   expence: expence.toFixed(2),\r\n                   netPnL: (sumofall - expence).toFixed(2)\r\n               }\r\n\r\n               overall.push(data); \r\n               \r\n           });\r\n\r\n        this.setState({ overallMonthWise: overall}, () => {            \r\n\r\n        })\r\n    }\r\n\r\n\r\n    calculateSMA = (data, count) => {\r\n\r\n        //  console.log(\"smarowdata\", data, count);\r\n\r\n        var avg = function (data) {\r\n            var sum = 0;\r\n            for (var i = 0; i < data.length; i++) {\r\n                sum += data[i].close;\r\n            }\r\n            return sum / data.length;\r\n        };\r\n        var result = [];\r\n        for (var i = count - 1, len = data.length; i < len; i++) {\r\n            var val = avg(data.slice(i - count + 1, i));\r\n            result.push({ time: data[i].time, value: val });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    showStaticChart = (token, symbol, entryAt, exitAt) => {\r\n\r\n\r\n\r\n        console.log('token, symbol, entryAt, exitAt', token, symbol, entryAt, exitAt)\r\n\r\n        this.setState({ chartStaticData: '', lightChartSymbol: symbol }, function () {\r\n            console.log('reset done', token);\r\n        });\r\n\r\n        //     console.log(\"time in function \", this.state.timeFrame);\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        //     // var time = moment.duration(\"10:50:00\");\r\n        //     // var startDate = moment(new Date()).subtract(time);\r\n        //     // var startdate = moment(this.state.startDate).subtract(time);\r\n        //     var beginningTime = moment('9:15am', 'h:mma');\r\n\r\n        //     let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\r\n        //     var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \r\n        //    // var startDate = moment(new Date(foundAt)).set()\r\n\r\n        var startDate = moment(entryAt).set(\"hour\", '09').set(\"minute\", '15');\r\n        var enddate = moment(exitAt).set(\"hour\", '15').set(\"minute\", '30');\r\n\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startDate).format(format1),\r\n            \"todate\": moment(enddate).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let historyData = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (historyData && historyData.data) {\r\n\r\n                var data = historyData.data;\r\n\r\n                const cdata = data.map(d => {\r\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\r\n                });\r\n\r\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\r\n                data.forEach((element, loopindex) => {\r\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\r\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\r\n                    closeingData.push(element[4]);\r\n                    highData.push(element[2]);\r\n                    lowData.push(element[3]);\r\n                    openData.push(element[3]);\r\n                    valumeData.push(element[5]);\r\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\r\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\r\n\r\n                });\r\n\r\n                var input = {\r\n                    period: 20,\r\n                    values: bbdata,\r\n                    stdDev: 2\r\n                }\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var bb = BollingerBands.calculate(input);\r\n                console.log(token, \"Bolinger band\", input, bb);\r\n\r\n                var inputRSI = { values: closeingData, period: 14 };\r\n                var rsiValues = RSI.calculate(inputRSI);\r\n\r\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\r\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\r\n\r\n\r\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\r\n                    // candleSeries.setData(this.state.chartStaticData); \r\n                    this.state.candleSeries.setData(this.state.chartStaticData);\r\n\r\n                    this.state.volumeSeries.setData(volumeSeriesData);\r\n\r\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\r\n\r\n                    this.state.smaLineSeries.setData(smaData);\r\n\r\n\r\n                    this.state.chart.subscribeCrosshairMove((param) => {\r\n\r\n                        var getit = param.seriesPrices[Symbol.iterator]();\r\n\r\n                        var string = \"\";\r\n                        var change = \"\";\r\n\r\n                        for (var elem of getit) {\r\n\r\n                            if (typeof elem[1] == 'object') {\r\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\r\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\r\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\r\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\r\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\r\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\r\n                            } else {\r\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\r\n                            }\r\n                        }\r\n\r\n                        if (param.time)\r\n                            string += \" Time: <b>\" + moment(param.time).format('DD/MM/YYYY h:mma') + \"</b>\";\r\n                        else\r\n                            string += \" <b>Time: </b>\";\r\n\r\n\r\n                        const domElement = document.getElementById('showChartTitle');\r\n\r\n\r\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\r\n                        if (change < 0)\r\n                            str = \"<span style=color:red>\" + string + \"</span> \";\r\n\r\n                        domElement.innerHTML = str;\r\n                    });\r\n\r\n\r\n                });\r\n\r\n\r\n                data && data.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (data.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\r\n                    this.setState({ InstrumentHistroy: data });\r\n\r\n\r\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\r\n                    data.forEach(element => {\r\n\r\n                        var per = (element[4] - element[1]) * 100 / element[1];\r\n                        if (per >= 0.3) {\r\n                            upsideMoveCount += 1;\r\n                        }\r\n                        if (per <= -0.3) {\r\n                            downMoveCount += 1;\r\n                        }\r\n\r\n                        totalSum += per;\r\n\r\n                    });\r\n\r\n\r\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString();\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n\r\n\r\n    getPercentageColor = (percent) => {\r\n        percent = percent * 100;\r\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\r\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\r\n        return 'rgb(' + r + ',' + g + ',0)';\r\n    }\r\n\r\n\r\n\r\n\r\n    onFileChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.files[0] });\r\n    }\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n\r\n        //    console.log(\"backTestResult\", this.state.backTestResult)\r\n        //    console.log(\"stockWiseListOverall\", this.state.stockWiseListOverall)\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <ChartDialog />\r\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={8}>\r\n\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n                            {/* <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Chartink Backtest</Typography> */}\r\n\r\n                            <Grid direction=\"row\" container spacing={2}>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField variant=\"outlined\" id=\"textarea\" multiline rows={10} fullwidth style={{ width: '90%', height: '50%' }} label=\"1. Datetime 2. Symbol format : Paste\" value={this.state.csvFormatInput} name=\"csvFormatInput\" onChange={this.onChange} />\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\r\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\r\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n                                        </Select>\r\n\r\n                                        <Select title='Entry candle point , mid means high+low/2' value={this.state.entryCandlePoint} name=\"entryCandlePoint\" onChange={this.onInputChange}>\r\n                                            <MenuItem value={1}>{'Open'}</MenuItem>\r\n                                            <MenuItem value={2}>{'High'}</MenuItem>\r\n                                            <MenuItem value={3}>{'Low'}</MenuItem>\r\n                                            <MenuItem value={4}>{'Close'}</MenuItem>\r\n                                            <MenuItem value={5}>{'Mid'}</MenuItem>\r\n                                            <MenuItem value={6}>{'Above High'}</MenuItem>\r\n                                            <MenuItem value={7}>{'Below Low'}</MenuItem>\r\n\r\n                                        </Select>\r\n\r\n                                        <Select title='checking for buy or sell' value={this.state.orderType} name=\"orderType\" onChange={this.onInputChange}>\r\n                                            <MenuItem value={'buy'}>{'Buy'}</MenuItem>\r\n                                            <MenuItem value={'sell'}>{'Sell'}</MenuItem>\r\n                                         \r\n                                        </Select>\r\n                                        <input placeholder='9:20' fullwidth style={{ width: '90%', height: '50%' }} label=\"entryTimeAt\" value={this.state.entryTimeAt} name=\"entryTimeAt\" onChange={this.onChange} />\r\n                                        <input placeholder='target %: 0.5' type='number' step={0.1} fullwidth style={{ width: '90%', height: '50%' }} label=\"Target\" value={this.state.targetPer} name=\"targetPer\" onChange={this.onChange} />\r\n\r\n\r\n                                        <FormGroup>\r\n                                            <FormControlLabel\r\n                                                control={<Switch checked={this.state.isSameDayDuplcate} onChange={this.handleChange} aria-label=\"Speek ON/OFF\" />}\r\n                                                label={this.state.isSameDayDuplcate ? 'Same Day Duplcate: Yes' : 'Same Day Duplcate: No'}\r\n                                            />\r\n                                        </FormGroup>\r\n                                   \r\n\r\n                                         <input placeholder='filename' id=\"textarea\" fullwidth style={{ width: '90%', height: '50%' }} label=\"Filename\" value={this.state.filename} name=\"filename\" onChange={this.onChange} />\r\n\r\n                                         \r\n                                         Failed:{this.state.searchFailed} \r\n                                     <br /> \r\n                                    {this.state.totaluniqueStocks ? this.state.totaluniqueStocks + \" unique stocks found\" : \"\"}\r\n                                    <br />\r\n                                    {this.state.stockTesting}\r\n                                    </FormControl>\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={4} style={{ marginTop: '5px' }}>\r\n                                    {/* {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <>  <Spinner />  &nbsp;&nbsp;   <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop Scaning &nbsp; </Button>   </>} */}\r\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPatternStockWise()}>Test Stock Wise</Button> : <>  <Spinner />  &nbsp; <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button>  </>}\r\n                                   \r\n                                    <span title='Success Ratio'>Success Ratio: {(this.state.crossedTargetCount * 100/this.state.backTestResult.length).toFixed(2)}%</span> \r\n\r\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" >\r\n                                                    <Button size='small' variant='outlined' onClick={this.updateMonthWise}>Month</Button>                                                </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Trades\r\n                                                    </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Gross P/L\r\n                                                    </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Expence</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" > Net P/L\r\n                                                    </TableCell>\r\n\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                                {this.state.overallMonthWise ? this.state.overallMonthWise.map((item, i) => (\r\n                                                    item.totalSameTrade > 0 ?  <TableRow key={i}>\r\n                                                    <TableCell>{item.name}</TableCell>\r\n                                                    <TableCell>{item.totalSameTrade}</TableCell>\r\n                                                    <TableCell>{item.sumofall > 0 ? <span style={{ color: 'green' }}> {item.sumofall}</span> : <span style={{ color: 'red' }}> {item.sumofall}</span>}% </TableCell>\r\n                                                    <TableCell>{item.expence}%</TableCell>\r\n                                                    <TableCell>{item.netPnL > 0 ? <span style={{ color: 'green' }}> {item.netPnL}</span> : <span style={{ color: 'red' }}> {item.netPnL}</span>}% </TableCell>\r\n\r\n                                                </TableRow>:\"\"\r\n                                                )) : ''}\r\n\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                   \r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} >\r\n\r\n                                    <div style={{ overflow: \"auto\", maxHeight: \"200px\" }}>\r\n\r\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n                                                <TableCell>Sr.&nbsp;</TableCell>\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" >Stock ({this.state.stockWiseListOverall.length}) <CsvDownload filename={'Overall_'+this.state.timeFrame+'_'+this.state.entryCandlePoint+'_'+this.state.orderType+'_'+this.state.filename+'.csv'} data={this.state.stockWiseListOverall} />                                                    </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >T.T ({this.state.totTrade})  Avg:\r\n                                                    ({this.state.totalAvg > 0 ? <span style={{ color: 'green' }}> {this.state.totalAvg}</span> : <span style={{ color: 'red' }}> {this.state.totalAvg}</span>})%\r\n                                                    </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Gross P/L\r\n                                                        ({this.state.totalgross > 0 ? <span style={{ color: 'green' }}> {this.state.totalgross}</span> : <span style={{ color: 'red' }}> {this.state.totalgross}</span>})%\r\n                                                    </TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Expence ({this.state.totalExp})%</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" > Net P/L\r\n                                                        ({this.state.totalNet > 0 ? <span style={{ color: 'green' }}> {this.state.totalNet}</span> : <span style={{ color: 'red' }}> {this.state.totalNet}</span>})%\r\n\r\n                                                        &nbsp;  W:{this.state.winCount}  &nbsp; L:{this.state.lossCount}\r\n                                                    </TableCell>\r\n\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                                {this.state.stockWiseListOverall ? this.state.stockWiseListOverall.map((item, i) => (\r\n                                                    <TableRow key={i}>\r\n                                                        <TableCell>{i+1}</TableCell>\r\n\r\n                                                        <TableCell>{item.name}</TableCell>\r\n                                                        <TableCell>{item.totalSameTrade}</TableCell>\r\n                                                        <TableCell>{item.sumofall > 0 ? <span style={{ color: 'green' }}> {item.sumofall}</span> : <span style={{ color: 'red' }}> {item.sumofall}</span>}% </TableCell>\r\n                                                        <TableCell>{item.expence}%</TableCell>\r\n                                                        <TableCell>{item.netPnL > 0 ? <span style={{ color: 'green' }}> {item.netPnL}</span> : <span style={{ color: 'red' }}> {item.netPnL}</span>}% </TableCell>\r\n\r\n                                                    </TableRow>\r\n                                                )) : ''}\r\n\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n\r\n                            <Grid direction=\"row\" container spacing={2}>\r\n\r\n                                <Grid item xs={12} sm={12}>\r\n\r\n                                    <div style={{ overflow: \"auto\", maxHeight: \"550px\" }}>\r\n\r\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n\r\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Sr.</TableCell>\r\n\r\n                                                    <TableCell className=\"TableHeadFormat\" >Datetime <CsvDownload filename={'Trade_'+this.state.timeFrame+'_'+this.state.entryCandlePoint+'_'+this.state.orderType+'_'+this.state.filename+'.csv'} data={this.state.backTestResult} /></TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >Symbol &nbsp;</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >EntryPrice &nbsp;</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >ExitPrice &nbsp;</TableCell>\r\n                                                    <TableCell className=\"TableHeadFormat\" >T.T:({this.state.backTestResult.length}) &nbsp;W:{this.state.totalWinTrade} &nbsp;L:{this.state.backTestResult.length - this.state.totalWinTrade}&nbsp;<span title='Max Loss'>ML:{this.state.maxDrowDown}%</span>&nbsp;<span title='Max Profit'>MP:{this.state.maxProfit}%</span>&nbsp;<span title='target crossed'> C.T:{this.state.crossedTargetCount}</span>&nbsp;<span title='target not crossed'>N.C:{this.state.backTestResult.length - this.state.crossedTargetCount} </span> &nbsp;\r\n                                                     <span title='Success Ratio'>S.R.{(this.state.crossedTargetCount * 100/this.state.backTestResult.length).toFixed(2)}%</span> \r\n                                                     </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n\r\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                                {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\r\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\r\n                                                    <TableRow hover key={i}  style={{ background: !row.isWinOnClosing ? 'bisque' : \"\"}}>\r\n\r\n                                                        <TableCell>{i + 1}&nbsp;</TableCell>\r\n\r\n                                                        <TableCell >{row.foundAt} &nbsp;</TableCell>\r\n                                                        <TableCell><Button size='small' variant='contained' onClick={() => this.showStaticChart(row.token, row.symbol, row.foundAt, row.foundAt)}>{row.symbol} </Button> </TableCell>\r\n                                                        <TableCell><span style={{ fontStyle: 'italic' }}> {row.entryPrice}</span> &nbsp;</TableCell>\r\n                                                        <TableCell><span style={{ fontStyle: 'italic', color: row.candleData[row.candleData.length-1].close > row.entryPrice ? 'green' : \"red\"}}> {row.candleData[row.candleData.length-1].close} ({row.candleData[row.candleData.length-1].perChange}%) </span> &nbsp;</TableCell>\r\n\r\n                                                        <TableCell >\r\n                                                            {row.candleData.map((item, j) => (<>\r\n                                                                <span>{item.datetime}: </span>{item.close}({item.perChange > 0 ? <span style={{ color: 'green' }}> {item.perChange}%</span> : <span style={{ color: 'red' }}> {item.perChange}%</span>}) &nbsp;\r\n                                                            </>\r\n                                                            ))}\r\n\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )) : ''}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={4}>\r\n\r\n                        <Paper style={{ padding: \"10px\", position:  navigator.userAgentData.mobile ? \"\" :  \"fixed\"  }}>\r\n\r\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n                                <Grid item xs={12} sm={12}  >\r\n                                    <Grid spacing={1} direction=\"row\" alignItems=\"center\" container>\r\n                                        <Grid item xs={12} sm={2} >\r\n                                            <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\r\n                                                <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\r\n                                                    <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\r\n                                                    <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\r\n                                                    <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\r\n                                                    <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\r\n                                                    <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\r\n                                                    <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\r\n                                                    <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={10} >\r\n                                            <Typography>Same Day Chart:  {this.state.lightChartSymbol}</Typography>\r\n\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                    <div id=\"showChartTitle\"></div>\r\n                                    <div id=\"tvchart\"></div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"40vh\" }} >\r\n                                    <Typography> <Button size='small' variant='outlined' onClick={this.updateOverall}> Overall </Button>\r\n                                        {this.state.pertradePandL > 0 ? <span style={{ color: 'green' }}> {this.state.pertradePandL}</span> : <span style={{ color: 'red' }}> {this.state.pertradePandL}</span>}% Gross/Trade   |\r\n                                        {this.state.pertradePandLNet > 0 ? <span style={{ color: 'green' }}> {this.state.pertradePandLNet}</span> : <span style={{ color: 'red' }}> {this.state.pertradePandLNet}</span>}% Net/Trade  </Typography>\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" >Timestamp</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >No Of Trade</TableCell>\r\n\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" >Gross Overall P/L%</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Expence%</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Net P/L%</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                            {this.state.overAllResult ? this.state.overAllResult.map((item, i) => (\r\n                                                <TableRow key={i}>\r\n\r\n\r\n                                                    <TableCell>{item.datetime}</TableCell>\r\n                                                    <TableCell>{item.noOfTrade}</TableCell>\r\n\r\n                                                    <TableCell>{item.sumofall > 0 ? <span style={{ color: 'green' }}> {item.sumofall}</span> : <span style={{ color: 'red' }}> {item.sumofall}</span>}% </TableCell>\r\n                                                    <TableCell>{item.expence}%</TableCell>\r\n                                                    <TableCell>{item.netOverAll > 0 ? <span style={{ color: 'green' }}> {item.netOverAll}</span> : <span style={{ color: 'red' }}> {item.netOverAll}</span>}% </TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )) : ''}\r\n\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <div id=\"showChartTitle\"></div>\r\n                        <div id=\"tvchart\"></div>\r\n\r\n                     </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;\r\n\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport Notify from \"../../utils/Notify\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\nimport { createChart } from 'lightweight-charts';\r\nimport ChartDialog from './ChartDialog';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport vwap from 'vwap';\r\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport CsvDownload from 'react-json-to-csv'\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n       \r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\r\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\r\n            selectedWatchlist: 'NIFTY 50', //'Securities in F&O',\r\n            stopScaningFlag: false,\r\n            backTestResultDateRange: [],\r\n            searchFailed: 0,\r\n       \r\n            backTestFlag: true,\r\n            backupHistoryStatus : []\r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            //  console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value }, function () {\r\n            //    console.log(\"time\", this.state.timeFrame);\r\n            if (this.state.tradingsymbol) {\r\n                this.showStaticChart(this.state.symboltoken);\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangePattern = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.value == 'NR4_Daywide_daterage') {\r\n\r\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\r\n\r\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\r\n\r\n        }\r\n    }\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var staticData = this.state.staticData;\r\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\r\n            this.setState({ cursor: '' });\r\n        });\r\n\r\n        if (e.target.value == \"selectall\") {\r\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\r\n                //      this.updateSocketWatch();\r\n                //  this.checkOpenEqualToLow();\r\n                this.setState({ cursor: '' });\r\n            });\r\n        }\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n            this.setState({ startDate: date });\r\n        } else if (fromDate === \"END_DATE\") {\r\n            this.setState({ endDate: date });\r\n        }\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        window.document.title = \"Backtest\";\r\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] }, function(){            \r\n\r\n\r\n            this.getCandleHistoryAndStore(); \r\n\r\n            const friday = 5; // for friday\r\n            var currentTime = moment(new Date(), \"h:mma\");\r\n            const today = moment().isoWeekday();\r\n            var beginningTime = moment('9:15am', 'h:mma');\r\n            var endTime = moment('3:30pm', 'h:mma');\r\n    \r\n            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\r\n                var tostartInteral =   setInterval(() => {\r\n                    var time = new Date(); \r\n                    if(time.getSeconds() === 0){\r\n                        setTimeout(() => {\r\n                            this.getCandleHistoryAndStore(); \r\n                        }, 10000);\r\n                        setInterval(() => {\r\n                            this.getCandleHistoryAndStore(); \r\n                         }, 60000 * 1 + 10000 );  \r\n                         clearInterval(tostartInteral); \r\n                    } \r\n                }, 1000);\r\n            }\r\n        });\r\n      \r\n    }\r\n\r\n    \r\n    getCandleHistoryAndStore = async () => {\r\n\r\n        console.log(\"last candle called time\", new Date().toLocaleTimeString());\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\r\n        var timediff = moment.duration(\"00:01:00\");\r\n        this.setState({ backupHistoryStatus: [] });\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        let symbolList  = this.state.symbolList; \r\n\r\n    //    console.log(\"watchlist to backup\", symbolList)\r\n        for (let index = 0; index < symbolList.length; index++) {\r\n            const element = symbolList[index];\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                \"fromdate\": moment(startdate).format(format1),\r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            let status = {\r\n                symbol: element.name,\r\n                startDate: moment(startdate).format(format1),\r\n                endDate:  moment(new Date()).format(format1) ,\r\n                downloadStatus: false,\r\n                noOfRows : 0, \r\n                backStatus : false,\r\n                hugeVol: false\r\n            }\r\n\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    let requestInfo = {\r\n                        symbol: element.symbol,\r\n                        token: element.token,\r\n                        candleData: histdata.data,\r\n                        analysis: true\r\n                    }\r\n                    status.downloadStatus = true; \r\n                    AdminService.backupHistoryData(requestInfo).then(res => {\r\n                        status.backStatus = true ;\r\n                      //  console.log(\"test\", res.data);\r\n                        status.noOfRows =  res.data && res.data.result; \r\n                        status.hugeVol =  res.data && res.data.hugeVol\r\n\r\n                        if(res.data && res.data.hugeVol){\r\n                            console.log( ' huge Volume in '+ element.symbol)\r\n                                var msg = new SpeechSynthesisUtterance();\r\n                                msg.text = ' huge Volume in '+ element.symbol;\r\n                                window.speechSynthesis.speak(msg);\r\n                        }\r\n\r\n                    })\r\n\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 310));\r\n            this.setState({backupHistoryStatus: [...this.state.backupHistoryStatus, status]  }); \r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    stopBacktesting = () => {\r\n        this.setState({ stopScaningFlag: true });\r\n    }\r\n\r\n    storyHistoryData = async () => {\r\n\r\n        let filename = this.state.patternType + \" \" + this.state.selectedWatchlist + \" \" + moment(this.state.startDate).format(\"YYYY-MM-DD\") + \" \" + moment(this.state.endDate).format(\"YYYY-MM-DD\") + \".csv\";\r\n        this.setState({ backupHistoryStatus: [], backTestFlag: false, filename: filename, stopScaningFlag: false });\r\n\r\n      //  console.log('filename', filename);\r\n        \r\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1;\r\n\r\n        var date1 = moment(this.state.startDate);\r\n        var date2 = moment(this.state.endDate);\r\n        let nod = date2.diff(date1, 'days'); \r\n        let looptime = Math.ceil(nod/30); \r\n        console.log(\"nod\", looptime); \r\n\r\n        //  currentDate = moment(this.state.startDate).set('9:15am', 'h:mma'); \r\n        // var endDate =  moment(currentDate).add(29, 'days');\r\n//        endDate = moment(endDate).set('3:30pm', 'h:mma') ; \r\n\r\n        let loopStartDate =  moment(this.state.startDate).set('9:15am', 'h:mma'); \r\n\r\n        for (let outterIndex = 0; outterIndex < looptime; outterIndex++) {\r\n\r\n            let loopEndDate = moment(loopStartDate).add(29, 'days');\r\n            console.log(\"nod\", looptime); \r\n\r\n            \r\n            for (let index = 0; index < watchList.length; index++) {\r\n                const element = watchList[index];\r\n    \r\n                if (this.state.stopScaningFlag) {\r\n                    break;\r\n                }              \r\n    \r\n                var data = {\r\n                    \"exchange\": \"NSE\",\r\n                    \"symboltoken\": element.token,\r\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                    \"fromdate\":moment(loopStartDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                    \"todate\": loopEndDate.format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n                }\r\n    \r\n                let status = {\r\n                    symbol: element.name,\r\n                    startDate: moment(loopStartDate).format(\"DD-MM-YYYY\"),\r\n                    endDate:  moment(loopEndDate).format(\"DD-MM-YYYY\"),\r\n                    downloadStatus: false,\r\n                    noOfRows : 0, \r\n                    backStatus : false\r\n                }\r\n    \r\n    \r\n                AdminService.getHistoryData(data).then(res => {\r\n                    let histdata = resolveResponse(res, 'noPop');\r\n                    //console.log(\"candle history\", histdata); \r\n                    if (histdata && histdata.data && histdata.data.length) {\r\n    \r\n                        histdata.data.pop(); \r\n    \r\n                        let requestInfo = {\r\n                            symbol: element.symbol,\r\n                            token: element.token,\r\n                            candleData: histdata.data\r\n                        }\r\n                        status.downloadStatus = true; \r\n                      \r\n                        AdminService.backupHistoryData(requestInfo).then(res => {\r\n                            status.backStatus = true ;\r\n    \r\n                            console.log(\"test\", res.data);\r\n                            status.noOfRows =  res.data && res.data.result; \r\n    \r\n                        })\r\n    \r\n                    } else {\r\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                        console.log(\" candle data emply\");\r\n                    }\r\n                })\r\n                await new Promise(r => setTimeout(r, 400));\r\n                this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest }); \r\n           \r\n                this.setState({backupHistoryStatus: [...this.state.backupHistoryStatus, status]  }); \r\n    \r\n                this.setState({done: true  })\r\n    \r\n                console.log(\"status\", status)\r\n\r\n                          \r\n                \r\n            }\r\n\r\n            loopStartDate = loopEndDate; \r\n            await new Promise(r => setTimeout(r, 400 * watchList.length));\r\n        \r\n            \r\n        }\r\n\r\n      \r\n\r\n        this.setState({ backTestFlag: true });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n\r\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\r\n        var tradetotal = 0, totalWin = 0, totalLoss = 0, totalMarketEnd = 0, totalSlHit = 0;\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <ChartDialog />\r\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={12}>\r\n\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>History Backup</Typography>\r\n\r\n\r\n\r\n                            <Grid direction=\"row\" container spacing={2}>\r\n\r\n\r\n                                {/* <Grid item xs={12} sm={2}>\r\n                                    <FormControl style={styles.selectStyle}>\r\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\r\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\r\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\r\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\r\n                                            <MenuItem value={\"NR4\"}>NR4 @ 3:30pm </MenuItem>\r\n                                            <MenuItem value={\"NR4Trail\"}>Narrow Range 4 - Trail</MenuItem>\r\n\r\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\r\n\r\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\r\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\r\n                                            <MenuItem value={\"StrongCandle\"}>5min Strong Candle</MenuItem>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> */}\r\n\r\n                                <Grid item xs={12} sm={2} >\r\n                                    <FormControl style={styles.selectStyle} >\r\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                                <MenuItem value={element}>{element}</MenuItem>\r\n                                            ))\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\r\n                                </Grid>\r\n\r\n\r\n\r\n                                <Grid item xs={12} sm={4} style={{ marginTop: '5px' }}>\r\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.storyHistoryData()}>Backup</Button> : <> <Button> <Spinner /> &nbsp; <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop Scaning</Button> &nbsp;  {this.state.stockTesting} {this.state.runningTest}  </Button>   </>}\r\n                                    &nbsp; Failed: {this.state.searchFailed}\r\n\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Paper>\r\n\r\n                        <Paper style={{ padding: \"10px\" }}>\r\n\r\n                        <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\r\n                                            <TableCell className=\"TableHeadFormat\" >Sr. No.</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Symbol</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >From date</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >To date  </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Download Status</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Backup Status</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >No of Rows</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" >Huge Volume(last 100min)</TableCell>\r\n\r\n                         \r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\r\n                                            {this.state.backupHistoryStatus && this.state.backupHistoryStatus ? this.state.backupHistoryStatus.map((row, i) => (\r\n                                                <TableRow key={i}  >\r\n                                                    <TableCell >{i+1}</TableCell>\r\n                                                    <TableCell >{row.symbol}</TableCell>\r\n                                                    <TableCell >{row.startDate}</TableCell>\r\n                                                    <TableCell >{row.endDate}</TableCell>\r\n                                                    <TableCell >{row.downloadStatus ? \"Yes\": \"No\"}</TableCell>\r\n                                                    <TableCell >{row.backStatus ? \"Yes\": \"No\"}</TableCell>\r\n                                                    <TableCell >{row.noOfRows}</TableCell>\r\n                                                    <TableCell >{row.hugeVol ? \"Yes\" : \"-\"}</TableCell>\r\n\r\n                                                 \r\n                                                </TableRow>\r\n                                            )) : ''}\r\n\r\n                                        </TableBody>\r\n                                    </Table>\r\n                        </Paper>\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;\r\n\r\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport LoginComponent from \"./login/LoginComponent\";\r\n\r\nimport Home from './MyTrade/Home';\r\n\r\nimport NiftyView from \"./MyTrade/NiftyView\";\r\nimport BankNiftyView from \"./MyTrade/BankNiftyView\";\r\n\r\nimport MySectorTop from \"./MyTrade/MySectorTop\";\r\n\r\nimport Chart from \"./MyTrade/Chart\";\r\nimport CandleChart from \"./MyTrade/CandleChart\";\r\n\r\n\r\nimport Funds from \"./MyTrade/Funds\";\r\nimport Orderbook from \"./MyTrade/Orderbook\";\r\nimport Tradebook from \"./MyTrade/Tradebook\";\r\n// import LiveFeed from \"./MyTrade/LiveFeed\";\r\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\r\nimport Position from \"./MyTrade/Position\";\r\nimport Test from \"./MyTrade/Test\";\r\n\r\n\r\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\r\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\r\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\r\n\r\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\r\nimport FindFastMovement2 from \"./MyTrade/FindFastMovement2\";\r\nimport FindFastMovement3 from \"./MyTrade/FindFastMovement3\";\r\n\r\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\r\nimport DeliveryData from \"./MyTrade/DeliveryData\";\r\nimport SlowMotion from \"./MyTrade/SlowMotion\";\r\nimport IndexCharts from \"./MyTrade/IndexCharts\";\r\nimport MarketDepth from \"./MyTrade/MarketDepth\";\r\nimport MarketDepthMobile from \"./MyTrade/MarketDepthMobile\";\r\nimport Backtest from \"./MyTrade/Backtest\";\r\nimport ChartinkBacktest from \"./MyTrade/ChartinkBacktest\";\r\n\r\nimport StrongCharts from \"./MyTrade/StrongCharts\";\r\n\r\nimport BackupHistory from \"./MyTrade/BackupHistory\";\r\n\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={LoginComponent}/>\r\n                    <Route path=\"/login\" component={LoginComponent}/>\r\n                    <Route path=\"/nifty-view\" component={NiftyView}/>\r\n                    <Route path=\"/bn-view\" component={BankNiftyView}/>\r\n                    <Route path=\"/sector\" component={MySectorTop}/>\r\n                    <Route path=\"/chart\" component={Chart}/>\r\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\r\n\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/funds\" component={Funds}/>\r\n                    <Route path=\"/order\" component={Orderbook}/>\r\n                    <Route path=\"/trade\" component={Tradebook}/>\r\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\r\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\r\n                    <Route path=\"/position\" component={Position}/>\r\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\r\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\r\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\r\n\r\n\r\n                    \r\n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\r\n                    <Route path=\"/find-fast-movement2\" component={FindFastMovement2}/>\r\n                    <Route path=\"/find-fast-movement3\" component={FindFastMovement3}/>\r\n\r\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\r\n                    <Route path=\"/delivery\" component={DeliveryData}/>\r\n                    <Route path=\"/slow-motion\" component={SlowMotion}/>\r\n\r\n                    <Route path=\"/index-charts\" component={IndexCharts}/>\r\n                    <Route path=\"/strong-charts\" component={StrongCharts}/>\r\n\r\n                    <Route path=\"/market-depth\" component={MarketDepth}/>\r\n                    <Route path=\"/market-depth-mobile\" component={MarketDepthMobile}/>\r\n\r\n                    <Route path=\"/backtest\" component={Backtest}/>\r\n                    <Route path=\"/chartink-backtest\" component={ChartinkBacktest}/>\r\n\r\n                    <Route path=\"/backup-history\" component={BackupHistory}/>\r\n\r\n                      \r\n                    <Route path=\"/test\" component={Test}/>\r\n                    \r\n           \r\n                    <Route path=\"*\" component={LoginComponent} />\r\n                    \r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport './App.css';\r\nimport AppRouter from \"./components/RouterComponent\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n        <AppRouter/>\r\n        <ToastContainer/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./createStore\";\r\nimport App from \"./App\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}