{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Orderbook.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Tab.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","foundPatternList","reverse","FoundPatternDialog_DialogTitle","FoundPatternDialog_DialogContent","Table","stickyHeader","size","TableRow","TableCell","TableBody","map","idata","hover","key","marginLeft","candleData","candleChartData","symbol","getElementById","click","Equalizer_default","pattenName","time","BuyAt","SellAt","FoundPatternDialog_DialogActions","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","clsx","edge","Menu_default","item","noWrap","direction","FoundPatternDialog_CustomizedDialogs","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","Date","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","sort","b","updatetime","oderbookData","modifyOrder","trailingstoploss","console","log","triggerprice","variety","orderid","ordertype","price","producttype","quantity","lotsize","tradingsymbol","symboltoken","exchange","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","_this2","hash","Paper","gutterBottom","float","TableHead","whiteSpace","toString","substring","transactiontype","orderstatus","textAlign","averageprice","lib_default","multipleChartData","longs","longCandles","shorts","shortCandles","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","Home","getCandleHistoryAndStore","asyncToGenerator","regenerator_default","mark","_callee","watchList","today","timediff","startdate","_loop","wrap","_context2","prev","next","toLocaleTimeString","clearInterval","candleHistoryInterval","moment","isoWeekday","subtract","_context","interval","fromdate","todate","getHistoryData","histdata","last10Candle","slice","findTweezerTopPatternLive","findTweezerBottomPatternLive","r","setTimeout","stop","delegateYield","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","high","low","close","secondCandle","diffPer","Math","round","ttophistCandle","foundData","toLocaleString","toConsumableArray","SpeechSynthesisUtterance","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","toFixed","tBophistCandle","findNR4PatternLive","_callee2","sumPercentage","_loop2","timediffend","_context4","backTestResult","backTestFlag","_context3","rgrangeCount","last4Candle","last5Candle","rangeArr","firstElement","buyentry","sellenty","getLTP","LtpData","ltp","orderActivated","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","floor","brokerageCharges","findNR7PatternLive","_callee3","_loop3","showtestdata","_context6","_context5","last7Candle","last9Candle","stockTesting","showCandleChart","showMultipleCandleChart","refreshLtpOnFoundPattern","_callee4","foundPatternsFromStored","_loop4","_context8","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","_context7","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","pastPerferm","foundlist","catch","getStoplossFromOrderbook","stopLoss","buyavgprice","maxLossAmount","parseInt","netqty","getPositionData","_callee5","totalMaxPnL","_context9","getPosition","positionList","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","parseFloat","sellavgprice","pnl","buyqty","slData","totalsellavgprice","totalbuyavgprice","stopLossAmount","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","autoCompleteSearch","found","exch_seg","orderWithFlatstoploss","ltpPrice","stopLossPrice","perTradeStopLossPer","getMinPriceAllowTick","orderOption","buyPrice","placeOrderMethod","autoSearchList","BankLtpltp","getStopLossPrice","_ref6","_callee6","_context10","slPrice","stoploss","_x","_x2","apply","squareoff","placeOrder","placeSLMOrder","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","beginningTime","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","onSelectItem","values","autoSearchTemp","fdata","list","updateSocketWatch","getAveragePrice","orderId","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","updateOrderList","slmOption","modifyOrderMethod","minPrice","wholenumber","decimal","getPercentage","avgPrice","percentChange","lastTriggerprice","sqrOffbeginningTime","sqrOffendTime","isBetween","symbolname","InstrumentLTP","endTime","currentTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","setInterval","getMinutes","getTime","_this3","totalDayLoss","dailyLossPer","abs","getNSETopStock","scandata","result","_loop5","isFound","j","symbolName","searchRes","_this4","selectedStockInteval","getSelectedStockFromDb","_loop6","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","overflow","fontWeight","paddingLeft","background","rel","Orderbook","cursor","totalLongPer","totalLongs","totalLongHighPer","totalShortPer","totalShort","totalShortLowPer","MuiTabsScroller","wsClint","w3cwebsocket","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","fromDate","startDate","endDate","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","firstTime_req","feedToken","send","channel","sbin","task","user","acctid","stopBacktesting","stopScaningFlag","backTestAnyPattern","enddate","currentMoment","endMoment","runningTest","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","index2","next10Candle","backtestTweezerTop","backtestTweezerBottom","FoundPatternList","next5thCandle","foundStock","nr4CheckPastPerfommance","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","insideIndex","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","searchFailed","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref4","dateWithWlType","selectedWatchlist","datewisetrades","perChngOnLow","longExitPriceType","shortExitPriceType","longData","shortData","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","slmOrderType","LoadSymbolDetails","getHistory","histCandles","InstrumentHistroy","saveWatchListJSON","resdata","search","deleteItemWatchlist","findIndex","splice","insiderow","showCandleBothChart","ifNotBought","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","nc","onerror","_req","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Autocomplete","freeSolo","disableClearable","paddingRight","option","renderInput","params","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","Delete_default","sbinLtp","MaterialUIDateTimePicker","colSpan","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","indexSymbolData","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","speckIt","toLocaleLowerCase","innerHTML","percent","stopnview","indexTimeStamp","products","loadPackList","todayTime","getHours","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","advances","declines","unchanged","connect","App","diffData","putData","callData","timeDate","totPEOI","totCEOI","diff","dateTime","chartData","labels","datasets","fill","borderColor","index_modern","maintainAspectRatio","x","y","colors","upward","downward","ApexCharts","querySelector","render","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","heartbeatReq","exchtime","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","refreshSectorLtp","sectorStockList","refreshFlag","failedCount","stockUpdate","cng","sectorList","outerEelement","stockList","stockIndex","refreshSectorCandle","refreshFlagCandle","updateWatch","getPercentageColor","sectorStocks","indexdata","sectorItem","AppRouter","react_router","path","exact","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.767e0ba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices, '');\n    }\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Heat Map\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n  \n    <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem>\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n        <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          />\n\n\n                  { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n                    options={{\n                              chart: {\n                                type: 'candlestick',\n                                height: 350\n                              },\n                              title: {\n                                  text: '',\n                                  align: 'left'\n                              },\n                              xaxis: {\n                                  type: 'datetime',\n                              },\n                              yaxis: {\n                                  tooltip: {\n                                  enabled: true\n                                  }\n                              }\n                          }}\n                          series={[{\n                            data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                              \n                          }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          />: \"\"}\n          \n\n\n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values] = React.useState({\n        acquisitionCount: '',\n        resubmitCount: ''\n    });\n\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    // function handleClick(e) {\n    //     console.log(e.target.innerText)\n    //     //this.props.history.push('/login');\n    // }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n                        </Grid>\n\n                        <Grid item >\n                            <Typography variant=\"h6\" noWrap>\n                                {localStorage.getItem('BankLtpltp')}\n                            </Typography>\n\n                        </Grid>\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                                style={{ color: \"white\" }}\n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" href={\"/mtrade/#/sector-heat-map\"}>\n                                        Sector Hit Map\n                                    </Button>\n                                </Grid>\n\n\n                                <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid>\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n // console.log(\"startDatestartDate,\",props ); \n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        this.getTodayOrder();\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n        {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n            <Paper style={{padding:\"10px\"}} >\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Oders Details ({this.state.oderbookData.length}) \n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                            </Grid>\n                            \n                </Grid>\n            \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity}\n                    \n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                \n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                        : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                </Grid>\n                            \n               </Grid>    \n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog'; \nimport ChartMultiple from './ChartMultiple'; \n\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\n\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            autoSearchList :[],\n            InstrumentLTP : {},\n            autoSearchTemp : [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            nr4TotalPer : 0,\n            pnlAmountTotal: 0,\n            totalBrokerCharges:'',\n            totalNetProfit: 0, \n            totelActivatedCount : 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting : \"\",\n            perHighLowTotal: 0, \n            netPnLAmountOnHighlowTotal:0\n            \n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n        //   this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 2002)}) \n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \n        }else{\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval); \n            clearInterval(this.state.bankNiftyInterval); \n        }\n    \n        var scanendTime = moment('3:30pm', 'h:mma');\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n            \n\n            \n            var tostartInteral =   setInterval(() => {\n\n                console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n                var time = new Date(); \n                if(time.getMinutes() % 15 === 0){\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n                    \n                    setTimeout(() => {\n                        console.log(\"set timout at 70sec \", new Date());\n                        this.getCandleHistoryAndStore(); \n                    }, 70000);\n\n                    setInterval(() => {\n                        console.log(\"2st interval every 5min 10Sec\", new Date());\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n                            this.getCandleHistoryAndStore(); \n                        }\n                     }, 60000 * 15 + 70000 );  \n\n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern(); \n            },  foundPatternsFromStored.length * 100 + 300000);\n    \n            \n          \n        } \n\n\n\n     \n  /// this.getCandleHistoryAndStore(); \n\n   // this.findNR4PatternLive();\n   //this.findNR7PatternLive();\n\n\n   \n    // this.getPositionData();\n    // this.getNSETopStock();\n     \n\n    //  this.getMySelectedStock();\n\n    \n\n    // setInterval(() => {\n        \n    //     var timediff = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(timediff);\n    \n\n    //     var enddiff = moment.duration(\"00:01:00\");\n    //     var enddate = moment(new Date()).add(enddiff);\n\n\n    //     var data  = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": 212,\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n    //     }\n    \n    //     AdminService.getHistoryData(data).then(res => { \n    //         let histdata = resolveResponse(res,'noPop' );\n    //         var candleData = histdata.data; \n    //         candleData.reverse(); \n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n    //     }); \n\n    // }, 1000);\n\n    var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n    this.setState({foundPatternList: backTestResult})\n\n   \n\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.state.positionInterval);\n        clearInterval(this.state.scaninterval);\n        clearInterval(this.state.bankNiftyInterval); \n    }\n\n  \n\n    getCandleHistoryAndStore = async()=> {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \n       var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n       const today = moment().isoWeekday();\n        var timediff = '';\n\n        \n\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\n            timediff = moment.duration(\"66:00:00\");\n        }else{\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";       \n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1) , \n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var candleData = histdata.data; \n                    candleData.reverse(); \n\n                    if(candleData && candleData.length >= 10){\n                        var last10Candle = candleData.slice(0, 10); \n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n                \n                }else{\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 350));  \n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist,symbol) => {\n\n     //   console.log(\"TweezerTop finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var lastTrendCandleLow = candleHist[9][3]; \n            var firstTrendCandleHigh = candleHist[2][2]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n           \n            //\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \n        \n                        var ttophistCandle  = []; \n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \n                        });\n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser Top', \n                            time: new Date( candleHist[0][0]).toLocaleString(), \n                            candleChartData :ttophistCandle \n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                       this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\n       // console.log(\"TweezerBottom finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var last8candleHigh = candleHist[9][2]; \n            var last8candleLow = candleHist[2][3]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n           \n            //  \n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\n\n              \n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                      \n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle  = []; \n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \n                        });\n\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser bottom', \n                            time: new Date( candleHist[0][0]).toLocaleString(), \n                            candleChartData : tBophistCandle\n                        }\n                     \n                       this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                        \n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak( msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting'); \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n           \n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                \n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;var rgrangeCount = 0; \n                     candleData.reverse(); \n\n                     // var startindex = index2 * 10; \n                     var last4Candle = candleData.slice(1, 5);\n                     var last5Candle = candleData.slice(0, 5);\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                     if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                         var rangeArr = [], candleChartData = []; \n                         last4Candle.forEach(element => {\n                             rangeArr.push(element[2] - element[3]);\n                         });\n\n                         last5Candle.forEach(element => {\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                         });\n                         var firstElement = rangeArr[0];\n                         rangeArr.forEach(element => {\n                             if (firstElement <= element) {\n                                 firstElement = element;\n                                 rgrangeCount += 1;\n                             }\n                         });\n\n                         console.log(index+1,element.symbol, rgrangeCount); \n                       //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n                         \n                         if (rgrangeCount == 4) {\n                            console.log(index+1, element.symbol, last4Candle, rangeArr, rgrangeCount); \n\n                            \n                             var firstCandle = last4Candle[0];\n\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                             var data  = {\n                                \"exchange\":\"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\":element.token,\n                            }\n\n                            console.log('nr4 ltp',data ); \n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                 var LtpData = data && data.data; \n                                 console.log(LtpData, data);\n                                 if(LtpData && LtpData.ltp){\n\n\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \n                                    if(LtpData.ltp > buyentry){\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                      \n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    } \n                                    if(LtpData.ltp < sellenty){\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    } \n\n                                    var foundData = {\n                                        symbol : element.symbol, \n                                        token : element.token, \n                                        pattenName: 'NR4', \n                                        time: new Date( firstCandle[0]).toLocaleString(), \n                                        BuyAt : buyentry, \n                                        SellAt : sellenty,\n                                        orderActivated : orderActivated,\n                                        candleChartData : candleChartData, \n                                        quantity :  quantity,\n                                        brokerageCharges : brokerageCharges, \n                                        pnlAmount : pnlAmount,\n                                        netPnLAmount : netPnLAmount,\n                                        perChange : perChange\n                                    }\n        \n                                    console.log('nr4 scaned',foundData ); \n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n    \n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                                    foundPatternList.push(foundData); \n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                                \n                                }\n                                \n                           })\n\n\n\n                            \n\n                         }\n\n                     }\n                  \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n           \n\n         \n            await new Promise(r => setTimeout(r, 300));\n\n           // var showtestdata = (index + 1);\n            \n         //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n       //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting'); \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n           \n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                \n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                     candleData.reverse(); \n\n                     // var startindex = index2 * 10; \n                     var last7Candle = candleData.slice(1, 8);\n                     var last9Candle = candleData.slice(0, 9);\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                     if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                         var rangeArr = [], candleChartData = []; \n                         last7Candle.forEach(element => {\n                             rangeArr.push(element[2] - element[3]);\n                         });\n\n                         last9Candle.forEach(element => {\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                         });\n                         var firstElement = rangeArr[0], rgrangeCount = 0; \n                         rangeArr.forEach(element => {\n                             if (firstElement <= element) {\n                                 firstElement = element;\n                                 rgrangeCount += 1;\n                             }\n                         });\n\n\n                         console.log(element.symbol, last7Candle, rangeArr, rgrangeCount); \n\n                         \n                         if (rgrangeCount == 7) {\n\n                            \n                             var firstCandle = last7Candle[0];\n\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                             var data  = {\n                                \"exchange\":\"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\":element.token,\n                            }\n\n                            console.log('nr4 ltp',data ); \n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                 var LtpData = data && data.data; \n                                 console.log(LtpData, data);\n                                 if(LtpData && LtpData.ltp){\n\n\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \n                                    if(LtpData.ltp > buyentry){\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                      \n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    } \n                                    if(LtpData.ltp < sellenty){\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    } \n\n                                    var foundData = {\n                                        symbol : element.symbol, \n                                        token : element.token, \n                                        pattenName: 'NR7', \n                                        time: new Date( firstCandle[0]).toLocaleString(), \n                                        BuyAt : buyentry, \n                                        SellAt : sellenty,\n                                        orderActivated : orderActivated,\n                                        candleChartData : candleChartData, \n                                        quantity :  quantity,\n                                        brokerageCharges : brokerageCharges, \n                                        pnlAmount : pnlAmount,\n                                        netPnLAmount : netPnLAmount,\n                                        perChange : perChange\n                                    }\n        \n                                    console.log('nr7 scaned',foundData ); \n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n    \n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                                    foundPatternList.push(foundData); \n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                                \n                                }\n                                \n                           })\n\n\n\n                            \n\n                         }\n\n                     }\n                  \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol; \n            this.setState({ stockTesting: showtestdata});\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData  = candleData &&  candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n    \n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n    \n\n    refreshLtpOnFoundPattern = async() => {\n\n       this.setState({nr4TotalPer : 0, totalBrokerChargesNR4: 0,totalNetProfit: 0, totelActivatedCount:0, pnlAmountTotal:0,perHighLowTotal : 0,netPnLAmountOnHighlowTotal:0 }); \n\n       \n       var foundPatternList = this.state.foundPatternList;\n\n       this.setState({foundPatternList : [] }); \n\n       var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n       \n//       foundPatternList.forEach(element => {\n         for (let index = 0; index < foundPatternsFromStored.length; index++) {\n             const element = foundPatternList[index];\n           \n            if(element && element.pattenName == 'NR4'){\n\n                var data  = {\n                    \"exchange\":\"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\":element.token,\n                }\n\n               AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                     var LtpData = data && data.data; \n                     //console.log(LtpData);\n                     var quantity = 0, pnlAmount = 0, netPnLAmount=0, brokerageCharges = 0.06,perChange = 0, perChangeOnHighLow =0,netPnLAmountOnHighlow=0; \n                     if(LtpData && LtpData.ltp){\n\n                        var orderActivated =  <span> {LtpData.ltp} </span>; \n\n                        if(LtpData.ltp > element.BuyAt){\n                          perChange = ((LtpData.ltp - element.BuyAt)*100/element.BuyAt);\n                          orderActivated =  <span style={{color:'green'}}> Long: {perChange.toFixed(2)}% </span>; \n                          quantity = Math.floor(10000 / element.BuyAt);\n                          pnlAmount = (( LtpData.ltp - element.BuyAt ) * quantity);  \n                          brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges/100)*2); \n                          netPnLAmount =  (pnlAmount -brokerageCharges); \n                          this.setState({nr4TotalPer : this.state.nr4TotalPer +  perChange });\n                          this.setState({ totalBrokerChargesNR4 : this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit:  this.state.totalNetProfit + netPnLAmount });\n                          this.setState({ totelActivatedCount : this.state.totelActivatedCount + 1, pnlAmountTotal:this.state.pnlAmountTotal +   pnlAmount});\n\n                          perChangeOnHighLow = ((LtpData.high - element.BuyAt)*100/element.BuyAt);\n                          var pnlAmountOnhigh = (( LtpData.high - element.BuyAt ) * quantity);\n                          netPnLAmountOnHighlow =  (pnlAmountOnhigh - brokerageCharges); \n                          this.setState({ perHighLowTotal : this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal:this.state.netPnLAmountOnHighlowTotal +   netPnLAmountOnHighlow});\n                        \n\n                        } \n                        if(LtpData.ltp < element.SellAt){\n                            perChange =  ((element.SellAt - LtpData.ltp)*100/element.SellAt); \n                            orderActivated =  <span style={{color:'red'}}> Short: {perChange.toFixed(2)}%</span>; \n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = (( element.SellAt - LtpData.ltp  ) * quantity); \n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges/100)*2); \n                            netPnLAmount =  (pnlAmount -brokerageCharges); \n                            this.setState({nr4TotalPer : this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount : this.state.totelActivatedCount + 1, pnlAmountTotal:this.state.pnlAmountTotal + pnlAmount  });\n                            this.setState({ totalBrokerChargesNR4 : this.state.totalBrokerChargesNR4 + brokerageCharges,totalNetProfit : this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low)*100/element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low ) * quantity);\n                            netPnLAmountOnHighlow =  (pnlAmountOnLow - brokerageCharges); \n                            this.setState({ perHighLowTotal : this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal:this.state.netPnLAmountOnHighlowTotal +   netPnLAmountOnHighlow});\n                       \n                        } \n\n                        var todayChange =  (LtpData.ltp- LtpData.close)*100/LtpData.close; \n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp]; \n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol :  element.symbol, \n                            symbolUpdated : LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\", \n                            token : element.token, \n                            pattenName: 'NR4', \n                            OnHighLowActivated : quantity ?  perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(), \n                            BuyAt : element.BuyAt, \n                            SellAt : element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated : orderActivated,\n                            candleChartData : element.candleChartData,\n                            quantity : quantity ? quantity : \"\",\n                            brokerageCharges : quantity ? brokerageCharges.toFixed(2) : \"\", \n                            pnlAmount : pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount : netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange : perChange,\n                            todayChange:todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated',foundData ); \n                        \n                      \n\n                        this.setState({foundPatternList: [...this.state.foundPatternList, foundData ]}); \n\n                        var foundlist = this.state.foundPatternList; \n\n                          foundlist.sort(function(a,b){\n                            return b.perChange - a.perChange;\n                          });\n\n                          this.setState({foundPatternList: foundlist}); \n\n                        \n                      \n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                    \n                    }\n                    \n               }).catch(error => {\n                Notify.showError(element.symbol + \" ltd data not found!\");\n               })\n\n            }\n            await new Promise(r => setTimeout(r, 101)); \n       }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n       var oderbookData = localStorage.getItem('oderbookData'); \n       oderbookData =  JSON.parse(oderbookData);\n       var stopLoss = 0; \n       var data = {}; \n       oderbookData.forEach(element => {\n        if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\n            data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \n            data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \n        }\n       });\n       return data; \n    }\n    getPositionData = async() => {\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0; \n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var positionList = data && data.data;\n             if (positionList && positionList.length>0){\n                this.setState({ positionList : positionList}); \n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\n                  positionList.forEach(element => {\n                    var percentPnL =((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \n                    todayProfitPnL+= parseFloat( element.pnl); \n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \n                    totalQtyTraded+=parseInt( element.buyqty); \n                    allbuyavgprice+=parseFloat(element.buyavgprice); \n                    allsellavgprice+=parseFloat(element.sellavgprice); \n                    element.percentPnL=percentPnL;\n                    totalPercentage+= parseFloat( percentPnL); \n                    var slData  = this.getStoplossFromOrderbook(element) ; \n                    element.stopLoss = element.totalsellavgprice === \"0.00\" ? slData.stopLoss : element.totalsellavgprice + \"(\"+ ((element.totalsellavgprice-element.totalbuyavgprice)*100/element.totalbuyavgprice).toFixed(2) + \"%)\"; \n                    element.stopLossAmount = slData.maxLossAmount; \n                    totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;                     \n                }); \n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \n                this.setState({ totalBrokerCharges: ((totalbuyvalue + totalsellvalue) * 0.25/100).toFixed(2)});                \n\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \n            }\n       })\n    }\n   \n    getNSETopStock(){\n\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n               AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                   // console.log(\"scandata\",scandata); \n            \n                    for (let index = 0; index < scandata.length; index++) {\n                            var isFound = false; \n                            for (let j = 0; j < this.state.positionList.length; j++) {\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\n                                    isFound  = true; \n                                 }\n                            }\n                           \n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                               \n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                    let searchResdata =  searchRes.data; \n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                   \n                                    if(found.length){\n                                        console.log(found[0].symbol, \"found\",found);      \n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\n                                    }\n                               })\n                             \n                            }\n                    }\n                }\n            })  \n        }\n\n    }\n\n\n    getMySelectedStock(){\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \n \n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n         totalDayLoss = -Math.abs(totalDayLoss); \n         if(this.state.todayProfitPnL < totalDayLoss) {\n             console.log(\"daily loss crossed\",totalDayLoss); \n             clearInterval(this.state.scaninterval);\n         }else{\n                AdminService.getSelectedStockFromDb().then(res => {\n                 let data = resolveResponse(res, \"noPop\");\n                 if(data.status  && data.message === 'SUCCESS'){ \n                     var scandata =  data.result;   \n                    // console.log(\"scandata\",scandata); \n             \n                     for (let index = 0; index < scandata.length; index++) {\n                             var isFound = false; \n                             for (let j = 0; j < this.state.positionList.length; j++) {\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\n                                     isFound  = true; \n                                  }\n                             }\n                            \n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                                \n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n \n                                     let searchResdata =  searchRes.data; \n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                    \n                                     if(found.length){\n\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \n                                        selectedStockwatchList.push(found[0]); \n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                     }\n                                })\n                              \n                             }\n                     }\n                 }\n             })  \n         }\n \n     }\n\n\n    checkAndPlaceSingleOrder = (stock)=>{\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data =  res.data; \n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\n             console.log(\"stockfound\",found);  \n            if(found && found.length){\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \n            }\n       })\n    }\n\n\n    getStockOnebyOne(){\n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n            console.log(\"still ok\"); \n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                    if(scandata && scandata.length>0){\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \n                        var isFound = false; \n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\n                                isFound  = true; \n                             }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, '+lastSeachStock; \n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \n                        }\n                    }\n                    \n                }\n            })  \n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n             var LtpData = data && data.data; \n             var ltpPrice  = LtpData.ltp\n             if(ltpPrice){ \n              \n            //  var stopLossPrice = ltp - (ltp*0.7/100);\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \n              var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken:token,\n                    buyPrice : 0,\n                    quantity: quantity, \n                    stopLossPrice: stopLossPrice\n                }\n\n              if(quantity && stopLossPrice){\n                this.placeOrderMethod(orderOption);   \n              }\n               \n            }         \n\n       }).catch((error)=>{\n            console.log(symbol, \"not found\", 'error', error);\n        })  \n    }\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n        //    console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n    }\n\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\":\"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             //console.log(LtpData);\n             if(LtpData && LtpData.ltp){\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\n             }\n            \n       })\n    }\n\n\n    getStopLossPrice = async(token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n      \n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             if(LtpData &&  LtpData.ltp){\n                var ltp = parseFloat(LtpData.ltp); \n                ltp  = ltp - (ltp*0.7/100);\n                var slPrice = this.getMinPriceAllowTick(ltp); \n\n                this.setState({ stoploss : slPrice});\n                return slPrice; \n             }\n           \n       })\n    }\n  \n    placeOrderMethod = (orderOption) => { \n       \n        var data = {\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\":orderOption.symboltoken,\n            \"quantity\":orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"exchange\":\"NSE\",\n            \"variety\":\"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                if(orderOption.stopLossPrice){\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n                var LtpData = ltpres && ltpres.data; \n                console.log(symbol, \" ltd data \", LtpData);\n                let quantity =0; \n                if(LtpData && LtpData.ltp){\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \n                }\n\n                \n                quantity = quantity>0 ? 1 : 0; \n                console.log(symbol, \"  quantity can be order \", quantity);\n                if(quantity){\n                    const format1 = \"YYYY-MM-DD HH:mm\";\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                    console.log(\"beginningTime\", beginningTime); \n\n                    var time = moment.duration(\"21:10:00\");\n                    var startdate = moment(new Date()).subtract(time);\n                    var data  = {\n                        \"exchange\": \"NSE\",\n                        \"symboltoken\": token ,\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                        \"fromdate\": moment(startdate).format(format1) , \n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                    }\n                \n                    AdminService.getHistoryData(data).then(res => {\n                        let histdata = resolveResponse(res,'noPop' );\n                       // console.log(\"candle history\", histdata); \n                        if(histdata && histdata.data && histdata.data.length){\n                           \n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \n                            candleData.reverse(); \n\n                            if(candleData && candleData.length>0){\n                                for (let index = 0; index < 20; index++) {\n                                    if(candleData[index]){\n                                        clossest += candleData[index][4]; //close  \n                                        lowerest += candleData[index][3];  //low\n                                        if(candleData[index][4] > highestHigh ){\n                                            highestHigh = candleData[index][4];  \n                                        }\n                                        if(lowestLow < candleData[index][3]){\n                                            lowestLow = candleData[index][3];  \n                                        }\n                                    }\n                                    \n                                }\n\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \n    \n                                var bbmiddleValue = clossest/devideLen; \n                                var bblowerValue = lowerest/devideLen; \n                                \n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \n                                stoploss = this.getMinPriceAllowTick(stoploss); \n    \n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \n                                \n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\n                            \n                                var orderOption = {\n                                    transactiontype: 'BUY',\n                                    tradingsymbol: symbol,\n                                    symboltoken:token,\n                                    buyPrice : 0,\n                                    quantity: quantity, \n                                    stopLossPrice: stoploss\n                                }\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \n                                   this.placeOrderMethod(orderOption);\n                                }else{\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                    console.log(symbol + \" its not fullfilled\"); \n                                }\n                            }\n\n                           \n                        }else{\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\n                            console.log(symbol + \" candle data emply\"); \n                        }\n                    })\n\n                }\n        })\n       // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n    onSelectItem = (event, values) =>{\n    \n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n    cancelOrderOfSame = (row) =>  {\n       \n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \n        var data = {\n            \"variety\":orderData.variety,\n            \"orderid\":orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n    squareOff = (row) =>  {\n       \n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\":row.symboltoken,\n            \"transactiontype\":row.buyqty > 0 ? 'SELL' : \"BUY\", \n            \"exchange\": row.exchange, \n            \"ordertype\": \"MARKET\", \n            \"producttype\": row.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": row.buyqty,\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n            \n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                this.cancelOrderOfSame(row); \n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n\n            }\n        })\n       \n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res);\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \n            }\n        });\n    }\n    \n    placeSLMOrder = (slmOption) => {\n        \n        var data = {\n            \"triggerprice\":slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \n            \"exchange\": 'NSE', \n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\" : \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data); \n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n               // this.updateOrderList(); \n               var msg = new SpeechSynthesisUtterance();\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \n               window.speechSynthesis.speak(msg);\n\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n            }\n        })\n    }\n\n    getOpenPeningOrderId =(symboltoken) => {\n\n        var oderbookData = JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {}; \n         for (let index = 0; index < oderbookData.length; index++) {\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\n                data.orderId = oderbookData[index].orderid  \n                data.variety = oderbookData[index].variety  \n                break;\n            }\n         } \n         return data;\n     }\n    modifyOrderMethod = (row, minPrice) => {\n        //console.log(this.state.triggerprice);\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \n        console.log(\"orderid\", this.state.orderData);\n\n        var data = {\n            \"variety\" : \"STOPLOSS\",\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\":  0,\n            \"triggerprice\": parseFloat( minPrice ),\n            \"quantity\":row.buyqty,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n          \n          \n            if(data.status  && data.message ===  'SUCCESS'){\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\n              msg.text = row.tradingsymbol +' modified '+data.message\n              window.speechSynthesis.speak(msg);\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice =  minPrice.toFixed(2); \n       // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt( minPrice.split('.')[0]);\n      //  console.log(\"wholenumber\",wholenumber); \n        var decimal =  parseFloat( minPrice.split('.')[1]);\n       // console.log(\"decimal\",decimal); \n        var tickedecimal =  decimal-decimal%5; \n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \n     //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice; \n    }\n\n    getPercentage = (avgPrice,  ltp , row) =>  {\n\n        avgPrice =  parseFloat(avgPrice); \n        var percentChange = ((ltp - avgPrice)*100/avgPrice).toFixed(2); \n\n      //  console.log(row.symbolname,  'chng %',percentChange);\n         if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange > 0.7){\n                var minPrice =  avgPrice + (avgPrice * 0.1/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n         }else{\n           //var lastTriggerprice =  this.state['lastTriggerprice_'+row.symboltoken]; \n           var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \n           var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n        //   console.log(row.symbolname, 'chng form Trigger Price',perchngfromTriggerPrice);\n           if(perchngfromTriggerPrice > 0.7){\n                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n           }\n\n         }\n\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\n\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\n                this.squareOff(row); \n                console.log(\"Sqr off called for\",row.symbolname);  \n            }\n            \n\n        }\n\n        return percentChange;\n    }\n\n\n    render() {\n      \n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                     <br />\n                     <ChartDialog /> <ChartMultiple />\n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\n                        <Grid item >\n                            <Typography variant=\"h6\" >\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={3} >\n                          <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                            </Typography> \n                        </Grid>\n\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\">\n                            <b>Total Turnover {this.state.totalTornOver} </b>\n                            </Typography> \n                        </Grid>\n                        \n                       \n                        <Grid item >\n                          <Typography component=\"h3\"  >\n                            <b> Charges</b> <b style={{color:\"#00cbcb\"}}>-{this.state.totalBrokerCharges} </b>\n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.todayProfitPnL} </b>\n                            </Typography> \n                        </Grid>\n\n                        <Grid item>\n                          <Typography component=\"h3\" >\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \n                        </Grid>\n                </Grid>\n               \n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                \n\n                    <Grid item xs={12} sm={12}> \n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\n                                 \n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Trading symbol</TableCell>\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n  \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Buy Price</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Sell Price</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Bought Qty</TableCell>\n                                \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max Locked P/L</TableCell>\n\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n        \n    \n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n                           \n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {this.state.positionList ? this.state.positionList.map(row => (\n                                <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\n\n                                    <TableCell style={{paddingLeft:\"3px\"}} align=\"left\">&nbsp; <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://chartink.com/stocks/\"+row.tradingsymbol.split('-')[0]+\".html\"}>{row.tradingsymbol.split('-')[0]}</a> </TableCell>\n                                    {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                    {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n                                 \n                                    <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                    {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                    <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                    <TableCell align=\"left\">{row.buyqty}</TableCell>\n                                    <TableCell align=\"left\">{row.netqty}</TableCell>\n                                    {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                    <TableCell align=\"left\"> {row.stopLoss}</TableCell> \n                                    <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \n\n                                    \n                                    {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\n                                    <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'darkmagenta' : '#00cbcb'}}><b>{row.pnl}</b></TableCell>\n                                    <TableCell align=\"left\">\n                                        { row.netqty !== '0' ? this.getPercentage(row.totalbuyavgprice, row.ltp, row) : \"\"} \n                                        {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\n                                      </TableCell> \n                                    <TableCell align=\"left\">{row.ltp}</TableCell>\n                                  \n                                    <TableCell align=\"left\">\n                                        {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \n                                    </TableCell>\n\n                                </TableRow>\n                            )):''}\n\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"lightgray\"}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\n          \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'darkmagenta' : '#00cbcb'}}>{this.state.todayProfitPnL} </TableCell>\n \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\n                                    \n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) : \"\"}\n                    \n                                </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                </TableRow>\n\n\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n\n\n                    </Grid>\n\n                  \n\n                        <Grid item xs={12} sm={12} >\n                             <OrderBook/>\n                        </Grid>\n\n\n                        <Grid item xs={12} sm={12} >\n                        <Paper style={{overflow:\"auto\", padding:'5px'}} >\n\n                            \n\n                                <Grid justify=\"space-between\"\n                                container>\n                                            <Grid item  >\n                                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                                 Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})  \n\n                                                <span id=\"stockTesting\" style={{fontSize: \"18px\", color: 'gray'}}> {this.state.stockTesting} </span>\n                                                </Typography> \n                                            </Grid>\n                                            <Grid item >\n                                                 <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                            </Grid>\n                                            \n                                </Grid>\n                            \n                                 \n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\n                                     <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n             \n                                              \n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n                                           \n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                             <TableCell className=\"TableHeadFormat\"  align=\"left\">UpdatedAt</TableCell>\n             \n                                          \n                                         </TableRow>\n                                     </TableHead>\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n             \n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                             <TableRow hover key={row.symboltoken}>\n             \n\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ color:  !row.todayChange ?  '' :  row.todayChange > 0 ? 'green' : 'red'  }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                                <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{fontSize: '9px', cursor: 'pointer'}} onClick={() => this.showMultipleCandleChart(row)}>\n                                                   {row.pastPerferm ? <>\n                                                    <span  style={{ background: row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\"}}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs).toFixed(2)}%</span> <br/>\n                                                     <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer/row.pastPerferm.totalLongs).toFixed(2)}%</span> <br/>\n                                                     <span style={{background: row.pastPerferm.totalShortPer/row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\"}}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer/row.pastPerferm.totalShort).toFixed(2)}%</span> <br/>\n                                                     <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer/row.pastPerferm.totalShort).toFixed(2)}%</span> <br/>\n                                                    </> : \"\"}\n                                                  \n                                                </TableCell>\n\n                                                 <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                                 <TableCell align=\"left\">{row.quantity}</TableCell>\n                                                 <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                                 <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                                 <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                                 <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                                <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0,15)}</TableCell>\n\n                                                <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                                <TableCell align=\"left\">{row.time}</TableCell>\n                                                \n                                             </TableRow>\n                                         )):''}\n                                     </TableBody>\n                                 </Table>\n\n                               \n             \n                                 </Paper>\n                        </Grid>\n\n                               \n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 'auto',\n  },\n  MuiTabsScroller : {\n    overflow: 'auto'\n  }\n \n\n}));\n\nexport default function FullWidthTabs(props) {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n      <TabPanel value={value} index={0} dir={theme.direction}>\n         \n        {props.data && props.data.symbolList ? props.data.symbolList.map(row => (\n            <>\n        <ListItem button style={{ fontSize: '12px'}} >\n            <ListItemText onClick={() => props.data.LoadSymbolDetails(row.symbol)} primary={row.name} /><DeleteIcon  onClick={() => props.data.deleteItemWatchlist(row.symbol)} />\n        </ListItem>\n        \n        </>\n        )):''}\n                                      \n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        Nifty 100\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          Midcap\n        </TabPanel>\n      </SwipeableViews>\n\n        <Tabs\n          className={classes.MuiTabsScroller}\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n     \n          style={{ overflow: 'auto'}}\n        >\n          <Tab label=\"Nifty 50\" {...a11yProps(0)} />\n          <Tab label=\"Midcap\" {...a11yProps(1)} />\n          <Tab label=\"Smallcap\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\n\nimport { w3cwebsocket } from 'websocket';\nimport pako from 'pako';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nimport Position from './Position';\n\nimport Tab from './Tab'\nimport { NavigateBeforeSharp } from '@material-ui/icons';\n\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"NR4_SameDay\",  //NR4ForNextDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData : localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData : [],\n            stopScaningFlag : false,\n            backTestResultDateRange : [],\n            searchFailed:0,\n            FoundPatternList : localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || []\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if( e.target.value == 'NR4_Daywide_daterage'){\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n            \n            this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange : backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] });\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) });\n\n        }\n\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        //  console.log(\"1st Request :- \" + firstTime_req);\n        wsClint.send(firstTime_req);\n\n        this.updateSocketWatch();\n\n    }\n\n    updateSocketWatch = () => {\n\n        \n\n        \n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n\n        channel = channel.join('&');\n        var sbin = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n\n        console.log(\"update watech\", sbin); \n        wsClint.send(JSON.stringify(sbin));\n    }\n\n\n    componentDidMount() {\n\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n      \n\n            wsClint.onopen  = (res) => {\n                this.makeConnection();\n                this.updateSocketWatch();\n           }\n   \n           wsClint.onmessage = (message) => {\n               var decoded = window.atob(message.data);\n               var data = this.decodeWebsocketData(pako.inflate(decoded));\n               var liveData = JSON.parse(data);\n               var symbolListArray = this.state.symbolList; \n               this.state.symbolList && this.state.symbolList.forEach((element, index)  => {\n                   var foundLive = liveData.filter(row => row.tk == element.token);\n                   if(foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc){\n                       symbolListArray[index].ltp = foundLive[0].ltp; \n                       symbolListArray[index].nc = foundLive[0].nc; \n                       console.log(\"foundLive\", foundLive);\n                   }\n               });\n               symbolListArray && symbolListArray.sort(function (a, b) {\n                   return  b.nc - a.nc;\n               });\n               this.setState({symbolList : symbolListArray}); \n           }\n   \n           wsClint.onerror = (e) => {\n               console.log(\"socket error\", e);\n           }\n   \n           setInterval(() => {\n               this.makeConnection();\n               var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n               // console.log(\"Request :- \" + _req);\n               wsClint.send(_req);\n           }, 59000);\n\n\n        }\n\n\n        var list = localStorage.getItem('watchList');\n        if (!list) {\n            localStorage.setItem('watchList', []);\n        }\n\n        // setInterval(() => {\n        //     AdminService.getAutoScanStock().then(res => {\n        //         let data = resolveResponse(res);\n        //         console.log(data);  \n        //         if(data.status  && data.message == 'SUCCESS'){ \n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \n        //         }\n        //     })    \n        // }, 2000);\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n     \n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment =startdate; \n            const endMoment = enddate; \n            \n            \n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if(this.state.stopScaningFlag){\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r,  this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n        \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n    \n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n        this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(0, 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n\n\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            \n                                var foundStock = {\n                                    foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                    symbol: element.symbol,\n                                    token : element.token, \n                                    pattenName : \"NR4\", \n                                    SellAt: sellenty,\n                                    high: firstCandle[2],\n                                    low: firstCandle[3],\n                                    BuyAt: buyentry,\n                                    candleChartData : candleChartData, \n                                    close : firstCandle[4]\n                                }\n                            \n                                this.nr4CheckPastPerfommance(element.token, foundStock) ; \n\n                            }\n\n                        }\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n            \n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    } \n\n    \n    findShortTraadeOnNextDay =(element, firstCandle, candleChartData, histdataInside)=>{\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n       // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry*1/100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true,  longTradeFound = {},   elementInside = '', buyHighest = histdataInside[0][3]; \n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n            \n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(),candle5min[1],candle5min[2],candle5min[3],candle5min[4]]); \n                if(candle5min[2] < buyHighest){\n                    buyHighest = candle5min[3]; \n                }\n               \n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if(buyEntryFlag && elementInside[3] < buyentry){\n                    console.log(element.symbol, \"taken short enty\", elementInside[3] );\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData : candleChartData,\n                    }\n                    buyEntryFlag = false; \n                }\n                                                          \n               \n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange );\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if(!buyEntryFlag && perChange >= 1){\n\n                    var sellEntyPrice = buyentry - buyentry * 1/100; \n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2] );\n\n                if(!buyEntryFlag && elementInside[2] >= buyentrySL){\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"SL_Hit\"; \n                    break;\n                }\n             \n            }\n\n            if(!buyEntryFlag && !longTradeFound.sellEntyPrice){\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus  = \"Market_End\"; \n            }\n\n            if(!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice){\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay =(element, firstCandle, candleChartData, histdataInside)=>{\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n//        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n   //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n       var buyentrySL = (buyentry - (buyentry*0.3/100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount =0,  longTradeFound = {},   elementInside = '', buyHighest = histdataInside[0][2]; \n\n\n        if (histdataInside && histdataInside.length) {\n            \n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(),candle5min[1],candle5min[2],candle5min[3],candle5min[4]]); \n                if(buyHighest < histdataInside[index][2]){\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if(buyEntryFlag && elementInside[2] > buyentry){\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData : candleChartData,\n                    }\n                    buyEntryFlag = false; \n                }\n                                                          \n               \n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n                \n            \n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if(!buyEntryFlag){\n\n                        if(firstTimeTrail && perChange >= 0.7){\n                            trailCount +=1;\n                            var minPrice =  buyentry + (buyentry * 0.1/100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus  = \"Trail by 0.1% \"+trailCount + \"time\"; \n                            firstTimeTrail = false; \n                        }else{ \n                            var lastTriggerprice =  longTradeFound.sellEntyPrice; \n                            var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n                           \n                            var buyExitPricePer =  longTradeFound.buyExitPrice; \n                            var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer)*100/buyExitPricePer).toFixed(2);   \n                           \n                            if(perchngfromTriggerPrice > 0.7){\n                                    trailCount +=1;\n                                    minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                                    longTradeFound.sellEntyPrice = minPrice;\n                                    longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                                    longTradeFound.exitStatus  = \"Trail by 0.25% \"+trailCount + \"time\"; \n                                   \n                            }else if(buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4){\n                                trailCount +=1;\n                                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                                longTradeFound.sellEntyPrice = minPrice;\n                                longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                                longTradeFound.exitStatus  = \"Min range 0.3 -0.4% \"+trailCount + \"time\"; \n                                break; \n                            }\n\n                        }\n\n                        \n\n\n\n\n                        if(elementInside[3] <= longTradeFound.sellEntyPrice){\n                            console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3] , longTradeFound.sellEntyPrice,  new Date(elementInside[0]).toLocaleString()); \n                            break; \n                        }\n\n                }\n\n                \n                if(!buyEntryFlag && elementInside[3] <= buyentrySL){\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3] , buyentrySL,  new Date(elementInside[0]).toLocaleString()); \n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"SL_Hit\"; \n                    break;\n                }\n             \n            } //candle loop end\n\n            if(!buyEntryFlag && !longTradeFound.sellEntyPrice){\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus  = \"Market_End\"; \n            }\n\n            if(!buyEntryFlag && Math.floor(100000 / buyentry)  && longTradeFound.buyExitPrice){\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\",longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed : 0});\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(1, 5);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n                           \n                                var start5thdate = moment(next5thCandle[0]).set({\"hour\": 9, \"minute\": 15});\n                                var end5thdate = moment(next5thCandle[0]).set({\"hour\": 15, \"minute\": 30});\n                            \n                                var data = {\n                                    \"exchange\": \"NSE\",\n                                    \"symboltoken\": element.token,\n                                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                    \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                    \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                                }\n                        \n                                AdminService.getHistoryData(data).then(insideCandleRes => {\n                                    let histdataInside = resolveResponse(insideCandleRes, 'noPop'); \n                                    histdataInside =  histdataInside && histdataInside.data; \n\n                                    this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n                                   // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n                        \n                                }).catch(error => {\n                                    Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                    this.setState({searchFailed : this.state.searchFailed +1})\n                                });\n\n\n                               \n                                // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                                // if (next5thCandle[2] > buyentry) {\n                                //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                //     sumPercentage += perChng;\n        \n                                //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                //     var foundStock = {\n                                //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                //         symbol: element.symbol,\n                                //         sellEntyPrice: next5thCandle[4],\n                                //         highAndLow: next5thCandle[2],\n                                //         stopLoss: firstCandle[3],\n                                //         buyExitPrice: buyentry,\n                                //         brokerageCharges: 0.06,\n                                //         perChange: perChng.toFixed(2),\n                                //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                //         quantity: Math.floor(10000 / firstCandle[2]),\n                                //         candleChartData : candleChartData,\n                                //     }\n                                //     if (Math.floor(10000 / firstCandle[2])){ \n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                //     }\n                                // }\n                                // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                                // if (next5thCandle[3] < sellenty) {\n                                //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                //     sumPercentage += perChng;\n                                //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                //     var foundStock = {\n                                //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                //         symbol: element.symbol,\n                                //         sellEntyPrice: sellenty,\n                                //         stopLoss: firstCandle[2],\n                                //         buyExitPrice: next5thCandle[4],\n                                //         highAndLow: next5thCandle[3],\n                                //         brokerageCharges: 0.06,\n                                //         perChange: perChng.toFixed(2),\n                                //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                                //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                //         quantity: Math.floor(10000 / firstCandle[3]),\n                                //         candleChartData : candleChartData\n                                //     }\n                                //     if(Math.floor(10000 / firstCandle[3])){\n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                //     }\n\n\n                                // }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({searchFailed : this.state.searchFailed +1})\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({searchFailed : this.state.searchFailed +1})\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n         //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    } \n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(1, 5);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                var currentDate = date.format('DD-MM-YYYY'); \n\n                                var dateWithWlType =  currentDate+' '+ this.state.selectedWatchlist; \n\n                                var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                                var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : []; \n                              \n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n        \n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[4],\n                                        highAndLow: next5thCandle[2],\n                                        stopLoss: firstCandle[3],\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])){ \n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                        datewisetrades.push(foundStock);\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n                                          \n                                        \n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        stopLoss: firstCandle[2],\n                                        buyExitPrice: next5thCandle[4],\n                                        highAndLow: next5thCandle[3],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if(Math.floor(10000 / firstCandle[3])){\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                        datewisetrades.push(foundStock);\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \n\n                                        console.log('backTestResultDateRange', backTestResultDateRange);\n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n                                     \n                                      //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n            \n                                        this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange : backTestResultDateRange });\n                            \n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') +' '+ index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    } \n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow : perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])){ \n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult:  this.state.backTestResult.reverse()});\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow : perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if(Math.floor(10000 / firstCandle[3])){\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs=0, totalShort=0, totalLongPer=0, totalShortPer=0, totalLongHighPer=0, totalShortLowPer=0; \n        var longCandles=[], shortCandles=[]; \n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = []; \n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount,firstCandle[0].toString().substr(0, 25)) ; \n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow : perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData : candleChartData\n                                }\n                                longCandles.push(longData); \n                                \n                                totalLongs+=1; \n                                totalLongPer+=perChng; \n                                totalLongHighPer+=perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow : perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData : candleChartData\n                                }\n                                shortCandles.push(shortData); \n\n                                totalShort+=1; \n                                totalShortPer+=perChng;\n                                totalShortLowPer+=perChngOnLow; \n\n                            }\n\n                           \n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs:totalLongs, \n                    totalShort:totalShort, \n                    totalLongPer:totalLongPer.toFixed(2),\n                    totalShortPer:totalShortPer.toFixed(2),\n                    totalLongHighPer:totalLongHighPer.toFixed(2),\n                    totalShortLowPer:totalShortLowPer.toFixed(2),\n                }\n                if(foundStock) \n                foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles; \n                foundStock.shortCandles = shortCandles; \n \n\n                 console.log(\"foundStock\",foundStock); \n                if (Math.floor(10000 / firstCandle[4])){ \n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n      \n     \n        \n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype, slmOrderType) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name) => {\n\n        console.log(\"this.state.symbolList\", this.state.symbolList);\n\n        var token = '';\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            if (this.state.symbolList[index].symbol === name) {\n                token = this.state.symbolList[index].token;\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\n                break;\n            }\n        }\n        this.getHistory(token);\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType ? slmOrderType : \"SELL\",\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (data && data.data) {\n\n                var histCandles = data.data;\n                histCandles && histCandles.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (histCandles.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy: histCandles, buyPrice: histCandles[0][2] });\n                }\n                this.getLTP();\n            }\n        })\n    }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol);\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [];\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n            if (!foundInWatchlist.length) {\n                watchlist.push(fdata);\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                AdminService.saveWatchListJSON({ stock: fdata }).then(res => {\n                    let resdata = resolveResponse(res, 'noPop');\n                    console.log(resdata);\n                });\n            }\n\n            this.setState({ symbolList: JSON.parse(localStorage.getItem('watchList')), search: \"\" });\n            this.updateSocketWatch();\n\n        }\n\n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if(insiderow)\n        localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n        \n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if(candleChartDataInside)\n        localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n        \n        document.getElementById('showCandleChart').click();\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n       \n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0;\n        var tradetotal = 0, totalWin = 0,  totalLoss  = 0; \n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <ChartDialog />\n                <Grid direction=\"row\" container>\n\n                    <Grid item xs={12} sm={2}  >\n\n                        <Autocomplete\n                            freeSolo\n                            id=\"free-solo-2-demo\"\n                            disableClearable\n                            style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                            onChange={this.onSelectItem}\n                            //+ ' '+  option.exch_seg\n                            options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                option.symbol\n                            ) : []}\n                            renderInput={(params) => (\n                                <TextField\n                                    onChange={this.onChange}\n                                    {...params}\n                                    label={\"Search Symbol (\" + this.state.symbolList.length + \")\"}\n                                    margin=\"normal\"\n                                    variant=\"standard\"\n\n                                    name=\"search\"\n                                    value={this.state.search}\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\n                                />\n                            )}\n                        />\n\n                        <div style={{ marginLeft: '10px' }}>\n                            <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                    <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                    {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                        <MenuItem value={element}>{element}</MenuItem>\n                                    ))\n                                    }\n\n                                </Select>\n                            </FormControl>\n\n                        </div>\n\n\n\n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\n\n                            {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\n                                <>\n                                    <ListItem button style={{ fontSize: '12px' }} >\n                                        <ListItemText style={{ color: !row.nc  || row.nc == 0 ? \"\" : row.nc > 0 ? 'green' : \"red\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {row.ltp} ({row.nc}%) <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />\n                                    </ListItem>\n\n                                </>\n                            )) : ''}\n                        </div>\n\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n\n                    </Grid>\n\n\n\n\n                    <Grid item xs={12} sm={10}>\n\n\n                        <Grid direction=\"row\" alignItems=\"center\" container>\n\n                           <Grid style={{display:\"none\"}} direction=\"row\" alignItems=\"center\" container>\n    \n                            <Grid item xs={10} sm={5}>\n                                <Typography variant=\"h5\"  >\n                                    {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"}   {this.state.sbinLtp}\n                                </Typography>\n                                Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                            </Grid>\n                            <Grid item xs={12} sm={2}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                    <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                            </Grid>\n\n\n                            <Grid item xs={1} sm={2}  >\n\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                            </Grid>\n\n                    `            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                    {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                        <TableRow key={i} >\n\n                                            <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                            <TableCell align=\"center\">{row[1]}</TableCell>\n                                            <TableCell align=\"center\">{row[2]}</TableCell>\n                                            <TableCell align=\"center\">{row[3]}</TableCell>\n                                            <TableCell align=\"center\">{row[4]}</TableCell>\n                                            <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n                            </Grid>\n\n\n\n                            <Grid direction=\"row\" alignItems=\"center\" container>\n\n                                    <Grid direction=\"row\" container spacing={2}>\n\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                            <FormControl style={styles.selectStyle}>\n                                                <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                                <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                                    <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                                    <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                                    <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                                    <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n                                            \n                                                    <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                                    <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n                                                    \n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={4}>\n                                            <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                        </Grid>\n\n\n\n                                        <Grid item xs={12} sm={6} style={{ marginTop:'28px'}}>\n                                            {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </> }\n                                            SearchFailed:{this.state.searchFailed}\n\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={12}>\n\n                                 \n                                        {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ?   <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{  background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n                                            \n                                                {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n                                            \n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n                                                \n\n                                            \n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"green\" : \"red\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n                                        \n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n                                                \n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n                                            \n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        \n\n                                    {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                        <TableRow hover key={i}  >\n\n                                            <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                                            */}\n                                            <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin +=  (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0}  style={{ color: tradetotal > 0 ? \"green\" : \"red\" }}  align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                            <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                            <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + ( row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\n                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                            <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                            <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                            \n                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                        </TableRow>\n\n\n\n                                    )) : ''}\n\n\n                                    <TableRow style={{  background: \"lightgray\" }} >\n\n                                        <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n                                        \n                                        {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n                                        <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                        <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                        <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                        <TableCell align=\"left\" > </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n\n                                        <TableCell align=\"left\"> </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n\n\n                                        \n\n                                    </TableRow>\n                                        </TableBody>\n                                        </Table>\n\n                                        : \"\"}\n\n\n\n                                        {this.state.patternType == 'NR4_Daywide_daterage' ?  <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                                <Table size=\"small\" aria-label=\"sticky table\"  style={{ padding:\"5px\"}}>\n                                                    <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                                    \n                                                            <TableRow style={{  background: \"lightgray\" }}  key={key}>\n                                                                <TableCell  colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0}</TableCell>\n                                                            </TableRow>\n\n                                                            <TableRow key={key+1}  variant=\"head\" style={{ fontWeight: 'bold' , background: \"lightgray\" }}>\n\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\n\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                            </TableRow>\n\n                                                            </TableHead>\n                                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                                        \n\n                                                            {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                            \n                                                                    <TableRow hover key={i}  >\n\n                                                                    <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                                                                    <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                                                                */}\n                                                                    <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                                    <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\n                                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                                    <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n                                                                \n                                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                                </TableRow>\n\n\n                                                            ))}\n\n\n\n                                                    <TableRow style={{  background: \"lightgray\" }} >\n\n                                                    <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                    {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n                                                    <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                    <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                    <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                    <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                    <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                    <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                    <TableCell align=\"left\"></TableCell>\n\n\n                                                    <TableCell align=\"left\" > </TableCell>\n                                                    <TableCell align=\"left\"> </TableCell>\n\n                                                    <TableCell align=\"left\"> </TableCell>\n                                                    <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                    </TableBody>\n                                                </Table>\n                                                \n\n                                            \n                                            )) : ''}\n\n                                            </>\n\n                                        : \"\"}\n\n\n                                        {this.state.patternType == 'NR4ForNextDay' ?   \n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                           NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16)   : new Date().toString().substr(0, 16)}\n                                        </Typography> \n                                        : \"\"}\n                                            \n                                        {this.state.patternType == 'NR4ForNextDay' ?   \n                                         <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                               \n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                   <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n\n                                                    <TableCell className=\"TableHeadFormat\"  align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n                                                 \n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        \n\n                                           \n                                        {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                            <TableRow hover key={i}  >\n                                                <TableCell align=\"center\">{i + 1}</TableCell>\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                <TableCell align=\"left\" title=\"based on last one 6 month\">  \n                                                \n                                                <span style={{background: row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\"}}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br/>\n                                                 Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer/row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br/>\n                                                 {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                       <>\n                                                         {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n                                                     \n                                                        <a style={{textDecoration: 'underline', background: 'lightgray',cursor: 'pointer'}} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                        </>\n                                                ))}\n\n                                                <br/>\n\n                                                <span style={{background: row.pastPerferm.totalShortPer/row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\"}}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer/row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br/>\n                                                Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer/row.pastPerferm.totalShort).toFixed(2)}% per trade)<br/>\n                                                {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                <>\n                                                <a style={{textDecoration: 'underline', background: 'lightgray', cursor: 'pointer'}} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n                                              \n \n                                                </>\n                                                ))}\n                                                \n                                                </TableCell>\n\n                                                \n                                                <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                <TableCell align=\"left\">{row.high}</TableCell>\n                                                <TableCell align=\"left\">{row.low}</TableCell>\n                                                <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                            </TableRow>\n\n\n\n                                        )) : ''}\n\n                                        </TableBody>\n\n                                        </Table>\n                                        \n                                        : \"\"}\n                                        </Grid>             \n\n\n                                    </Grid>\n\n\n              \n                            </Grid>\n\n\n\n\n                        </Grid>\n                    </Grid>\n\n\n\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n // data.reverse();\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n               \n                this.setState({  fundData :fundsResData.data })\n               }\n           })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.feedToken ,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n\n            \n        wsClint.onopen  = (res) => {\n\n             this.makeConnection();\n             console.log('connected');\n         //    this.updateSocketWatch();\n                \n            //  setTimeout(function(){\n            //    this.updateSocketWatch(feedToken ,clientcode);\n            //  }, 800);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog'; \nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\n\n\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag:true, \n            refreshFlagCandle: true, \n            sectorStockList : localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList:   localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData : localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n\n    }\n\n    componentDidMount() {\n\n      //  this.loadPackList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n    \n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n      \n\n            wsClint.onopen  = (res) => {\n                this.makeConnection();\n                this.updateSocketWatch();\n           }\n   \n           wsClint.onmessage = (message) => {\n               var decoded = window.atob(message.data);\n               var data = this.decodeWebsocketData(pako.inflate(decoded));\n               var liveData = JSON.parse(data);\n               var sectorList = this.state.sectorList; \n               \n               this.state.sectorList && this.state.sectorList.forEach((outerEelement, index)  => {\n\n                    outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if(foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc){\n                            sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp; \n                            sectorList[index].stockList[stockIndex].nc = foundLive[0].nc; \n                            sectorList[index].stockList[stockIndex].cng = foundLive[0].cng; \n\n                            console.log(\"foundLive\", foundLive);\n                        } \n                    }); \n                    sectorList[index].stockList.sort(function (a, b) {\n                        return  b.nc - a.nc;\n                    });\n\n               });\n              \n               this.setState({sectorList : sectorList}); \n               localStorage.setItem('sectorList', JSON.stringify(sectorList)); \n\n           }\n   \n           wsClint.onerror = (e) => {\n               console.log(\"socket error\", e);\n           }\n   \n           setInterval(() => {\n               this.makeConnection();\n               var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n               // console.log(\"Request :- \" + _req);\n               wsClint.send(_req);\n           }, 59000);\n           \n           setInterval(() => {\n             this.loadPackList(); \n           }, 120000);\n\n           setInterval(() => {\n            this.refreshSectorCandle(); \n          }, 60000 * 5);\n\n\n        }\n\n\n\n    }\n\n    \n    \n\n    loadPackList() {\n\n        this.setState({ indexTimeStamp: '' })\n        this.setState({refreshFlag : false}); \n\n\n        AdminService.getAllIndices()\n            .then((res) => {\n                if (res.data) {\n\n                    var data = res.data;\n\n                    this.setState({ indexTimeStamp: data.timestamp })\n\n                    var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n                \n                    // this.speckIt(\"1st sector is \" + softedData[0].indexSymbol + ' ' + softedData[0].percentChange + '%');\n                    // this.speckIt(\"2nd sector is \" + softedData[1].indexSymbol + ' ' + softedData[1].percentChange + '%');\n                    // this.speckIt(\"3rd sector is \" + softedData[2].indexSymbol + ' ' + softedData[2].percentChange + '%');            \n                    for (let i = 0; i < softedData.length; i++) {\n                        var sectorStocks = this.state.staticData[softedData[i].index]; \n                        softedData[i].stockList = sectorStocks;\n                        for (let index = 0; index < sectorStocks.length; index++) {\n                            var foundInWatchlist = this.state.sectorStockList.filter(row => row.token  == sectorStocks[index].token);                                \n                            if(!foundInWatchlist.length){\n                                this.setState({ sectorStockList: [...this.state.sectorStockList, sectorStocks[index]] });\n                            }\n                        }\n                    }\n\n                    \n\n                    this.setState({ sectorList: softedData});\n                    localStorage.setItem('sectorList', JSON.stringify(softedData)); \n\n                    console.log(\"softedData\", softedData); \n                    this.refreshSectorLtp(); \n                }\n\n            })\n            .catch((reject) => {\n                Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                this.speckIt(\"All Indices API Failed\");\n                this.setState({refreshFlag : true}); \n\n            })\n\n        \n    }\n\n\n    refreshSectorLtp = async() => {\n\n        this.setState({refreshFlag : false,  failedCount : 0}); \n\n        var sectorStockList =  this.state.sectorStockList; \n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n\n            var data  = {\n                \"exchange\":\"NSE\",\n                \"tradingsymbol\": this.state.sectorStockList[index].symbol,\n                \"symboltoken\":this.state.sectorStockList[index].token,\n            }\n\n            this.setState({ stockUpdate: index+1 + \". \" + this.state.sectorStockList[index].symbol }); \n\n           AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                 var LtpData = data && data.data; \n                 \n              //   console.log(this.state.sectorStockList[index].symbol, this.state.sectorStockList[index].token, LtpData);\n\n                 if(LtpData.ltp){\n                    var todayChange =  (LtpData.ltp - LtpData.open)*100/LtpData.open;   //close\n                     sectorStockList[index].ltp = LtpData.ltp; \n                     sectorStockList[index].nc = todayChange.toFixed(2); \n                     sectorStockList[index].cng =  (LtpData.ltp - LtpData.open).toFixed(2); \n                 } \n\n                 var sectorList = this.state.sectorList; \n                 this.state.sectorList && this.state.sectorList.forEach((outerEelement, index)  => {\n                     outerEelement.stockList.forEach((element, stockIndex) => {\n                         var foundLive = sectorStockList.filter(row => row.token == element.token);\n                         console.log(this.state.sectorStockList[index].symbol, this.state.sectorStockList[index].token, foundLive);\n                         \n                         if(foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc){\n                             sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp; \n                             sectorList[index].stockList[stockIndex].nc = foundLive[0].nc; \n                             sectorList[index].stockList[stockIndex].cng = foundLive[0].cng; \n                         } \n                     }); \n                     sectorList[index].stockList.sort(function (a, b) {\n                         return  b.nc - a.nc;\n                     });\n                });\n                this.setState({ sectorList: sectorList });  \n                localStorage.setItem('sectorList', JSON.stringify(sectorList)); \n\n                \n           }).catch(error => {\n            this.setState({ failedCount:  this.state.failedCount + 1 + \" Ltp failed \" }); \n\n            Notify.showError(this.state.sectorStockList[index].symbol + \" ltd data not found!\");\n           })\n\n            await new Promise(r => setTimeout(r, 101)); \n       }\n\n       this.setState({  refreshFlag : true }); \n     }\n\n\n     refreshSectorCandle = async() => {\n\n        this.setState({refreshFlagCandle : false}); \n\n        var sectorStockList =  this.state.sectorStockList; \n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            console.log(\"beginningTime\", beginningTime); \n\n            var time = moment.duration(\"28:10:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockUpdate: index+1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol }); \n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = []; \n                    candleData.forEach(element => {\n                        candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                    });\n\n\n                    if(candleData.length > 0){     \n\n                         sectorStockList[index].candleChartData = candleChartData; \n                         var sectorList = this.state.sectorList; \n                         this.state.sectorList && this.state.sectorList.forEach((outerEelement, index)  => {\n                             outerEelement.stockList.forEach((element, stockIndex) => {\n                                 var foundLive = sectorStockList.filter(row => row.token == element.token);\n                                 \n                                 if(foundLive.length){\n                                     sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData; \n                                 } \n                             }); \n                        });\n                        this.setState({ sectorList: sectorList });  \n                        localStorage.setItem('sectorList', JSON.stringify(sectorList)); \n                     } \n    \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol , \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount:  (this.state.failedCount + 1) + \" candle failed \" }); \n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350)); \n       }\n\n       this.setState({  refreshFlagCandle : true }); \n     }\n\n     decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        //  console.log(\"1st Request :- \" + firstTime_req);\n        wsClint.send(firstTime_req);\n\n        this.updateSocketWatch();\n\n    }\n\n    showCandleChart = (candleData, symbol, price, change) => {\n\n\n      //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData)); \n        localStorage.setItem('cadleChartSymbol', symbol); \n        localStorage.setItem('candlePriceShow', price); \n        localStorage.setItem('candleChangeShow', change); \n\n        if(candleData && candleData.length > 0){\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n        var channel = this.state.sectorList.map(element => {\n            element.stockList.map(stock => {\n                return 'nse_cm|' + stock.token;\n            });\n        });\n\n        channel = channel.join('&');\n        var updateWatch = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n\n        console.log(\"update watech\", updateWatch); \n        wsClint.send(JSON.stringify(updateWatch));\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        //  window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor =(percent) => {\n        percent =   percent  * 100; \n        var  r = percent<50 ? 255 : Math.floor(255-(percent*2-100)*255/100);\n        var g = percent>50 ? 255 : Math.floor((percent*2)*255/100);\n        return 'rgb('+r+','+g+',0)';\n    }\n\n    render() {\n       // console.log(\"sectorList\", this.state.sectorList)\n     //   console.log(\"sectorStockList\", this.state.sectorStockList)\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors Stocks({this.state.sectorStockList.length}) at {this.state.indexTimeStamp}   \n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() =>   this.loadPackList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </> }\n                            {this.state.failedCount} \n\n\n                            {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() =>   this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </> }\n\n                        </Typography>\n                        \n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                      \n                        <Grid item xs={12} sm={3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\"}}> \n\n                           \n                            <Typography>\n                                    {indexdata.index + \" \" + indexdata.last}({indexdata.percentChange}%) \n                             </Typography>\n\n                            \n                            <Grid  direction=\"row\" container className=\"flexGrow\"  spacing={1} >\n\n                            \n                                {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        \n                                            <Grid item  xs={12} sm={6} >\n                                                <Paper  style={{cursor: 'pointer' , textAlign: \"center\", background: this.getPercentageColor(sectorItem.cng)}} > \n\n                                                    {/* {sectorItem.cng} */}\n                                                    <span onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp,sectorItem.nc )}  style={{background: this.getPercentageColor(sectorItem.cng)}}>  {sectorItem.name} {sectorItem.ltp} ({sectorItem.nc}%) </span> \n                                                    {/* <LineChart candleChartData={sectorItem.candleChartData}/> */}\n\n                                                    <ReactApexChart \n                                                        options={{\n                                                                chart: {\n                                                                    type: 'candlestick',\n                                                                  //  height: 40\n\n                                                                },\n                                                                title: {\n                                                                    text: '',\n                                                                    align: 'left'\n                                                                },\n                                                                xaxis: {\n                                                                    type: 'datetime',\n                                                                },\n                                                                yaxis: {\n                                                                    tooltip: {\n                                                                    enabled: true\n                                                                    }\n                                                                }\n                                                            }}\n                                                            series={[{\n                                                                data:  sectorItem.candleChartData \n                                                                \n                                                            }]} \n                                                            type=\"candlestick\" \n                                                           // width={100}\n                                                           // height={40} \n                                                    />\n\n                                                </Paper>\n                                            </Grid>\n                                      \n                                  ))\n                                }\n\n                            </Grid>\n\n                            </Paper>\n                        </Grid>\n                       \n\n\n                    )) : <Spinner />}\n\n            \n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\n// import NiftyView from \"./MyTrade/NiftyView\";\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n\n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}