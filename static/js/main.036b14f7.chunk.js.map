{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/LightChartCom.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/SimpleExpansionPanel.js","components/MyTrade/SimpleExpansionFastMovement.js","components/MyTrade/LiveBidsExpantion.js","components/MyTrade/WatchListTab.js","api.js","action/index.js","components/MyTrade/Chart.js","components/MyTrade/BankNiftyView.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/Home.js","components/MyTrade/NiftyView.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/LightChartDialog.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/MyTrade/FindFastMovement2.js","components/MyTrade/DeliveryData.js","components/MyTrade/LightChartModel.js","components/MyTrade/SlowMotion.js","components/MyTrade/IndexCharts.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","symbol","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","Equalizer_default","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","LightChartCom","setTimeout","chart","LightweightCharts","createChart","getElementById","height","rightPriceScale","scaleMargins","top","bottom","borderVisible","layout","textColor","grid","vertLines","horzLines","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","addHistogramSeries","priceFormat","priceScaleId","volumeSeries","subscribeCrosshairMove","param","getit","seriesPrices","Symbol","iterator","string","change","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","elem","console","log","open","high","low","close","toFixed","err","return","time","toLocaleString","str","innerHTML","smaData","count","avg","sum","result","len","val","slice","calculateSMA","addLineSeries","lineWidth","direction","paddingLeft","paddingRight","item","fontSize","DialogTitle","withStyles","padding","closeButton","right","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","placeOrder","click","getStockTokenDetails","SYMBOL","updateOrderList","retrieveOrderBook","orderlist","sort","b","updatetime","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","Math","floor","qtyToTake","format1","beginningTime","moment","format","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","candleData","clossest","lowerest","highestHigh","lowestLow","highestsum","reverse","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","orderOption","buyPrice","placeOrderMethod","catch","placeOptionOrder","placeOptionSLMOrder","stopLossTriggerPrice","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","noWrap","LoadSymbolDetails","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","lib_default","OpenInNew_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","list","ExpansionPanelDetails","overflowY","map","nc","background","highlisht","totalBuyQuantity","totalSellQuantity","deliveryToTradedQuantity","TabPanel","react","role","hidden","Box","sx","Typography_Typography","a11yProps","BasicTabs","_props$data","cursor","onSelectItem","autoSearchList","symbolList","onChangeWatchlist","search","handleKeyDown","selectedWatchlist","setValue","searchedSymbolList","gainerList","looserList","borderBottom","Tabs","newValue","Tab","FormControl","htmlFor","Select","MenuItem","onKeyDown","selected","sector","performServerAction","baseURL","setPackLoaded","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","allPacks","portal","sent","stop","_x","apply","diffData","putData","totPEOI","totCEOI","diff","dateTime","substring","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MyView","onChangeSelectSymbol","loadPackList","filterOptionChain","actualValue","filereddata","alldata","optionChainDataBN","records","expiryDate","strikePrice","filtered","FilteredBY","handleScroll","scrollcount","onChangeCallLot","calculateCallMargin","CE","lastPrice","totalMargin","Parser","lotSize","buyCallLot","maxLoss","onChangePutLot","calculatePutMargin","PE","buyPutLot","getDataforStrike","sumOfCEoi","sumOfPEoi","openInterest","findSupportResistence","optiondata","PEoi","CEoi","PEoiChange","CEoiChange","changeinOpenInterest","myStrike","startDiff","underlyingValue","showOptionDownside","rem","round","startFrom","endDiff","showOptionUpside","rem2","endTo","totalspeoi","totalsceoi","resdata","AllspTotalOI","selectedSPpcr","allStrikediff","allStrikeChngeDiff","products","stopnview","curnewdata","timestamp","totalCOI","expiry","strike","waitForChainFlag","pcrTableBN","selectOptionStock","niftyLogSize","niftybankLogSize","_this2","SecuritiesInFO","todayTime","setInterval","updatepcr","_this3","getBNcpdata","totOI","newdata","dateFormat","totCEVol","totVol","totPEVol","totChangeINOICall","totChangeINOIPut","totChangeINOIDiff","oldproducts","lastrow","isDuplicate","totCEOIChange","totPEOIChange","totDiffChange","unshift","pcrdata","allPCR","expiryPCR","_React$createElement2","_React$createElement3","_this4","selectStyle","Input","key","expiryDates","labelId","max-height","strikePrices","Paper","overflow","Table","stickyHeader","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","hover","Chart_App","borderLeft","borderRight","colSpan","opdata","impliedVolatility","pChange","textAlign","buyOption","tableStyle","marginBottom","minWidth","connect","OrderBook","searchSymbolPendingOrder","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","abrupt","createdAt","toLocaleTimeString","buyAt","sellAt","pattenName","pattenNamePending","orderPenidngList","toConsumableArray","deleteInOrderPenidngList","delitem","splice","callBackUpdate","updateLTP","_callee2","_loop","_context3","_context2","r","delegateYield","getTradePrice","refreshCandleChartManually","_ref3","_callee3","_context4","failedCount","onChange2","openNewPage","backToPositionPage","autoSearchTemp","fdata","optiontype","noOfLot","exp","optionName","optionData","ltpparam","perStopTrigerLoss","endTime","currentTime","isoWeekday","isBetween","intervaltime","findlast5minMovementInterval","hash","gutterBottom","Autocomplete","freeSolo","disableClearable","option","renderInput","params","InputProps","Delete_default","BankNiftyView","Home","onInputChange","showStaticChart","onChangePattern","backTestResultDateRange","dateAndTypeKeys","checkOpenEqualToLow","_this$setState5","openEqualHighList","openEqualLowList","advanceShareCount","declineShareCount","UnchangeShareCount","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","wsClint","firstTime_req","feedToken","send","updateSocketWatch","channel","updateSocket","task","user","acctid","updateSocketDetails","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","_req","stopBacktesting","stopScaningFlag","backTestAnyPattern","enddate","currentMoment","endMoment","watchList","runningTest","_loop2","backTestResult","backTestFlag","patternType","backTestNR4","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","index2","last10Candle","next10Candle","backtestTweezerTop","backtestTweezerBottom","stockTesting","_loop3","_context6","FoundPatternList","_context5","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","sellenty","foundStock","SellAt","BuyAt","nr4CheckPastPerfommance","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","stopLoss","brokerageCharges","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee4","sumPercentage","_loop4","_context8","searchFailed","_context7","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref5","_callee5","_loop5","_context10","_context9","dateWithWlType","datewisetrades","perChngOnLow","_callee6","_loop6","_context12","_context11","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","orderid","getTimeFrameValue","timeFrame","chartStaticData","timeDuration","historyData","cdata","d","volumeSeriesData","loopindex","rsiValues","bblastValue","vwapvalue","max","smaLineSeries","dailyBasisInfoCheck","InstrumentHistroy","upsideMoveCount","downMoveCount","totalSum","per","totalPerchentageChange","startingFrom","checkSlowMotionStock","stock","dataDay","resd","histdatad","candleDatad","bigCandleCount","slowMotionStockList","checkSlowMotionCheckLive","_callee7","_loop7","_context14","_context13","checkLiveBids","_callee8","_context15","bidlivedata","biddata","liveBidsList","oneHourBullBearCheck","_callee9","_loop8","_context17","_context16","lastCandle","oneHourBullBearCheckList","searchValumeBreakoutStock","_callee10","_loop9","_context19","_context18","volumeSum","findmaxVol","currentCandleVol","firstCandleCloseingPrice","priceGoingHighCount","firstCandleCloseingPriceDownSide","priceGoingLowCount","avgVol","volumeBreakoutlast5CandleList","startDateforDaily","DSMA","closeingDatadaily","valumeSum","SMA","dailyAvgValume","DSMALastValue","DailyBulishStatus","todayCurrentVolume","volumeCrossedList","slmOrderType","onSelectItemChart","seachSumbol","getPercentageColor","percent","deleteItemWatchlist","findIndex","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","keyCode","prevState","updateCandleOnkey","selectedKeyRow","ifNotBought","fastMovementList","domElement","timeVisible","secondsVisible","tostartInteral","clearInterval","_ref11","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","upper","middle","lower","j","OrderWatchlist","MaterialUIDateTimePicker","LiveBidsExpantion_SimpleExpansionPanel","SimpleExpansionFastMovement_SimpleExpansionPanel","formContainer","textStyle","imgStyle","MuiTextField","footerButton","left","optionChainData","pcrTable","_React$createElement4","paddingTop","indexSymbol","MyDialog_DialogTitle","MyDialog_DialogContent","indexSymbolData","idata","MyDialog_DialogActions","getIndicesStocks","getIndiceStock","toLocaleLowerCase","indexTimeStamp","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","x","y","colors","upward","downward","ApexCharts","querySelector","render","toFixedAmount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","getTodayOrder","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","w3cwebsocket","actiontype","feedtype","jwttoken","apikey","sbin","getHistory","histCandles","positionList","heartbeatReq","exchtime","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","today","timediff","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","foundData","foundPatternList","toLowerCase","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","findNR7PatternLive","showtestdata","last7Candle","last9Candle","_ref4","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","netqty","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_ret","showHighLowWisePer","v","tagPatternWhichTaken","orderTagToPosition","pattern","calculateTradeExpence","totalbuyvalue","totalsellvalue","buyCharge","sellCharge","turnOver","totalBroker","sst","sstCharge","transCharge","stampDuty","sebiCharge","gstCharge","total","tradeExpence","expenceInfo","getPositionData","totalMaxPnL","getPosition","todayProfitPnL","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","totalExpence","pnl","buyqty","percentPnL","chargeInfo","slData","stopLossAmount","totalTornOver","checkAndPlaceSingleOrder","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","getNiftyLTP","getBankNiftyLTP","getStopLossPrice","_ref8","slPrice","_x2","_x3","LockedSymbolName","orderData","getOpenPeningOrderId","squareOff","abs","modifyOrderMethod","minTriggerPrice","minSLPrice","get2DecimalNumber","number","getSLAndTriggerPrice","getOptionPercentage","trailPerChange","slPriceData","getPercentage","positionInterval","bankNiftyInterval","squireInterval","sqrOffbeginningTime","sqrOffendTime","scaninterval","scanendTime","totalDayLoss","dailyLossPer","getNSETopStock","scandata","isFound","symbolName","selectedStockInteval","getSelectedStockFromDb","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","Example","areaData","volumeData","ChartData","areaSeries","readCsv","parsedList","newJsonList","addtowatchlist","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","indexData","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","LightChartDialog_DialogTitle","LightChartData","selectedSymbol","LightChartDialog_DialogContent","LightChartDialog_DialogActions","showCandleChartPopUp","isThere","switchToListView","switchToListViewFlag","get5DaysMoveCount","getDeliveryInfo","getDeliveryData","sluglist","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","timeVal","slugName","checkSectorApiOther","indexStock","stockElement","stockInfo","ltP","iislPercChange","isfound","LightChartDialog_CustomizedDialogs","stopSearching","stop10bbSearch","onChangeQty","find10MinBBBlast","startSearching","totalStockToWatch","findlast5minMovement","updateToLocalStorage","updateData","findlast5minMovementUpdate","lightcandleChartData","getFullYear","getMonth","getDate","sma","bbvlastvalue","dataltp","upsidecount","downsidecount","startingRsiupside","startingRsiDownside","volumeUpside","BBBlastType","RSIValue","BB","updateMsg","percentChangeList","changePer","quantityTraded","deliveryQuantity","totalTradedVolume","totalTradedValue","highlight","lastUpdateTime","convertToFloat","isNaN","sortByColumn","sortedType","averagePrice","dayHigh","dayLow","previousClose","lightChartData","LightChartModel_DialogTitle","LightChartModel_DialogContent","LightChartModel_DialogActions","checkSlowMotion","scanUpdate","updateTimeFrameChart","lightChartinfo","stockindex","sectorName","isActivated","midBullishCount","bullishCount","activationTime","activationPrice","update","updatetopage","activationToLtpChange","AtoltpChng","showLightChart","deleteAllScan","LightChartModel_CustomizedDialogs","AppRouter","react_router","path","exact","NiftyView","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","FindFastMovement2","DeliveryData","SlowMotion","IndexCharts","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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AAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,IAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,MAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,OAC7B,CAAE4M,KAAM,aAAc5M,MAAO,QAE/B6uC,WAAY,CACV,CAAEjiC,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,QAAYI,MAAO,wBAChD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,QAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,QAAYI,MAAO,0BAChD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,QAAYI,MAAO,0BAChD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0BACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,wBACjD,CAAEwM,KAAM,aAAc5M,MAAO,SAAaI,MAAO,0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","file":"static/js/main.036b14f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\n\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    checkOtherApi(index){\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n    }\n\n    checkSectorApiOther(index){\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n      }\n\n    \n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices);\n    }\n\n    allIndicesDirectJSON(){\n        return axios.get('http://localhost:8081/nse/get_indices', '');\n        // return axios.get(apiConstant.allIndices2Json);\n     }\n\n     getBNcpdata(symbol){\n         if(symbol == 'NIFTY' || symbol == 'BANKNIFTY'){\n            return axios.get('http://localhost:8081/nse/getOptionChain?symbol='+symbol, '');\n         }else{\n            return axios.get('http://localhost:8081/nse/getOptionChainEquity?symbol='+symbol, '');\n         }\n        \n     }\n\n\n     getDeliveryData(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n     checkLiveBids(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n\n\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map2\" />\n    </ListItem>\n\n\n\n    <ListItem button component='a' href={\"/mtrade/#/delivery\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Delivery\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/slow-motion\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Slow Motion\" />\n    </ListItem>\n\n\n   \n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/index-charts\"} >  \n      <ListItemIcon>\n        <EqualizerIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Index Charts\" />\n    </ListItem>\n    \n\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Watchlist\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map\" />\n    </ListItem>\n  \n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem> */}\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport default function LightChartCom(props) {\n\tconst [open, setOpen] = React.useState(false);\n\t// var fileref=document.createElement('script')\n\t// fileref.setAttribute(\"type\",\"text/javascript\")\n\t// fileref.setAttribute(\"src\", 'https://unpkg.com/lightweight-charts@3.4.0/dist/lightweight-charts.standalone.production.js')\n\t// document.getElementsByTagName(\"head\")[0].appendChild(fileref)\n\n\tsetTimeout(() => {\n\n\t\tvar chart = window.LightweightCharts.createChart(document.getElementById('chart'), {\n\t\t\twidth: 600,\n\t\t\theight: 300,\n\t\t\trightPriceScale: {\n\t\t\t\tscaleMargins: {\n\t\t\t\t\ttop: 0.3,\n\t\t\t\t\tbottom: 0.25,\n\t\t\t\t},\n\t\t\t\tborderVisible: false,\n\t\t\t},\n\t\t\tlayout: {\n\t\t\t\tbackgroundColor: 'white',   // '#131722',\n\t\t\t\ttextColor: '#d1d4dc',\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tvertLines: {\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0)',\n\t\t\t\t},\n\t\t\t\thorzLines: {\n\t\t\t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\t// var areaSeries = chart.addAreaSeries({\n\t\t// \ttopColor: 'rgba(38,198,218, 0.56)',\n\t\t// \tbottomColor: 'rgba(38,198,218, 0.04)',\n\t\t// \tlineColor: 'rgba(38,198,218, 1)',\n\t\t// \tlineWidth: 2,\n\t\t// });\n\t\t// areaSeries.setData(props.ChartData.areaSeries);\n\n\n\t\tvar candleSeries = chart.addCandlestickSeries({\n\t\t\tupColor: 'green',\n\t\t\tdownColor: 'red',\n\t\t\tborderDownColor: 'red',\n\t\t\tborderUpColor: 'green',\n\t\t\twickDownColor: 'red',\n\t\t\twickUpColor: 'green',\n\t\t});\n\n\t\t//candleSeries.setData(data);\n\t\tvar data = props.chartData && props.chartData.candleSeries;\n\t\tcandleSeries.setData(data);\n\n\n\n\t\tvar volumeSeries = chart.addHistogramSeries({\n\t\t\tcolor: '#26a69a',\n\t\t\tpriceFormat: {\n\t\t\t\ttype: 'volume',\n\t\t\t},\n\t\t\tpriceScaleId: '',\n\t\t\tscaleMargins: {\n\t\t\t\ttop: 0.8,\n\t\t\t\tbottom: 0,\n\t\t\t},\n\t\t});\n\n\t\t//volumeSeries.setData(props.ChartData && props.ChartData.volumeData);\n\t\tvolumeSeries.setData(props.chartData && props.chartData.volumeSeries);\n\n\n\t\tchart.subscribeCrosshairMove((param) => {\n\n\t\t\tvar getit = param.seriesPrices[Symbol.iterator]();\n\n\t\t\tvar string = \"\";\n\t\t\tvar change = \"\";\n\n\t\t\tfor (var elem of getit) {\n\n\t\t\t\tconsole.log(elem);\n\n\t\t\t\tif (typeof elem[1] == 'object') {\n\t\t\t\t\tstring += \" O: <b>\" + elem[1].open + \"</b>\";\n\t\t\t\t\tstring += \" H: <b>\" + elem[1].high + \"</b>\";\n\t\t\t\t\tstring += \" L: <b>\" + elem[1].low + \"</b>\";\n\t\t\t\t\tstring += \" C: <b>\" + elem[1].close + \"</b>\";\n\t\t\t\t\tchange = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n\t\t\t\t\tstring += \" CH: <b>\" + change.toFixed(2) + '%</b>';\n\t\t\t\t} else {\n\t\t\t\t\tstring += \"&nbsp;\" + elem[1].toFixed(2) + \" \";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.time)\n\t\t\t\tstring += \" T: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n\n\n\n\t\t\tconst domElement = document.getElementById('showChartTitle');\n\n\n\t\t\tvar str = \"<span style=color:green>\" + string + \"</span> \";\n\t\t\tif (change < 0)\n\t\t\t\tstr = \"<span style=color:red>\" + string + \"</span> \";\n\n\t\t\tdomElement.innerHTML = str;\n\t\t});\n\n\n\n\n\t\t// var datesForMarkers = [data[data.length - 19], data[data.length - 39]];\n\t\t// var indexOfMinPrice = 0;\n\t\t// for (var i = 1; i < datesForMarkers.length; i++) {\n\t\t// \tif (datesForMarkers[i].high < datesForMarkers[indexOfMinPrice].high) {\n\t\t// \t\tindexOfMinPrice = i;\n\t\t// \t}\n\t\t// }\n\t\t// var markers = [];\n\t\t// for (var i = 0; i < datesForMarkers.length; i++) {\n\t\t// \tif (i !== indexOfMinPrice) {\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'aboveBar', color: '#e91e63', shape: 'arrowDown', text: 'Sell @ ' + Math.floor(datesForMarkers[i].high + 2) });\n\t\t// \t} else {\n\t\t// \t\tmarkers.push({ time: datesForMarkers[i].time, position: 'belowBar', color: '#2196F3', shape: 'arrowUp', text: 'Buy @ ' + Math.floor(datesForMarkers[i].low - 2) });\n\t\t// \t}\n\t\t// }\n\t\t// markers.push({ time: data[data.length - 48].time, position: 'aboveBar', color: '#f68410', shape: 'circle', text: 'D' });\n\t\t// candleSeries.setMarkers(markers);\n\n\n\t\tvar smaData = calculateSMA(data, 20);\n\t\tvar smaLine = chart.addLineSeries({\n\t\t\tcolor: 'rgba(4, 111, 232, 1)',\n\t\t\tlineWidth: 2,\n\t\t});\n\t\tsmaLine.setData(smaData);\n\n\n\t\tfunction calculateSMA(data, count) {\n\t\t\tvar avg = function (data) {\n\t\t\t\tvar sum = 0;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tsum += data[i].close;\n\t\t\t\t}\n\t\t\t\treturn sum / data.length;\n\t\t\t};\n\t\t\tvar result = [];\n\t\t\tfor (var i = count - 1, len = data.length; i < len; i++) {\n\t\t\t\tvar val = avg(data.slice(i - count + 1, i));\n\t\t\t\tresult.push({ time: data[i].time, value: val });\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\n\t\t// var minimumPrice = data[0].value;\n\t\t// var maximumPrice = minimumPrice;\n\t\t// for(var i = 1; i < data.length; i++) {\n\t\t//   var price = data[i].value;\n\t\t//   if (price > maximumPrice) {\n\t\t//     maximumPrice = price;\n\t\t//   }\n\t\t//   if (price < minimumPrice) {\n\t\t//     minimumPrice = price;\n\t\t//   }\n\t\t// }\n\t\t// var avgPrice = (maximumPrice + minimumPrice) / 2;\n\n\t\t// var lineWidth = 2;\n\t\t// var minPriceLine = {\n\t\t//   price: minimumPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'min price',\n\t\t// };\n\t\t// var avgPriceLine = {\n\t\t//   price: avgPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'avg price',\n\t\t// };\n\t\t// var maxPriceLine = {\n\t\t//   price: maximumPrice,\n\t\t//   color: '#be1238',\n\t\t//   lineWidth: lineWidth,\n\t\t//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n\t\t//   axisLabelVisible: true,\n\t\t//   title: 'max price',\n\t\t// }\n\n\t\t//candleSeries.createPriceLine(minPriceLine);\n\t\t//candleSeries.createPriceLine(avgPriceLine);\n\t\t//candleSeries.createPriceLine(maxPriceLine);\n\t\t//chart.timeScale().fitContent();\n\n\n\n\t}, 100);\n\n\n\n\treturn (\n\t\t<>\n\n\t\t\t<Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\t\t\t\t<Grid item xs={12} sm={12} >\n\n\t\t\t\t\n\t\t\t\t <div id=\"showChartTitle\" style={{ fontSize: \"12px\" }}> </div>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} sm={12} >\n\t\t\t\t<div id=\"chart\">\n\n\t\t\t\t</div>\n\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t\n\t\t\n\n\t\t</>\n\n\t);\n}","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n        \n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { resolveResponse } from \"./ResponseHandler\";\nimport AdminService from \"../components/service/AdminService\";\nimport TradeConfig from '../components/MyTrade/TradeConfig';\nimport * as moment from 'moment';\nimport Notify from './Notify';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\n\n\nclass CommonOrderMethod {\n\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n              //  this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n              //  this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n\n    getStockTokenDetails = (SYMBOL) => {\n        // AdminService.autoCompleteSearch(e.target.value).then(searchRes => {   \n        //     let searchResdata =  searchRes.data; \n        //     if(e.target.value){\n        //         var uppercaseName =  e.target.value.toUpperCase() + \"-EQ\"; \n        //         var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.symbol === uppercaseName);      \n        //       //  console.log(\"found\", found[0] && found[0].symbol); \n        //         if(found.length){ \n        //             setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token'] : found[0].token });    \n        //         }\n        //     }\n\n        //  })\n    }\n\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        // if (isAutomatic != \"Automatic\") {\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n        //         return;\n        //     }\n        // }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n           if(quantity > 0 && sectorItem.qtyToTake ) {\n                quantity = sectorItem.qtyToTake;\n           }           \n           console.log(symbol, \"  quantity can be order \", sectorItem, quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                    \n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n\n\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                            histdata.data.forEach((element, index) => {\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                                closeingData.push(element[4]);\n                                highData.push(element[2]);\n                                lowData.push(element[3]);\n                                openData.push(element[3]);\n                                valumeData.push(element[5]);\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            });\n\n                            var inputRSI = { values: closeingData, period: 14 };\n                            var lastRsiValue = RSI.calculate(inputRSI)\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n        \n                            var inputVWAP = {\n                                open: openData,\n                                high: highData,\n                                low: lowData,\n                                close: closeingData,\n                                volume: valumeData\n                            };\n        \n                            var input = {\n                            period : 20, \n                            values : bbdata,\n                            stdDev : 2\n                            }\n        \n                            var bb = BollingerBands.calculate(input); \n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\n\n                            var bbLastValue = bb[bb.length-1]; \n\n                            \n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                \n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                       \n\n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                    \n                            }\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                          \n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                            }\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption, callback);\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        var callData = {\n                            \"transactiontype\": orderType,//BUY OR SELL\n                            \"tradingsymbol\": symbol,\n                            \"symboltoken\": token,\n                            \"status\": false\n                        }\n                        callback(callData);\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n            }\n        }).catch(function (error) {\n\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n    \n\n    placeOptionOrder = (orderOption) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": orderOption.producttype ? orderOption.producttype : \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": orderOption.exchange ? orderOption.exchange : \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n        this.placeOptionSLMOrder(orderOption);\n\n\n        // AdminService.placeOrder(data).then(res => {\n        //     let data = resolveResponse(res);\n        //     //  console.log(data);   \n        //     if (data.status && data.message === 'SUCCESS') {\n        //         if (orderOption.stopLossPrice) {\n        //             setTimeout(() => {\n        //                 this.placeOptionSLMOrder(orderOption);\n        //             }, 1000);\n        //         }\n        //         this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n        //         var callData = {\n        //             \"token\": orderOption.symboltoken,\n        //             \"status\": true\n        //         }\n        //     }\n\n        // })\n    }\n\n    placeOptionSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossTriggerPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": \"SELL\", \n            \"exchange\": slmOption.exchange,\n            \"producttype\": slmOption.producttype, \n            \"duration\": \"DAY\",\n            \"price\": slmOption.stopLossPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n\n    \n\n\n\n    placeOrderMethod = (orderOption, callback) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n                callback(callData);\n                return;  \n            }\n\n        })\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n}\n\nexport default new CommonOrderMethod();\n\n   ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\nimport AdminService from \"./service/AdminService\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CommonOrderMethod from \"../utils/CommonMethods\";\nimport Spinner from \"react-spinner-material\";\nimport Notify from '../utils/Notify';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        buyFlag: true,\n        sellFlag: true,\n        searchSymbol: \"\",\n\n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const autoSearchList = [];\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n\n    function handleInput(e) {\n        setValues({ ...values, ['searchSymbol']: e.target.value });\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n\n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token']: found[0].token });\n                }\n            }\n        })\n    }\n\n    function handleInputQty(e) {\n        setValues({ ...values, ['qtyToTake']: e.target.value });\n    }\n\n    function callbackAfterOrderDone(order) {\n        setValues({ ...values, ['buyFlag']: order.status });\n        setValues({ ...values, ['sellFlag']: order.status });\n        setValues({ ...values, ['searchSymbol']: '' });\n    }\n\n    function handleClick(type) {\n\n        if (values.token && values.searchSymbol) {\n            if (type == 'BUY') {\n                setValues({ ...values, ['buyFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol, \n                    qtyToTake : values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\n            }\n\n            if (type == 'SELL') {\n                setValues({ ...values, ['sellFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol,\n                    qtyToTake : values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\n            }\n        } else {\n            Notify.showError(\"Type Symbol!!!\");\n        }\n    }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            {/* <Button href={\"/mtrade/#/home\"}>\n                                <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n\n                            </Button> */}\n\n                        </Grid>\n\n\n                        <Grid item  >\n\n                            <Grid\n                                justify=\"space-between\"\n                                container\n                                spacing={2}\n                            >\n\n                                <Grid item  >\n                                    <Typography style={{  marginTop: '20px',fontSize:\"12px\" }}  variant=\"h6\" noWrap >\n                                       <span id=\"niftySpid\" onClick={() => props.LoadSymbolDetails(\"NIFTY\")}  > </span>  &nbsp;&nbsp;  <span id=\"bankniftySpid\" onClick={() => props.LoadSymbolDetails(\"BANKNIFTY\")} > </span>  \n                                     </Typography> \n                                    \n                                </Grid>\n\n                                <Grid item>\n                                    <TextField label=\"Type full Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput} />\n                                </Grid>\n                                <Grid item>\n                                    <TextField label=\"Qty\" style={{width:\"50px\"}} type=\"number\" name=\"qtyToTake\" value={values.qtyToTake} onChange={handleInputQty} />\n                                </Grid>\n                                <Grid item>\n                                    {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\n                                </Grid>\n\n                                <Grid item>\n                                    {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                               \n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/order-watchlist\"}>\n                                        Option <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/sector-heat-map2\"}>\n                                        Hit Map <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" target={'_blank'} href={\"/mtrade/#/find-fast-movement\"}>\n                                        Fast Move <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n\n                                {/* <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid> */}\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                               \n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position \n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={false} >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list.length ? data.list.map((row, i)  => (\n                  <>\n                      {row ? <ListItem  button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", background:row.highlisht ? \"#375a00\": \"\"}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol} /> {row.ltp} ({row.nc}%)\n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '10px'}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol +\" \"+row.orderType} /> <span style={{fontSize: '14px'}}>{row.ltp} ({row.nc}%)  <br /> At {row.foundAt} </span> \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  onClick={() => data.LoadSymbolDetails(row.symbol)} button style={{  padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <p style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '16px'}}  > \n                          \n                          {row.symbol} {row.ltp} ({row.nc}%)   <br /> \n                 \n                          Tot Buy Bids: {row.totalBuyQuantity}    <br />\n                          Tol Sell Bids: {row.totalSellQuantity}    <br />\n                          DeliveryToTraded {row.deliveryToTradedQuantity}% \n                          </p>\n                          \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport \"./ViewStyle.css\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs(props) {\n\n  const { cursor, onSelectItem, autoSearchList, LoadSymbolDetails, symbolList, onChange, onChangeWatchlist, search, handleKeyDown, selectedWatchlist, totalWatchlist } = props.data;\n  const [value, setValue] = React.useState(0);\n\n  var [values, setValues] = React.useState({\n    searchedSymbolList: symbolList, \n    // gainerList : localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n    // looserList : localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],    \n  });\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterWatchlistBySearch = (e) => {\n\n    console.log(\"e.target.value\", e.target.value);\n    if (!e.target.value) {\n      setValue({ searchedSymbolList: symbolList });\n    } else {\n\n      // var foundLive = this.state.listofItem.filter(row => row == e.target.value );\n      // this.setState({ [e.target.name]: e.target.value }); \n      // this.setState({searchedList: foundLive})        \n\n      let matchList = [];\n      for (let i = 0; i < symbolList.length; i++) {\n        let stock = symbolList[i];\n        if (stock && stock.name.includes(e.target.value)) {\n          matchList.push(stock);\n        }\n      }\n      setValue({ searchedSymbolList: matchList });\n    }\n  }\n\n\n  var gainerList =  props.data.gainerList ? props.data.gainerList : []; \n  var looserList =  props.data.looserList ? props.data.looserList : []; \n  \n\n  \n  return (\n    <Box sx={{ width: '100%'}}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" style={{overflowY: 'scroll'}}>\n          <Tab label=\"My WL\" {...a11yProps(0)} />\n          <Tab label={gainerList && gainerList.length + \" Gainner\"} {...a11yProps(1)} />\n          <Tab  label={looserList && looserList.length + \" Looser\"} {...a11yProps(2)} />\n          <Tab label=\"Fevrate\" {...a11yProps(3)} />\n          \n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n\n\n        <div style={{ marginLeft: '5px' }}>\n          <FormControl style={{ width: \"100%\" }} >\n            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n            <Select value={selectedWatchlist} name=\"selectedWatchlist\" onChange={onChangeWatchlist}>\n              <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n              {totalWatchlist && totalWatchlist.map(element => (\n                <MenuItem value={element}>{element}</MenuItem>\n              ))\n              }\n\n            </Select>\n          </FormControl>\n\n\n          <TextField\n            style={{ width: \"100%\" }}\n           // onChange={filterWatchlistBySearch}\n            label={\"Filter Symbol\"}\n            margin=\"normal\"\n            variant=\"standard\"\n            name=\"search\"\n            onKeyDown={handleKeyDown}\n            value={search}\n          />\n\n\n        </div>\n\n\n        <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n          {symbolList && symbolList.length ? symbolList.map((row, i) => (\n            <>\n              <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\n\n                style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\n\n\n              </ListItem>\n\n            </>\n          )) : ''}\n        </div>\n\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n        {gainerList && gainerList.length ? gainerList.map((row, i) => (\n          <>\n            <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\n\n              style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n              {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n              <ListItemText title={\"Found At: \" + row.foundAt}  style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.name, i)} primary={row.name} />  {row.ltp} ({row.nc}%) {row.sector.split(' ')[1]}\n\n\n            </ListItem>\n\n          </>\n        )) : ''}\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}> \n        <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n          {looserList && looserList.length ? looserList.map((row, i) => (\n            <>\n              <ListItem onKeyDown={handleKeyDown} button selected={cursor === i ? 'active' : null}\n\n                style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                {cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                <ListItemText title={\"Found At: \" + row.foundAt} style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => LoadSymbolDetails(row.name, i)} primary={row.name} />  {row.ltp} ({row.nc}%) {row.sector.split(' ')[1]}\n\n\n              </ListItem>\n\n            </>\n          )) : ''}\n          </div>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Fevrate list\n      </TabPanel>\n    </Box>\n  );\n}","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n  data.reverse();\n\n  for (let index = data.length - 20; index <  data.length; index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Parser from 'html-react-parser';\n\nimport Chart from \"./Chart\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview: '',\n            curnewdata: '',\n            showOptionUpside: 800,\n            showOptionDownside: 800,\n            timestamp: '',\n            totalCOI: 0,\n            expiry: '',\n            strike: '',\n            FilteredBY: '',\n            AllspTotalOI: [],\n            PEoi: 0,\n            CEoi: 0,\n            waitForChainFlag: true,\n            scrollcount: 0,\n            pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data,\n            optionChainDataBN: JSON.parse(localStorage.getItem('optionChainDataBN')),\n            filtered: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered.data,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'Securities in F&O',\n            selectOptionStock: \"NIFTY\",\n            underlyingValue: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.underlyingValue,\n\n            buyCallLot:1, \n            buyPutLot:1, \n            niftyLogSize : 50, \n            niftybankLogSize : 25, \n            \n\n\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n\n    }\n\n    onChangeSelectSymbol = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.loadPackList();\n        });\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.filterOptionChain(e.target.name, e.target.value);\n        });\n    }\n\n\n   \n\n    filterOptionChain = (name, actualValue) => {\n        //console.log('filtername', name, actualValue); \n        var filereddata = [];\n\n        var alldata = this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.data;\n\n        if (name === 'expiry' && actualValue === 'All') {\n\n            filereddata = alldata;\n        }\n\n        if (name === 'expiry') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.expiryDate === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n        if (name === 'strike') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.strikePrice === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n\n\n        this.setState({ filtered: filereddata, FilteredBY: name + \" \" + actualValue });\n        //  console.log(filereddata); \n    }\n\n    // componentWillUnmount() {\n    //     var tabledata = document.getElementById('tabledata'); \n    //     tabledata.removeEventListener('scroll', this.handleScroll);\n\n    // }\n\n    handleScroll = (data) => {\n\n        var scrollcount = this.state.scrollcount;\n\n        this.setState({ scrollcount: scrollcount += 1 });\n\n    }\n\n    onChangeCallLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculateCallMargin(); \n        });\n    }\n\n    calculateCallMargin =(e)=> {\n        this.state.filtered && this.state.filtered.forEach(element => {\n            if(element.CE && element.CE.lastPrice)  {\n                element.CE.totalMargin = Parser(  this.state.lotSize * this.state.buyCallLot+ \" * \" + element.CE.lastPrice  + \"<br /> <b> \" + (element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.CE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n    \n            }\n         \n        });\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    onChangePutLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculatePutMargin(); \n        });\n    }\n\n    calculatePutMargin =(e)=> {\n\n        this.state.filtered &&  this.state.filtered.forEach(element => {\n            if(element.PE && element.PE.lastPrice)  {\n                element.PE.totalMargin = Parser(  this.state.lotSize * this.state.buyPutLot+ \" * \" + element.PE.lastPrice  + \"<br /> <b> \" + (element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.PE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n\n            }\n        });\n\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    componentDidMount() {\n\n\n       \n\n        this.setState({ SecuritiesInFO: this.state.staticData[this.state.selectedWatchlist] }, function () {\n            // this.state.SecuritiesInFO && this.state.SecuritiesInFO.sort(function (a, b) {\n            //     if(a.name < b.name) { return -1; }\n            //     if(a.name > b.name) { return 1; }\n            //     return 0;\n            // });\n        });\n\n       \n\n\n        // var tabledatachart = document.getElementById('tabledatachart'); \n        // tabledatachart.addEventListener('scroll', this.handleScroll);\n\n        //   this.loadPackList();\n        //   console.log('this.state.optionChainDataBN.records.expiryDates', this.state.optionChainDataBN.records.expiryDates)\n\n\n        if (!JSON.parse(localStorage.getItem('optionDiffdata' + this.state.selectOptionStock)))\n            localStorage.setItem('optionDiffdata'+ this.state.selectOptionStock, JSON.stringify({ data: [] }))\n        else\n            this.setState({ products: JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock)).data })\n        // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n        //  clearInterval(this.state.stopnview)\n\n        if (!JSON.parse(localStorage.getItem('pcrTableBN')))\n            localStorage.setItem('pcrTableBN', JSON.stringify({ data: [] }))\n        else\n            this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n\n\n\n        var todayTime = new Date();\n        if (todayTime.getHours() >= 9 && todayTime.getHours() < 16) {\n            setInterval(() => {\n                this.loadPackList();\n            }, 60000 * 6);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60000 * 6);\n\n        // this.findSupportResistence(this.state.optionChainDataBN ? this.state.optionChainDataBN : \"\");\n\n\n        let lotSize = 25; \n        if(this.state.selectOptionStock == \"NIFTY\")\n         lotSize = 50;\n        if(this.state.selectOptionStock == \"BANKNIFTY\")\n        lotSize = 50;\n\n        this.setState({lotSize :lotSize}, function(){\n            this.calculateCallMargin(); \n            this.calculatePutMargin(); \n        })\n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.data;// this.state.optionChainDataBN && this.state.optionChainDataBN.records.data; \n        var sumOfCEoi = 0, sumOfPEoi = 0;\n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n\n            if (strikePrice === element.strikePrice) {\n\n                if (element.CE && element.CE.openInterest) {\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest;\n                }\n                if (element.PE && element.PE.openInterest) {\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest;\n                }\n\n            }\n        }\n        // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return { strikePrice: strikePrice, sumOfCEoi: sumOfCEoi, sumOfPEoi: sumOfPEoi };\n\n        //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n        // console.log(optiondata);\n        var alldata = optiondata && optiondata.records && optiondata.records.data;\n        // var underlyingValue = optiondata.records && optiondata.records.underlyingValue; \n        var PEoi = 0, CEoi = 0, PEoiChange = 0, CEoiChange = 0;\n        if (alldata) {\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element && element.PE) {\n                    PEoi = PEoi + element.PE.openInterest;\n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest;\n                }\n                if (element && element.CE) {\n                    CEoi = CEoi + element.CE.openInterest;\n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest;\n\n                }\n            }\n        }\n\n\n        //   var allexpiryDates =   optiondata.records.expiryDates; \n        //   var strikePrices =  optiondata.records.strikePrices; \n        //   var fliterExData = [];  \n\n        // for (let index = 0; index < allexpiryDates.length; index++) {\n        //     const element = allexpiryDates[index];\n        //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n        //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n        //             fliterExData.push(alldata[indexJ]); \n        //         } \n        //     }                  \n        // }   \n\n        var myStrike = [];\n\n        let startDiff = this.state.underlyingValue - this.state.showOptionDownside\n        let rem = Math.round(startDiff) % 100;\n        let startFrom = Math.round(startDiff) + 100 - rem;\n\n        let endDiff = this.state.underlyingValue + this.state.showOptionUpside;\n        let rem2 = Math.round(endDiff) % 100;\n        let endTo = Math.round(endDiff) + 100 - rem2;\n\n\n        console.log(this.state.underlyingValue, 'start from', startFrom, 'endto', endTo);\n\n\n        for (let index = startFrom; index <= endTo; index += 100) {\n            myStrike.push(index)\n        }\n\n        myStrike = myStrike.sort(function (a, b) { return b - a });\n\n\n\n        var data = [], totalspeoi = 0, totalsceoi = 0;\n        myStrike.forEach(element => {\n            var resdata = this.getDataforStrike(element);\n            totalspeoi = totalspeoi + resdata.sumOfPEoi;\n            totalsceoi = totalsceoi + resdata.sumOfCEoi;\n\n            data.push(resdata);\n\n            console.log(element, resdata);\n\n\n        });\n        this.setState({ AllspTotalOI: data, selectedSPpcr: (totalspeoi / totalsceoi).toFixed(3), totalspeoi: totalspeoi, totalsceoi: totalsceoi });\n\n        // for (let index = 0; index < alldata.length; index++) {\n        //     const element = alldata[index];\n\n        //     // if(alldata[index].strikePrice ==  14800){\n        //     //     fliterExData.push(element); \n        //     // } \n        //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n        //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n        //             fliterExData.push(element); \n        //         }   \n        //     }\n\n        // }   \n\n        //            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({ CEoi: CEoi, PEoi: PEoi, allStrikediff: PEoi - CEoi, CEoiChange: CEoiChange, PEoiChange: PEoiChange, allStrikeChngeDiff: PEoiChange - CEoiChange });\n    }\n\n\n\n\n\n    loadPackList() {\n\n\n        this.setState({ waitForChainFlag: false });\n\n        AdminService.getBNcpdata(this.state.selectOptionStock)\n            .then((res) => {\n                //     let data = resolveResponse(res);\n\n                var data = res.data && res.data;\n\n\n                localStorage.setItem(\"optionChainDataBN\", JSON.stringify(data));\n\n                // this.findSupportResistence(data);\n\n                // console.log(\"livedata\", data.filtered);\n\n                this.setState({ filtered: data.filtered && data.filtered.data, optionChainDataBN: data });\n\n                if (data.filtered) {\n\n                    var diff = data.filtered.PE.totOI - data.filtered.CE.totOI;\n\n                    var newdata = {\n                        dateTime: this.dateFormat(new Date()),\n                        totCEOI: data.filtered.CE.totOI,\n                        totCEVol: data.filtered.CE.totVol,\n                        totPEOI: data.filtered.PE.totOI,\n                        totPEVol: data.filtered.PE.totVol,\n                        diff: diff,\n                        totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')),\n                        totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')),\n                        totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange'))\n\n                    }\n                    this.setState({ curnewdata: newdata });\n\n\n                    document.getElementById('title').innerHTML = (diff / 100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange')) / 100000).toFixed(2) + \"L \" + this.state.selectOptionStock;\n                    // createData.push(newdata); \n                    if (JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock))) {\n                        var oldproducts = JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock));\n                        // console.log(\"oldproductsindex0\", ); \n                        var lastrow = oldproducts && oldproducts.data[0];\n\n\n                        // oldproducts.data.forEach((data) => {\n                        //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                        //         newdata.isDuplicate = true; \n                        //     }else{\n                        //         newdata.isDuplicate = false;\n                        //     }\n                        // });\n                        if (lastrow) {\n                            newdata.isDuplicate = newdata.diff === lastrow.diff ? true : false\n                            newdata.totCEOIChange = (((newdata.totCEOI - lastrow.totCEOI) * 100) / lastrow.totCEOI).toFixed(3);;\n                            newdata.totPEOIChange = (((newdata.totPEOI - lastrow.totPEOI) * 100) / lastrow.totPEOI).toFixed(3);;\n                            newdata.totDiffChange = (((newdata.diff - lastrow.diff) * 100) / lastrow.diff).toFixed(3);\n                        } else {\n                            newdata.isDuplicate = false\n                            newdata.totCEOIChange = 0;\n                            newdata.totPEOIChange = 0;\n                            newdata.totDiffChange = 0;\n                        }\n\n\n                        oldproducts.data.unshift(newdata);\n\n                        if (data.records) {\n                            oldproducts.timestamp = data.records.timestamp;\n                            oldproducts.underlyingValue = data.records.underlyingValue;\n                        }\n\n                        oldproducts.data.reverse();\n\n                        localStorage.setItem(\"optionDiffdata\" + this.state.selectOptionStock, JSON.stringify(oldproducts));\n\n\n\n                        this.setState({ products: oldproducts.data, underlyingValue: data.records.underlyingValue, timestamp: data.records.timestamp })\n                        this.setState({ waitForChainFlag: true });\n\n                    }\n\n                    //  console.log(\"dddd\", this.state.curnewdata); \n\n\n                }\n\n\n                this.updatepcr()\n                this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n            });\n\n    }\n\n\n    updatepcr() {\n\n\n        var pcrdata = {\n            allPCR: (this.state.PEoi / this.state.CEoi).toFixed(3),\n            expiryPCR: localStorage.getItem('thisWeekPCR'),\n            selectedSPpcr: this.state.selectedSPpcr,\n        }\n\n        if (JSON.parse(localStorage.getItem('pcrTableBN'))) {\n            var pcrTableBN = JSON.parse(localStorage.getItem('pcrTableBN'));\n            pcrTableBN.data.unshift(pcrdata);\n            localStorage.setItem(\"pcrTableBN\", JSON.stringify(pcrTableBN));\n        }\n\n        console.log(pcrdata);\n        this.setState({ pcrTableBN: pcrTableBN })\n    }\n\n\n\n\n    dateFormat(date) {\n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n\n\n\n    render() {\n\n        var totCEOI = 0, totCEVol = 0, totCEOIChange = 0, totCEBUY = 0, totCESell = 0;\n        var totPEOI = 0, totPEVol = 0, totPEOIChange = 0, totPEBUY = 0, totPESell = 0;\n\n        return (\n            <React.Fragment >\n\n                {/* <PostLoginNavBar /> */}\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"selectOptionStock\">Select Symbol</InputLabel>\n                            <Select\n                                id=\"selectOptionStock\"\n                                name=\"selectOptionStock\"\n                                value={this.state.selectOptionStock}\n                                onChange={this.onChangeSelectSymbol}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'NIFTY'} value={'NIFTY'} > {'NIFTY'}</MenuItem>\n                                <MenuItem key={'BANKNIFTY'} value={'BANKNIFTY'} > {'BANKNIFTY'}</MenuItem>\n\n                                {this.state.SecuritiesInFO && this.state.SecuritiesInFO.length ? this.state.SecuritiesInFO.map((row, index) => (\n                                    <MenuItem key={row.name} value={row.name} >\n                                        {row.name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                                id=\"expiry\"\n                                name=\"expiry\"\n                                value={this.state.expiry}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.expiryDates ? this.state.optionChainDataBN.records.expiryDates.map((name, index) => (\n                                    <MenuItem key={name + 'key' + index} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                            <Select\n                                labelId=\"strike\"\n                                id=\"strike\"\n                                max-height={'100%'}\n                                name=\"strike\"\n                                value={this.state.strike}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.strikePrices ? this.state.optionChainDataBN.records.strikePrices.map(name => (\n                                    <MenuItem key={name} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                        {this.state.waitForChainFlag ? <Button variant=\"contained\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button> : <Spinner />}\n                    </Grid>\n\n                    <Grid item xs={6} sm={4}>\n\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            {this.state.selectOptionStock} {this.state.underlyingValue} {this.state.timestamp}\n                            {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                        </Typography>\n                    </Grid>\n\n\n                </Grid>\n\n\n                <Grid item xs={12} sm={12}>\n                    <Paper style={{ padding: \"10px\", overflow: \"auto\" }}>\n\n                        <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={3} sm={3} >\n                                <span> <b>Total </b></span>\n                                <span> PE OI: <b> {(this.state.PEoi / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoi / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikediff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>}\n                                </span>\n                            </Grid>\n\n                            <Grid item xs={3} sm={5} >\n                                <span> <b>Total Chng </b></span>\n                                <span> PE OI: <b>{(this.state.PEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikeChngeDiff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}> {((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>}\n                                </span>\n\n\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>ALL PCR: <b>{(this.state.PEoi / this.state.CEoi).toFixed(3)} </b></span>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>Expire Week PCR: <b>{localStorage.getItem('thisWeekPCR')} </b></span>\n\n                            </Grid>\n\n\n\n                            {/* <Grid item xs={2} sm={2} >\n                            <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                                <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n                            </Typography> \n                        </Grid> */}\n\n\n\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={0} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid id=\"tabledatachart\" item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" size=\"small\">\n                            <TableHead key={2222} variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\"><b>Time</b></TableCell>\n                                    <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                                    <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Call OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody hover style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n\n\n                                {this.state.products ? this.state.products.map(row => (\n                                    <TableRow key={row.dateTime} style={{ background: row.isDuplicate ? \"lightgray\" : \"\" }}>\n                                        <TableCell align=\"center\">{row.dateTime.substring(19, 11)}</TableCell>\n                                        <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color: 'green' }} >BUY</Typography> : <Typography variant=\"body2\" style={{ color: 'red' }} >SELL</Typography>}</TableCell>\n                                        <TableCell align=\"center\">{row.diff} ({(row.diff / 100000).toFixed(2)}L)({row.totDiffChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totDiffChange}%</span> : row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totDiffChange}%</span>}) </TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff / 100000).toFixed(2)}L)</TableCell>\n\n                                        <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totPEOIChange}%</span> : row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totPEOIChange}%</span>})</TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                        <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totCEOIChange}%</span> : row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totCEOIChange}%</span>})</TableCell>\n\n                                        <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                        {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n                    <Grid item xs={4} sm={4} style={{ padding: \"2px\", overflow: \"auto\", height: \"300px\" }}>\n\n                        <Chart diffData={{ data: this.state.products, scrollcount: this.state.scrollcount }} />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead style={{}} variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi / 100000).toFixed(3)}L</b></TableCell>\n                                    <TableCell align=\"center\"><b>Strike Price<br />{this.state.totalspeoi - this.state.totalsceoi}({((this.state.totalspeoi - this.state.totalsceoi) / 100000).toFixed(3)}L) </b> </TableCell>\n                                    <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi / 100000).toFixed(3)}L</b></TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                                {this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                                    <TableRow hover key={row.dateTime} >\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfCEoi} ({(row.sumOfCEoi / 100000).toFixed(2)}L)</TableCell>\n                                        <TableCell align=\"center\">{row.strikePrice}</TableCell>\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfPEoi} ({(row.sumOfPEoi / 100000).toFixed(2)}L)</TableCell>\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\">ALL Pcr</TableCell>\n                                    <TableCell align=\"center\">Expiry Pcr </TableCell>\n                                    <TableCell align=\"center\">Selected Pcr</TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{ whiteSpace: \"nowrap\" }}>\n\n                                {this.state.pcrTableBN && this.state.pcrTableBN.length > 0 && this.state.pcrTableBN ? this.state.pcrTableBN.map(row => (\n                                    <TableRow hover key={row.expiryPCR} >\n                                        <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                        <TableCell align=\"center\">{row.expiryPCR}</TableCell>\n                                        <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                                    </TableRow>\n                                )) : ''}\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={12} style={{ padding: \"2px\", overflow: \"auto\", height: \"900px\" }}>\n\n                        <Table stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n\n                                <TableRow variant=\"head\"  >\n\n                                    <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                                </TableRow>\n                                <TableRow variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n                                    {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n\n\n                                    <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI') / 100000).toFixed(3)}L) </b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                                    {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> STRIKE PRICE</span> </TableCell>\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> Expiry</span> </TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                                    <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n\n\n\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI') / 100000).toFixed(3)}L)</b></TableCell>\n\n\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n\n                                {this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                                    <TableRow hover key={index} style={{ background: opdata.isDuplicate ? \"lightgray\" : \"\" }}>\n\n                                        {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                        {opdata && opdata.CE && opdata.PE && (opdata.strikePrice >= opdata.CE.underlyingValue - this.state.showOptionUpside && opdata.strikePrice <= opdata.CE.underlyingValue + this.state.showOptionDownside) ? <>\n\n                                            <TableCell {...totCEOI = totCEOI + opdata.CE.openInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.CE.change / (opdata.strikePrice - opdata.CE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n\n\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span> : opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>}) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                            \n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyCallLot} onChange={this.onChangeCallLot} name=\"buyCallLot\"  />\n                                             </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.totalMargin} </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.maxLoss} </TableCell>\n\n                                            \n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"CE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyCallLot)}> Call Buy </Button> </TableCell>\n\n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} align=\"center\"><span> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{ borderRight: 'dashed', whiteSpace: \"nowrap\" }} align=\"center\" ><span style={{ paddingLeft: '5px', paddingRight: '5px' }}> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"PE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyPutLot)}>Put Buy </Button> </TableCell>\n                                            <TableCell align=\"center\"> {opdata.PE.maxLoss} </TableCell>\n\n                                            <TableCell align=\"center\"> {opdata.PE.totalMargin} </TableCell>\n\n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyPutLot} onChange={this.onChangePutLot} name=\"buyPutLot\"  />\n                                             </TableCell>\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span> : opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.PE.change / (opdata.strikePrice - opdata.PE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                        </> : \"\"\n                                        }\n\n\n                                    </TableRow>\n\n                                )) : <Spinner />}\n\n\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOI', totCEOI)}><b>{totCEOI}<br />({(totCEOI / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange', totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEVol', totCEVol)}><b>{totCEVol}<br />({(totCEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell colSpan={3} align=\"center\"></TableCell>\n                                    {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                    <TableCell {...localStorage.setItem('thisWeekPCR', (totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                    <TableCell colSpan={5} align=\"center\"></TableCell>\n\n\n                                    {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                    {/* <TableCell colSpan={3} align=\"center\"></TableCell> */}\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEVol', totPEVol)}><b>{totPEVol}<br />({(totPEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange', totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOI', totPEOI)}><b>{totPEOI}<br />({(totPEOI / 100000).toFixed(3)}L)</b> </TableCell>\n\n                                </TableRow>\n\n\n                            </TableBody>\n\n\n                        </Table>\n                    </Grid>\n\n                </Grid>\n\n\n\n\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle: {\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nimport SymbolOptions from './BankNiftyView'\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList: [], \n            lastTradedData : {}\n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngList : [...this.state.orderPenidngList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n        var isDeleted = false, delitem =''; \n       var orderPenidngList =  localStorage.getItem('orderPenidngList') && JSON.parse( localStorage.getItem('orderPenidngList')); \n       for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n           const element = orderPenidngList[index];\n           if(row.token == element.token){\n            var delitem = orderPenidngList.splice(index, 1); \n            localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList)); \n            this.setState({orderPenidngList : orderPenidngList}); \n            break; \n           }\n       }\n\n       if(delitem[0].token == row.token){\n        return true;\n       }else {\n        return false;\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n       console.log(\"call back called\");\n     // this.deleteInOrderPenidngList(row); \n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n            const element = this.state.orderPenidngList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList)); \n                    this.setState({orderPenidngList : this.state.orderPenidngList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 2000; \n            if(this.state.orderPenidngList.length > 10){\n                intervaltime = this.state.orderPenidngList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n\n\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n    buyOption =(optiontype ,symbol, strikePrice, expiryDate, noOfLot)=>{\n      console.log(optiontype ,symbol, strikePrice, expiryDate); \n      let exp = expiryDate.toUpperCase().split('-'); \n       exp = exp[0]+exp[1]+exp[2]%1000; \n\n      let optionName = symbol + exp + strikePrice + optiontype; \n      console.log(optionName); \n\n      AdminService.autoCompleteSearch(optionName).then(res => {\n        let data = res.data; \n        let optionData = data && data[0]; \n        console.log(\"optionData\", optionData);\n\n\n        if(optionData && optionData.symbol && optionData.symbol ==  optionName){\n            var  ltpparam = { \"exchange\":optionData.exch_seg, \"tradingsymbol\": optionData.symbol , \"symboltoken\": optionData.token}; \n\n            AdminService.getLTP(ltpparam).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if(LtpData && LtpData.ltp) {\n                    \n                    console.log(\"option ltp\", LtpData);\n\n                   let quantity = optionData.lotsize * noOfLot;   \n\n    \n                   let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * 10/100); \n                   perStopTrigerLoss =  CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss); \n\n                   let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1/100); \n\n                   stopLossPrice =  CommonOrderMethod.getMinPriceAllowTick(stopLossPrice); \n\n    \n                    let element = {\n                        tradingsymbol : optionData.symbol, \n                        symboltoken : optionData.token, \n                        transactiontype: \"BUY\", \n                        ordertype: \"LIMIT\", \n                        buyPrice : LtpData.ltp,  \n                        producttype : \"CARRYFORWARD\", \n                        exchange : optionData.exch_seg,\n                        stopLossTriggerPrice: perStopTrigerLoss,\n                        stopLossPrice: stopLossPrice,\n                        quantity : quantity\n                    }        \n                    console.log( \"option buy element\", element);\n                   CommonOrderMethod.placeOptionOrder(element);\n                }\n            })\n        }else{\n            Notify.showError(optionName + \" not found\");\n        }\n\n\n       \n\n\n\n       \n\n        //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n    //    this.setState({ autoSearchList: data });\n\n    \n      \n    })\n\n\n\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar/> : \"\"}\n\n             <Paper style={{ overflow: \"auto\", padding: '5px',  background:\"#f500570a\"}} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Orders Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length}) \n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                        </Typography> \n\n\n                    </Grid>\n\n                   \n\n                    <Grid item >\n\n                        <Grid container spacing={2}>\n                        <Grid item >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        \n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"500px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                    </Grid>\n\n                            \n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n                <br />\n\n                <Paper style={{ overflow: \"auto\", padding: '5px'}} > \n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                          Option Chain (Equity Derivatives)\n                        </Typography> \n\n\n                    </Grid>\n\n\n                        <SymbolOptions buyOption={this.buyOption} />\n                </Paper>\n\n               \n\n\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { createChart } from 'lightweight-charts';\n\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport SimpleExpansionPanel from \"./SimpleExpansionPanel\";\nimport SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\nimport LiveBidsExpantion from \"./LiveBidsExpantion\";\nimport WatchListTab from \"./WatchListTab\"; \nimport OrderWatchlist from './OrderWatchlist';\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"\",  //NR4ForNextDay  NR4_SameDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            backTestResultDateRange: [],\n            searchFailed: 0,\n            openEqualHighList: [],\n            openEqualLowList: [],\n            chartStaticData: [],\n            volumeCrossedList: [],\n            slowMotionStockList: [],\n            volumeBreakoutlast5CandleList: [], \n            oneHourBullBearCheckList: [],\n            timeFrame: \"FIFTEEN_MINUTE\",\n            cursor: '',\n            advanceShareCount: 0,\n            declineShareCount: 0,\n            UnchangeShareCount: 0,\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList :  [], //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n            gainerList : localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n            looserList : localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],    \n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n          //  console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n        //    console.log(\"time\", this.state.timeFrame);\n            if (this.state.tradingsymbol) {\n                this.showStaticChart(this.state.symboltoken);\n            }\n        });\n    }\n\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value == 'NR4_Daywide_daterage') {\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\n\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n            //    this.updateSocketWatch();\n          //  this.checkOpenEqualToLow();\n            this.setState({ cursor: '' });\n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n                //      this.updateSocketWatch();\n             //  this.checkOpenEqualToLow();\n                this.setState({ cursor: '' });\n            });\n        }\n    }\n    checkOpenEqualToLow = async () => {\n\n        this.setState({\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: []\n        });\n\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n\n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\": element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if (LtpData) {\n\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    LtpData.nc = change;\n                    LtpData.symbol = element.symbol; \n                    \n                    this.state.symbolList[index].ltp = LtpData.ltp;\n                    this.state.symbolList[index].nc =change; \n\n                    if (LtpData && LtpData.open == LtpData.low) {\n                        console.log(\"o=l\", LtpData);\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\n                        if(!isfound.length)\n                        this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\n                    }\n\n                    if (LtpData && LtpData.open == LtpData.high) {\n                        console.log(\"o=h\", LtpData);\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\n                        if(!isfound.length)\n                        this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\n\n                    }\n\n                    if (LtpData.perChange > 0)\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\n                    else if (LtpData.perChange < 0)\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\n                    else\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\n\n\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\n\n                 //   this.dailyBasisInfoCheck(element.token, element);\n\n                   // this.checkSlowMotionStock(element.token, element);\n\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n\n\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n\n\n    makeConnection = (wsClint) => {\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        wsClint.send(firstTime_req);\n        this.updateSocketWatch(wsClint);\n    }\n\n    updateSocketWatch = (wsClint) => {\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n    updateSocketDetails = (wsClint) => {\n        wsClint.onopen = (res) => {\n            this.makeConnection(wsClint);\n            this.updateSocketWatch(wsClint);\n        }\n\n        wsClint.onmessage = (message) => {\n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData = JSON.parse(data);\n            var symbolListArray = this.state.symbolList;\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                var foundLive = liveData.filter(row => row.tk == element.token);\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                    symbolListArray[index].ltp = foundLive[0].ltp;\n                    symbolListArray[index].nc = foundLive[0].nc;\n                    //  console.log(\"ws onmessage: \", foundLive);\n\n                }\n            });\n            symbolListArray && symbolListArray.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n            this.setState({ symbolList: symbolListArray });\n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e);\n        }\n\n        setInterval(() => {\n            //  this.makeConnection();\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n            // console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n        }, 59000);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Home\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 900, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\n\n        //this.checkOpenEqualToLow();\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            // const wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n            // this.updateSocketDetails(wsClint);\n            setInterval(() => {\n                if (this.state.tradingsymbol) {\n                    this.getLTP();\n                    //this.showStaticChart(this.state.symboltoken);\n                }\n                var fastMovementList  = localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')); \n                fastMovementList && fastMovementList.length && fastMovementList.reverse(); \n                this.setState({fastMovementList :fastMovementList })\n            }, 1000);\n           \n            setInterval(() => {\n                this.checkSlowMotionCheckLive(); \n             }, 5*75000);\n\n           \n             setInterval(() => {\n                this.searchValumeBreakoutStock(); \n            }, 15*75000);\n          \n\n             var tostartInteral =   setInterval(() => {\n                var time = new Date();\n                console.log(\"setinterval \", new Date().toLocaleString()); \n                if(time.getMinutes() % 60 === 0){\n                    setTimeout(() => {\n                        this.oneHourBullBearCheck(); \n                    }, 90000);\n                    setInterval(() => {\n                        this.oneHourBullBearCheck(); \n                     }, 60000 * 60 + 70000 );  \n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n            \n        }   \n        \n        \n        setInterval(() => {\n\n            \n            this.setState({gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) })\n            this.setState({looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) })\n\n\n        }, 1000);\n        \n        this.oneHourBullBearCheck(); \n\n       // this.checkLiveBids();\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment = startdate;\n            const endMoment = enddate;\n\n\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if (this.state.stopScaningFlag) {\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n\n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(0, 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var foundStock = {\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                symbol: element.symbol,\n                                token: element.token,\n                                pattenName: \"NR4\",\n                                SellAt: sellenty,\n                                high: firstCandle[2],\n                                low: firstCandle[3],\n                                BuyAt: buyentry,\n                                candleChartData: candleChartData,\n                                close: firstCandle[4]\n                            }\n\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    }\n\n\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (candle5min[2] < buyHighest) {\n                    buyHighest = candle5min[3];\n                }\n\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[3] < buyentry) {\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange);\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if (!buyEntryFlag && perChange >= 1) {\n\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2]);\n\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            }\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\n\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (buyHighest < histdataInside[index][2]) {\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[2] > buyentry) {\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n\n\n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if (!buyEntryFlag) {\n\n                    if (firstTimeTrail && perChange >= 0.7) {\n                        trailCount += 1;\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\n                        longTradeFound.sellEntyPrice = minPrice;\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\n                        firstTimeTrail = false;\n                    } else {\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\n\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\n\n                        if (perchngfromTriggerPrice > 0.7) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\n\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\n                            break;\n                        }\n\n                    }\n\n\n\n\n\n\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\n                        break;\n                    }\n\n                }\n\n\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            } //candle loop end\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": element.token,\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                            }\n\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\n                                histdataInside = histdataInside && histdataInside.data;\n\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n\n                            }).catch(error => {\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\n                            });\n\n\n\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[2] > buyentry) {\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                            //     sumPercentage += perChng;\n\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[2],\n                            //         stopLoss: firstCandle[3],\n                            //         buyExitPrice: buyentry,\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\n                            //         candleChartData : candleChartData,\n                            //     }\n                            //     if (Math.floor(10000 / firstCandle[2])){ \n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n                            // }\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[3] < sellenty) {\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                            //     sumPercentage += perChng;\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: sellenty,\n                            //         stopLoss: firstCandle[2],\n                            //         buyExitPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[3],\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\n                            //         candleChartData : candleChartData\n                            //     }\n                            //     if(Math.floor(10000 / firstCandle[3])){\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n\n\n                            // }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            var currentDate = date.format('DD-MM-YYYY');\n\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\n\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                sumPercentage += perChng;\n\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[2],\n                                    stopLoss: firstCandle[3],\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[2])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n\n                                }\n\n                            }\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                sumPercentage += perChng;\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: sellenty,\n                                    stopLoss: firstCandle[2],\n                                    buyExitPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[3],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[3])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\n\n                                }\n\n\n                            }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    }\n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\n        var longCandles = [], shortCandles = [];\n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata);\n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                longCandles.push(longData);\n\n                                totalLongs += 1;\n                                totalLongPer += perChng;\n                                totalLongHighPer += perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                shortCandles.push(shortData);\n\n                                totalShort += 1;\n                                totalShortPer += perChng;\n                                totalShortLowPer += perChngOnLow;\n\n                            }\n\n\n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs: totalLongs,\n                    totalShort: totalShort,\n                    totalLongPer: totalLongPer.toFixed(2),\n                    totalShortPer: totalShortPer.toFixed(2),\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\n                }\n                if (foundStock)\n                    foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles;\n                foundStock.shortCandles = shortCandles;\n\n\n                console.log(\"foundStock\", foundStock);\n                if (Math.floor(10000 / firstCandle[4])) {\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n\n\n\n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n\n                    if (transactiontype == \"BUY\") {\n                        this.placeSLMOrder(\"SELL\");\n                    }\n\n                    if (transactiontype == \"SELL\") {\n                        this.placeSLMOrder(\"BUY\");\n                    }\n\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name, i) => {\n\n        console.log(\"name\", name);\n        var token = '';\n\n         var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n\n        for (let index = 0; index < watchList.length; index++) {\n\n            if (watchList[index].symbol === name || watchList[index].name === name) {\n               \n                token = watchList[index].token;\n\n                console.log(\"name % token\", name,token );\n                this.setState({ tradingsymbol: name, symboltoken:watchList[index].token },function(){\n                    this.setState({ cursor: i }, function () {\n                        this.getLTP();\n                        this.showStaticChart(token);\n                    });\n                });\n                break;\n            }else{\n               // Notify.showError(name + \" not found!\");\n                console.log(name + \" not found!\");\n            }\n        }\n\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        \n\n        switch (timeFrame) {\n            // case 'ONE_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"10:05:00\")\n            //         return \"19:00:00\";\n            //     else\n            //         return \"01:00:00\";\n            //     break;\n            // case 'FIVE_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"11:00:00\")\n            //         return \"23:00:00\";\n            //     else\n            //         return \"03:00:00\";\n            //     break;\n            // case 'TEN_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"12:35:00\")\n            //         return \"24:21:00\";\n            //     else\n            //         return \"07:00:00\";\n            //     break;\n            // case 'FIFTEEN_MINUTE':\n            //     if (new Date().toLocaleTimeString() < \"14:15:00\")\n            //         return \"28:01:00\";\n            //     else\n            //         return \"10:01:00\";\n            //     break;\n            // case 'THIRTY_MINUTE':\n            //     return \"100:01:00\";\n            //     break;\n            // case 'ONE_HOUR':\n            //     return \"200:01:00\";\n            //     break;\n            // case 'ONE_DAY':\n            //     return \"1000:01:00\";\n            //     break;\n            // default:\n            //     break;\n\n            case 'ONE_MINUTE':\n            return \"720:00:00\";\n            break;\n            case 'FIVE_MINUTE':\n                    return \"1000:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                    return \"1000:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"1000:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"1000:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    calculateSMA = (data, count) => {\n\n      //  console.log(\"smarowdata\", data, count);\n\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n\n    //   calculateBBValue = (data, type ) => {\n\n    //     console.log(\"smarowdata\", data , count); \n\n    //     var result = [];\n    //     for (var i=count - 1, len=data.length; i < len; i++){\n    //       var val = avg(data.slice(i - count + 1, i));\n    //       result.push({ time: data[i].time, value: val});\n    //     }\n    //     return result;\n    //   }\n\n\n\n    showStaticChart = (token) => {\n\n        this.setState({ chartStaticData: '' }, function () {\n            console.log('reset done', token);\n        });\n\n       \n\n\n        console.log(\"time in function \", this.state.timeFrame);\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        // var time = moment.duration(\"10:50:00\");\n        // var startDate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n\n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n\n                    this.state.smaLineSeries.setData(smaData);\n\n\n                    this.state.chart.subscribeCrosshairMove((param) => {\n\n                        var getit = param.seriesPrices[Symbol.iterator]();\n\n                        var string = \"\";\n                        var change = \"\";\n\n                        for (var elem of getit) {\n\n                            if (typeof elem[1] == 'object') {\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n                            } else {\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\n                            }\n                        }\n\n                        if (param.time)\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n                        else\n                            string += \" <b>Time: </b>\";\n\n\n                        const domElement = document.getElementById('showChartTitle');\n\n\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\n                        if (change < 0)\n                            str = \"<span style=color:red>\" + string + \"</span> \";\n\n                        domElement.innerHTML = str;\n                    });\n\n                    if(this.state.InstrumentLTP){\n                        this.dailyBasisInfoCheck(token);\n                    }\n                });\n\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                        totalSum += per;\n\n                    });\n\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\n\n                   \n                }\n            }\n        })\n\n\n    }\n\n    checkSlowMotionStock = (token, stock) => {\n    \n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n                var bigCandleCount = 0; \n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    \n                    if(element){\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol,  per , element[0]);\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol,  per , element[0]);\n\n                        }\n                    }\n                }\n                console.log(\"Totalcount\", stock.symbol,  bigCandleCount);\n                if(bigCandleCount <= 15){\n\n                    stock.bigCandleCount = bigCandleCount; \n                    \n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function(){\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList)); \n                    }); \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async() => {\n    \n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n                    var closeingDatadaily = [], valumeSum = 0;\n    \n                    var bigCandleCount = 0, bullishCount = 0; \n    \n                    for (let index = candleDatad.length-3; index < candleDatad.length; index++) {\n                        const element = candleDatad[index];\n                        \n                        if(element){\n    \n                            var per = (element[4] - element[1]) * 100 / element[1];\n                            if (per >= 0.7) {\n                                bigCandleCount += 1;\n                            } \n                            if (per >= 0) {\n                                bullishCount += 1;\n                            }\n    \n                        }\n                    }\n                    if(bigCandleCount >= 1){\n                        row.highlisht =  true; \n                        window.document.title = \"SM: \" + row.symbol; \n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\n                    }\n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n    checkLiveBids = async() => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n          \n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n                \n                console.log(\"bid\",resd.data.data ); \n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if(resd.data && resd.data.data.length){\n\n                    let bidlivedata = resd.data.data[0]; \n                    let biddata = {\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                        symbol : bidlivedata.symbol, \n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity, \n                        nc : bidlivedata.pChange, \n                        ltp : bidlivedata.lastPrice, \n                    }\n    \n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function(){\n\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList)); \n                    });\n    \n        \n                }\n                \n            });\n            await new Promise(r => setTimeout(r, 100));  \n        }\n   \n    }\n\n\n    oneHourBullBearCheck = async() => {\n    \n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"02:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'ONE_HOUR',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n    \n                    let lastCandle = candleDatad[candleDatad.length-1];\n\n                    \n                    if((lastCandle[1] == lastCandle[3]) && (lastCandle[2] == lastCandle[4])){\n                        window.document.title = \"Hourly Buy: \" + row.symbol;\n                        console.log(row.name, \"Hourly Buy\",  candleDatad[candleDatad.length-1]); \n                        row.orderType =  \" Hourly Buy\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Bullish \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n                    if((lastCandle[1] == lastCandle[2]) && (lastCandle[3] == lastCandle[4])){\n                        window.document.title = \"Hourly Sell: \" + row.symbol;\n                        console.log(row.name, \"Hourly Sell\",  candleDatad[candleDatad.length-1]); \n                        row.orderType =  \" Hourly Sell\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Sell \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n               \n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n\n    searchValumeBreakoutStock = async() => {\n    \n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"60:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIFTEEN_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n    \n                    var  volumeSum = 0, findmaxVol = candleDatad[0][5]; \n                    let currentCandleVol =  candleDatad[candleDatad.length-1][5]; \n                    let firstCandleCloseingPrice = candleDatad[0][4], priceGoingHighCount=0;  \n                    let firstCandleCloseingPriceDownSide = candleDatad[0][4], priceGoingLowCount=0;  \n\n                    for (let index = candleDatad.length-6; index < candleDatad.length-1; index++) {\n                        const element = candleDatad[index];\n                        if(element){\n                            volumeSum += element[5];  \n                            //  console.log(row.symbol, ' last candle index ',index,   element[0] );\n                              if(findmaxVol < element[5]){\n                                  findmaxVol = element[5]; \n                              }\n      \n                              if(firstCandleCloseingPrice < element[4]){\n                                 console.log(row.symbol, firstCandleCloseingPrice , 'upside last candle index ',index,   element[4] );\n                                  firstCandleCloseingPrice = element[4]; \n                                  priceGoingHighCount += 1; \n                              }\n      \n                              if(element[4] < firstCandleCloseingPriceDownSide){\n                                  console.log(row.symbol, firstCandleCloseingPrice , ' downside last candle index ',index,   element[4] );\n                                  firstCandleCloseingPriceDownSide = element[4]; \n                                  priceGoingLowCount += 1; \n                               }\n                        }\n                       \n\n                    }\n                    let avgVol = volumeSum/5;\n\n                    if(currentCandleVol/findmaxVol > 1.75 && priceGoingHighCount >= 4){\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType =  \" Vol \" + (currentCandleVol/findmaxVol).toFixed(2) + \" Time & price incresing\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" time of average \", avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0],  findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" Time and price incresing\");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    if(currentCandleVol/findmaxVol > 1.75 && priceGoingLowCount >= 4){\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType =  \" Vol \" + (currentCandleVol/findmaxVol).toFixed(2) + \" Time & price decresing\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" time of average \", avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0],  findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" Time and price decresing \");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    // else if(currentCandleVol > avgVol){\n                    //     row.highlisht =  true; \n                    //     window.document.title = \"VB: \" + row.symbol;\n                    //     console.log(row.symbol, ' avg ', avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0]);\n                    //     this.speckIt('Volume  in ' + row.name + \" crossed average \");\n                    //     this.setState({ volumeBreakoutlast5CandleList: this.state.slowMotionStockList })\n                    // }\n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n\n\n\n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if(element){\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n                  \n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType,\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    // getHistory = (token) => {\n\n\n    //     this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\n    //     this.setState({ InstrumentHistroy: [] });\n    //     this.getLTP();\n\n\n    //     const format1 = \"YYYY-MM-DD HH:mm\";\n\n    //     var time = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(time);\n    //     // var startdate = moment(this.state.startDate).subtract(time);\n    //     var beginningTime = moment('9:15am', 'h:mma');\n\n    //     var data = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": token,\n    //         \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n    //         \"fromdate\": moment(startdate).format(format1),\n    //         \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n    //     }\n\n    //     AdminService.getHistoryData(data).then(res => {\n    //         let data = resolveResponse(res, 'noPop');\n    //         //    console.log(data); \n    //         if (data && data.data) {\n\n    //             var histCandles = data.data;\n    //             histCandles && histCandles.sort(function (a, b) {\n    //                 return new Date(b[0]) - new Date(a[0]);\n    //             });\n    //             if (histCandles.length > 0) {\n    //                 localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n    //                 this.setState({ InstrumentHistroy: histCandles });\n\n    //             }\n\n    //         }\n    //     })\n    // }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n\n            if (!foundInWatchlist.length) {\n\n                watchlist.push(fdata);\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\n                    this.LoadSymbolDetails(fdata.symbol);\n                });\n\n                this.setState({ symbolList: watchlist }, function () {\n                    //  this.updateSocketWatch();\n                });\n\n            }\n        }\n\n    }\n    onSelectItemChart = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token, seachSumbol: \"\" }, function () {\n                this.getLTP();\n                this.showStaticChart(fdata.token);\n                this.LoadSymbolDetails(fdata.symbol);\n            });\n\n        }\n\n    }\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    handleKeyDown = (e) => {\n\n        console.log(\"key\", e.keyCode);\n        //38 for down and 40 for up key\n        if (e.keyCode === 38 && this.state.cursor > 0) {\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\n        }\n\n        setTimeout(() => {\n            this.updateCandleOnkey();\n        }, 100);\n\n    }\n\n\n    updateCandleOnkey = () => {\n        var selectedKeyRow = localStorage.getItem('selectedKeyRow') && JSON.parse(localStorage.getItem('selectedKeyRow'));\n        if (selectedKeyRow.token && selectedKeyRow.symbol) {\n            this.setState({ tradingsymbol: selectedKeyRow.symbol, symboltoken: selectedKeyRow.token }, function () {\n                this.getLTP();\n                this.showStaticChart(selectedKeyRow.token);\n            });\n\n        }\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar   LoadSymbolDetails ={this.LoadSymbolDetails} />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n                    <Grid item xs={12} sm={2}>\n                      \n                    <WatchListTab style={{position: 'fixed'}}  data={{gainerList: this.state.gainerList, looserList: this.state.looserList, LoadSymbolDetails: this.LoadSymbolDetails, cursor : this.state.cursor, symbolList: this.state.symbolList, totalWatchlist:this.state.totalWatchlist, onChangeWatchlist: this.onChangeWatchlist, selectedWatchlist: this.state.selectedWatchlist, search:this.state.search, handleKeyDown: this.handleKeyDown, onChange: this.onChange, autoSearchList :this.state.autoSearchList,  onSelectItem : this.onSelectItem , symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/>\n\n\n                        {/* <Paper>\n                            <Autocomplete\n                                freeSolo\n                                id=\"free-solo-2-demo\"\n                                disableClearable\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                onChange={this.onSelectItem}\n                                //+ ' '+  option.exch_seg\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                    option.symbol\n                                ) : []}\n                                renderInput={(params) => (\n                                    <TextField\n                                        onChange={this.onChange}\n                                        {...params}\n                                        label={\"Search Symbol\"}\n                                        margin=\"normal\"\n                                        variant=\"standard\"\n                                        name=\"search\"\n                                        onKeyDown={this.handleKeyDown}\n                                        value={this.state.search}\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    />\n                                )}\n                            />\n\n                            <div style={{ marginLeft: '10px' }}>\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                    <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                            <MenuItem value={element}>{element}</MenuItem>\n                                        ))\n                                        }\n\n                                    </Select>\n                                </FormControl>\n\n                            </div>\n\n\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map((row, i) => (\n                                    <>\n                                        <ListItem onKeyDown={this.handleKeyDown} button selected={this.state.cursor === i ? 'active' : null}\n\n                                            style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                                            {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                                            <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\n\n\n                                        </ListItem>\n\n                                    </>\n                                )) : ''}\n                            </div>\n\n                        </Paper> */}\n\n\n                        {/* <Typography style={{ fontWeight: 'bold' }}><span style={{ color: \"green\" }}> Advance {this.state.advanceShareCount} </span> <span style={{ color: \"red\" }}> Decline {this.state.declineShareCount} </span> <span> Unchange {this.state.UnchangeShareCount} </span> </Typography> */}\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={8}>\n                        <Paper style={{ padding: \"10px\" }}>\n\n\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                <Grid item xs={10} sm={3}>\n\n                                    {this.state.tradingsymbol ?\n                                        <Typography variant=\"body1\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\n\n                                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\n\n                                        </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\n\n                                    O: {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                    H: {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                    L: {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                    C: {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                                </Grid>\n\n                                <Grid item xs={10} sm={2}>\n\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        disableClearable\n                                        style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                        onChange={this.onSelectItemChart}\n                                        value={this.state.seachSumbol}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange}\n                                                {...params}\n                                                label={\"Search\"}\n                                                margin=\"normal\"\n                                                variant=\"standard\"\n                                                name=\"seachSumbol\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n\n\n                                <Grid item xs={10} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\n                                        <InputLabel htmlFor=\"gender\">Time</InputLabel>\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '3px' }} >\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                            <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\n                                            <MenuItem value={\"DELIVERY\"}>Del</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                                </Grid>\n\n\n                                <Grid item xs={1} sm={2}  >\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                                </Grid>\n\n\n\n                                <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                         <br />\n\n                                    {this.state.InstrumentLTP ? \n                                    <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n                                          \n                                        <div style={{ background: '#bdbdbd' }}>\n                                            <b>  Daily: {this.state.tradingsymbol}</b> <br />\n\n                                            <span title=\"20SMA\" item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                                Daily Avg Price: {this.state.DailyBulishStatus && this.state.DailyBulishStatus.toFixed(0)} {this.state.DailyBulishStatus ? this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                                            </span><br />\n\n\n                                            <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                <b>Daily Avg Volume:</b>  {(this.state.dailyAvgValume / 100000).toFixed(2)}L\n                                            </span><br />\n                                            <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                {this.state.todayCurrentVolume > this.state.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(this.state.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (this.state.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                                            </span>\n                                        </div>\n                                        <br />\n\n\n\n                                        <b>  Intraday: {this.state.timeFrame} : {this.state.tradingsymbol}</b> <br />\n                                        {this.state.bblastValue ? <span item xs={12} sm={12} >\n\n                                            <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.InstrumentLTP.ltp >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\n                                            BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\n                                            <span title=\"Green red mean price running below lower bb band\" style={{ color: this.state.InstrumentLTP.ltp <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\n                                        </span> : \"\"}\n\n                                        <span item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                            VWAP:  {this.state.vwapvalue && this.state.vwapvalue.toFixed(2)}\n                                        </span>\n                                        <br />\n                                        <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                        <br />\n                                        <b>Vol:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\n                                            <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n                                        ))}\n\n                                        <br />  <br />\n\n                                    </Grid>\n                                    : \"\"}\n                                    <Grid item xs={12} sm={!this.state.InstrumentLTP ? 12 : 9}  >\n                                        <div id=\"showChartTitle\">\n\n\n\n                                        </div>\n                                        <div id=\"tvchart\"></div>\n\n                                    </Grid>\n\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\n                                   <OrderWatchlist />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"50vh\" }} >\n\n\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> | Total:  <b style={{ color: this.state.totalPerchentageChange > 0 ? \"green\" : 'red' }}>  {this.state.totalPerchentageChange && this.state.totalPerchentageChange.toFixed(2)}% </b> from {this.state.startingFrom} </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                                </TableRow>\n                                            )) : ''}\n\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                        <br />\n\n\n\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest</Typography>\n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                            <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={4}>\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={6} style={{ marginTop: '28px' }}>\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </>}\n                                    SearchFailed:{this.state.searchFailed}\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12}>\n\n\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ? <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{ background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n        <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n\n\n\n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n\n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                <TableRow hover key={i}  >\n\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n        */}\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                    <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                    <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                    <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                </TableRow>\n\n\n\n                                            )) : ''}\n\n\n                                            <TableRow style={{ background: \"lightgray\" }} >\n\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                                <TableCell align=\"left\" > </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                        : \"\"}\n\n\n\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\n                                                    </TableRow>\n\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                    </TableRow>\n\n                                                </TableHead>\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n\n                                                        <TableRow hover key={i}  >\n\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                        */}\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                            <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                            <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                        </TableRow>\n\n\n                                                    ))}\n\n\n\n                                                    <TableRow style={{ background: \"lightgray\" }} >\n\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                        <TableCell align=\"left\"></TableCell>\n\n\n                                                        <TableCell align=\"left\" > </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n                                                        <TableCell align=\"left\"> </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                </TableBody>\n                                            </Table>\n\n\n\n                                        )) : ''}\n\n                                    </>\n\n                                        : \"\"}\n\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\n                                        </Typography>\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                    <TableRow hover key={i}  >\n                                                        <TableCell align=\"center\">{i + 1}</TableCell>\n                                                        <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                        <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                        <TableCell align=\"left\" title=\"based on last one 6 month\">\n\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                                </>\n                                                            ))}\n\n                                                            <br />\n\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n\n\n                                                                </>\n                                                            ))}\n\n                                                        </TableCell>\n\n\n                                                        <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.high}</TableCell>\n                                                        <TableCell align=\"left\">{row.low}</TableCell>\n                                                        <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                                    </TableRow>\n\n\n\n                                                )) : ''}\n\n                                            </TableBody>\n\n                                        </Table>\n\n                                        : \"\"}\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={2}>\n\n\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n                       \n\n                            <Grid item xs={12} sm={12}>\n                                <LiveBidsExpantion data={{ list: this.state.liveBidsList, title: \"Live Bids\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n                        \n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.oneHourBullBearCheckList, title: \"Hourly Bullish/Bearish\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n\n                        \n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.volumeBreakoutlast5CandleList, title: \"Last 5 bar Volume breakout\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.fastMovementList, title: \"Fast Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.volumeCrossedList, title: \"Average Volume Crossed\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualLowList, title: \"Open = Low : Buy\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualHighList, title: \"Open = High : Sell\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.slowMotionStockList, title: \"Last 5 days no Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n                    </Grid>\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            pcrTable : JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data,\n            optionChainData: JSON.parse( localStorage.getItem('optionChainData')),\n            filtered: JSON.parse(localStorage.getItem('optionChainData'))  && JSON.parse(localStorage.getItem('optionChainData')).filtered && JSON.parse(localStorage.getItem('optionChainData')).filtered.data  \n            \n            //JSON.parse(localStorage.getItem('optionChainData')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n    filterOptionChain = (name, actualValue) =>{\n        //console.log('filtername', name, actualValue); \n        var filereddata = []; \n    \n       var alldata =  this.state.optionChainData && this.state.optionChainData.records &&  this.state.optionChainData.records.data; \n\n       if(name === 'expiry' && actualValue === 'All' ) {\n            \n        filereddata =  alldata; \n       }\n     \n        if(name === 'expiry') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.expiryDate === actualValue){\n                    filereddata.push(element); \n                } \n            }   \n        }\n\n        if(name === 'strike') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.strikePrice === actualValue){\n                    filereddata.push(element); \n                } \n            } \n        }\n\n        \n\n        this.setState({filtered : filereddata, FilteredBY: name +\" \"+ actualValue});\n       //  console.log(filereddata); \n    }\n\n\n\n    componentDidMount() {\n\n\n       this.loadPackList();\n   //   console.log('this.state.optionChainData.records.expiryDates', this.state.optionChainData.records.expiryDates)\n\n\n        if(!JSON.parse(localStorage.getItem('cpdata')))\n        localStorage.setItem('cpdata', JSON.stringify( {data : []}) )\n        else\n        this.setState({products:  JSON.parse(localStorage.getItem('cpdata')).data})\n       // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n       //  clearInterval(this.state.stopnview)\n\n       if(!JSON.parse(localStorage.getItem('pcrTable')))\n       localStorage.setItem('pcrTable', JSON.stringify( {data : []}) )\n       else\n       this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')).data})\n     \n\n\n       var todayTime =  new Date(); \n       if(todayTime.getHours()>=9 && todayTime.getHours()< 16 ){\n            setInterval(() => {\n                this.loadPackList();\n            }, 60001 * 2);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60010 * 2);\n\n   //     this.findSupportResistence(this.state.optionChainData); \n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse( localStorage.getItem('optionChainData')).records.data;// this.state.optionChainData && this.state.optionChainData.records.data; \n        var     sumOfCEoi = 0,sumOfPEoi = 0; \n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n            \n            if(strikePrice === element.strikePrice){\n\n                if(element.CE && element.CE.openInterest){\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest; \n                }\n                if(element.PE && element.PE.openInterest){\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest; \n                }\n               \n            }                    \n        }\n       // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return {strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi , sumOfPEoi : sumOfPEoi}; \n\n      //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n           // console.log(optiondata);\n            var alldata =  optiondata && optiondata.records && optiondata.records.data; \n            //var underlyingValue = optiondata && optiondata.records.underlyingValue; \n            var PEoi = 0,CEoi = 0, PEoiChange=0,CEoiChange=0, peStrikePriceByDate=[]  ;\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element &&  element.PE){\n                    PEoi = PEoi + element.PE.openInterest; \n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest; \n                }\n                if(element &&  element.CE){\n                    CEoi = CEoi + element.CE.openInterest; \n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest; \n\n                } \n            }\n\n          var allexpiryDates =   optiondata.records.expiryDates; \n          var strikePrices =  optiondata.records.strikePrices; \n        //  var fliterExData = [];  \n           \n            // for (let index = 0; index < allexpiryDates.length; index++) {\n            //     const element = allexpiryDates[index];\n            //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n            //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n            //             fliterExData.push(alldata[indexJ]); \n            //         } \n            //     }                  \n            // }   \n\n            var myStrike = [14000, 14050, 14100, 14150, 14200, 14050, 14300, 14350, 14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n\n           // myStrike =   myStrike.sort(function(a, b){return b - a});\n       \n          //   var myStrike = [14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n       \n\n\n           // var myStrike = [15200,15250]; \n\n\n            var data  = [], totalspeoi= 0, totalsceoi= 0;\n             myStrike.forEach(element => {\n                var resdata =  this.getDataforStrike(element); \n                totalspeoi = totalspeoi+resdata.sumOfPEoi; \n                totalsceoi = totalsceoi+resdata.sumOfCEoi; \n\n                data.push(resdata); \n             \n               // console.log(element, resdata);\n                \n                 \n             });\n             this.setState({AllspTotalOI : data, selectedSPpcr : (totalspeoi / totalsceoi).toFixed(3), totalspeoi : totalspeoi,  totalsceoi : totalsceoi }); \n\n            // for (let index = 0; index < alldata.length; index++) {\n            //     const element = alldata[index];\n              \n            //     // if(alldata[index].strikePrice ==  14800){\n            //     //     fliterExData.push(element); \n            //     // } \n            //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n            //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n            //             fliterExData.push(element); \n            //         }   \n            //     }\n               \n            // }   \n\n//            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({CEoi: CEoi, PEoi : PEoi, allStrikediff:  PEoi - CEoi, CEoiChange: CEoiChange,PEoiChange: PEoiChange,allStrikeChngeDiff:  PEoiChange - CEoiChange });\n    }\n\n    \n\n\n\n    loadPackList() {\n\n\n        var data = { allPacks:true, portal: true};\n        AdminService.getBNcpdata(\"NIFTY\")\n            .then((res) => {\n        //     let data = resolveResponse(res);\n\n             var data =  res.data && res.data;\n\n             \n           localStorage.setItem(\"optionChainData\",  JSON.stringify( data) );\n\n          // this.findSupportResistence(data); \n\n           // console.log(\"livedata\", data.filtered);\n\n           this.setState({filtered : data.filtered && data.filtered.data , optionChainData: data});\n\n            if(data.filtered){\n\n                var diff =  data.filtered.PE.totOI - data.filtered.CE.totOI; \n\n                var newdata = {\n                    dateTime : this.dateFormat(new Date()), \n                    totCEOI : data.filtered.CE.totOI ,\n                    totCEVol: data.filtered.CE.totVol, \n                    totPEOI: data.filtered.PE.totOI , \n                    totPEVol: data.filtered.PE.totVol, \n                    diff: diff, \n                    totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')), \n                    totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')), \n                    totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange')) \n\n                } \n                this.setState({curnewdata : newdata });\n\n                var resname = ''; \n                if(diff > 0 )\n                 resname = \"BUY\";\n                 else\n                resname = \"SELL\"\n                \n\n                document.getElementById('title').innerHTML=  (diff/100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange'))/100000).toFixed(2) + \"L\" +  \" NIFTY \"; \n               // createData.push(newdata); \n               if(JSON.parse(localStorage.getItem('cpdata'))){\n                var oldproducts = JSON.parse(localStorage.getItem('cpdata')); \n               // console.log(\"oldproductsindex0\", ); \n                var lastrow = oldproducts && oldproducts.data[0]; \n                \n\n                // oldproducts.data.forEach((data) => {\n                //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                //         newdata.isDuplicate = true; \n                //     }else{\n                //         newdata.isDuplicate = false;\n                //     }\n                // });\n                if(lastrow){\n                    newdata.isDuplicate = newdata.diff == lastrow.diff ? true : false\n                    newdata.totCEOIChange = (((newdata.totCEOI-lastrow.totCEOI) * 100)/lastrow.totCEOI).toFixed(3);;\n                    newdata.totPEOIChange =   (((newdata.totPEOI-lastrow.totPEOI) * 100)/lastrow.totPEOI).toFixed(3);;\n                    newdata.totDiffChange =  (((newdata.diff-lastrow.diff) * 100)/lastrow.diff).toFixed(3); \n                }else{\n                    newdata.isDuplicate = false\n                    newdata.totCEOIChange = 0;\n                    newdata.totPEOIChange =  0;\n                    newdata.totDiffChange =  0; \n                }\n                \n\n                oldproducts.data.unshift(newdata);\n\n                if(data.records){\n                    oldproducts.timestamp = data.records.timestamp; \n                    oldproducts.underlyingValue = data.records.underlyingValue; \n                }\n              \n\n                localStorage.setItem(\"cpdata\",  JSON.stringify( oldproducts) );\n\n                this.setState({products: oldproducts.data, underlyingValue : data.records.underlyingValue,timestamp: data.records.timestamp  })\n               }\n               \n             //  console.log(\"dddd\", this.state.curnewdata); \n   \n                 \n            }\n\n\n            this.updatepcr()\n            this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data})\n\n            });\n\n\n\n\n    }\n\n\n    updatepcr(){\n\n\n        var pcrdata =  {\n            allPCR : (this.state.PEoi /this.state.CEoi).toFixed(3), \n            expiryPCR: localStorage.getItem('thisWeekPCR'), \n            selectedSPpcr: this.state.selectedSPpcr, \n         }\n\n         if(JSON.parse(localStorage.getItem('pcrTable'))){\n             var pcrTable = JSON.parse(localStorage.getItem('pcrTable')); \n             pcrTable.data.unshift(pcrdata);\n             localStorage.setItem(\"pcrTable\",  JSON.stringify( pcrTable) );\n         }\n         \n         console.log(pcrdata); \n         this.setState({pcrTable: pcrTable })\n    }\n \n\n    \n\n    dateFormat(date){ \n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n  \n\n\n    render(){\n     \n        var totCEOI = 0, totCEVol = 0,totCEOIChange=0, totCEBUY=0, totCESell=0; \n        var totPEOI = 0, totPEVol = 0,totPEOIChange=0, totPEBUY=0, totPESell=0; \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                    <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        My View({this.state.products && this.state.products.length}) <b> Nifty: {this.state.underlyingValue}</b> at Time: {this.state.timestamp} \n                        {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                    </Typography> \n                </Grid>\n\n                <Grid item xs={2} sm={2} > \n                    <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                            id=\"expiry\"\n                            name=\"expiry\"\n                            value={this.state.expiry}\n                            onChange={this.onChange}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                            {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.expiryDates ? this.state.optionChainData.records.expiryDates.map((name, index) => (\n                                <MenuItem key={name+'key'+index} value={name} >\n                                    {name}\n                                </MenuItem>\n                            )): \"\"}\n                            </Select>\n                        </FormControl>\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} > \n                            <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                                    <Select\n                                    labelId=\"strike\"\n                                    id=\"strike\"\n                                    max-height={'100%'}\n                                    name=\"strike\"\n                                    value={this.state.strike}\n                                    onChange={this.onChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.strikePrices ? this.state.optionChainData.records.strikePrices.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                        </Grid>\n                        <Grid item xs={1} sm={1} style={{paddingTop:'20px',paddingLeft:'20px'}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button>      \n                        </Grid>\n\n                </Grid>\n              \n            \n                <Grid item xs={12} sm={12}>\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}}>\n                   \n                    <Grid container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                        <Grid item xs={3} sm={3} >\n                         \n                         <span>All PUT OI: <b>{this.state.PEoi} ({(this.state.PEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL OI: <b>{this.state.CEoi} ({(this.state.CEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Diff: {\n                             this.state.allStrikediff > 0 ? <b style={{color:'green'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b> } \n                        </span>\n                        </Grid>\n\n                        <Grid item xs={3} sm={3} >\n                \n                        <span>All PUT Chng in OI: <b>{this.state.PEoiChange} ({(this.state.PEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL Chng in  OI: <b>{this.state.CEoiChange} ({(this.state.CEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Chng in Diff: {\n                             this.state.allStrikeChngeDiff > 0 ? <b style={{color:'green'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b> } \n                        </span>\n\n\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} >\n\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>ALL PCR: <b>{(this.state.PEoi /this.state.CEoi).toFixed(3) } </b></span>\n                         </Typography> \n                         </Grid>\n\n                         <Grid item xs={2} sm={2} >\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>Expire Week PCR: <b>{ localStorage.getItem('thisWeekPCR') } </b></span>\n                        </Typography> \n                        </Grid>\n                         \n\n\n                         <Grid item xs={2} sm={2} >\n                         <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                            <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n\n                         </Typography> \n                \n              \n\n                        </Grid>\n\n\n                        \n            </Grid>\n            </Paper>\n            </Grid>\n\n           \n\n\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={0}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n              \n              \n                <Grid item xs={7} sm={7} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                            <TableCell align=\"center\"><b>Time</b></TableCell>\n                            <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                            <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                            <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>                            \n\n                            <TableCell align=\"center\"><b>Call OI</b></TableCell>\n\n                         \n                            <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>                            \n                            \n                            {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody hover style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.products ? this.state.products.map(row => (\n                            <TableRow key={row.dateTime} style={{background: row.isDuplicate ? \"lightgray\":\"\"}}>\n                                <TableCell align=\"center\">{row.dateTime.substring(19,11)}</TableCell>\n                                <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color:'green' }} >BUY</Typography>  : <Typography variant=\"body2\" style={{ color:'red' }} >SELL</Typography> }</TableCell>\n                                <TableCell align=\"center\">{row.diff} ({(row.diff/100000).toFixed(2)}L)({row.totDiffChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totDiffChange}%</span>: row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totDiffChange}%</span> }) </TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff/100000).toFixed(2)}L)</TableCell>\n\n                                <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totPEOIChange}%</span>: row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totPEOIChange}%</span> })</TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totCEOIChange}%</span>: row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold' }} >{row.totCEOIChange}%</span> })</TableCell>\n                              \n                                <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n                \n                            </TableRow>\n                        )):<Spinner/>}\n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={3} sm={3} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }}  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi/100000).toFixed(3)}L</b></TableCell>\n                            <TableCell align=\"center\"><b>Strike Price</b> </TableCell>\n                            <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi/100000).toFixed(3)}L</b></TableCell>\n                           \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                             <TableRow  hover key={row.dateTime} >\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfCEoi} ({(row.sumOfCEoi/100000).toFixed(2)}L)</TableCell>\n                             <TableCell  align=\"center\">{row.strikePrice}</TableCell>\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfPEoi} ({(row.sumOfPEoi/100000).toFixed(2)}L)</TableCell>\n                     \n                         </TableRow>\n                        )):<Spinner/>}\n\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={2} sm={2} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table   id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\">ALL Pcr</TableCell>\n                            <TableCell align=\"center\">Expiry Pcr </TableCell>\n                            <TableCell align=\"center\">Selected Pcr</TableCell>\n                         \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{whiteSpace: \"nowrap\"}}>\n\n                        {this.state.pcrTable && this.state.pcrTable.length>0 && this.state.pcrTable ? this.state.pcrTable.map(row => (\n                            <TableRow  hover key={row.expiryPCR} >\n                                <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                <TableCell  align=\"center\">{row.expiryPCR}</TableCell>\n                                <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                            </TableRow>\n                        )):<Spinner/>}\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"2px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableHead variant=\"head\">\n\n                    <TableRow variant=\"head\"  >\n                        \n                        <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                    </TableRow>\n                    <TableRow variant=\"head\" >\n                    \n                        {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n                     \n\n                        <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI')/100000).toFixed(3)}L) </b></TableCell>\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                        {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> STRIKE PRICE</span> </TableCell>\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> Expiry</span> </TableCell>\n\n                        {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                        <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                        {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI')/100000).toFixed(3)}L)</b></TableCell>\n\n\n                    </TableRow>\n                </TableHead>                   \n                    \n                    <TableBody>\n                    \n                        { this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                            <TableRow hover key={index} style={{background: opdata.isDuplicate ? \"lightgray\":\"\"}}>\n                              \n                                {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                { opdata && opdata.CE && opdata.PE ? <>\n                                            <TableCell {...totCEOI = totCEOI +  opdata.CE.openInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.CE.change/opdata.strikePrice-opdata.CE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> }) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                        \n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }} align=\"center\"><span> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{borderRight: 'dashed', whiteSpace: \"nowrap\"}} align=\"center\" ><span style={{paddingLeft:'5px',paddingRight:'5px'  }}> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.PE.change/opdata.strikePrice-opdata.PE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}}align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n                            <TableRow  variant=\"head\"> \n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOI',totCEOI)}><b>{totCEOI}<br />({(totCEOI/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange',totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEVol',totCEVol)}><b>{totCEVol}<br />({(totCEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n                                {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                <TableCell {...localStorage.setItem('thisWeekPCR',(totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n\n\n                                {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                {/* <TableCell colSpan={3} align=\"center\"></TableCell> */} \n                                <TableCell align=\"center\" {...localStorage.setItem('totPEVol',totPEVol)}><b>{totPEVol}<br />({(totPEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange',totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOI',totPEOI)}><b>{totPEOI}<br />({(totPEOI/100000).toFixed(3)}L)</b> </TableCell>\n\n                            </TableRow>\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n\n                \n          \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TradeConfig from './TradeConfig.json';\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n                this.setState({  fundData :fundsResData.data }); \n                localStorage.setItem(\"netCapital\", fundsResData.data && fundsResData.data.net); \n\n               }\n        })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    Total Capital  :   {TradeConfig.totalCapital }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {TradeConfig.perTradeExposurePer}% \n                    </Typography>\n\n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {(TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100).toFixed(2)}\n                    </Typography>\n\n                    </Paper>\n\n                </Grid>\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.getTodayOrder();\n        }, 10000);\n       \n    }\n\n   \n    cancelOrderOfSame = (orderId,variety) =>  {\n       \n        var data = {\n            \"variety\":variety,\n            \"orderid\":orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n                this.getTodayOrder();\n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n               this.setState({triggerprice : 0}); \n               this.getTodayOrder();\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                         Oders Placed ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\n\n                                \n\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>AvgPrice</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>TriggerPrice</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\n\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\">\n                                        {/* {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity} */}\n                                    {row.quantity}\n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                       </>\n                                     : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\n                                        {row.orderstatus}\n                                        <br />\n\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \n                                       </>\n                                     : ''}\n\n                                    </TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.jwtToken,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode , jwtToken: jwtToken });\n\n            \n        wsClint.onopen  = (res) => {\n\n\n            var firstTime_req =  {\n                \"jwttoken\": this.state.jwtToken,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n           }\n    \n           \n            console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n            wsClint.send(firstTime_req);\n\n            // this.makeConnection();\n            // console.log('connected');\n            // this.updateSocketWatch();\n                \n             setTimeout(function(){\n               this.makeConnection(feedToken ,clientcode);\n             }, 1000);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport OrderWatchlist from './OrderWatchlist';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList: [],\n            autoSearchList: [],\n            InstrumentLTP: {},\n            autoSearchTemp: [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"DELIVERY\",\n            nr4TotalPer: 0,\n            pnlAmountTotal: 0,\n            totalNetProfit: 0,\n            totelActivatedCount: 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting: \"\",\n            perHighLowTotal: 0,\n            netPnLAmountOnHighlowTotal: 0,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n\n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1000) })\n              this.setState({bankNiftyInterval :  setInterval(() => {this.getNiftyLTP(); this.getBankNiftyLTP(); }, 30000)}) \n\n            var squireInterval = setInterval(() => {\n                console.log(\"squireoff\", new Date().toLocaleString()); \n                let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n                let sqrOffendTime = moment('3:15pm', 'h:mma');\n                let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n            \n                if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n                    this.state.positionList.forEach((element, i)=> {\n                        if(element.netqty > 0 || element.netqty < 0){\n                            this.squareOff(element);\n                        }\n                        if(this.state.positionList.length == i+1){\n                            clearInterval(squireInterval);\n                            console.log(\"squireInterval ended\"); \n                        }\n                    });\n                } \n            }, 5000);\n\n        } else {\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval);\n            clearInterval(this.state.bankNiftyInterval);\n        }\n\n        var scanendTime = moment('3:30pm', 'h:mma');\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\n            //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n\n\n\n            // var tostartInteral =   setInterval(() => {\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 15 === 0){\n            //         setTimeout(() => {\n            //             this.getCandleHistoryAndStore(); \n            //         }, 70000);\n            //         setInterval(() => {\n            //                 if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n            //                 this.getCandleHistoryAndStore(); \n            //             }\n            //          }, 60000 * 15 + 70000 );  \n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern();\n            }, foundPatternsFromStored.length * 100 + 300000);\n        }\n\n       \n\n       \n        //this.getCandleHistoryAndStore(); \n\n        // this.findNR4PatternLive();\n        //this.findNR7PatternLive();\n\n\n\n        // this.getPositionData();\n        // this.getNSETopStock();\n\n\n        //  this.getMySelectedStock();\n\n\n\n        // setInterval(() => {\n\n        //     var timediff = moment.duration(\"00:50:00\");\n        //     var startdate = moment(new Date()).subtract(timediff);\n\n\n        //     var enddiff = moment.duration(\"00:01:00\");\n        //     var enddate = moment(new Date()).add(enddiff);\n\n\n        //     var data  = {\n        //         \"exchange\": \"NSE\",\n        //         \"symboltoken\": 212,\n        //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n        //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n        //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n        //     }\n\n        //     AdminService.getHistoryData(data).then(res => { \n        //         let histdata = resolveResponse(res,'noPop' );\n        //         var candleData = histdata.data; \n        //         candleData.reverse(); \n        //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n        //     }); \n\n        // }, 1000);\n\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        this.setState({ foundPatternList: backTestResult })\n\n\n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n\n    getCandleHistoryAndStore = async () => {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        const today = moment().isoWeekday();\n        var timediff = '';\n\n\n\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\n            timediff = moment.duration(\"66:00:00\");\n        } else {\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    if (candleData && candleData.length >= 10) {\n                        var last10Candle = candleData.slice(0, 10);\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist, symbol) => {\n\n        //   console.log(\"TweezerTop finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n\n            //\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\n\n                        var ttophistCandle = [];\n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser Top',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: ttophistCandle\n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\n        // console.log(\"TweezerBottom finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var last8candleHigh = candleHist[9][2];\n            var last8candleLow = candleHist[2][3];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n\n            //  \n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n\n\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle = [];\n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser bottom',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: tBophistCandle\n                        }\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data; var rgrangeCount = 0;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    var last5Candle = candleData.slice(0, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last5Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0];\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        console.log(index + 1, element.symbol, rgrangeCount);\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n\n                        if (rgrangeCount == 4) {\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\n\n\n                            var firstCandle = last4Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR4',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr4 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 300));\n\n            // var showtestdata = (index + 1);\n\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n            //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last7Candle = candleData.slice(1, 8);\n                    var last9Candle = candleData.slice(0, 9);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last7Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last9Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\n\n\n                        if (rgrangeCount == 7) {\n\n\n                            var firstCandle = last7Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR7',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr7 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol;\n            this.setState({ stockTesting: showtestdata });\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n\n\n    refreshLtpOnFoundPattern = async () => {\n\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\n\n\n        var foundPatternList = this.state.foundPatternList;\n\n        this.setState({ foundPatternList: [] });\n\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        //       foundPatternList.forEach(element => {\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\n            const element = foundPatternList[index];\n\n            if (element && element.pattenName == 'NR4') {\n\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\": element.token,\n                }\n\n                AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                    var LtpData = data && data.data;\n                    //console.log(LtpData);\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\n                    if (LtpData && LtpData.ltp) {\n\n                        var orderActivated = <span> {LtpData.ltp} </span>;\n\n                        if (LtpData.ltp > element.BuyAt) {\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\n                            quantity = Math.floor(10000 / element.BuyAt);\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n\n                        }\n                        if (LtpData.ltp < element.SellAt) {\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n                        }\n\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol: element.symbol,\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\n                            token: element.token,\n                            pattenName: 'NR4',\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(),\n                            BuyAt: element.BuyAt,\n                            SellAt: element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated: orderActivated,\n                            candleChartData: element.candleChartData,\n                            quantity: quantity ? quantity : \"\",\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange: perChange,\n                            todayChange: todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated', foundData);\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\n\n                        var foundlist = this.state.foundPatternList;\n\n                        foundlist.sort(function (a, b) {\n                            return b.perChange - a.perChange;\n                        });\n\n                        this.setState({ foundPatternList: foundlist });\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                    }\n\n                }).catch(error => {\n                    Notify.showError(element.symbol + \" ltd data not found!\");\n                })\n\n            }\n            await new Promise(r => setTimeout(r, 101));\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                if (row.netqty > 0) {\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n                } else if (row.netqty < 0) {\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.sellavgprice) * parseInt(row.netqty)).toFixed(2);\n                }\n                break;\n            }\n        }\n\n        return data;\n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        oderbookData.forEach(element => {\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n            }\n        });\n        return data;\n    }\n    getHighLowPercentage = async () => {\n\n        this.setState({showHighLowWisePer: true});\n\n        if (!this.state.positionList.length) {\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n\n            if (element.producttype == \"DELIVERY\") {\n                return \"\";\n            }\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\": element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                    this.state.positionList[index].high = LtpData.high;\n                    this.state.positionList[index].low = LtpData.low;\n                }\n            })\n            await new Promise(r => setTimeout(r, 125));\n            this.setState({ positionList: this.state.positionList });\n\n        }\n\n    }\n    tagPatternWhichTaken =(token)=> {\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \n       \n       var pattern = ''; \n       for (let index = 0; index < orderTagToPosition.length; index++) {\n           const element = orderTagToPosition[index];\n           if(token == element.token){\n            pattern = element.pattenName; \n            break;\n           }\n        }\n        return pattern\n    //    console.log(\"findpatter\", token, orderTagToPosition);\n    //    orderTagToPosition.forEach(element => {\n    //         if(token == element.token){\n    //             return element.pattenName; \n    //         }\n    //    });\n\n    }\n    calculateTradeExpence =(element)=>{\n\n        var totalbuyvalue =  parseFloat(element.totalbuyvalue) === 0 ? parseFloat(element.totalsellvalue) : parseFloat(element.totalbuyvalue);\n        var buyCharge = parseFloat(totalbuyvalue) * 0.25/100; \n        if(buyCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            buyCharge = 20; \n        }\n        var totalsellvalue =  parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n        var sellCharge = parseFloat(totalsellvalue) * 0.25/100; \n        if(sellCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            sellCharge = 20; \n        }\n        let turnOver = totalbuyvalue + totalsellvalue; \n        let totalBroker = buyCharge+sellCharge;\n\n        let sst = 0.025; //stock intraday\n        if(element.optiontype  == 'CE' || element.optiontype  == 'PE'){\n            sst = 0.05;  \n        }\n\n        let sstCharge = totalsellvalue *  sst/100; \n        let transCharge = turnOver *  0.00335/100; \n        let stampDuty  = totalbuyvalue *   0.003/100; \n        let sebiCharge = turnOver * 10/10000000; \n        let gstCharge = (totalBroker+transCharge+sebiCharge) * 18/100; \n\n        let total = totalBroker+sstCharge+transCharge+stampDuty+sebiCharge+gstCharge; \n\n        var chargeInfo ={\n          tradeExpence:  total,\n          expenceInfo : \"Brokerage: \"+totalBroker.toFixed(2)+ \" \\nSTT: \"+ sstCharge.toFixed(2) + \" \\nTransaction: \"+ transCharge.toFixed(2) + \" \\nStamp Duty: \"+stampDuty.toFixed(2) + \" \\nSebi: \"+sebiCharge.toFixed(2) + \" \\nGST: \" + gstCharge.toFixed(2) + \" \\n\\nTotal: \"+ total.toFixed(2)\n        }\n        return chargeInfo; \n    }\n    getPositionData = async () => {\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0;\n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var positionList = data && data.data;\n            if (positionList && positionList.length > 0) {\n\n\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0, totalExpence=0; \n                positionList.forEach(element => {\n\n                    if (element.producttype == \"DELIVERY\") {\n                        return \"\";\n                    }\n\n                    todayProfitPnL += parseFloat(element.pnl);\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n                    totalQtyTraded += parseInt(element.buyqty);\n                    allbuyavgprice += parseFloat(element.buyavgprice);\n                    allsellavgprice += parseFloat(element.sellavgprice);\n                    if(element.netqty == 0){\n                        let percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice));\n                        element.percentPnL = percentPnL.toFixed(2) + \"%\";\n                        totalPercentage += parseFloat(percentPnL);\n\n                        localStorage.removeItem('firstTimeModify' + element.tradingsymbol)\n                        localStorage.removeItem('lastTriggerprice_' + element.tradingsymbol)\n                    }\n                   \n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \n\n                    let chargeInfo = this.calculateTradeExpence(element);\n                    element.tradeExpence = chargeInfo.tradeExpence.toFixed(2); \n                    element.expenceInfo = chargeInfo.expenceInfo; \n                    totalExpence += chargeInfo.tradeExpence; \n\n                    var slData = this.getStoplossFromOrderbook(element);\n                    if (slData) {\n                        element.stopLoss = slData.stopLoss;\n                        element.stopLossAmount = slData.maxLossAmount;\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\n                    }\n\n\n                });\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\n\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\n                this.setState({ totalExpence: totalExpence.toFixed(2) });\n\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\n\n                \n                positionList.sort(function (a, b) {\n                    return (b.netqty - a.netqty);\n\n                    //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList: positionList });\n\n            }\n        })\n\n    }\n\n    getNSETopStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n                                    console.log(found[0].symbol, \"found\", found);\n                                    localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                    this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    getMySelectedStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getSelectedStockFromDb().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\n                                    selectedStockwatchList.push(found[0]);\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    checkAndPlaceSingleOrder = (stock) => {\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data = res.data;\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\n            console.log(\"stockfound\", found);\n            if (found && found.length) {\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\n            }\n        })\n    }\n\n\n    getStockOnebyOne() {\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            console.log(\"still ok\");\n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    if (scandata && scandata.length > 0) {\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\n                        var isFound = false;\n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\n                                isFound = true;\n                            }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\n                        }\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n            var LtpData = data && data.data;\n            var ltpPrice = LtpData.ltp\n            if (ltpPrice) {\n\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\n                var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken: token,\n                    buyPrice: 0,\n                    quantity: quantity,\n                    stopLossPrice: stopLossPrice\n                }\n\n                if (quantity && stopLossPrice) {\n                    this.placeOrderMethod(orderOption);\n                }\n\n            }\n\n        }).catch((error) => {\n            console.log(symbol, \"not found\", 'error', error);\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //    console.log(data);       \n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n    }\n\n\n    getNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"NIFTY\",\n            \"symboltoken\": \"26000\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:green'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:red'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n    getBankNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\": \"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:green'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:red'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n\n    getStopLossPrice = async (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n\n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            if (LtpData && LtpData.ltp) {\n                var ltp = parseFloat(LtpData.ltp);\n                ltp = ltp - (ltp * 0.7 / 100);\n                var slPrice = this.getMinPriceAllowTick(ltp);\n\n                this.setState({ stoploss: slPrice });\n                return slPrice;\n            }\n\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"21:10:00\");\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                            stoploss = this.getMinPriceAllowTick(stoploss);\n\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\n\n                            console.log(symbol, \" LTP \", LtpData.ltp);\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                            console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue);\n\n                            var orderOption = {\n                                transactiontype: 'BUY',\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5) {\n                                this.placeOrderMethod(orderOption);\n                            } else {\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                console.log(symbol + \" its not fullfilled\");\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(symbol + \" candle data emply\");\n                    }\n                })\n\n            }\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    cancelOrderOfSame = (row) => {\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if (data.status && data.message === 'SUCCESS') {\n                console.log(\"cancel order\", data);\n                // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n    }\n\n    squareOff = (row) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\n            \"exchange\": row.exchange,\n            \"ordertype\": \"MARKET\",\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n\n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);\n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                this.cancelOrderOfSame(row);\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n\n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'hey Vijay, ' + slmOption.tradingsymbol;\n                window.speechSynthesis.speak(msg);\n\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    getOpenPeningOrderId = (symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\n                data.orderId = oderbookData[index].orderid\n                data.variety = oderbookData[index].variety\n                break;\n            }\n        }\n        return data;\n    }\n\n    modifyOrderMethod = (row, minTriggerPrice, minSLPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\": row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": minSLPrice ?  parseFloat(minSLPrice) : 0,\n            \"triggerprice\": parseFloat(minTriggerPrice),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n\n\n            if (data.status && data.message === 'SUCCESS') {\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\n                msg.text = row.symbolname + ' modified ' + data.message;\n                window.speechSynthesis.speak(msg);\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minTriggerPrice));\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n    get2DecimalNumber =(number)=>{\n        number = parseFloat(number); \n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    getSLAndTriggerPrice =(price)=> {\n        let minTriggerPrice = this.getMinPriceAllowTick(price);\n\n        var minSLPrice = minTriggerPrice - (minTriggerPrice * 1 / 100);\n        minSLPrice = this.getMinPriceAllowTick(minSLPrice);\n\n        let slPriceData = {\n            minTriggerPrice : minTriggerPrice, \n            minSLPrice : minSLPrice\n        }\n        return slPriceData; \n    }\n    getOptionPercentage =(row)=> {\n\n        console.log(\"option per calling\"); \n        var percentChange = 0, trailPerChange = 0; \n\n        row.buyavgprice = parseFloat(row.buyavgprice);\n        percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n        if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 5) {\n\n            var minTriggerPrice = row.buyavgprice + (row.buyavgprice * 1 / 100);\n            let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n            if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                this.modifyOrderMethod(row, slPriceData.minTriggerPrice ,slPriceData.minSLPrice );\n            }\n\n        } else {\n            var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n            var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n            trailPerChange = perchngfromTriggerPrice; \n            if (perchngfromTriggerPrice >= 5) {\n                minTriggerPrice = lastTriggerprice + (lastTriggerprice * 1 / 100);\n                let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                    this.modifyOrderMethod(row, slPriceData.minTriggerPrice, slPriceData.minSLPrice);\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n \n    }\n\n    \n    getPercentage = (row) => {\n\n        var percentChange = 0, trailPerChange = 0; \n\n        if (row.netqty > 0) {\n            row.buyavgprice = parseFloat(row.buyavgprice);\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 0.3) {\n                var minPrice = row.buyavgprice + (row.buyavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                if (perchngfromTriggerPrice >= 0.3) {\n                    minPrice = lastTriggerprice + (lastTriggerprice * 0.10/ 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if (row.netqty < 0) {\n\n            row.sellavgprice = parseFloat(row.sellavgprice);\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -0.3) {\n                var minPrice = row.sellavgprice - (row.sellavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.25 / 100));\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                console.log(\"perchngfromTriggerPrice\", perchngfromTriggerPrice);\n                if (perchngfromTriggerPrice <= -0.5) {\n                    minPrice = lastTriggerprice - (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n    }\n\n  \n\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\n                    <Grid item >\n                       <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Positions ({this.state.positionList && this.state.positionList.length}) \n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={3} >\n                        <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                        </Typography>\n                    </Grid>\n\n                    \n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Net Capital  {this.get2DecimalNumber(localStorage.getItem('netCapital'))}  </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\" >\n                            <b> Net Cap P/L </b> <b style={{ color: ((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')) > 0 ? \"green\" : \"red\" }}>{((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')).toFixed(2)}% </b>\n                        </Typography>\n                    </Grid>\n\n                   \n\n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Turnover {this.state.totalTornOver} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item >\n                        <Typography component=\"h3\"  >\n\n                        <b style={{ color: \"red\" }}>Expenses: {this.state.totalExpence} </b>\n\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalExpence) > 0 ? \"green\" : \"red\" }}>{this.state.totalExpence ? (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2) : \"\"} </b>\n                        </Typography>\n                    </Grid>\n                    \n\n                    \n\n\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\n                    </Grid>\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\n                    </Grid>\n                </Grid>\n\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                    <Grid item xs={12} sm={12}>\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Pattern Name</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Expense</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n\n                                        {this.state.showHighLowWisePer ? \n                                        <>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                          </> : \"\"}\n\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\n\n                                            <TableCell align=\"left\">\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                                    {row.tradingsymbol} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\n                                                </Button>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\n                                            <TableCell style={{cursor:'help'}} title={row.expenceInfo} align=\"left\">{row.tradeExpence}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\n\n\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== '0' && row.optiontype  == '' ? this.getPercentage(row) : \"\"}\n                                                {(row.optiontype  == 'CE' || row.optiontype  == 'PE') && row.netqty > 0 ? this.getOptionPercentage(row) : \"\"}  \n                                                {row.percentPnL}\n                                                {/* new Date().toLocaleTimeString() > \"15:15:00\" ? */}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n\n                                        {this.state.showHighLowWisePer ? <>\n                                            <TableCell   align=\"left\">{row.high}</TableCell>\n                                            <TableCell  align=\"left\">{row.low}</TableCell>\n                                          </> : \"\"}\n\n\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\n                                            </TableCell>\n\n                                        </TableRow> : \"\"\n\n                                    )) : ''}\n\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\n\n                                        {/* new Date().toLocaleTimeString() > \"15:15:00\" ?  */}\n                                            {this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\"}\n\n                                        </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                    </TableRow>\n\n\n                                </TableBody>\n                            </Table>\n\n                        </Paper>\n\n\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '250px', overflow: \"auto\" }}>\n                        <OrderBook />\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\n                    </Grid>\n\n\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \n                    <Grid item xs={12} sm={12} >\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n\n\n                            <Grid justify=\"space-between\"\n                                container>\n                                <Grid item  >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\n\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\n                                    </Typography>\n                                </Grid>\n                                <Grid item >\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                        <TableRow hover key={row.symboltoken}>\n\n\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\n                                                {row.pastPerferm ? <>\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                </> : \"\"}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                            <TableCell align=\"left\">{row.time}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n\n\n                        </Paper>\n                    </Grid> \n                    : \"\"}\n\n\n\n                </Grid>\n\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport LightChartCom from \"./LightChartCom\";\n\nimport Chart from \"./Chart\";\n\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n  //  this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {\n      cursor: 0,\n      areaData: [\n        { time: '2018-10-19', value: 54.90 },\n        { time: '2018-10-22', value: 54.98 },\n        { time: '2018-10-23', value: 57.21 },\n        { time: '2018-10-24', value: 57.42 },\n        { time: '2018-10-25', value: 56.43 },\n        { time: '2018-10-26', value: 55.51 },\n        { time: '2018-10-29', value: 56.48 },\n        { time: '2018-10-30', value: 58.18 },\n        { time: '2018-10-31', value: 57.09 },\n        { time: '2018-11-01', value: 56.05 },\n        { time: '2018-11-02', value: 56.63 },\n        { time: '2018-11-05', value: 57.21 },\n        { time: '2018-11-06', value: 57.21 },\n        { time: '2018-11-07', value: 57.65 },\n        { time: '2018-11-08', value: 58.27 },\n        { time: '2018-11-09', value: 58.46 },\n        { time: '2018-11-12', value: 58.72 },\n        { time: '2018-11-13', value: 58.66 },\n        { time: '2018-11-14', value: 58.94 },\n        { time: '2018-11-15', value: 59.08 },\n        { time: '2018-11-16', value: 60.21 },\n        { time: '2018-11-19', value: 60.62 },\n        { time: '2018-11-20', value: 59.46 },\n        { time: '2018-11-21', value: 59.16 },\n        { time: '2018-11-23', value: 58.64 },\n        { time: '2018-11-26', value: 59.17 },\n        { time: '2018-11-27', value: 60.65 },\n        { time: '2018-11-28', value: 60.06 },\n        { time: '2018-11-29', value: 59.45 },\n        { time: '2018-11-30', value: 60.30 },\n        { time: '2018-12-03', value: 58.16 },\n        { time: '2018-12-04', value: 58.09 },\n        { time: '2018-12-06', value: 58.08 },\n        { time: '2018-12-07', value: 57.68 },\n        { time: '2018-12-10', value: 58.27 },\n        { time: '2018-12-11', value: 58.85 },\n        { time: '2018-12-12', value: 57.25 },\n        { time: '2018-12-13', value: 57.09 },\n        { time: '2018-12-14', value: 57.08 },\n        { time: '2018-12-17', value: 55.95 },\n        { time: '2018-12-18', value: 55.65 },\n        { time: '2018-12-19', value: 55.86 },\n        { time: '2018-12-20', value: 55.07 },\n        { time: '2018-12-21', value: 54.92 },\n        { time: '2018-12-24', value: 53.05 },\n        { time: '2018-12-26', value: 54.44 },\n        { time: '2018-12-27', value: 55.15 },\n        { time: '2018-12-28', value: 55.27 },\n        { time: '2018-12-31', value: 56.22 },\n        { time: '2019-01-02', value: 56.02 },\n        { time: '2019-01-03', value: 56.22 },\n        { time: '2019-01-04', value: 56.36 },\n        { time: '2019-01-07', value: 56.72 },\n        { time: '2019-01-08', value: 58.38 },\n        { time: '2019-01-09', value: 57.05 },\n        { time: '2019-01-10', value: 57.60 },\n        { time: '2019-01-11', value: 58.02 },\n        { time: '2019-01-14', value: 58.03 },\n        { time: '2019-01-15', value: 58.10 },\n        { time: '2019-01-16', value: 57.08 },\n        { time: '2019-01-17', value: 56.83 },\n        { time: '2019-01-18', value: 57.09 },\n        { time: '2019-01-22', value: 56.99 },\n        { time: '2019-01-23', value: 57.76 },\n        { time: '2019-01-24', value: 57.07 },\n        { time: '2019-01-25', value: 56.40 },\n        { time: '2019-01-28', value: 55.07 },\n        { time: '2019-01-29', value: 53.28 },\n        { time: '2019-01-30', value: 54.00 },\n        { time: '2019-01-31', value: 55.06 },\n        { time: '2019-02-01', value: 54.55 },\n        { time: '2019-02-04', value: 54.04 },\n        { time: '2019-02-05', value: 54.14 },\n        { time: '2019-02-06', value: 53.79 },\n        { time: '2019-02-07', value: 53.57 },\n        { time: '2019-02-08', value: 53.95 },\n        { time: '2019-02-11', value: 54.05 },\n        { time: '2019-02-12', value: 54.42 },\n        { time: '2019-02-13', value: 54.48 },\n        { time: '2019-02-14', value: 54.03 },\n        { time: '2019-02-15', value: 55.16 },\n        { time: '2019-02-19', value: 55.44 },\n        { time: '2019-02-20', value: 55.76 },\n        { time: '2019-02-21', value: 56.15 },\n        { time: '2019-02-22', value: 56.92 },\n        { time: '2019-02-25', value: 56.78 },\n        { time: '2019-02-26', value: 56.64 },\n        { time: '2019-02-27', value: 56.72 },\n        { time: '2019-02-28', value: 56.92 },\n        { time: '2019-03-01', value: 56.96 },\n        { time: '2019-03-04', value: 56.24 },\n        { time: '2019-03-05', value: 56.08 },\n        { time: '2019-03-06', value: 55.68 },\n        { time: '2019-03-07', value: 56.30 },\n        { time: '2019-03-08', value: 56.53 },\n        { time: '2019-03-11', value: 57.58 },\n        { time: '2019-03-12', value: 57.43 },\n        { time: '2019-03-13', value: 57.66 },\n        { time: '2019-03-14', value: 57.95 },\n        { time: '2019-03-15', value: 58.39 },\n        { time: '2019-03-18', value: 58.07 },\n        { time: '2019-03-19', value: 57.50 },\n        { time: '2019-03-20', value: 57.67 },\n        { time: '2019-03-21', value: 58.29 },\n        { time: '2019-03-22', value: 59.76 },\n        { time: '2019-03-25', value: 60.08 },\n        { time: '2019-03-26', value: 60.63 },\n        { time: '2019-03-27', value: 60.88 },\n        { time: '2019-03-28', value: 59.08 },\n        { time: '2019-03-29', value: 59.13 },\n        { time: '2019-04-01', value: 59.09 },\n        { time: '2019-04-02', value: 58.53 },\n        { time: '2019-04-03', value: 58.87 },\n        { time: '2019-04-04', value: 58.99 },\n        { time: '2019-04-05', value: 59.09 },\n        { time: '2019-04-08', value: 59.13 },\n        { time: '2019-04-09', value: 58.40 },\n        { time: '2019-04-10', value: 58.61 },\n        { time: '2019-04-11', value: 58.56 },\n        { time: '2019-04-12', value: 58.74 },\n        { time: '2019-04-15', value: 58.71 },\n        { time: '2019-04-16', value: 58.79 },\n        { time: '2019-04-17', value: 57.78 },\n        { time: '2019-04-18', value: 58.04 },\n        { time: '2019-04-22', value: 58.37 },\n        { time: '2019-04-23', value: 57.15 },\n        { time: '2019-04-24', value: 57.08 },\n        { time: '2019-04-25', value: 55.85 },\n        { time: '2019-04-26', value: 56.58 },\n        { time: '2019-04-29', value: 56.84 },\n        { time: '2019-04-30', value: 57.19 },\n        { time: '2019-05-01', value: 56.52 },\n        { time: '2019-05-02', value: 56.99 },\n        { time: '2019-05-03', value: 57.24 },\n        { time: '2019-05-06', value: 56.91 },\n        { time: '2019-05-07', value: 56.63 },\n        { time: '2019-05-08', value: 56.38 },\n        { time: '2019-05-09', value: 56.48 },\n        { time: '2019-05-10', value: 56.91 },\n        { time: '2019-05-13', value: 56.75 },\n        { time: '2019-05-14', value: 56.55 },\n        { time: '2019-05-15', value: 56.81 },\n        { time: '2019-05-16', value: 57.38 },\n        { time: '2019-05-17', value: 58.09 },\n        { time: '2019-05-20', value: 59.01 },\n        { time: '2019-05-21', value: 59.50 },\n        { time: '2019-05-22', value: 59.25 },\n        { time: '2019-05-23', value: 58.87 },\n        { time: '2019-05-24', value: 59.32 },\n        { time: '2019-05-28', value: 59.57 },\n      ],\n      volumeData: [\n        { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-22', value: 21737523.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-23', value: 29328713.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-24', value: 37435638.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-25', value: 25269995.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-26', value: 24973311.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-29', value: 22103692.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-30', value: 25231199.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-31', value: 24214427.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-01', value: 22533201.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-02', value: 14734412.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-05', value: 12733842.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-06', value: 12371207.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-07', value: 14891287.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-08', value: 12482392.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-09', value: 17365762.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-12', value: 13236769.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-13', value: 13047907.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-14', value: 18288710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-15', value: 17147123.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-16', value: 19470986.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-19', value: 18405731.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-20', value: 22028957.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-21', value: 18482233.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-23', value: 7009050.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-26', value: 12308876.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-27', value: 14118867.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-28', value: 18662989.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-29', value: 14763658.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-30', value: 31142818.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-03', value: 27795428.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-04', value: 21727411.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-06', value: 26880429.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-07', value: 16948126.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-10', value: 16603356.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-11', value: 14991438.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-12', value: 18892182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-13', value: 15454706.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-14', value: 13960870.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-17', value: 18902523.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-18', value: 18895777.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-19', value: 20968473.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-20', value: 26897008.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-21', value: 55413082.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-24', value: 15077207.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-26', value: 17970539.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-27', value: 17530977.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-28', value: 14771641.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-31', value: 15331758.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-02', value: 13969691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-03', value: 19245411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-04', value: 17035848.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-07', value: 16348982.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-08', value: 21425008.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-09', value: 18136000.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-10', value: 14259910.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-11', value: 15801548.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-14', value: 11342293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-15', value: 10074386.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-16', value: 13411691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-17', value: 15223854.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-18', value: 16802516.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-22', value: 18284771.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-23', value: 15109007.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-24', value: 12494109.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-25', value: 17806822.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-28', value: 25955718.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-29', value: 33789235.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-30', value: 27260036.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-31', value: 28585447.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-01', value: 13778392.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-04', value: 15818901.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-05', value: 14124794.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-06', value: 11391442.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-07', value: 12436168.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-08', value: 12011657.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-11', value: 9802798.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-12', value: 11227550.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-13', value: 11884803.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-14', value: 11190094.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-15', value: 15719416.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-19', value: 12272877.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-20', value: 11379006.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-21', value: 14680547.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-22', value: 12534431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-25', value: 15051182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-26', value: 12005571.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-27', value: 8962776.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-28', value: 15742971.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-01', value: 10942737.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-04', value: 13674737.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-05', value: 15749545.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-06', value: 13935530.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-07', value: 12644171.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-08', value: 10646710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-11', value: 13627431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-12', value: 12812980.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-13', value: 14168350.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-14', value: 12148349.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-15', value: 23715337.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-18', value: 12168133.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-19', value: 13462686.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-20', value: 11903104.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-21', value: 10920129.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-22', value: 25125385.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-25', value: 15463411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-26', value: 12316901.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-27', value: 13290298.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-28', value: 20547060.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-29', value: 17283871.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-01', value: 16331140.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-02', value: 11408146.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-03', value: 15491724.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-04', value: 8776028.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-05', value: 11497780.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-08', value: 11680538.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-09', value: 10414416.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-10', value: 8782061.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-11', value: 9219930.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-12', value: 10847504.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-15', value: 7741472.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-16', value: 10239261.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-17', value: 15498037.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-18', value: 13189013.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-22', value: 11950365.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-23', value: 23488682.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-24', value: 13227084.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-25', value: 17425466.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-26', value: 16329727.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-29', value: 13984965.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-30', value: 15469002.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-01', value: 11627436.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-02', value: 14435436.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-03', value: 9388228.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-06', value: 10066145.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-07', value: 12963827.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-08', value: 12086743.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-09', value: 14835326.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-10', value: 10707335.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-13', value: 13759350.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-14', value: 12776175.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-15', value: 10806379.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-16', value: 11695064.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-17', value: 14436662.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-20', value: 20910590.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-21', value: 14016315.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-22', value: 11487448.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-23', value: 11707083.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-24', value: 8755506.00, color: 'rgba(0, 150, 136, 0.8)' },\n      ]\n    }\n  }\n\n\n  render() {\n    const { cursor } = this.state\n\n    return (\n      <Container>\n\n\n\n          \n          <LightChartCom ChartData={{areaSeries: this.state.areaData, volumeData : this.state.volumeData}}/>\n       \n\n      </Container>\n    )\n  }\n}\n\n\n\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        \n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n//     loadIndexesList() {\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n//         AdminService.getAllIndices()\n//             .then((res) => {\n//                 if (res.data) {\n//                     var data = res.data, sectorStockList = [];\n//                     this.setState({ indexTimeStamp: data.timestamp })\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n//                   //  this.setState({sectorList :  softedData});\n                  \n// //                    this.setState({ sectorList: []});\n//                     function sleep(ms) {\n//                         return new Promise(resolve => setTimeout(resolve, ms));\n//                     }\n//                     var updateLtpOnInterval = async (ref, softedData) => {\n\n//                             var middleSector = []; \n//                             for (let i = 0; i < softedData.length; i++) {\n\n//                                 var length = 1;                                     \n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n//                                     softedData[i].stockList = sectorStocks;\n//                                     length = sectorStocks.length; \n//                                     if (sectorStocks && sectorStocks.length) {\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n//                                     }\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n//                                 }else{\n//                                     softedData[i].stockList = sectorStocks;\n//                                     middleSector.push(softedData[i]); \n//                                 }\n\n                                \n                            \n//                                 await sleep(length / 10 * 1500);\n//                             }\n\n\n//                             middleSector.forEach(element => {\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\n//                             });\n//                         }\n//                         updateLtpOnInterval(this, softedData);\n//                 }\n//             })\n//             .catch((reject) => {\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n//                 this.speckIt(\"All Indices API Failed\");\n\n//             })\n\n//         this.setState({ refreshFlag: true });\n\n//     }\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n        \n\n                    var data = res.data && res.data.data, sectorStockList = [];\n                   // this.setState({ indexTimeStamp: data.timestamp })\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\n                  //  this.setState({sectorList :  softedData});\n\n                  console.log(softedData); \n\n                    this.setState({ sectorList: []});  \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1;                                     \n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\n\n                                    if(sectorStocks && sectorStocks.length){\n                                        softedData[i].stockList = sectorStocks;\n                                        length = sectorStocks.length; \n                                        if (sectorStocks && sectorStocks.length) {\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\n                                        }\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                    }\n                                }else{\n                                    if(sectorStocks && sectorStocks.length>=1){\n                                        softedData[i].stockList = sectorStocks;\n                                        middleSector.push(softedData[i]); \n                                    }\n                                  \n                                }\n\n                                await sleep(length / 10 * 150);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n          //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from './LightChartCom';\n\nimport Test from './Test';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n\n  const [open, setOpen] = React.useState(false);\n\n  var [values, setValues] = React.useState({\n    data: [],\n    candledata: {}\n  })\n\n\n\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n\n   \n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightCandleChart\" color=\"primary\" style={{ display: \"none\" }} onClick={handleClickOpen}>\n        Chart\n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} style={{color : props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change > 0 ? \"green\" : \"red\" }}>\n          {props.LightChartData.selectedSymbol}  {props.LightChartData.InstrumentLTP && props.LightChartData.InstrumentLTP.ltp}    ({props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change.toFixed(2)}%) \n          <br />\n\n\n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n          <br />\n\n          {props.LightChartData && props.LightChartData.InstrumentLTP ?\n            <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n\n              <div style={{ background: '#bdbdbd' }}>\n                <b>  Daily: {props.LightChartData.selectedSymbol}</b> <br />\n\n                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                  Daily Avg Price: {props.LightChartData.DailyBulishStatus && props.LightChartData.DailyBulishStatus.toFixed(0)} {props.LightChartData.DailyBulishStatus ? props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                </span><br />\n\n\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  <b>Daily Avg Volume:</b>  {(props.LightChartData.dailyAvgValume / 100000).toFixed(2)}L\n                </span><br />\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  {props.LightChartData.todayCurrentVolume > props.LightChartData.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(props.LightChartData.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (props.LightChartData.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                </span>\n              </div>\n              <br />\n\n\n\n              <b>  Intraday: {props.LightChartData.timeFrame} : {props.LightChartData.tradingsymbol}</b> <br />\n              {props.LightChartData.bblastValue ? <span item xs={12} sm={12} >\n\n                <span title=\"Green color mean price running above upper bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp >= props.LightChartData.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {props.LightChartData.bblastValue.upper.toFixed(2)}</span><br />\n                BB Middle(20 SMA): {props.LightChartData.bblastValue.middle.toFixed(2)}<br />\n                <span title=\"Green red mean price running below lower bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp <= props.LightChartData.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {props.LightChartData.bblastValue.lower.toFixed(2)}</span><br />\n              </span> : \"\"}\n\n              <span item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                VWAP:  {props.LightChartData.vwapvalue && props.LightChartData.vwapvalue.toFixed(2)}\n              </span>\n              <br />\n              <b> RSI: </b>{props.LightChartData.rsiValues && props.LightChartData.rsiValues.map((item, j) => (\n                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n              ))}\n\n\n              <br />\n              <b>Vol:</b> {props.LightChartData.valumeData && props.LightChartData.valumeData.map((item, j) => (\n                <span style={{ color: item > props.LightChartData.dailyAvgValume ? \"green\" : \"\", fontWeight: item > props.LightChartData.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n              ))}\n\n              <br />  <br />\n\n            </Grid>\n            : \"\"}\n\n\n\n          {/* <Grid item xs={12} sm={9}  >\n            <div id=\"showChartTitle\">\n            </div>\n            <div id=\"tvchart\"></div>\n          </Grid> */}\n\n\n            <Grid item xs={12} sm={9}  >\n            {localStorage.getItem('candleChartData') ? <ReactApexChart\n            options={{\n              chart: {\n                type: 'candlestick',\n                height: 350\n              },\n              title: {\n                text: '',\n                align: 'left'\n              },\n              xaxis: {\n                type: 'datetime',\n              },\n              yaxis: {\n                tooltip: {\n                  enabled: true\n                }\n              }\n            }}\n            series={[{\n              data: props.LightChartData.chartStaticData\n\n            }]}\n            type=\"candlestick\"\n            width={500}\n            height={350}\n          /> : \"\"}\n\n\n\n            </Grid>\n\n\n          </Grid>\n\n\n\n          {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n          <Grid item>\n             <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' )}>BUY</Button> \n          </Grid>\n\n          <Grid item>\n            <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={props.LightChartData.qtyToTake} onChange={this.onChangeQty} />\n          </Grid>\n\n          <Grid item >\n            <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked')}>SELL</Button> \n          </Grid>\n          </Grid> */}\n\n          {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n         \n\n\n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n          */}\n          {/* {props.LightChartData.chartStaticData ? <Test ChartData={props.LightChartData} /> : \"\"} */}\n\n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LightChartDialog from './LightChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            sluglist: {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n              //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                // 'NIFTY NEXT 50': 'juniorNifty',\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\n            },\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0,\n            refreshFlagCandle: true,\n            switchToListViewFlag: true,\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || [],\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            gainerList: localStorage.getItem('gainerList') && JSON.parse(localStorage.getItem('gainerList')) || [],\n            looserList: localStorage.getItem('looserList') && JSON.parse(localStorage.getItem('looserList')) || [],\n\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        window.document.title = \"Hit Map2\";\n\n\n        this.loadIndexesList();\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n   \n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n                    var softedData = res.data && res.data.data;\n                    softedData.sort(function (a, b) {\n                        return b.percChange - a.percChange;\n                    });\n\n\n                    this.setState({ indexTimeStamp: softedData[0].timeVal });\n\n                    var gainerList = [], looserList=[]; \n\n                    for (let index = 0; index < softedData.length; index++) {\n                        const element = softedData[index];\n                        var slugName = this.state.sluglist[element.indexName];\n                        console.log(\"element\",slugName, element.percChange);\n\n                        if (slugName) {\n                            console.log(\"secName\", element.indexName, slugName);\n                            AdminService.checkSectorApiOther(slugName).then(res => {\n                                console.log(element.indexName, res.data.data);\n                                softedData[index].stockList = res.data && res.data.data;\n                                softedData[index].time = res.data && res.data.time;\n                                this.setState({ sectorList: softedData });\n\n                                if(element.percChange >= 0.75 || (softedData[index].indexName == \"NIFTY 50\" && element.percChange >= 0.25)){\n                                    \n                                    for (let indexStock = 0; indexStock < res.data.data.length-5; indexStock++) {\n                                        const stockElement = res.data.data[indexStock];\n                                        var stockInfo ={\n                                            name : stockElement.symbol, \n                                            ltp : stockElement.ltP, \n                                            nc : stockElement.iislPercChange,\n                                            sector: softedData[index].indexName,\n                                            foundAt : new Date().toLocaleString()   \n                                        }\n\n                                        var isfound = this.state.gainerList.filter(row => row.symbol == stockElement.symbol);\n                                         console.log(stockElement.symbol, isfound); \n                                        if(!isfound.length){\n                                            gainerList.push(stockInfo); \n                                        }\n\n                                    } \n                                    localStorage.setItem('gainerList', JSON.stringify(gainerList)); \n                                }\n                                if(element.percChange <= -0.75 || (softedData[index].indexName == \"NIFTY 50\" && element.percChange <= -0.25)){\n                                    \n                                    var sectorStock = res.data.data; \n                                    sectorStock.reverse(); \n                                    \n                                    for (let indexStock = 0; indexStock < res.data.data.length-5; indexStock++) {\n                                        const stockElement = res.data.data[indexStock];\n                                        var stockInfo ={\n                                            name : stockElement.symbol, \n                                            ltp : stockElement.ltP, \n                                            nc : stockElement.iislPercChange,\n                                            sector: softedData[index].indexName,\n                                            foundAt : new Date().toLocaleString()  \n                                        }\n\n                                        var isfound = this.state.looserList.filter(row => row.symbol == stockElement.symbol);\n                                         console.log(stockElement.symbol, isfound); \n                                        if(!isfound.length){\n                                            looserList.push(stockInfo); \n                                        }\n\n                                    } \n                                    localStorage.setItem('looserList', JSON.stringify(looserList)); \n                                }\n\n                            }).catch(error => {\n                                // Notify.showError(element.indexName + \"fail to get stockdata\"); \n                                console.log(\"list fetch error\", error)\n                            })\n                        }\n                    }\n\n                }\n            })\n            .catch((reject) => {\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({ stockUpdate: index });\n\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n        // this.refreshSectorCandleManually(index); \n        //  this.checkLast5MinMovement(index); \n\n\n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\n\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"19:00:00\";\n                else\n                    return \"01:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"23:00:00\";\n                else\n                    return \"03:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"24:21:00\";\n                else\n                    return \"07:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"28:01:00\";\n                else\n                    return \"10:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"100:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n    \n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if(element){\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n                  \n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                 //   this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n\n\n    showCandleChartPopUp = (symbol) => {\n\n\n        // //  candleData  = candleData && candleData.reverse();\n\n        // // localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        // localStorage.setItem('cadleChartSymbol', symbol);\n        // // localStorage.setItem('candlePriceShow', price);\n        // // localStorage.setItem('candleChangeShow', change);\n        // // localStorage.setItem('vwapDataChart', vwapDataChart);\n\n        // document.getElementById('showCandleChart').click();\n\n  \n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var isThere = watchList.filter(row => row.name === symbol);\n        if(isThere && isThere.length){\n\n            let stock = isThere[0]; \n\n           \n\n            this.dailyBasisInfoCheck( stock.token);\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n           // var beginningTime = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\":  stock.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(beginningTime).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n    \n    \n            AdminService.getHistoryData(data).then(res => {\n                let historyData = resolveResponse(res, 'noPop');\n                    console.log(\"candledata\", historyData); \n                if (historyData && historyData.data) {\n    \n                    var data = historyData.data;\n    \n                    const cdata = data.map(d => {\n                        return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                    });\n\n                    \n\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                    data.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n                        volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n    \n                    });\n    \n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n                    }\n    \n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n    \n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n    \n                    var inputRSI = { values: closeingData, period: 14 };\n                    var rsiValues = RSI.calculate(inputRSI);\n    \n                    console.log(stock.symbol, \"Rsi\", inputRSI, rsiValues);\n                    console.log(stock.symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var data = {\n                        \"exchange\":stock.exch_seg,\n                        \"tradingsymbol\": stock.symbol,\n                        \"symboltoken\": stock.token,\n                    }\n                    AdminService.getLTP(data).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;  \n                        \n                        LtpData.change =  (LtpData.ltp - LtpData.close) * 100 /  LtpData.close; \n\n\n\n                        this.showCandleChart(candleChartData, stock.symbol, LtpData.ltp , LtpData.change);  \n\n                       \n                        // this.setState({InstrumentLTP: LtpData , selectedSymbol : stock.symbol,  chartStaticData: candleChartData, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                            \n                        //     document.getElementById('showLightCandleChart').click();\n                        // });\n            \n                    \n                    })\n\n                }\n            })\n        }\n\n       \n\n\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber = (number) => {\n\n        if (number) {\n            return number.toFixed(2);\n        } else {\n            return number;\n        }\n    }\n    switchToListView = () => {\n        this.setState({ switchToListViewFlag: !this.state.switchToListViewFlag });\n    }\n\n    get5DaysMoveCount =(symbol)=> {\n        var isThere = this.state.slowMotionStockList.filter(row => row.name === symbol);\n        if (isThere.length) {\n           return \"SM: \" + isThere[0].bigCandleCount ;  \n        }else{\n            return '';\n        }\n    }\n\n    getDeliveryInfo =(symbol)=> {\n         \n        AdminService.getDeliveryData(symbol).then(resd => {\n            if(resd && resd.data &&  resd.data.length)\n            return \"D2T%: \" +  resd.data[0].deliveryToTradedQuantity; \n        });\n       \n    }\n    \n    render() {\n\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n        //         return b.nc - a.nc;\n        //     });\n        // });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <LightChartDialog LightChartData = {{InstrumentLTP : this.state.InstrumentLTP, DailyBulishStatus: this.state.DailyBulishStatus, todayCurrentVolume : this.state.todayCurrentVolume,  selectedSymbol : this.state.selectedSymbol,  chartStaticData: this.state.chartStaticData, bblastValue: this.state.bblastValue, vwapvalue: this.state.vwapvalue, rsiValues: this.state.rsiValues, valumeData: this.state.valumeData }} />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\n                            &nbsp;\n                            <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button> \n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n                            <Button onClick={() => this.switchToListView()}>switch to list view</Button>\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {!this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\n                        indexdata.stockList ? <Grid item xs={12} sm={3}>\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Button>\n                            &nbsp;\n\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                <ShowChartIcon />\n                            </Button> */}\n\n                                <Typography variant=\"body1\" >\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13, 8)}\n                                </Typography>\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\n                                                </Typography>\n\n\n                                                {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                    <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ?\n                                                    <Typography >\n                                                        {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                        &nbsp;\n                                                        {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                    </Typography>\n                                                    : \"\"}\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                options={{\n                                                    chart: {\n                                                        type: 'candlestick',\n                                                        //  height: 40\n\n                                                    },\n                                                    title: {\n                                                        text: '',\n                                                        align: 'left'\n                                                    },\n                                                    xaxis: {\n                                                        type: 'datetime',\n                                                    },\n                                                    yaxis: {\n                                                        tooltip: {\n                                                            enabled: true\n                                                        }\n                                                    }\n                                                }}\n                                                series={[{\n                                                    data: sectorItem.candleChartData\n\n                                                }]}\n                                                type=\"candlestick\"\n                                    \n                                            /> : \"\"} */}\n\n\n                                                {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\n                                                </Grid>\n                                            </Grid>\n                                            */}\n\n\n                                            </Paper>\n\n\n                                        </Grid>\n                                    ))\n                                    }\n                                </Grid>\n\n                            </Paper>\n                        </Grid> : \"\"\n\n                    )) : \"\"}\n\n\n                    <Table id=\"tabledata\" aria-label=\"a dense table\" stickyHeader size=\"small\" >\n                        <TableBody hover style={{whiteSpace: \"nowrap\" }} >\n\n\n                            {this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                                indexdata.stockList ? <TableRow hover={true} key={index}>\n                                    <TableCell>\n                                        <Typography variant=\"body1\" >\n                                          {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)\n                                            {/* &nbsp; {indexdata.time} */}\n                                        </Typography>\n                                    </TableCell>\n                                   \n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <TableCell style={{ textAlign: \"left\", }} >\n                                            <div style={{padding:\"5px\"}}> \n                                              <Button size=\"small\" onClick={() => this.showCandleChartPopUp(sectorItem.symbol)}>\n                                                  <span style={{ background: this.getPercentageColor(sectorItem.iislPercChange)}}>  <b>{i + 1}.</b> {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%) </span>\n                                                  <span title=\"last 5 days 5min big movement  maximum count\">&nbsp;{this.get5DaysMoveCount(sectorItem.symbol)}  </span> \n                                                  \n                                                  {/* <span title=\"Delivery Info\">&nbsp;{this.getDeliveryInfo(sectorItem.symbol)}  </span>  */}\n\n                                                  \n                                            </Button>  \n\n                                            </div>\n\n\n                                        </TableCell>\n                                    ))\n                                    }\n\n                                </TableRow>\n                                : \"\"\n\n                            )) : ''}\n\n\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Fast Movement\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 5 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 5 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n      \n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n\n        if(!isfound.length){\n\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  ); \n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            var upsidecount = 0, downsidecount = 0, startingRsiupside = lastRsiValue[2], startingRsiDownside = lastRsiValue[2];\n                            lastRsiValue.forEach((element, i) => {\n                                if (i > 2 && element >= 55 && element <= 65) {\n                                    if (startingRsiupside <= element) {\n                                        startingRsiupside = element;\n                                        upsidecount += 1;\n                                    }\n                                }\n\n                                if (i > 2 && element >= 35 && element <= 45) {\n                                    if (element <= startingRsiDownside) {\n                                        startingRsiDownside = element;\n                                        downsidecount += 1;\n                                    }\n                                }\n                            });\n\n                            var volumeUpside = valumeData[2], volUpCount =0;                          \n                            valumeData.forEach((element, i) => {\n                                if (i > 2 && volumeUpside < element) {\n                                    volumeUpside = element;\n                                    volUpCount += 1;\n                                }\n                            });\n\n                            console.log(watchList[index].symbol, \"valumeData\", valumeData, );\n\n                            console.log(watchList[index].symbol, \"last continue rsi\", upsidecount);\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" RSI rising :\" + upsidecount });\n                        \n\n                            if (upsidecount >= 2 || downsidecount >= 2) {\n                                if (this.state.BBBlastType == 'BBBlastOnly') {\n                                    if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                        let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"BUY\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM: Buy \" + watchList[index].symbol;\n                                    }\n                                    if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                       let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"SELL\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                    }\n                                } else {\n\n                                    let timeDuration = this.getTimeFrameValue('ONE_DAY');\n                                    var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n                                    var startDateforDaily = moment(new Date()).subtract(time);\n                                    var dataDay = {\n                                        \"exchange\": watchList[index].exch_seg,\n                                        \"symboltoken\": watchList[index].token,\n                                        \"interval\": 'ONE_DAY',\n                                        \"fromdate\": moment(startDateforDaily).format(format1),\n                                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                                    }\n                                    AdminService.getHistoryData(dataDay).then(resd => {\n                                        let histdatad = resolveResponse(resd, 'noPop');\n                                        var DSMA = '';\n                                        if (histdatad && histdatad.data && histdatad.data.length) {\n                                            var candleDatad = histdatad.data;\n                                            var closeingDatadaily = [];\n                                            candleDatad.forEach((element, loopindex) => {\n                                                closeingDatadaily.push(element[4]);\n                                            });\n\n                                            DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n\n                                            var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                                            console.log(watchList[index].symbol, \"DSMA\", DSMALastValue);\n\n                                            if (LtpData.ltp > DSMALastValue && bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                \n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"BUY\",\n                                                    name: watchList[index].name,\n                                                    \n                                                }; \n                                                \n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB  buy');\n                                                window.document.title = \"FM: Buy \" + watchList[index].symbol;\n\n                                            }\n                                            if (LtpData.ltp < DSMALastValue && bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"SELL\",\n                                                    name: watchList[index].name,\n                                                }\n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB sell');\n                                                window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                            }\n                                        }\n\n\n                                    });\n\n                                }\n                            }\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n                                    \n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType : \"BBStrongBreakout\",\n            qtyToTake:'',\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"FM2\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 2 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 2 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n        if(!isfound.length){\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  );\n            return true; \n          \n        }else{\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                 //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                 //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                        \n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \n                            // valumeData.forEach((element, i) => {\n                            //     if (i > 2 && volumeUpside < element) {\n                            //         volumeUpside = element;\n                            //         volUpCount += 1;\n                            //     }\n                            // });\n\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\"  });\n                        \n                            let isFound = false; \n\n                            if (this.state.BBBlastType == 'BBStrongBreakout') {\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length-1][2] == candleData[candleData.length-1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt : candleData && candleData[candleData.length-1][0],\n                                        orderType: \"BUY\",\n                                        name: watchList[index].name,\n                                    }\n                                   \n                                    if(this.updateToLocalStorage(data)){\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" BUY Eligible\" });\n                                    }\n                                \n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length-1][3] == candleData[candleData.length-1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                   let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt : candleData && candleData[candleData.length-1][0],\n                                        orderType: \"SELL\",\n                                        name: watchList[index].name,\n                                    }\n                                    if(this.updateToLocalStorage(data)){\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" SELL Eligible\" });\n                                    }\n                                   \n                                }else{\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" Not Eligible\" });\n                                }\n                            }\n\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol, \n                    qtyToTake : this.state.qtyToTake\n                }\n                console.log(symbolInfo); \n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone );\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                console.log(symbolInfo); \n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                {/* <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem> */}\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n\n                                \n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true, \n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList :  [],  //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n            sortedType : \"pChange\"\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.checkLiveBids();\n        }, 10 * 60000);\n\n        this.checkLiveBids(); \n\n       \n    }\n\n   \n \n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkLiveBids();\n\n        });\n    }\n\n\n    checkLiveBids = async() => {\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({liveBidsList : [] });\n\n\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n          \n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n                \n                console.log(\"bid\",resd.data.data ); \n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if(resd.data && resd.data.data.length){\n\n                    let bidlivedata = resd.data.data[0]; \n                    // let biddata = {\n                    //     totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                    //     totalSellQuantity: bidlivedata.totalSellQuantity,\n                    //     deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                    //     symbol : bidlivedata.symbol, \n                    //     orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity, \n                    //     nc : bidlivedata.pChange, \n                    //     ltp : bidlivedata.lastPrice, \n                    // }\n \n                    bidlivedata.quantityTraded = bidlivedata.quantityTraded != '-' ?  parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : \"-\"; \n                    bidlivedata.deliveryQuantity =  bidlivedata.deliveryQuantity != '-' ?  parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')) : \"-\";  \n                    \n\n                    bidlivedata.totalBuyQuantity =  bidlivedata.totalBuyQuantity != '-' ?  parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) : \"-\";  \n\n                    bidlivedata.totalSellQuantity =  bidlivedata.totalSellQuantity != '-' ?  parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : \"-\";  \n                    bidlivedata.totalTradedVolume =  bidlivedata.totalTradedVolume != '-' ?  parseFloat(bidlivedata.totalTradedVolume.split(\",\").join('')) : \"-\";  \n                    bidlivedata.totalTradedValue =  bidlivedata.totalTradedValue != '-' ?  parseFloat(bidlivedata.totalTradedValue.split(\",\").join('')) : \"-\";  \n\n                    \n                    this.state.liveBidsList.sort(function (a, b) {\n                        return b.pChange - a.pChange;\n                    });\n\n\n\n                    if(bidlivedata.totalBuyQuantity/bidlivedata.totalSellQuantity > 1.25){\n                        CommonMethods.speckIt(bidlivedata.symbol + \" buying bid \" + (bidlivedata.totalBuyQuantity/bidlivedata.totalSellQuantity ).toFixed(2) +\" of seller\");\n                        bidlivedata.highlight = true; \n                    }\n\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, bidlivedata] , lastUpdateTime : resd.data.lastUpdateTime}, function(){\n                        \n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList)); \n                        window.document.title = \"Del: \" + this.state.liveBidsList[0].symbol;\n\n\n                    });\n    \n        \n                }\n                \n            });\n            await new Promise(r => setTimeout(r, 200));  \n        }\n   \n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat =(str)=> {\n        if(!isNaN(str)){\n            return   \"(\" + (str/100000).toFixed(2)+ \"L)\"; \n        }\n           \n        \n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn =(type)=>{\n\n        this.state.liveBidsList.sort(function (a, b) {\n            return b[type] - a[type];\n        });\n\n        this.setState({liveBidsList : this.state.liveBidsList, sortedType: type});\n\n    }\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n     \n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                                     <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                       {this.state.selectedWatchlist} ({this.state.liveBidsList.length}) updated at {this.state.lastUpdateTime}\n                                    </Typography> \n\n                                    <span>Sorted By:  {this.state.sortedType} </span>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    \n\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkLiveBids()}>Refresh</Button>\n                    </Grid>\n\n                </Grid>\n\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                              \n                                     <TableCell   align=\"left\"><Button  onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\n                                     <TableCell  align=\"center\">Average Price</TableCell>\n                                     <TableCell  align=\"center\"><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalBuyQuantity\")}> Total Buy Quantity</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalSellQuantity\")}> Total Sell Quantity</Button>  </TableCell>\n\n\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell>\n\n                                    <TableCell  align=\"center\">Day Open</TableCell>\n                                    <TableCell  align=\"center\">Day High</TableCell>\n                                    <TableCell  align=\"center\">Day Low</TableCell>\n                                    <TableCell  align=\"center\">Previous Close</TableCell>\n\n                \n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n\n                            {this.state.liveBidsList ? this.state.liveBidsList.map((row, i)  => (\n                                <TableRow hover key={i} style={{ background :this.getPercentageColor(row.pChange)}}>\n                                    \n                                    <TableCell  align=\"left\">{row.symbol} {row.lastPrice} ({row.pChange}%)</TableCell>\n                                    <TableCell  align=\"left\">{row.averagePrice}</TableCell>\n\n                                    \n                                    <TableCell  align=\"center\">{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell>\n                                    <TableCell  align=\"center\">{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.deliveryToTradedQuantity}%</TableCell>\n                                    <TableCell style={{background: row.highlight ? \"lightgray\" : \"\"}} align=\"center\">{row.totalBuyQuantity} {this.convertToFloat(row.totalBuyQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalSellQuantity} {this.convertToFloat(row.totalSellQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalTradedValue}Cr</TableCell>\n\n                                    <TableCell  align=\"center\">{row.open}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayHigh}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayLow}</TableCell>\n                                    <TableCell  align=\"center\">{row.previousClose}</TableCell>\n\n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n  var lightChartData = props.chartData.chartStaticData; //localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\n \n  console.log('lightChartData', lightChartData); \n\n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {},\n    timeFrame: \"FIVE_MINUTE\"\n})\n\n\n  const handleTimeFrame = (e) => {\n    console.log(e.target.value);\n    props.chartData.updateTimeFrameChart(lightChartData.token,e.target.value );\n\n    setValues({timeFrame: e.target.value}); \n  };\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n      \n\n{/* \n        <FormControl style={{minWidth: '10%', }} >\n            <Select value={values.timeFrame} name=\"timeFrame\" onChange={handleTimeFrame}>\n                <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n            </Select>\n        </FormControl> */}\n\n        &nbsp;\n         \n        {lightChartData.name}   {lightChartData.ltp}  ({lightChartData.change}%)\n\n        \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n         \n\n        <LightChartCom chartData={{candleSeries:lightChartData.lightChartData, volumeSeries: lightChartData.volumeSeriesData}}/>\n       \n\n\n        </DialogContent>\n        <DialogActions>\n\n\n       \n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport * as moment from 'moment';\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport Parser from 'html-react-parser';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nimport ChartDialog from './ChartDialog';\nimport LightChartModel from './LightChartModel';\n\n\n\nclass OrderBook extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData: [],\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            selectAllzone: 'Select All',\n            triggerprice: 0,\n            price: 0,\n            lotsize: 0,\n            firstTimeFlag: true,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            qtyToTake: '',\n            BBBlastType: \"BBBlastOnly\",\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            sortedType: \"isActivated\",\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || []\n\n        }\n    }\n\n\n\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            var tostartInteral = setInterval(() => {\n                var time = new Date();\n                if (time.getMinutes() % 5 === 0) {\n                    setTimeout(() => {\n                        this.checkSlowMotionCheckLive();\n                    }, 70000);\n                    setInterval(() => {\n                        this.checkSlowMotionCheckLive();\n                        this.activationToLtpChange();\n                    }, 60000 * 5 + 70000);\n                    clearInterval(tostartInteral);\n                }\n            }, 1000);\n\n        }\n\n    }\n\n\n\n    onChangeWatchlist = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkSlowMotion();\n\n        });\n    }\n\n\n    checkSlowMotion = async () => {\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n\n\n        this.setState({ scanUpdate: \"\" });\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n\n            var isfound = this.state.slowMotionStockList.filter(item => item.token == row.token);\n            if (!isfound.length) {\n                this.checkSlowMotionStock(row.token, row, index + 1);\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n        }\n\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                return \"720:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                    return \"2160:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                    return \"2160:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                return \"2160:00:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"4320:00:00\";\n                break;\n            case 'ONE_DAY':\n                return \"8760:00:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    updateTimeFrameChart=(token, timeFrame)=>{\n\n        console.log( token,timeFrame );\n\n        let time = this.getTimeFrameValue(timeFrame);\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": timeFrame,\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\n\n                for (let index = 0; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n                }\n\n                const lightChartData = candleDatad.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n   \n\n                var lightChartinfo = localStorage.getItem('lightChartData') && JSON.parse(localStorage.getItem('lightChartData'));\n\n                lightChartinfo.lightChartData = lightChartData; \n                lightChartinfo.volumeSeriesData = volumeSeriesData; \n                localStorage.setItem('lightChartData', JSON.stringify(lightChartinfo)); \n\n                this.setState({chartStaticData: lightChartinfo});\n            }\n\n     \n        });\n  }\n\n\n\n    checkSlowMotionStock = (token, stock, stockindex) => {\n        var beginningTime = moment('9:15am', 'h:mma');\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0, volumeSeriesData=[];\n\n                var bigCandleCount = 0;\n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n\n                    if (element) {\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                    }\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                }\n\n\n                console.log(\"Totalcount\", stock.name, bigCandleCount, volumeSeriesData);\n\n                this.setState({ scanUpdate: \"Scan: \" + stockindex + \". \" + stock.name + \" maxCount: \" + bigCandleCount })\n\n                if (bigCandleCount <= 15) {\n\n                    var isfound = this.state.slowMotionStockList.filter(item => item.token == token);\n                    if (!isfound.length) {\n                        stock.bigCandleCount = bigCandleCount;\n                        stock.sectorName = this.state.selectedWatchlist;\n\n                        var candleChartData = []; \n                        candleDatad.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        const lightChartData = candleDatad.map(d => {\n                            return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                        });\n        \n\n\n                       // stock.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1));  \n                        stock.candleChartData = candleChartData;  \n                        stock.lightChartData =  lightChartData; \n                        stock.volumeSeriesData =  volumeSeriesData;\n\n                        this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\n                            localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                        });\n                    }\n        \n\n                   \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async () => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            if (!row.isActivated) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var time = moment.duration(\"50:00:00\");  //22:00:00\" for last day  2hours \n                var startDate = moment(new Date()).subtract(time);\n                var beginningTime = moment('9:15am', 'h:mma');\n\n                var dataDay = {\n                    \"exchange\": 'NSE',\n                    \"symboltoken\": row.token,\n                    \"interval\": 'FIVE_MINUTE',\n                    \"fromdate\": moment(startDate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n                AdminService.getHistoryData(dataDay).then(resd => {\n                    let histdatad = resolveResponse(resd, 'noPop');\n                    var DSMA = '';\n                    if (histdatad && histdatad.data && histdatad.data.length) {\n                        var candleDatad = histdatad.data;\n                        var closeingDatadaily = [], valumeSum = 0;\n\n                        var bigCandleCount = 0, midBullishCount = 0, bullishCount = 0, activationTime = \"\", activationPrice = 0;\n\n                        for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\n                            const element = candleDatad[index];\n\n                            if (element) {\n                                var per = (element[4] - element[1]) * 100 / element[1];\n                                if (per >= 1) {\n                                    bigCandleCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0.5) {\n                                    midBullishCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0) {\n                                    bullishCount += 1;\n                                }\n                            }\n                        }\n\n                        var candleChartData = [];\n                        candleDatad.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        //row.candleChartData = candleChartData.slice(Math.max(candleChartData.length - 10, 1)); \n                        row.candleChartData = candleChartData; \n                        \n                        \n                        let update = Parser(\"Update: \" + (index + 1) + \".\" + row.name + \" large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b>\" ); \n                \n                        this.setState({ scanUpdate:  update})\n                        console.log(row.symbol, bigCandleCount, midBullishCount, bullishCount);\n\n                        let updatetopage = \"large(1%): <b>\" + bigCandleCount +\"</b> &nbsp;mid(0.5%): <b>\"+ midBullishCount+\"</b> &nbsp;small(>0%): <b>\"+ bullishCount+\"</b> at \" + new Date(candleDatad[candleDatad.length-1][0]).toLocaleTimeString(); \n\n                        row.update = updatetopage; \n\n                        if (bigCandleCount >= 1 || (midBullishCount >= 1 && bullishCount >= 2)) {\n\n                            row.isActivated = true;\n                            row.activationTime = activationTime;\n                            row.activationPrice = activationPrice;\n\n                            window.document.title = \"SM: \" + row.symbol;\n                            console.log('hey, slow motion stock' + row.symbol + \" broken\");\n\n                            this.speckIt('hey, slow motion stock' + row.symbol + \" broken\");\n                            this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                                this.sortByColumn(\"isActivated\");\n                                localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                            })\n                            \n                        }\n\n                       \n\n                    }\n\n                });\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n\n        }\n\n    }\n\n    activationToLtpChange = async() => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": row.symbol,\n                \"symboltoken\": row.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                   row.ltp = LtpData.ltp;\n                   row.change = ((LtpData.ltp -  LtpData.close)*100/LtpData.close).toFixed(2);\n\n                   if(row.activationPrice){\n                    row.AtoltpChng = ((LtpData.ltp-row.activationPrice)*100/row.activationPrice).toFixed(2); \n                   }\n              \n                   this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                    })\n                }\n\n            })\n\n            await new Promise(r => setTimeout(r, 125));\n        }\n    }\n\n\n    showCandleChart = (candleData, symbol) => {\n\n        if(candleData.length>0){\n            localStorage.setItem('candleChartData', JSON.stringify(candleData))\n            localStorage.setItem('cadleChartSymbol', symbol)\n            document.getElementById('showCandleChart').click();\n        }\n       \n    }\n\n    showLightChart = (row) => {\n\n\n        console.log(\"row\",row)\n        \n        if(row.lightChartData.length>0){\n            localStorage.setItem('lightChartData', JSON.stringify(row));\n            this.setState({chartStaticData: row}, function(){\n                document.getElementById('showLightChart').click();\n            });\n        }\n       \n    }\n\n    \n\n\n    deleteAllScan = () => {\n\n        if(window.confirm(\"Are you sure to delete all scan stocks?\")){\n            this.setState({ slowMotionStockList: []})\n            localStorage.setItem(\"slowMotionStockList\",[]);\n        }\n     \n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat = (str) => {\n        if (!isNaN(str)) {\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\n        }\n\n\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn = (type) => {\n\n        this.state.slowMotionStockList.sort(function (a, b) {\n            if (type == \"isActivated\" && a.isActivated) {\n                return (a.isActivated === b.isActivated) ? 0 : a ? -1 : 1;\n            } else {\n                return b[type] - a[type];\n            }\n        });\n\n        this.setState({ slowMotionStockList: this.state.slowMotionStockList, sortedType: type });\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n\n\n                {window.location.hash !== \"#/position\" ? <PostLoginNavBar /> : \"\"}\n\n\n                <ChartDialog />\n\n                {this.state.chartStaticData ? \n                <LightChartModel chartData={{updateTimeFrameChart : this.updateTimeFrameChart, chartStaticData : this.state.chartStaticData}} /> \n                : \"\"}\n                <Grid direction=\"row\" alignItems=\"center\" container>\n                    <Grid item xs={12} sm={12} >\n\n                        <Paper style={{ padding: \"10px\" }} >\n\n                            <Grid justify=\"space-between\"\n                                container spacing={1}>\n\n                                <Grid item xs={12} sm={4} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                      Slow Motion ({this.state.slowMotionStockList.length})  <DeleteIcon  onClick={() => this.deleteAllScan()}/>  found at {new Date().toLocaleString()}\n                                    </Typography>\n                                    {this.state.sortedType ? <> <b> Sorted By: </b> {this.state.sortedType}  </> : \"\"}\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n\n                                <Grid item xs={12} sm={4} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotion()}>Scan</Button>\n                            \n                                    {this.state.scanUpdate ? <>{this.state.scanUpdate}  </> : \"\"}\n                                    </Grid>\n\n                                <Grid item xs={12} sm={2} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotionCheckLive()}>Refresh</Button>\n                                </Grid>\n\n                                \n\n                            </Grid>\n\n\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\">\n                                        <TableCell align=\"left\">Sr.</TableCell>\n\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pchange\")}>Symbol</Button> </TableCell>\n                                        <TableCell align=\"center\">Sector</TableCell>\n\n                                        <TableCell align=\"center\">Max Count</TableCell>\n\n\n\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"isActivated\")}>Is Activated</Button></TableCell>\n                                        <TableCell align=\"center\">Activate Time</TableCell>\n                                        <TableCell align=\"center\">Activation Price</TableCell>\n                                        <TableCell align=\"center\">Last Update</TableCell>\n                                        <TableCell align=\"center\"><Button onClick={() => this.activationToLtpChange()}>A.toLtpChng</Button></TableCell>\n\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n\n\n\n                                    {this.state.slowMotionStockList ? this.state.slowMotionStockList.map((row, i) => (\n                                        <TableRow hover key={i} style={{ background: row.isActivated ? \"lightgray\" : \"\" }}>\n                                            <TableCell align=\"left\">{i + 1}</TableCell>\n\n                                            {/* <TableCell align=\"left\"> <Button size=\"small\" variant=\"contained\" style={{ color: !row.change ? '' : row.change > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.name)}> {row.name} {row.ltp}  {row.change ? \"(\" + row.change+ \"%)\" : \"\" }  <EqualizerIcon /> </Button></TableCell> */}\n                                            <TableCell align=\"left\"> <Button size=\"small\" variant=\"contained\" style={{ color: !row.change ? '' : row.change > 0 ? 'green' : 'red' }} onClick={() => this.showLightChart(row)}> {row.name} {row.ltp}  {row.change ? \"(\" + row.change+ \"%)\" : \"\" }  <EqualizerIcon /> </Button></TableCell>\n\n\n                                            \n                                            <TableCell align=\"center\">{row.sectorName}</TableCell>\n                                            <TableCell align=\"center\">{row.bigCandleCount}</TableCell>\n\n                                            <TableCell align=\"center\">{row.isActivated ? \"Yes\" : \"No\"}</TableCell>\n                                            <TableCell align=\"center\">{row.activationTime}</TableCell>\n                                            <TableCell align=\"center\">{row.activationPrice}</TableCell>\n                                            <TableCell align=\"center\">{row.update ? Parser(row.update): \"\"}</TableCell>\n                                            <TableCell align=\"center\">{row.ltp} {row.AtoltpChng ? \"(\" + row.AtoltpChng+ \"%)\" : \"\" }</TableCell>\n\n                                        </TableRow> \n                                    )) : <Spinner />}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType: \"BBStrongBreakout\",\n            qtyToTake: '',\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            findlast5minMovement: []\n\n        };\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Index Charts\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 10 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 10 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"100:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"100:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage = (row) => {\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n        var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n        console.log(\"isfound\", isfound);\n        if (!isfound.length) {\n            var updateData = {\n                token: row.token,\n                foundAt: foundAt,\n                ltp: row.ltp,\n                symbol: row.symbol,\n                nc: row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData);\n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList));\n            return true;\n\n        } else {\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"1000:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], lightcandleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear(), month: new Date(element[0]).getMonth(), day: new Date(element[0]).getDate() }\n\n                        //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y: (element[2] + element[3] + element[4]) / 3\n                        });\n\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n\n                  \n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n                            let data = {\n                                symbol: watchList[index].symbol,\n                                token: watchList[index].token,\n                                RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                RSI: lastRsiValue.slice(Math.max(lastRsiValue.length - 8, 1)),\n                                valumeData: valumeData.slice(Math.max(valumeData.length - 8, 1)),\n                                VWAP: vwap(vwapdata),\n                                BB: bbvlastvalue,\n                                candleChartData: candleChartData,\n                                foundAt: candleData &&   new Date(candleData[candleData.length - 1][0]).toLocaleString(),\n                                name: watchList[index].name,\n                            }\n        \n                            data.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\n                            data.ltp = LtpData.ltp; \n\n                            this.setState({ findlast5minMovement: [...this.state.findlast5minMovement, data] });\n\n                        }\n                    }); \n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake: this.state.qtyToTake\n                }\n                console.log(symbolInfo);\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp; {this.state.selectedWatchlist} Stocks ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n{/* \n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n       \n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n\n\n\n                            </Select>\n                        </FormControl>\n                    </Grid> */}\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                \n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.name} {row.ltp} {row.perChange ? \"(\" + row.perChange + \"%\" + \")\" : \"\"} <span> &nbsp;&nbsp;  {row.foundAt}</span></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n\n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ? <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'right'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    },\n                                        // {\n                                        //     name: 'line',\n                                        //     type: 'line',\n                                        //     data: [\n                                        //         row.lightcandleChartData\n                                        //     ]\n                                        //   }\n\n                                    ]}\n\n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n\n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP} \n                                    </Grid>\n\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB && row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB && row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB && row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB && row.BB.lower}</span>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={12}>\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} </span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} </span>\n                                        ))}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        Volume: {row.valumeData.map((item, j) => (\n                                            <span> {(item/100000).toFixed(2)}L </span>\n                                        ))}\n                                    </Grid>\n\n\n\n                                  \n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                        <TextField  style={{ marginTop: '-15px' }} label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\nimport NiftyView from \"./MyTrade/NiftyView\";\nimport BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\nimport Test from \"./MyTrade/Test\";\n\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\n\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\nimport FindFastMovement2 from \"./MyTrade/FindFastMovement2\";\n\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\nimport DeliveryData from \"./MyTrade/DeliveryData\";\nimport SlowMotion from \"./MyTrade/SlowMotion\";\nimport IndexCharts from \"./MyTrade/IndexCharts\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    <Route path=\"/nifty-view\" component={NiftyView}/>\n                    <Route path=\"/bn-view\" component={BankNiftyView}/>\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\n\n\n                    \n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n                    <Route path=\"/find-fast-movement2\" component={FindFastMovement2}/>\n\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\n                    <Route path=\"/delivery\" component={DeliveryData}/>\n                    <Route path=\"/slow-motion\" component={SlowMotion}/>\n\n                    <Route path=\"/index-charts\" component={IndexCharts}/>\n                    <Route path=\"/test\" component={Test}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}