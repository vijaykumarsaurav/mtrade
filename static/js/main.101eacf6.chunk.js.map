{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/LineChart.js","components/MyTrade/SectorHeatMap.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","foundPatternList","reverse","FoundPatternDialog_DialogTitle","FoundPatternDialog_DialogContent","Table","stickyHeader","size","TableRow","TableCell","TableBody","map","idata","hover","key","marginLeft","candleData","candleChartData","symbol","getElementById","click","Equalizer_default","pattenName","time","BuyAt","SellAt","FoundPatternDialog_DialogActions","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","clsx","edge","Menu_default","item","noWrap","direction","FoundPatternDialog_CustomizedDialogs","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","Date","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","wsClint","w3cwebsocket","Home","autoCompleteSearch","console","log","autoSearchList","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","fromDate","startDate","endDate","getLTP","exchange","tradingsymbol","symboltoken","LtpData","InstrumentLTP","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","firstTime_req","feedToken","send","updateSocketWatch","channel","sbin","task","user","acctid","stopBacktesting","stopScaningFlag","backTestAnyPattern","asyncToGenerator","regenerator_default","mark","_callee","startdate","enddate","currentMoment","endMoment","watchList","runningTest","_loop","wrap","_context2","prev","next","backTestResult","backTestFlag","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","moment","isSameOrBefore","backTestNR4DatewiseRange","r","setTimeout","add","_context","interval","fromdate","todate","getHistoryData","histdata","index2","last10Candle","slice","next10Candle","toLocaleTimeString","backtestTweezerTop","backtestTweezerBottom","stockTesting","stop","delegateYield","_callee2","_loop2","_context4","FoundPatternList","_context3","subtract","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","toFixed","sellenty","foundStock","toString","high","low","close","nr4CheckPastPerfommance","catch","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","toLocaleString","stopLoss","brokerageCharges","quantity","Math","floor","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","toConsumableArray","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","minPrice","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee3","sumPercentage","_loop3","_context6","searchFailed","_context5","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref4","_callee4","_loop4","_context8","_context7","dateWithWlType","selectedWatchlist","datewisetrades","perChngOnLow","_x","apply","_callee5","_loop5","_context10","_context9","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","round","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","placeOrder","transactiontype","slmOrderType","variety","ordertype","buyPrice","producttype","price","squareoff","stoploss","orderid","placeSLMOrder","LoadSymbolDetails","getHistory","triggerprice","histCandles","sort","b","InstrumentHistroy","onSelectItem","values","autoSearchTemp","fdata","saveWatchListJSON","stock","resdata","search","deleteItemWatchlist","list","findIndex","splice","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","ifNotBought","_this2","beginningTime","endTime","currentTime","isoWeekday","isBetween","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","ltp","nc","onerror","setInterval","_req","_this3","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Autocomplete","freeSolo","disableClearable","paddingLeft","paddingRight","option","renderInput","params","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","Delete_default","sbinLtp","TableHead","whiteSpace","fontWeight","MaterialUIDateTimePicker","lib_default","background","colSpan","parseFloat","gutterBottom","cursor","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","textAlign","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","indexSymbolData","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","speckIt","toLocaleLowerCase","innerHTML","substring","percent","SpeechSynthesisUtterance","stopnview","indexTimeStamp","products","loadPackList","todayTime","getHours","getAllIndices","softedData","percentChange","calendar","_this4","overflow","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","connect","App","diffData","putData","callData","timeDate","totPEOI","totCEOI","diff","dateTime","chartData","labels","datasets","fill","borderColor","index_modern","maintainAspectRatio","x","y","colors","upward","downward","ApexCharts","querySelector","render","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","Paper","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","updatetime","modifyOrder","trailingstoploss","lotsize","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","hash","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","positionList","heartbeatReq","exchtime","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","today","timediff","clearInterval","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","foundData","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","findNR7PatternLive","showtestdata","last7Candle","last9Candle","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","buyavgprice","maxLossAmount","parseInt","netqty","getStoplossForSELLFromOrderbook","getPositionData","totalMaxPnL","getPosition","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","sellavgprice","pnl","buyqty","totalsellavgprice","slData","totalbuyavgprice","stopLossAmount","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","found","exch_seg","orderWithFlatstoploss","ltpPrice","stopLossPrice","perTradeStopLossPer","getMinPriceAllowTick","orderOption","placeOrderMethod","BankLtpltp","getStopLossPrice","_ref6","_callee6","slPrice","_x2","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","sellqty","updateOrderList","slmOption","modifyOrderMethod","wholenumber","decimal","getPercentage","symbolname","sqrOffbeginningTime","sqrOffendTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","getMinutes","totalDayLoss","dailyLossPer","abs","getNSETopStock","scandata","result","isFound","j","symbolName","searchRes","selectedStockInteval","getSelectedStockFromDb","_loop6","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Orderbook","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","closeData","legend","wsClintSectorUpdate","sectorItem","orderType","highestsum","bbhigerValue","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","refreshFlag","failedCount","sectorStockList","indexData","cng","sectorList","stockList","isStocksLtpUpdted","refreshSectorCandleManually","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","_x3","refreshSectorCandle","outerEelement","stockIndex","updateWatch","getPercentageColor","sleep","ms","resolve","updateLtpOnInterval","ref","_x4","_x5","autoTradeTopList","stockUpdate","indexdata","LineChart_App","AppRouter","react_router","path","exact","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.101eacf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices, '');\n    }\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Heat Map\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n  \n    <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem>\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n\n\n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values] = React.useState({\n        acquisitionCount: '',\n        resubmitCount: ''\n    });\n\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    // function handleClick(e) {\n    //     console.log(e.target.innerText)\n    //     //this.props.history.push('/login');\n    // }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n                        </Grid>\n\n                        <Grid item >\n                            <Typography variant=\"h6\" noWrap>\n                                {localStorage.getItem('BankLtpltp')}\n                            </Typography>\n\n                        </Grid>\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                                style={{ color: \"white\" }}\n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" href={\"/mtrade/#/sector-heat-map\"}>\n                                        Sector Hit Map\n                                    </Button>\n                                </Grid>\n\n\n                                <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid>\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n                    \n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n // console.log(\"startDatestartDate,\",props ); \n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\n\nimport { w3cwebsocket } from 'websocket';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"NR4_SameDay\",  //NR4ForNextDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData : localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData : [],\n            stopScaningFlag : false,\n            backTestResultDateRange : [],\n            searchFailed:0,\n            FoundPatternList : localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || []\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if( e.target.value == 'NR4_Daywide_daterage'){\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n            \n            this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange : backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] });\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) });\n\n        }\n\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        //  console.log(\"1st Request :- \" + firstTime_req);\n        wsClint.send(firstTime_req);\n\n        this.updateSocketWatch();\n\n    }\n\n    updateSocketWatch = () => {\n\n        \n\n        \n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n\n        channel = channel.join('&');\n        var sbin = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n\n        console.log(\"update watech\", sbin); \n        wsClint.send(JSON.stringify(sbin));\n    }\n\n\n    componentDidMount() {\n\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n      \n\n            wsClint.onopen  = (res) => {\n              //  this.makeConnection();\n              //  this.updateSocketWatch();\n           }\n   \n           wsClint.onmessage = (message) => {\n               var decoded = window.atob(message.data);\n               var data = this.decodeWebsocketData(pako.inflate(decoded));\n               var liveData = JSON.parse(data);\n               var symbolListArray = this.state.symbolList; \n               this.state.symbolList && this.state.symbolList.forEach((element, index)  => {\n                   var foundLive = liveData.filter(row => row.tk == element.token);\n                   if(foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc){\n                       symbolListArray[index].ltp = foundLive[0].ltp; \n                       symbolListArray[index].nc = foundLive[0].nc; \n                       console.log(\"foundLive\", foundLive);\n                   }\n               });\n               symbolListArray && symbolListArray.sort(function (a, b) {\n                   return  b.nc - a.nc;\n               });\n               this.setState({symbolList : symbolListArray}); \n           }\n   \n           wsClint.onerror = (e) => {\n               console.log(\"socket error\", e);\n           }\n   \n           setInterval(() => {\n               this.makeConnection();\n               var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n               // console.log(\"Request :- \" + _req);\n               wsClint.send(_req);\n           }, 59000);\n\n\n        }\n\n\n        var list = localStorage.getItem('watchList');\n        if (!list) {\n            localStorage.setItem('watchList', []);\n        }\n\n        // setInterval(() => {\n        //     AdminService.getAutoScanStock().then(res => {\n        //         let data = resolveResponse(res);\n        //         console.log(data);  \n        //         if(data.status  && data.message == 'SUCCESS'){ \n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \n        //         }\n        //     })    \n        // }, 2000);\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n     \n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment =startdate; \n            const endMoment = enddate; \n            \n            \n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if(this.state.stopScaningFlag){\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r,  this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n        \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n    \n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n        this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(0, 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n\n\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            \n                                var foundStock = {\n                                    foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                    symbol: element.symbol,\n                                    token : element.token, \n                                    pattenName : \"NR4\", \n                                    SellAt: sellenty,\n                                    high: firstCandle[2],\n                                    low: firstCandle[3],\n                                    BuyAt: buyentry,\n                                    candleChartData : candleChartData, \n                                    close : firstCandle[4]\n                                }\n                            \n                                this.nr4CheckPastPerfommance(element.token, foundStock) ; \n\n                            }\n\n                        }\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n            \n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    } \n\n    \n    findShortTraadeOnNextDay =(element, firstCandle, candleChartData, histdataInside)=>{\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n       // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry*1/100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true,  longTradeFound = {},   elementInside = '', buyHighest = histdataInside[0][3]; \n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n            \n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(),candle5min[1],candle5min[2],candle5min[3],candle5min[4]]); \n                if(candle5min[2] < buyHighest){\n                    buyHighest = candle5min[3]; \n                }\n               \n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if(buyEntryFlag && elementInside[3] < buyentry){\n                    console.log(element.symbol, \"taken short enty\", elementInside[3] );\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData : candleChartData,\n                    }\n                    buyEntryFlag = false; \n                }\n                                                          \n               \n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange );\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if(!buyEntryFlag && perChange >= 1){\n\n                    var sellEntyPrice = buyentry - buyentry * 1/100; \n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2] );\n\n                if(!buyEntryFlag && elementInside[2] >= buyentrySL){\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"SL_Hit\"; \n                    break;\n                }\n             \n            }\n\n            if(!buyEntryFlag && !longTradeFound.sellEntyPrice){\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus  = \"Market_End\"; \n            }\n\n            if(!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice){\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay =(element, firstCandle, candleChartData, histdataInside)=>{\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n//        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n   //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n       var buyentrySL = (buyentry - (buyentry*0.3/100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount =0,  longTradeFound = {},   elementInside = '', buyHighest = histdataInside[0][2]; \n\n\n        if (histdataInside && histdataInside.length) {\n            \n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(),candle5min[1],candle5min[2],candle5min[3],candle5min[4]]); \n                if(buyHighest < histdataInside[index][2]){\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if(buyEntryFlag && elementInside[2] > buyentry){\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData : candleChartData,\n                    }\n                    buyEntryFlag = false; \n                }\n                                                          \n               \n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n                \n            \n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if(!buyEntryFlag){\n\n                        if(firstTimeTrail && perChange >= 0.7){\n                            trailCount +=1;\n                            var minPrice =  buyentry + (buyentry * 0.1/100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus  = \"Trail by 0.1% \"+trailCount + \"time\"; \n                            firstTimeTrail = false; \n                        }else{ \n                            var lastTriggerprice =  longTradeFound.sellEntyPrice; \n                            var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n                           \n                            var buyExitPricePer =  longTradeFound.buyExitPrice; \n                            var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer)*100/buyExitPricePer).toFixed(2);   \n                           \n                            if(perchngfromTriggerPrice > 0.7){\n                                    trailCount +=1;\n                                    minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                                    longTradeFound.sellEntyPrice = minPrice;\n                                    longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                                    longTradeFound.exitStatus  = \"Trail by 0.25% \"+trailCount + \"time\"; \n                                   \n                            }else if(buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4){\n                                trailCount +=1;\n                                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                                longTradeFound.sellEntyPrice = minPrice;\n                                longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                                longTradeFound.exitStatus  = \"Min range 0.3 -0.4% \"+trailCount + \"time\"; \n                                break; \n                            }\n\n                        }\n\n                        \n\n\n\n\n                        if(elementInside[3] <= longTradeFound.sellEntyPrice){\n                            console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3] , longTradeFound.sellEntyPrice,  new Date(elementInside[0]).toLocaleString()); \n                            break; \n                        }\n\n                }\n\n                \n                if(!buyEntryFlag && elementInside[3] <= buyentrySL){\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3] , buyentrySL,  new Date(elementInside[0]).toLocaleString()); \n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"SL_Hit\"; \n                    break;\n                }\n             \n            } //candle loop end\n\n            if(!buyEntryFlag && !longTradeFound.sellEntyPrice){\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus  = \"Market_End\"; \n            }\n\n            if(!buyEntryFlag && Math.floor(100000 / buyentry)  && longTradeFound.buyExitPrice){\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\",longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed : 0});\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(1, 5);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n                           \n                                var start5thdate = moment(next5thCandle[0]).set({\"hour\": 9, \"minute\": 15});\n                                var end5thdate = moment(next5thCandle[0]).set({\"hour\": 15, \"minute\": 30});\n                            \n                                var data = {\n                                    \"exchange\": \"NSE\",\n                                    \"symboltoken\": element.token,\n                                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                    \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                    \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                                }\n                        \n                                AdminService.getHistoryData(data).then(insideCandleRes => {\n                                    let histdataInside = resolveResponse(insideCandleRes, 'noPop'); \n                                    histdataInside =  histdataInside && histdataInside.data; \n\n                                    this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n                                   // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n                        \n                                }).catch(error => {\n                                    Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                    this.setState({searchFailed : this.state.searchFailed +1})\n                                });\n\n\n                               \n                                // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                                // if (next5thCandle[2] > buyentry) {\n                                //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                //     sumPercentage += perChng;\n        \n                                //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                //     var foundStock = {\n                                //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                //         symbol: element.symbol,\n                                //         sellEntyPrice: next5thCandle[4],\n                                //         highAndLow: next5thCandle[2],\n                                //         stopLoss: firstCandle[3],\n                                //         buyExitPrice: buyentry,\n                                //         brokerageCharges: 0.06,\n                                //         perChange: perChng.toFixed(2),\n                                //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                //         quantity: Math.floor(10000 / firstCandle[2]),\n                                //         candleChartData : candleChartData,\n                                //     }\n                                //     if (Math.floor(10000 / firstCandle[2])){ \n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                //     }\n                                // }\n                                // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                                // if (next5thCandle[3] < sellenty) {\n                                //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                //     sumPercentage += perChng;\n                                //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                //     var foundStock = {\n                                //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                //         symbol: element.symbol,\n                                //         sellEntyPrice: sellenty,\n                                //         stopLoss: firstCandle[2],\n                                //         buyExitPrice: next5thCandle[4],\n                                //         highAndLow: next5thCandle[3],\n                                //         brokerageCharges: 0.06,\n                                //         perChange: perChng.toFixed(2),\n                                //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                                //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                //         quantity: Math.floor(10000 / firstCandle[3]),\n                                //         candleChartData : candleChartData\n                                //     }\n                                //     if(Math.floor(10000 / firstCandle[3])){\n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                //     }\n\n\n                                // }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({searchFailed : this.state.searchFailed +1})\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({searchFailed : this.state.searchFailed +1})\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n         //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    } \n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(1, 5);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                var currentDate = date.format('DD-MM-YYYY'); \n\n                                var dateWithWlType =  currentDate+' '+ this.state.selectedWatchlist; \n\n                                var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                                var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : []; \n                              \n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n        \n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[4],\n                                        highAndLow: next5thCandle[2],\n                                        stopLoss: firstCandle[3],\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])){ \n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                        datewisetrades.push(foundStock);\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n                                          \n                                        \n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        stopLoss: firstCandle[2],\n                                        buyExitPrice: next5thCandle[4],\n                                        highAndLow: next5thCandle[3],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if(Math.floor(10000 / firstCandle[3])){\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                        datewisetrades.push(foundStock);\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \n\n                                        console.log('backTestResultDateRange', backTestResultDateRange);\n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n                                     \n                                      //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n            \n                                        this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange : backTestResultDateRange });\n                            \n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') +' '+ index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    } \n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow : perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])){ \n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult:  this.state.backTestResult.reverse()});\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow : perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if(Math.floor(10000 / firstCandle[3])){\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs=0, totalShort=0, totalLongPer=0, totalShortPer=0, totalLongHighPer=0, totalShortLowPer=0; \n        var longCandles=[], shortCandles=[]; \n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = []; \n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount,firstCandle[0].toString().substr(0, 25)) ; \n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow : perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData : candleChartData\n                                }\n                                longCandles.push(longData); \n                                \n                                totalLongs+=1; \n                                totalLongPer+=perChng; \n                                totalLongHighPer+=perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow : perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData : candleChartData\n                                }\n                                shortCandles.push(shortData); \n\n                                totalShort+=1; \n                                totalShortPer+=perChng;\n                                totalShortLowPer+=perChngOnLow; \n\n                            }\n\n                           \n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs:totalLongs, \n                    totalShort:totalShort, \n                    totalLongPer:totalLongPer.toFixed(2),\n                    totalShortPer:totalShortPer.toFixed(2),\n                    totalLongHighPer:totalLongHighPer.toFixed(2),\n                    totalShortLowPer:totalShortLowPer.toFixed(2),\n                }\n                if(foundStock) \n                foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles; \n                foundStock.shortCandles = shortCandles; \n \n\n                 console.log(\"foundStock\",foundStock); \n                if (Math.floor(10000 / firstCandle[4])){ \n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n      \n     \n        \n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype, slmOrderType) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name) => {\n\n        console.log(\"this.state.symbolList\", this.state.symbolList);\n\n        var token = '';\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            if (this.state.symbolList[index].symbol === name) {\n                token = this.state.symbolList[index].token;\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\n                break;\n            }\n        }\n        this.getHistory(token);\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType ? slmOrderType : \"SELL\",\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (data && data.data) {\n\n                var histCandles = data.data;\n                histCandles && histCandles.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (histCandles.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy: histCandles, buyPrice: histCandles[0][2] });\n                }\n                this.getLTP();\n            }\n        })\n    }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol);\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [];\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n            if (!foundInWatchlist.length) {\n                watchlist.push(fdata);\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                AdminService.saveWatchListJSON({ stock: fdata }).then(res => {\n                    let resdata = resolveResponse(res, 'noPop');\n                    console.log(resdata);\n                });\n            }\n\n            this.setState({ symbolList: JSON.parse(localStorage.getItem('watchList')), search: \"\" });\n            this.updateSocketWatch();\n\n        }\n\n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if(insiderow)\n        localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n        \n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if(candleChartDataInside)\n        localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n        \n        document.getElementById('showCandleChart').click();\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n       \n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0;\n        var tradetotal = 0, totalWin = 0,  totalLoss  = 0; \n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <ChartDialog />\n                <Grid direction=\"row\" container>\n\n                    <Grid item xs={12} sm={2}  >\n\n                        <Autocomplete\n                            freeSolo\n                            id=\"free-solo-2-demo\"\n                            disableClearable\n                            style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                            onChange={this.onSelectItem}\n                            //+ ' '+  option.exch_seg\n                            options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                option.symbol\n                            ) : []}\n                            renderInput={(params) => (\n                                <TextField\n                                    onChange={this.onChange}\n                                    {...params}\n                                    label={\"Search Symbol\"}\n                                    margin=\"normal\"\n                                    variant=\"standard\"\n\n                                    name=\"search\"\n                                    value={this.state.search}\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\n                                /> \n                            )}\n                        />\n\n                        <div style={{ marginLeft: '10px' }}>\n                            <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                    <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                    {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                        <MenuItem value={element}>{element}</MenuItem>\n                                    ))\n                                    }\n\n                                </Select>\n                            </FormControl>\n\n                        </div>\n\n\n\n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\n\n                            {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\n                                <>\n                                    <ListItem button style={{ fontSize: '12px' }} >\n                                        <ListItemText style={{ color: !row.nc  || row.nc == 0 ? \"\" : row.nc > 0 ? 'green' : \"red\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {row.ltp} ({row.nc}%) <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />\n                                    </ListItem>\n\n                                </>\n                            )) : ''}\n                        </div>\n\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n\n                    </Grid>\n\n\n\n\n                    <Grid item xs={12} sm={10}>\n\n\n                        <Grid direction=\"row\" alignItems=\"center\" container>\n\n                           <Grid style={{display:\"visible\"}} direction=\"row\" alignItems=\"center\" container>\n    \n                            <Grid item xs={10} sm={5}>\n                                <Typography variant=\"h5\"  >\n                                    {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"}   {this.state.sbinLtp}\n                                </Typography>\n                                Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                            </Grid>\n                            <Grid item xs={12} sm={2}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                    <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                            </Grid>\n\n\n                            <Grid item xs={1} sm={2}  >\n\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                            </Grid>\n\n                    `            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                    {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                        <TableRow key={i} >\n\n                                            <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                            <TableCell align=\"center\">{row[1]}</TableCell>\n                                            <TableCell align=\"center\">{row[2]}</TableCell>\n                                            <TableCell align=\"center\">{row[3]}</TableCell>\n                                            <TableCell align=\"center\">{row[4]}</TableCell>\n                                            <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n                            </Grid>\n\n\n\n                            <Grid direction=\"row\" alignItems=\"center\" container>\n\n                                    <Grid direction=\"row\" container spacing={2}>\n\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                            <FormControl style={styles.selectStyle}>\n                                                <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                                <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                                    <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                                    <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                                    <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                                    <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n                                            \n                                                    <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                                    <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n                                                    \n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={4}>\n                                            <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                        </Grid>\n\n\n\n                                        <Grid item xs={12} sm={6} style={{ marginTop:'28px'}}>\n                                            {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </> }\n                                            SearchFailed:{this.state.searchFailed}\n\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={12}>\n\n                                 \n                                        {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ?   <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{  background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n                                            \n                                                {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n                                            \n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n                                                \n\n                                            \n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"green\" : \"red\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n                                        \n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n                                                \n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n                                            \n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        \n\n                                    {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                        <TableRow hover key={i}  >\n\n                                            <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                                            */}\n                                            <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin +=  (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0}  style={{ color: tradetotal > 0 ? \"green\" : \"red\" }}  align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                            <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                            <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + ( row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\n                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                            <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                            <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                            \n                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                        </TableRow>\n\n\n\n                                    )) : ''}\n\n\n                                    <TableRow style={{  background: \"lightgray\" }} >\n\n                                        <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n                                        \n                                        {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n                                        <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                        <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                        <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                        <TableCell align=\"left\" > </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n\n                                        <TableCell align=\"left\"> </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n\n\n                                        \n\n                                    </TableRow>\n                                        </TableBody>\n                                        </Table>\n\n                                        : \"\"}\n\n\n\n                                        {this.state.patternType == 'NR4_Daywide_daterage' ?  <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                                <Table size=\"small\" aria-label=\"sticky table\"  style={{ padding:\"5px\"}}>\n                                                    <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                                    \n                                                            <TableRow style={{  background: \"lightgray\" }}  key={key}>\n                                                                <TableCell  colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0}</TableCell>\n                                                            </TableRow>\n\n                                                            <TableRow key={key+1}  variant=\"head\" style={{ fontWeight: 'bold' , background: \"lightgray\" }}>\n\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\n\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                            </TableRow>\n\n                                                            </TableHead>\n                                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                                        \n\n                                                            {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                            \n                                                                    <TableRow hover key={i}  >\n\n                                                                    <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                                                                    <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                                                                */}\n                                                                    <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                                    <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\n                                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                                    <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n                                                                \n                                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                                </TableRow>\n\n\n                                                            ))}\n\n\n\n                                                    <TableRow style={{  background: \"lightgray\" }} >\n\n                                                    <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                    {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n                                                    <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                    <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                    <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                    <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                    <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                    <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                    <TableCell align=\"left\"></TableCell>\n\n\n                                                    <TableCell align=\"left\" > </TableCell>\n                                                    <TableCell align=\"left\"> </TableCell>\n\n                                                    <TableCell align=\"left\"> </TableCell>\n                                                    <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                    </TableBody>\n                                                </Table>\n                                                \n\n                                            \n                                            )) : ''}\n\n                                            </>\n\n                                        : \"\"}\n\n\n                                        {this.state.patternType == 'NR4ForNextDay' ?   \n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                           NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16)   : new Date().toString().substr(0, 16)}\n                                        </Typography> \n                                        : \"\"}\n                                            \n                                        {this.state.patternType == 'NR4ForNextDay' ?   \n                                         <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                               \n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                   <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n\n                                                    <TableCell className=\"TableHeadFormat\"  align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n                                                 \n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        \n\n                                           \n                                        {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                            <TableRow hover key={i}  >\n                                                <TableCell align=\"center\">{i + 1}</TableCell>\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                <TableCell align=\"left\" title=\"based on last one 6 month\">  \n                                                \n                                                <span style={{background: row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\"}}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br/>\n                                                 Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer/row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br/>\n                                                 {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                       <>\n                                                         {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n                                                     \n                                                        <a style={{textDecoration: 'underline', background: 'lightgray',cursor: 'pointer'}} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                        </>\n                                                ))}\n\n                                                <br/>\n\n                                                <span style={{background: row.pastPerferm.totalShortPer/row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\"}}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer/row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br/>\n                                                Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer/row.pastPerferm.totalShort).toFixed(2)}% per trade)<br/>\n                                                {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                <>\n                                                <a style={{textDecoration: 'underline', background: 'lightgray', cursor: 'pointer'}} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n                                              \n \n                                                </>\n                                                ))}\n                                                \n                                                </TableCell>\n\n                                                \n                                                <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                <TableCell align=\"left\">{row.high}</TableCell>\n                                                <TableCell align=\"left\">{row.low}</TableCell>\n                                                <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                            </TableRow>\n\n\n\n                                        )) : ''}\n\n                                        </TableBody>\n\n                                        </Table>\n                                        \n                                        : \"\"}\n                                        </Grid>             \n\n\n                                    </Grid>\n\n\n              \n                            </Grid>\n\n\n\n\n                        </Grid>\n                    </Grid>\n\n\n\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n // data.reverse();\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n               \n                this.setState({  fundData :fundsResData.data })\n               }\n           })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        this.getTodayOrder();\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n        {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n            <Paper style={{padding:\"10px\"}} >\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Oders Details ({this.state.oderbookData.length}) \n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                            </Grid>\n                            \n                </Grid>\n            \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity}\n                    \n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                \n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                        : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                </Grid>\n                            \n               </Grid>    \n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.feedToken ,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n\n            \n        wsClint.onopen  = (res) => {\n\n             this.makeConnection();\n             console.log('connected');\n         //    this.updateSocketWatch();\n                \n            //  setTimeout(function(){\n            //    this.updateSocketWatch(feedToken ,clientcode);\n            //  }, 800);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog'; \nimport ChartMultiple from './ChartMultiple'; \n\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\n\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            autoSearchList :[],\n            InstrumentLTP : {},\n            autoSearchTemp : [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            nr4TotalPer : 0,\n            pnlAmountTotal: 0,\n            totalBrokerCharges:'',\n            totalNetProfit: 0, \n            totelActivatedCount : 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting : \"\",\n            perHighLowTotal: 0, \n            netPnLAmountOnHighlowTotal:0\n            \n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n            this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 1001)}) \n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \n        }else{\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval); \n            clearInterval(this.state.bankNiftyInterval); \n        }\n    \n        var scanendTime = moment('3:30pm', 'h:mma');\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n            \n\n            \n            var tostartInteral =   setInterval(() => {\n\n                console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n                var time = new Date(); \n                if(time.getMinutes() % 15 === 0){\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n                    \n                    setTimeout(() => {\n                        console.log(\"set timout at 70sec \", new Date());\n                        this.getCandleHistoryAndStore(); \n                    }, 70000);\n\n                    setInterval(() => {\n                        console.log(\"2st interval every 5min 10Sec\", new Date());\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n                            this.getCandleHistoryAndStore(); \n                        }\n                     }, 60000 * 15 + 70000 );  \n\n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern(); \n            },  foundPatternsFromStored.length * 100 + 300000);\n    \n            \n          \n        } \n\n\n\n     \n  /// this.getCandleHistoryAndStore(); \n\n   // this.findNR4PatternLive();\n   //this.findNR7PatternLive();\n\n\n   \n    // this.getPositionData();\n    // this.getNSETopStock();\n     \n\n    //  this.getMySelectedStock();\n\n    \n\n    // setInterval(() => {\n        \n    //     var timediff = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(timediff);\n    \n\n    //     var enddiff = moment.duration(\"00:01:00\");\n    //     var enddate = moment(new Date()).add(enddiff);\n\n\n    //     var data  = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": 212,\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n    //     }\n    \n    //     AdminService.getHistoryData(data).then(res => { \n    //         let histdata = resolveResponse(res,'noPop' );\n    //         var candleData = histdata.data; \n    //         candleData.reverse(); \n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n    //     }); \n\n    // }, 1000);\n\n    var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n    this.setState({foundPatternList: backTestResult})\n\n   \n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n       // clearInterval(this.state.scaninterval);\n      //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n  \n\n    getCandleHistoryAndStore = async()=> {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \n       var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n       const today = moment().isoWeekday();\n        var timediff = '';\n\n        \n\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\n            timediff = moment.duration(\"66:00:00\");\n        }else{\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";       \n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1) , \n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var candleData = histdata.data; \n                    candleData.reverse(); \n\n                    if(candleData && candleData.length >= 10){\n                        var last10Candle = candleData.slice(0, 10); \n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n                \n                }else{\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 350));  \n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist,symbol) => {\n\n     //   console.log(\"TweezerTop finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var lastTrendCandleLow = candleHist[9][3]; \n            var firstTrendCandleHigh = candleHist[2][2]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n           \n            //\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \n        \n                        var ttophistCandle  = []; \n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \n                        });\n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser Top', \n                            time: new Date( candleHist[0][0]).toLocaleString(), \n                            candleChartData :ttophistCandle \n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                       this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\n       // console.log(\"TweezerBottom finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var last8candleHigh = candleHist[9][2]; \n            var last8candleLow = candleHist[2][3]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n           \n            //  \n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\n\n              \n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                      \n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle  = []; \n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \n                        });\n\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser bottom', \n                            time: new Date( candleHist[0][0]).toLocaleString(), \n                            candleChartData : tBophistCandle\n                        }\n                     \n                       this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                        \n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak( msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting'); \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n           \n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                \n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;var rgrangeCount = 0; \n                     candleData.reverse(); \n\n                     // var startindex = index2 * 10; \n                     var last4Candle = candleData.slice(1, 5);\n                     var last5Candle = candleData.slice(0, 5);\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                     if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                         var rangeArr = [], candleChartData = []; \n                         last4Candle.forEach(element => {\n                             rangeArr.push(element[2] - element[3]);\n                         });\n\n                         last5Candle.forEach(element => {\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                         });\n                         var firstElement = rangeArr[0];\n                         rangeArr.forEach(element => {\n                             if (firstElement <= element) {\n                                 firstElement = element;\n                                 rgrangeCount += 1;\n                             }\n                         });\n\n                         console.log(index+1,element.symbol, rgrangeCount); \n                       //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n                         \n                         if (rgrangeCount == 4) {\n                            console.log(index+1, element.symbol, last4Candle, rangeArr, rgrangeCount); \n\n                            \n                             var firstCandle = last4Candle[0];\n\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                             var data  = {\n                                \"exchange\":\"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\":element.token,\n                            }\n\n                            console.log('nr4 ltp',data ); \n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                 var LtpData = data && data.data; \n                                 console.log(LtpData, data);\n                                 if(LtpData && LtpData.ltp){\n\n\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \n                                    if(LtpData.ltp > buyentry){\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                      \n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    } \n                                    if(LtpData.ltp < sellenty){\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    } \n\n                                    var foundData = {\n                                        symbol : element.symbol, \n                                        token : element.token, \n                                        pattenName: 'NR4', \n                                        time: new Date( firstCandle[0]).toLocaleString(), \n                                        BuyAt : buyentry, \n                                        SellAt : sellenty,\n                                        orderActivated : orderActivated,\n                                        candleChartData : candleChartData, \n                                        quantity :  quantity,\n                                        brokerageCharges : brokerageCharges, \n                                        pnlAmount : pnlAmount,\n                                        netPnLAmount : netPnLAmount,\n                                        perChange : perChange\n                                    }\n        \n                                    console.log('nr4 scaned',foundData ); \n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n    \n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                                    foundPatternList.push(foundData); \n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                                \n                                }\n                                \n                           })\n\n\n\n                            \n\n                         }\n\n                     }\n                  \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n           \n\n         \n            await new Promise(r => setTimeout(r, 300));\n\n           // var showtestdata = (index + 1);\n            \n         //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n       //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting'); \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n           \n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                \n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                     candleData.reverse(); \n\n                     // var startindex = index2 * 10; \n                     var last7Candle = candleData.slice(1, 8);\n                     var last9Candle = candleData.slice(0, 9);\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                     if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                         var rangeArr = [], candleChartData = []; \n                         last7Candle.forEach(element => {\n                             rangeArr.push(element[2] - element[3]);\n                         });\n\n                         last9Candle.forEach(element => {\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                         });\n                         var firstElement = rangeArr[0], rgrangeCount = 0; \n                         rangeArr.forEach(element => {\n                             if (firstElement <= element) {\n                                 firstElement = element;\n                                 rgrangeCount += 1;\n                             }\n                         });\n\n\n                         console.log(element.symbol, last7Candle, rangeArr, rgrangeCount); \n\n                         \n                         if (rgrangeCount == 7) {\n\n                            \n                             var firstCandle = last7Candle[0];\n\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                             var data  = {\n                                \"exchange\":\"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\":element.token,\n                            }\n\n                            console.log('nr4 ltp',data ); \n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                 var LtpData = data && data.data; \n                                 console.log(LtpData, data);\n                                 if(LtpData && LtpData.ltp){\n\n\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \n                                    if(LtpData.ltp > buyentry){\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                      \n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    } \n                                    if(LtpData.ltp < sellenty){\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    } \n\n                                    var foundData = {\n                                        symbol : element.symbol, \n                                        token : element.token, \n                                        pattenName: 'NR7', \n                                        time: new Date( firstCandle[0]).toLocaleString(), \n                                        BuyAt : buyentry, \n                                        SellAt : sellenty,\n                                        orderActivated : orderActivated,\n                                        candleChartData : candleChartData, \n                                        quantity :  quantity,\n                                        brokerageCharges : brokerageCharges, \n                                        pnlAmount : pnlAmount,\n                                        netPnLAmount : netPnLAmount,\n                                        perChange : perChange\n                                    }\n        \n                                    console.log('nr7 scaned',foundData ); \n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n    \n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                                    foundPatternList.push(foundData); \n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                                \n                                }\n                                \n                           })\n\n\n\n                            \n\n                         }\n\n                     }\n                  \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol; \n            this.setState({ stockTesting: showtestdata});\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData  = candleData &&  candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n    \n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n    \n\n    refreshLtpOnFoundPattern = async() => {\n\n       this.setState({nr4TotalPer : 0, totalBrokerChargesNR4: 0,totalNetProfit: 0, totelActivatedCount:0, pnlAmountTotal:0,perHighLowTotal : 0,netPnLAmountOnHighlowTotal:0 }); \n\n       \n       var foundPatternList = this.state.foundPatternList;\n\n       this.setState({foundPatternList : [] }); \n\n       var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n       \n//       foundPatternList.forEach(element => {\n         for (let index = 0; index < foundPatternsFromStored.length; index++) {\n             const element = foundPatternList[index];\n           \n            if(element && element.pattenName == 'NR4'){\n\n                var data  = {\n                    \"exchange\":\"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\":element.token,\n                }\n\n               AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                     var LtpData = data && data.data; \n                     //console.log(LtpData);\n                     var quantity = 0, pnlAmount = 0, netPnLAmount=0, brokerageCharges = 0.06,perChange = 0, perChangeOnHighLow =0,netPnLAmountOnHighlow=0; \n                     if(LtpData && LtpData.ltp){\n\n                        var orderActivated =  <span> {LtpData.ltp} </span>; \n\n                        if(LtpData.ltp > element.BuyAt){\n                          perChange = ((LtpData.ltp - element.BuyAt)*100/element.BuyAt);\n                          orderActivated =  <span style={{color:'green'}}> Long: {perChange.toFixed(2)}% </span>; \n                          quantity = Math.floor(10000 / element.BuyAt);\n                          pnlAmount = (( LtpData.ltp - element.BuyAt ) * quantity);  \n                          brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges/100)*2); \n                          netPnLAmount =  (pnlAmount -brokerageCharges); \n                          this.setState({nr4TotalPer : this.state.nr4TotalPer +  perChange });\n                          this.setState({ totalBrokerChargesNR4 : this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit:  this.state.totalNetProfit + netPnLAmount });\n                          this.setState({ totelActivatedCount : this.state.totelActivatedCount + 1, pnlAmountTotal:this.state.pnlAmountTotal +   pnlAmount});\n\n                          perChangeOnHighLow = ((LtpData.high - element.BuyAt)*100/element.BuyAt);\n                          var pnlAmountOnhigh = (( LtpData.high - element.BuyAt ) * quantity);\n                          netPnLAmountOnHighlow =  (pnlAmountOnhigh - brokerageCharges); \n                          this.setState({ perHighLowTotal : this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal:this.state.netPnLAmountOnHighlowTotal +   netPnLAmountOnHighlow});\n                        \n\n                        } \n                        if(LtpData.ltp < element.SellAt){\n                            perChange =  ((element.SellAt - LtpData.ltp)*100/element.SellAt); \n                            orderActivated =  <span style={{color:'red'}}> Short: {perChange.toFixed(2)}%</span>; \n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = (( element.SellAt - LtpData.ltp  ) * quantity); \n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges/100)*2); \n                            netPnLAmount =  (pnlAmount -brokerageCharges); \n                            this.setState({nr4TotalPer : this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount : this.state.totelActivatedCount + 1, pnlAmountTotal:this.state.pnlAmountTotal + pnlAmount  });\n                            this.setState({ totalBrokerChargesNR4 : this.state.totalBrokerChargesNR4 + brokerageCharges,totalNetProfit : this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low)*100/element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low ) * quantity);\n                            netPnLAmountOnHighlow =  (pnlAmountOnLow - brokerageCharges); \n                            this.setState({ perHighLowTotal : this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal:this.state.netPnLAmountOnHighlowTotal +   netPnLAmountOnHighlow});\n                       \n                        } \n\n                        var todayChange =  (LtpData.ltp- LtpData.close)*100/LtpData.close; \n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp]; \n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol :  element.symbol, \n                            symbolUpdated : LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\", \n                            token : element.token, \n                            pattenName: 'NR4', \n                            OnHighLowActivated : quantity ?  perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(), \n                            BuyAt : element.BuyAt, \n                            SellAt : element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated : orderActivated,\n                            candleChartData : element.candleChartData,\n                            quantity : quantity ? quantity : \"\",\n                            brokerageCharges : quantity ? brokerageCharges.toFixed(2) : \"\", \n                            pnlAmount : pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount : netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange : perChange,\n                            todayChange:todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated',foundData ); \n                        \n                      \n\n                        this.setState({foundPatternList: [...this.state.foundPatternList, foundData ]}); \n\n                        var foundlist = this.state.foundPatternList; \n\n                          foundlist.sort(function(a,b){\n                            return b.perChange - a.perChange;\n                          });\n\n                          this.setState({foundPatternList: foundlist}); \n\n                        \n                      \n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                    \n                    }\n                    \n               }).catch(error => {\n                Notify.showError(element.symbol + \" ltd data not found!\");\n               })\n\n            }\n            await new Promise(r => setTimeout(r, 101)); \n       }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n       var oderbookData = localStorage.getItem('oderbookData'); \n       oderbookData =  JSON.parse(oderbookData);\n       var stopLoss = 0; \n       var data = {}; \n       oderbookData.forEach(element => {\n        if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\n            data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \n            data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \n        }\n       });\n       return data; \n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData'); \n        oderbookData =  JSON.parse(oderbookData);\n        var stopLoss = 0; \n        var data = {}; \n        oderbookData.forEach(element => {\n         if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\n             data.stopLoss = element.triggerprice + \"(\"+ ((row.buyavgprice-element.triggerprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \n             data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \n         }\n        });\n        return data; \n     }\n    getPositionData = async() => {\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0; \n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var positionList = data && data.data;\n             if (positionList && positionList.length>0){\n                this.setState({ positionList : positionList}); \n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\n                  positionList.forEach(element => {\n\n                    if(element.producttype == \"DELIVERY\"){\n                        return \"\"; \n                    }\n\n                    var percentPnL =((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \n                    todayProfitPnL+= parseFloat( element.pnl); \n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \n                    totalQtyTraded+=parseInt( element.buyqty); \n                    allbuyavgprice+=parseFloat(element.buyavgprice); \n                    allsellavgprice+=parseFloat(element.sellavgprice); \n                    element.percentPnL=percentPnL;\n                    totalPercentage+= parseFloat( percentPnL); \n                    if(element.totalsellavgprice)\n\n                    var slData  = this.getStoplossFromOrderbook(element) ; \n                    element.stopLoss = element.totalsellavgprice === \"0.00\" ? slData.stopLoss : element.totalsellavgprice + \"(\"+ ((element.totalsellavgprice-element.totalbuyavgprice)*100/element.totalbuyavgprice).toFixed(2) + \"%)\"; \n               \n                  \n                    element.stopLossAmount = slData.maxLossAmount; \n                    totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;                     \n                }); \n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \n                this.setState({ totalBrokerCharges: ((totalbuyvalue + totalsellvalue) * 0.25/100).toFixed(2)});                \n\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \n            }\n       })\n    }\n   \n    getNSETopStock(){\n\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n               AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                   // console.log(\"scandata\",scandata); \n            \n                    for (let index = 0; index < scandata.length; index++) {\n                            var isFound = false; \n                            for (let j = 0; j < this.state.positionList.length; j++) {\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\n                                    isFound  = true; \n                                 }\n                            }\n                           \n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                               \n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                    let searchResdata =  searchRes.data; \n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                   \n                                    if(found.length){\n                                        console.log(found[0].symbol, \"found\",found);      \n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\n                                    }\n                               })\n                             \n                            }\n                    }\n                }\n            })  \n        }\n\n    }\n\n\n    getMySelectedStock(){\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \n \n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n         totalDayLoss = -Math.abs(totalDayLoss); \n         if(this.state.todayProfitPnL < totalDayLoss) {\n             console.log(\"daily loss crossed\",totalDayLoss); \n             clearInterval(this.state.scaninterval);\n         }else{\n                AdminService.getSelectedStockFromDb().then(res => {\n                 let data = resolveResponse(res, \"noPop\");\n                 if(data.status  && data.message === 'SUCCESS'){ \n                     var scandata =  data.result;   \n                    // console.log(\"scandata\",scandata); \n             \n                     for (let index = 0; index < scandata.length; index++) {\n                             var isFound = false; \n                             for (let j = 0; j < this.state.positionList.length; j++) {\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\n                                     isFound  = true; \n                                  }\n                             }\n                            \n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                                \n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n \n                                     let searchResdata =  searchRes.data; \n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                    \n                                     if(found.length){\n\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \n                                        selectedStockwatchList.push(found[0]); \n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                     }\n                                })\n                              \n                             }\n                     }\n                 }\n             })  \n         }\n \n     }\n\n\n    checkAndPlaceSingleOrder = (stock)=>{\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data =  res.data; \n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\n             console.log(\"stockfound\",found);  \n            if(found && found.length){\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \n            }\n       })\n    }\n\n\n    getStockOnebyOne(){\n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n            console.log(\"still ok\"); \n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                    if(scandata && scandata.length>0){\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \n                        var isFound = false; \n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\n                                isFound  = true; \n                             }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, '+lastSeachStock; \n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \n                        }\n                    }\n                    \n                }\n            })  \n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n             var LtpData = data && data.data; \n             var ltpPrice  = LtpData.ltp\n             if(ltpPrice){ \n              \n            //  var stopLossPrice = ltp - (ltp*0.7/100);\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \n              var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken:token,\n                    buyPrice : 0,\n                    quantity: quantity, \n                    stopLossPrice: stopLossPrice\n                }\n\n              if(quantity && stopLossPrice){\n                this.placeOrderMethod(orderOption);   \n              }\n               \n            }         \n\n       }).catch((error)=>{\n            console.log(symbol, \"not found\", 'error', error);\n        })  \n    }\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n        //    console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n    }\n\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\":\"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             //console.log(LtpData);\n             if(LtpData && LtpData.ltp){\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\n             }\n            \n       })\n    }\n\n\n    getStopLossPrice = async(token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n      \n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             if(LtpData &&  LtpData.ltp){\n                var ltp = parseFloat(LtpData.ltp); \n                ltp  = ltp - (ltp*0.7/100);\n                var slPrice = this.getMinPriceAllowTick(ltp); \n\n                this.setState({ stoploss : slPrice});\n                return slPrice; \n             }\n           \n       })\n    }\n  \n    placeOrderMethod = (orderOption) => { \n       \n        var data = {\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\":orderOption.symboltoken,\n            \"quantity\":orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"exchange\":\"NSE\",\n            \"variety\":\"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                if(orderOption.stopLossPrice){\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n                var LtpData = ltpres && ltpres.data; \n                console.log(symbol, \" ltd data \", LtpData);\n                let quantity =0; \n                if(LtpData && LtpData.ltp){\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \n                }\n\n                \n                quantity = quantity>0 ? 1 : 0; \n                console.log(symbol, \"  quantity can be order \", quantity);\n                if(quantity){\n                    const format1 = \"YYYY-MM-DD HH:mm\";\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                    console.log(\"beginningTime\", beginningTime); \n\n                    var time = moment.duration(\"21:10:00\");\n                    var startdate = moment(new Date()).subtract(time);\n                    var data  = {\n                        \"exchange\": \"NSE\",\n                        \"symboltoken\": token ,\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                        \"fromdate\": moment(startdate).format(format1) , \n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                    }\n                \n                    AdminService.getHistoryData(data).then(res => {\n                        let histdata = resolveResponse(res,'noPop' );\n                       // console.log(\"candle history\", histdata); \n                        if(histdata && histdata.data && histdata.data.length){\n                           \n                           \n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \n                            candleData.reverse(); \n                            lowestLow = candleData[0][3]; \n                            highestHigh = candleData[0][2]; \n                            if(candleData && candleData.length>0){\n                                for (let index = 0; index < 20; index++) {\n                                    if(candleData[index]){\n                                        clossest += candleData[index][4]; //close  \n                                        lowerest += candleData[index][3];  //low\n                                        if(candleData[index][2] > highestHigh){\n                                            console.log( index, highestHigh,  candleData[index][2]); \n                                            highestHigh = candleData[index][2];  \n                                        }\n                                        if(candleData[index][3] <= lowestLow){\n                                            lowestLow = candleData[index][3];  \n                                        }\n                                    }\n                                }\n\n\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \n    \n                                var bbmiddleValue = clossest/devideLen; \n                                var bblowerValue = lowerest/devideLen; \n                                \n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \n                                stoploss = this.getMinPriceAllowTick(stoploss); \n    \n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \n                                \n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\n                            \n                                var orderOption = {\n                                    transactiontype: 'BUY',\n                                    tradingsymbol: symbol,\n                                    symboltoken:token,\n                                    buyPrice : 0,\n                                    quantity: quantity, \n                                    stopLossPrice: stoploss\n                                }\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \n                                   this.placeOrderMethod(orderOption);\n                                }else{\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                    console.log(symbol + \" its not fullfilled\"); \n                                }\n                            }\n\n                           \n                        }else{\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\n                            console.log(symbol + \" candle data emply\"); \n                        }\n                    })\n\n                }\n        })\n       // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n  \n\n    cancelOrderOfSame = (row) =>  {\n       \n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \n        var data = {\n            \"variety\":orderData.variety,\n            \"orderid\":orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n    squareOff = (row) =>  {\n       \n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\":row.symboltoken,\n            \"transactiontype\":row.buyqty > 0 ? 'SELL' : \"BUY\", \n            \"exchange\": row.exchange, \n            \"ordertype\": \"MARKET\", \n            \"producttype\": row.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": row.buyqty > 0 ? row.buyqty :  row.sellqty > 0 ? row.sellqty : 0,\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n            \n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                this.cancelOrderOfSame(row); \n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n\n            }\n        })\n       \n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res);\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \n            }\n        });\n    }\n    \n    placeSLMOrder = (slmOption) => {\n        \n        var data = {\n            \"triggerprice\":slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \n            \"exchange\": 'NSE', \n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\" : \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data); \n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n               // this.updateOrderList(); \n               var msg = new SpeechSynthesisUtterance();\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \n               window.speechSynthesis.speak(msg);\n\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n            }\n        })\n    }\n\n    getOpenPeningOrderId =(symboltoken) => {\n\n        var oderbookData = JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {}; \n         for (let index = 0; index < oderbookData.length; index++) {\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\n                data.orderId = oderbookData[index].orderid  \n                data.variety = oderbookData[index].variety  \n                break;\n            }\n         } \n         return data;\n     }\n    modifyOrderMethod = (row, minPrice) => {\n        //console.log(this.state.triggerprice);\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \n        console.log(\"orderid\", this.state.orderData);\n\n        var data = {\n            \"variety\" : \"STOPLOSS\",\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\":  0,\n            \"triggerprice\": parseFloat( minPrice ),\n            \"quantity\":row.buyqty,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n          \n          \n            if(data.status  && data.message ===  'SUCCESS'){\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\n              msg.text = row.tradingsymbol +' modified '+data.message\n              window.speechSynthesis.speak(msg);\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice =  minPrice.toFixed(2); \n       // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt( minPrice.split('.')[0]);\n      //  console.log(\"wholenumber\",wholenumber); \n        var decimal =  parseFloat( minPrice.split('.')[1]);\n       // console.log(\"decimal\",decimal); \n        var tickedecimal =  decimal-decimal%5; \n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \n     //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice; \n    }\n\n    getPercentage = (totalbuyavgprice, totalsellavgprice,  ltp , row) =>  {\n\n        totalbuyavgprice =  parseFloat(totalbuyavgprice); \n        totalsellavgprice =  parseFloat(totalsellavgprice); \n\n        var percentChange = 0; \n        if(totalbuyavgprice){\n            percentChange =  ((ltp - totalbuyavgprice)*100/totalbuyavgprice); \n        }\n        if(totalsellavgprice){\n            percentChange =  ((totalsellavgprice - ltp)*100/totalsellavgprice); \n        }\n       \n         if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange >= 0.7){\n                if(totalbuyavgprice)   \n                var minPrice =  totalbuyavgprice + (totalbuyavgprice * 0.1/100);\n                if(totalsellavgprice)   \n                var minPrice =  totalsellavgprice - (totalsellavgprice * 0.1/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n         }else{\n           //var lastTriggerprice =  this.state['lastTriggerprice_'+row.symboltoken]; \n           var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \n           var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n        //   console.log(row.symbolname, 'chng form Trigger Price',perchngfromTriggerPrice);\n           if(perchngfromTriggerPrice > 0.7){\n                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n           }else if(percentChange >= 0.3){\n\n                if(!localStorage.getItem('squiredOff'+row.symboltoken)){\n\n                    localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\n                    this.squareOff(row); \n\n                    var msg = new SpeechSynthesisUtterance();\n                    msg.text = row.symbolname +' squired Off Success at ' + percentChange.toFixed(2) + '%'; \n                    window.speechSynthesis.speak(msg);\n\n                    console.log(\"Sqr off called for 0.3% \",row.symbolname);  \n\n                }\n\n                \n           }\n          \n\n         }\n\n\n\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\n\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\n                this.squareOff(row); \n                console.log(\"Sqr off called for\",row.symbolname);  \n            }\n        }\n\n\n\n        return percentChange.toFixed(2);\n    }\n\n\n    render() {\n      \n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                     <br />\n                     <ChartDialog /> <ChartMultiple />\n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\n                        <Grid item >\n                            <Typography variant=\"h6\" >\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={3} >\n                          <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                            </Typography> \n                        </Grid>\n\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\">\n                            <b>Total Turnover {this.state.totalTornOver} </b>\n                            </Typography> \n                        </Grid>\n                        \n                       \n                        <Grid item >\n                          <Typography component=\"h3\"  >\n                            <b> Charges</b> <b style={{color:\"red\"}}>-{this.state.totalBrokerCharges} </b>\n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"green\":\"red\"}}>{this.state.todayProfitPnL} </b>\n                            </Typography> \n                        </Grid>\n\n                        <Grid item>\n                          <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"green\":\"red\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\n                            \n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \n                        </Grid>\n                </Grid>\n               \n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                \n\n                    <Grid item xs={12} sm={12}> \n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\n                                 \n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Trading symbol</TableCell>\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n  \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Buy Price</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Sell Price</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Bought Qty</TableCell>\n                                \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max Locked P/L</TableCell>\n\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n        \n    \n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n                           \n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                row.producttype !== 'DELIVERY' ? <TableRow  hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'lightgray': \"\"}} >\n\n                                <TableCell style={{paddingLeft:\"3px\"}} align=\"left\">&nbsp; <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://chartink.com/stocks/\"+row.tradingsymbol.split('-')[0]+\".html\"}>{row.tradingsymbol.split('-')[0]}</a> </TableCell>\n                                {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n                             \n                                <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                <TableCell align=\"left\">{row.buyqty}</TableCell>\n                                <TableCell align=\"left\">{row.netqty}</TableCell>\n                                {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                <TableCell align=\"left\"> {row.stopLoss}</TableCell> \n                                <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \n\n                                \n                                {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\n                                <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'green' : 'red'}}><b>{row.pnl}</b></TableCell>\n                                <TableCell align=\"left\">\n                                    { row.netqty !== '0' ? this.getPercentage(row.totalbuyavgprice,row.totalsellavgprice, row.ltp, row) : \"\"} \n                                    {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\n                                  </TableCell> \n                                <TableCell align=\"left\">{row.ltp}</TableCell>\n                              \n                                <TableCell align=\"left\">\n                                    {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \n                                </TableCell>\n\n                            </TableRow> : \"\"\n                                \n                            )):''}\n\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"lightgray\"}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\n          \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'green' : 'red'}}>{this.state.todayProfitPnL} </TableCell>\n \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\n                                    \n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) : \"\"}\n                    \n                                </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                </TableRow>\n\n\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n\n\n                    </Grid>\n\n                  \n\n                        <Grid item xs={12} sm={12}  style={{height: '300px', overflow:\"auto\"}}>\n                             <OrderBook/>\n                        </Grid>\n\n\n                        <Grid item xs={12} sm={12} >\n                        <Paper style={{overflow:\"auto\", padding:'5px'}} >\n\n                            \n\n                                <Grid justify=\"space-between\"\n                                container>\n                                            <Grid item  >\n                                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                                 Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})  \n\n                                                <span id=\"stockTesting\" style={{fontSize: \"18px\", color: 'gray'}}> {this.state.stockTesting} </span>\n                                                </Typography> \n                                            </Grid>\n                                            <Grid item >\n                                                 <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                            </Grid>\n                                            \n                                </Grid>\n                            \n                                 \n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\n                                     <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n             \n                                              \n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n                                           \n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                             <TableCell className=\"TableHeadFormat\"  align=\"left\">UpdatedAt</TableCell>\n             \n                                          \n                                         </TableRow>\n                                     </TableHead>\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n             \n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                             <TableRow hover key={row.symboltoken}>\n             \n\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ color:  !row.todayChange ?  '' :  row.todayChange > 0 ? 'green' : 'red'  }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                                <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{fontSize: '9px', cursor: 'pointer'}} onClick={() => this.showMultipleCandleChart(row)}>\n                                                   {row.pastPerferm ? <>\n                                                    <span  style={{ background: row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\"}}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs).toFixed(2)}%</span> <br/>\n                                                     <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer/row.pastPerferm.totalLongs).toFixed(2)}%</span> <br/>\n                                                     <span style={{background: row.pastPerferm.totalShortPer/row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\"}}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer/row.pastPerferm.totalShort).toFixed(2)}%</span> <br/>\n                                                     <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer/row.pastPerferm.totalShort).toFixed(2)}%</span> <br/>\n                                                    </> : \"\"}\n                                                  \n                                                </TableCell>\n\n                                                 <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                                 <TableCell align=\"left\">{row.quantity}</TableCell>\n                                                 <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                                 <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                                 <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                                 <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                                <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0,15)}</TableCell>\n\n                                                <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                                <TableCell align=\"left\">{row.time}</TableCell>\n                                                \n                                             </TableRow>\n                                         )):''}\n                                     </TableBody>\n                                 </Table>\n\n                               \n             \n                                 </Paper>\n                        </Grid>\n\n                               \n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n  \n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      // {\n      //   label: \"Call\",\n      //   data: callData,\n      //   fill: true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"red\",\n        \n      // },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n\n\n    }\n\n    componentDidMount() {\n\n\n\n      //  this.loadPackList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                this.makeConnection();\n                this.updateSocketWatch();\n            }\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n                var sectorList = this.state.sectorList;\n\n                console.log(\"sector live data\", liveData);\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                        }\n                    });\n                    sectorList[index].stockList && sectorList[index].stockList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n\n                });\n\n\n\n                this.setState({ sectorList: sectorList });\n                localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n            }\n\n            setInterval(() => {\n                this.makeConnection();\n                var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n                // console.log(\"Connection sectior top hb Request :- \" + _req);\n                wsClintSectorUpdate.send(_req);\n            }, 59000);\n\n            setInterval(() => {\n                this.loadPackList();\n            }, 120000);\n\n\n             \n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n                    \n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        }\n\n\n\n    }\n\n    placeSLMOrder = (slmOption) => {\n        \n        var data = {\n            \"triggerprice\":slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \n            \"exchange\": 'NSE', \n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\" : \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data); \n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n               // this.updateOrderList(); \n               var msg = new SpeechSynthesisUtterance();\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \n               window.speechSynthesis.speak(msg);\n\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => { \n       \n        var data = {\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\":orderOption.symboltoken,\n            \"quantity\":orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"exchange\":\"NSE\",\n            \"variety\":\"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                if(orderOption.stopLossPrice){\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice =  minPrice.toFixed(2); \n       // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt( minPrice.split('.')[0]);\n      //  console.log(\"wholenumber\",wholenumber); \n        var decimal =  parseFloat( minPrice.split('.')[1]);\n       // console.log(\"decimal\",decimal); \n        var tickedecimal =  decimal-decimal%5; \n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \n     //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice; \n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType) => {\n\n\n        var token = sectorItem.token; \n        var symbol = sectorItem.symbol; \n\n        if(!window.confirm(orderType + \" \"+ symbol+ \" Are you sure ? \")){\n            return; \n        }\n\n\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n                var LtpData = ltpres && ltpres.data; \n                console.log(symbol, \" ltd data \", LtpData);\n                let quantity =0; \n                if(LtpData && LtpData.ltp){\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \n                }\n\n                \n                quantity = quantity>0 ? 1 : 0; \n                console.log(symbol, \"  quantity can be order \", quantity);\n                Notify.showError( quantity +\"  quantity |  \"+symbol +\" \"+ orderType+ \" Rejected\");\n\n                if(quantity){\n                    const format1 = \"YYYY-MM-DD HH:mm\";\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                    console.log(\"beginningTime\", beginningTime); \n                    \n                    var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                    var startdate = moment(new Date()).subtract(time);\n                    var data  = {\n                        \"exchange\": \"NSE\",\n                        \"symboltoken\": token ,\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                        \"fromdate\": moment(startdate).format(format1) , \n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                    }\n                \n                    AdminService.getHistoryData(data).then(res => {\n                        let histdata = resolveResponse(res,'noPop' );\n                       // console.log(\"candle history\", histdata); \n                        if(histdata && histdata.data && histdata.data.length){\n                           \n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0, highestsum=0; \n                            candleData.reverse(); \n                            lowestLow = candleData[0][3]; \n                            highestHigh = candleData[0][2]; \n                            if(candleData && candleData.length>0){\n                                for (let index = 0; index < 20; index++) {\n                                    if(candleData[index]){\n                                        clossest += candleData[index][4]; //close  \n                                        lowerest += candleData[index][3];  //low\n                                        highestsum += candleData[index][2];  //low\n                                        if(candleData[index][2] > highestHigh){\n                                            console.log( index, highestHigh,  candleData[index][2]); \n                                            highestHigh = candleData[index][2];  \n                                        }\n                                        if(candleData[index][3] <= lowestLow){\n                                            lowestLow = candleData[index][3];  \n                                        }\n                                    }\n                                }\n\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \n    \n                                var bbmiddleValue = clossest/devideLen; \n                                var bblowerValue = lowerest/devideLen; \n                                var bbhigerValue = highestsum/devideLen; \n                                \n                                var stoploss = 0, stoplossPer = 0; \n\n                                if(orderType == \"BUY\"){\n                                    stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \n                                    stoploss = this.getMinPriceAllowTick(stoploss); \n                                    stoplossPer = (LtpData.ltp - stoploss)*100/LtpData.ltp; \n\n                                    console.log(symbol,orderType,  \" LTP \",LtpData.ltp ); \n                                    console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\n                                    console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue );\n                                \n                                }\n\n\n                                if(orderType == \"SELL\"){\n                                    stoploss = bbhigerValue + (highestHigh - lowestLow)*3/100;  \n                                    stoploss = this.getMinPriceAllowTick(stoploss); \n                                    stoplossPer = (stoploss - LtpData.ltp)*100/LtpData.ltp; \n\n                                    console.log(symbol,orderType,  \" LTP \",LtpData.ltp ); \n                                    console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\n                                    console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue );\n                                \n                                }\n\n                               \n                              \n                                var orderOption = {\n                                    transactiontype: orderType,\n                                    tradingsymbol: symbol,\n                                    symboltoken:token,\n                                    buyPrice : 0,\n                                    quantity: quantity, \n                                    stopLossPrice: stoploss\n                                }\n                                if(stoplossPer <= 1.5){ \n                                   this.placeOrderMethod(orderOption);\n                                }else{\n                                    Notify.showError(symbol+ \" stoploss is > 1.5% Rejected\");\n                                    console.log(symbol + \" its not fullfilled\"); \n\n                                }\n                            }\n\n                           \n                        }else{\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\n                            Notify.showError(symbol+ \" candle data emply\");\n                            console.log(symbol + \" candle data emply\"); \n                        }\n                    })\n\n                }\n        })\n       // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n\n    loadPackList() {\n\n        this.setState({ indexTimeStamp: '' })\n        this.setState({ refreshFlag: false ,  failedCount: 0 });\n\n\n        AdminService.getAllIndices()\n            .then((res) => {\n                if (res.data) {\n\n                    var data = res.data, sectorStockList = [];\n\n                    this.setState({ indexTimeStamp: data.timestamp })\n\n                    var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n\n\n                    var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n\n                    // this.speckIt(\"1st sector is \" + softedData[0].indexSymbol + ' ' + softedData[0].percentChange + '%');\n                    // this.speckIt(\"2nd sector is \" + softedData[1].indexSymbol + ' ' + softedData[1].percentChange + '%');\n                    // this.speckIt(\"3rd sector is \" + softedData[2].indexSymbol + ' ' + softedData[2].percentChange + '%');         \n                    \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async(ref, sectorStocks) => {\n                        if(sectorStocks && sectorStocks.length){\n                            ref.refreshSectorLtp(sectorStocks); \n                        }\n                       await sleep(sectorStocks/10 * 1500);\n                   }\n\n                    for (let i = 0; i < softedData.length; i++) {\n\n                        \n                        if(softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= 0.75){\n                            var sectorStocks = this.state.staticData[softedData[i].index];\n                            softedData[i].stockList = sectorStocks;\n\n                            for (let index = 0; index < sectorStocks.length; index++) {\n                                var foundInWatchlist = this.state.sectorStockList.filter(row => row.token == sectorStocks[index].token);\n                                if (!foundInWatchlist.length) {\n                                    this.setState({ sectorStockList: [...this.state.sectorStockList, sectorStocks[index]] });\n                                    sectorStockList.push(sectorStocks[index]);\n                                }\n                            }\n\n                            this.setState({ sectorList: softedData });\n                            localStorage.setItem('sectorList', JSON.stringify(softedData));\n                            localStorage.setItem('sectorStockList', JSON.stringify(sectorStockList));    \n                         }\n\n                        \n\n                         if(softedData[i].percentChange > 0.75){\n                            updateLtpOnInterval(this, sectorStocks);\n                         }\n\n                        \n                  \n                    }\n\n                  //  console.log(\"softedData\", softedData);\n                    //this.refreshSectorLtp();\n                }\n\n            })\n            .catch((reject) => {\n                Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                this.speckIt(\"All Indices API Failed\");\n\n            })\n\n            \n          //  this.makeConnection();\n            this.setState({ refreshFlag: true });\n\n    }\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks,index); \n    }\n\n\n    refreshSectorLtp = async (sectorStocks,index) => {\n\n\n    //    console.log(\"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = []; \n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n         //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n         \n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                  //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index]; \n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    sectorUpdate.push(indexData); \n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol , error); \n\n              //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n           \n\n            await new Promise(r => setTimeout(r, 101));\n\n           \n        }\n      \n        \n        if(index){\n            this.state.sectorList.forEach((element, i) => {\n                if(element.index == index){\n                    this.state.sectorList[i].stockList = sectorUpdate; \n                    this.state.sectorList[i].isStocksLtpUpdted = true; \n                    this.setState({ sectorList: this.state.sectorList  });\n                    return; \n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       \n    }\n\n\n    \n\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks,index); \n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"12:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if(index){\n            this.state.sectorList.forEach((element, i) => {\n                if(element.index == index){\n                    this.state.sectorList[i].stockList = sectorStocks; \n                    this.setState({ sectorList: this.state.sectorList  });\n                    return; \n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n        \n\n        console.log(\"sectorStockswithcandle\",sectorStocks); \n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n\n    }\n\n    showCandleChart = (candleData, symbol, price, change) => {\n\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n        \n\n        var channel = []; \n        this.state.sectorList.forEach(element => {\n            if(element.percentChange >= 0.75){\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push( 'nse_cm|' + stock.token ); \n                });\n            }\n        });\n        \n\n        if (channel && channel.length){\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n    \n            console.log(\"update watech\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:00pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if(outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted){\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if(index2 < 2){\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || []; \n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if(!isThere.length){\n                                element.foundAt = new Date().toLocaleString(); \n                                autoTradeTopList.push(element); \n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList)); \n                                console.log(element.name + \" of \"+ outerEelement.index + \" Added\")\n                                this.speckIt(element.name + \" Added\"); \n                                \n                                this.historyWiseOrderPlace(element , 'BUY'); \n\n                            }\n                        }\n    \n                    });\n                }\n            });\n        }\n\n       \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors Stocks({this.state.sectorStockList.length}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadPackList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> \n\n                            \n                        \n\n                        </Typography>\n\n                        {localStorage.getItem('autoTradeTopList')}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\",textAlign: \"center\" }}>\n\n\n                                 <Button  size=\"small\" variant=\"contained\"  title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}> \n                                     <b> {index + 1}. {indexdata.index + \" \" + indexdata.last}({indexdata.percentChange}%) </b>   \n\n                                </Button>  \n                                &nbsp;\n\n                                <Button  size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}> \n                                  <ShowChartIcon />\n                                </Button>  \n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{  textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({sectorItem.nc}%)\n                                                </Typography>\n\n\n\n                                                <span style={{ cursor: 'pointer'}} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc)} > \n                                                 {sectorItem.candleChartData ? <LineChart  candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc}/> : \"\"} \n                                                </span>   \n                                                      \n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n                                                <Typography style={{ background: 'gray'}}>\n                                                    <Button size=\"small\" variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={() => this.historyWiseOrderPlace(sectorItem , 'BUY')}>Buy</Button>\n                                                    <Button size=\"small\" variant=\"contained\" color=\"secondary\" style={{ marginLeft: '20px' }} onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL')}>Sell</Button>\n\n                                                </Typography>\n\n                                            </Paper>\n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\n// import NiftyView from \"./MyTrade/NiftyView\";\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n\n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}