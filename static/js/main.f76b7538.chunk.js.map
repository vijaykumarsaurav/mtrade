{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/LightChartCom.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","toFixed","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","console","log","placeOrder","getElementById","click","getStockTokenDetails","SYMBOL","updateOrderList","retrieveOrderBook","orderlist","sort","b","updatetime","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","symbol","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","Math","floor","format1","beginningTime","moment","format","time","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","candleData","clossest","lowerest","highestHigh","lowestLow","highestsum","reverse","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","bbLastValue","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","lower","upper","orderOption","buyPrice","placeOrderMethod","catch","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","item","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","lib_default","direction","OpenInNew_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","LightChartCom","fileref","setAttribute","getElementsByTagName","appendChild","setTimeout","LightweightCharts","createChart","rightPriceScale","scaleMargins","bottom","borderVisible","layout","textColor","grid","vertLines","horzLines","addHistogramSeries","priceFormat","priceScaleId","setData","ChartData","volumeData","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","high","low","close","datesForMarkers","indexOfMinPrice","markers","shape","setMarkers","smaData","count","avg","sum","result","len","val","slice","calculateSMA","addLineSeries","lineWidth","Home","autoSearchList","onInputChange","timeFrame","showStaticChart","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","checkOpenEqualToLow","cursor","asyncToGenerator","regenerator_default","mark","_callee","_loop","wrap","_context2","prev","next","openEqualHighList","openEqualLowList","advanceShareCount","declineShareCount","UnchangeShareCount","_context","toConsumableArray","nc","r","stop","delegateYield","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","wsClint","firstTime_req","feedToken","send","updateSocketWatch","channel","map","updateSocket","task","user","acctid","selectedWatchlist","updateSocketDetails","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","setInterval","_req","stopBacktesting","stopScaningFlag","backTestAnyPattern","_callee2","enddate","currentMoment","endMoment","watchList","runningTest","_loop2","_context4","backTestResult","backTestFlag","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","_context3","index2","last10Candle","next10Candle","toLocaleTimeString","backtestTweezerTop","backtestTweezerBottom","stockTesting","_callee3","_loop3","_context6","FoundPatternList","_context5","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","sellenty","foundStock","pattenName","SellAt","BuyAt","nr4CheckPastPerfommance","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","toLocaleString","stopLoss","brokerageCharges","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee4","sumPercentage","_loop4","_context8","searchFailed","_context7","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref5","_callee5","_loop5","_context10","_context9","dateWithWlType","datewisetrades","perChngOnLow","_x","apply","_callee6","_loop6","_context12","_context11","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","round","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","orderid","LoadSymbolDetails","getTimeFrameValue","chartStaticData","dailyBollingCheck","timeDuration","historyData","cdata","d","volumeSeriesData","loopindex","rsiValues","bblastValue","vwapvalue","max","volumeSeries","smaLineSeries","priceValue","innerHTML","setLegendText","subscribeCrosshairMove","param","InstrumentHistroy","upsideMoveCount","downMoveCount","per","startDateforDaily","dataDay","resd","histdatad","DSMA","candleDatad","closeingDatadaily","valumeSum","SMA","dailyAvgValume","DSMALastValue","DailyBulishStatus","todayCurrentVolume","slmOrderType","getHistory","histCandles","onSelectItem","autoSearchTemp","fdata","onSelectItemChart","seachSumbol","getPercentageColor","percent","deleteItemWatchlist","list","findIndex","splice","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","handleKeyDown","keyCode","prevState","updateCandleOnkey","selectedKeyRow","ifNotBought","_this2","domElement","timeVisible","secondsVisible","endTime","currentTime","isoWeekday","isBetween","w3cwebsocket","_this3","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Paper","Autocomplete","freeSolo","disableClearable","paddingLeft","paddingRight","option","renderInput","params","onKeyDown","search","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","selected","fontWeight","textAlign","background","middle","j","Table","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","key","MaterialUIDateTimePicker","colSpan","hover","Equalizer_default","gutterBottom","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","stickyHeader","indexSymbolData","idata","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","resdata","toLocaleLowerCase","substring","stopnview","indexTimeStamp","products","loadPackList","todayTime","getAllIndices","softedData","calendar","_this4","overflow","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","connect","diffData","putData","totPEOI","totCEOI","diff","dateTime","x","y","colors","upward","downward","ApexCharts","querySelector","render","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","OrderBook","getTodayOrder","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","hash","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","sbin","positionList","heartbeatReq","exchtime","searchSymbolPendingOrder","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","createdAt","buyAt","sellAt","pattenNamePending","orderPenidngList","deleteInOrderPenidngList","delitem","callBackUpdate","updateLTP","getTradePrice","refreshCandleChartManually","_ref3","failedCount","onChange2","openNewPage","backToPositionPage","intervaltime","findlast5minMovementInterval","Delete_default","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","today","timediff","clearInterval","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","foundData","foundPatternList","toLowerCase","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","findNR7PatternLive","showtestdata","last7Candle","last9Candle","_ref4","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","netqty","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_ret","showHighLowWisePer","v","tagPatternWhichTaken","orderTagToPosition","pattern","getPositionData","_callee7","totalMaxPnL","getPosition","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","pnl","buyqty","slData","stopLossAmount","brokerageOnlyCharges","allCharges","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","BankLtpltp","getStopLossPrice","_ref8","_callee8","_context13","slPrice","_x2","_x3","LockedSymbolName","orderData","getOpenPeningOrderId","squareOff","abs","modifyOrderMethod","getOptionPercentage","trailPerChange","getPercentage","sqrOffbeginningTime","sqrOffendTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","totalDayLoss","dailyLossPer","getNSETopStock","scandata","isFound","symbolName","selectedStockInteval","getSelectedStockFromDb","_loop7","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","optiontype","Orderbook","OrderWatchlist","Example","areaData","areaSeries","readCsv","parsedList","newJsonList","addtowatchlist","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","indexData","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","get2DecimalNumber","number","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","sluglist","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","timeVal","slugName","checkSectorApiOther","iislPercChange","ltP","stopSearching","stop10bbSearch","find10MinBBBlast","startSearching","totalStockToWatch","findlast5minMovement","findlast5minMovementUpdate","lightcandleChartData","getFullYear","getMonth","getDate","sma","bbvlastvalue","dataltp","upsidecount","downsidecount","startingRsiupside","startingRsiDownside","BBBlastType","RSIValue","BB","updateMsg","percentChangeList","changePer","tostartInteral","AppRouter","react_router","path","exact","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,IAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,QAE/BiZ,WAAY,CACV,CAAE9I,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAYI,MAAO,wBAChD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAYI,MAAO,0BAChD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAYI,MAAO,0BAChD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,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","file":"static/js/main.f76b7538.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\n\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    checkOtherApi(index){\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n    }\n\n    checkSectorApiOther(index){\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n      }\n\n    \n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices);\n    }\n\n    allIndicesDirectJSON(){\n        return axios.get('http://localhost:8081/nse/get_indices', '');\n        // return axios.get(apiConstant.allIndices2Json);\n     }\n \n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map2\" />\n    </ListItem>\n\n\n    \n\n   \n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Watchlist\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map\" />\n    </ListItem>\n  \n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem> */}\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { resolveResponse } from \"./ResponseHandler\";\nimport AdminService from \"../components/service/AdminService\";\nimport TradeConfig from '../components/MyTrade/TradeConfig';\nimport * as moment from 'moment';\nimport Notify from './Notify';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\n\n\nclass CommonOrderMethod {\n\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n              //  this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n              //  this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n\n    getStockTokenDetails = (SYMBOL) => {\n        // AdminService.autoCompleteSearch(e.target.value).then(searchRes => {   \n        //     let searchResdata =  searchRes.data; \n        //     if(e.target.value){\n        //         var uppercaseName =  e.target.value.toUpperCase() + \"-EQ\"; \n        //         var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.symbol === uppercaseName);      \n        //       //  console.log(\"found\", found[0] && found[0].symbol); \n        //         if(found.length){ \n        //             setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token'] : found[0].token });    \n        //         }\n        //     }\n\n        //  })\n    }\n\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        // if (isAutomatic != \"Automatic\") {\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n        //         return;\n        //     }\n        // }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n           quantity = quantity > 0 ? 1 : 0;\n           console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                    \n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n\n\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                            histdata.data.forEach((element, index) => {\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                                closeingData.push(element[4]);\n                                highData.push(element[2]);\n                                lowData.push(element[3]);\n                                openData.push(element[3]);\n                                valumeData.push(element[5]);\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            });\n\n                            var inputRSI = { values: closeingData, period: 14 };\n                            var lastRsiValue = RSI.calculate(inputRSI)\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n        \n                            var inputVWAP = {\n                                open: openData,\n                                high: highData,\n                                low: lowData,\n                                close: closeingData,\n                                volume: valumeData\n                            };\n        \n                            var input = {\n                            period : 20, \n                            values : bbdata,\n                            stdDev : 2\n                            }\n        \n                            var bb = BollingerBands.calculate(input); \n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\n\n                            var bbLastValue = bb[bb.length-1]; \n\n                            \n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                \n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                       \n\n                                //bb stop loss\n                                if(bbLastValue){\n                                    stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                    stoploss = this.getMinPriceAllowTick(stoploss);\n                                    stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                    console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                    console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                }\n                               \n                    \n                            }\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                          \n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                            }\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption, callback);\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        var callData = {\n                            \"transactiontype\": orderType,//BUY OR SELL\n                            \"tradingsymbol\": symbol,\n                            \"symboltoken\": token,\n                            \"status\": false\n                        }\n                        callback(callData);\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n            }\n        }).catch(function (error) {\n\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n    placeOrderMethod = (orderOption, callback) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n                callback(callData);\n                return;  \n            }\n\n        })\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n}\n\nexport default new CommonOrderMethod();\n\n   ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\nimport AdminService from \"./service/AdminService\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CommonOrderMethod from \"../utils/CommonMethods\";\nimport Spinner from \"react-spinner-material\";\nimport Notify from '../utils/Notify';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        buyFlag: true,\n        sellFlag: true,\n        searchSymbol: \"\",\n\n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const autoSearchList = [];\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n\n    function handleInput(e) {\n        setValues({ ...values, ['searchSymbol']: e.target.value });\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n\n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token']: found[0].token });\n                }\n            }\n        })\n    }\n\n    function callbackAfterOrderDone(order) {\n        setValues({ ...values, ['buyFlag']: order.status });\n        setValues({ ...values, ['sellFlag']: order.status });\n        setValues({ ...values, ['searchSymbol']: '' });\n    }\n\n    function handleClick(type) {\n\n        if (values.token && values.searchSymbol) {\n            if (type == 'BUY') {\n                setValues({ ...values, ['buyFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\n            }\n\n            if (type == 'SELL') {\n                setValues({ ...values, ['sellFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\n            }\n        } else {\n            Notify.showError(\"Type Symbol!!!\");\n        }\n    }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            <Button href={\"/mtrade/#/home\"}>\n                                <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n\n                            </Button>\n\n                        </Grid>\n\n\n                        <Grid item  >\n\n                            <Grid\n                                justify=\"space-between\"\n                                container\n                                spacing={2}\n                            >\n\n                                <Grid item  >\n                                    <TextField label=\"Type full Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput} />\n                                </Grid>\n                                <Grid item  >\n                                    {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\n                                </Grid>\n\n                                <Grid item  >\n                                    {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                               \n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" href={\"/mtrade/#/sector-heat-map2\"}>\n                                        Hit Map\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" target={'_blank'} href={\"/mtrade/#/find-fast-movement\"}>\n                                        Fast Move <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n\n                                {/* <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid> */}\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n // console.log(\"startDatestartDate,\",props ); \n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\n\n\nexport default function LightChartCom( props ) {\nconst [open, setOpen] = React.useState(false);  \n\nvar fileref=document.createElement('script')\nfileref.setAttribute(\"type\",\"text/javascript\")\nfileref.setAttribute(\"src\", 'https://unpkg.com/lightweight-charts@3.4.0/dist/lightweight-charts.standalone.production.js')\ndocument.getElementsByTagName(\"head\")[0].appendChild(fileref)\n\nsetTimeout(() => {\n  \nvar chart = window.LightweightCharts.createChart(document.getElementById('chart'), {\n\twidth: 600,\n  height: 300,\n\trightPriceScale: {\n\t\tscaleMargins: {\n\t\t\ttop: 0.3,\n\t\t\tbottom: 0.25,\n\t\t},\n\t\tborderVisible: false,\n\t},\n\tlayout: {\n\t\tbackgroundColor: 'white',   // '#131722',\n\t\ttextColor: '#d1d4dc',\n\t},\n\tgrid: {\n\t\tvertLines: {\n\t\t\tcolor: 'rgba(42, 46, 57, 0)',\n\t\t},\n\t\thorzLines: {\n\t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\n\t\t},\n\t},\n});\n\n// var areaSeries = chart.addAreaSeries({\n// \ttopColor: 'rgba(38,198,218, 0.56)',\n// \tbottomColor: 'rgba(38,198,218, 0.04)',\n// \tlineColor: 'rgba(38,198,218, 1)',\n// \tlineWidth: 2,\n// });\n// areaSeries.setData(props.ChartData.areaSeries);\n\n\nvar volumeSeries = chart.addHistogramSeries({\n\tcolor: '#26a69a',\n\tpriceFormat: {\n\t\ttype: 'volume',\n\t},\n\tpriceScaleId: '',\n\tscaleMargins: {\n\t\ttop: 0.8,\n\t\tbottom: 0,\n\t},\n});\nvolumeSeries.setData(props.ChartData.volumeData);\n\n\nvar candleSeries = chart.addCandlestickSeries({\n  upColor: 'green',\n  downColor: 'red',\n  borderDownColor: 'red',\n  borderUpColor: 'green',\n  wickDownColor: 'red',\n  wickUpColor: 'green',\n});\n\nvar data = [\n\t{ time: '2018-10-19', open: 180.34, high: 180.99, low: 178.57, close: 179.85 },\n\t{ time: '2018-10-22', open: 180.82, high: 181.40, low: 177.56, close: 178.75 },\n\t{ time: '2018-10-23', open: 175.77, high: 179.49, low: 175.44, close: 178.53 },\n\t{ time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n\t{ time: '2018-10-25', open: 177.52, high: 180.50, low: 176.83, close: 179.07 },\n\t{ time: '2018-10-26', open: 176.88, high: 177.34, low: 170.91, close: 172.23 },\n\t{ time: '2018-10-29', open: 173.74, high: 175.99, low: 170.95, close: 173.20 },\n\t{ time: '2018-10-30', open: 173.16, high: 176.43, low: 172.64, close: 176.24 },\n\t{ time: '2018-10-31', open: 177.98, high: 178.85, low: 175.59, close: 175.88 },\n\t{ time: '2018-11-01', open: 176.84, high: 180.86, low: 175.90, close: 180.46 },\n\t{ time: '2018-11-02', open: 182.47, high: 183.01, low: 177.39, close: 179.93 },\n\t{ time: '2018-11-05', open: 181.02, high: 182.41, low: 179.30, close: 182.19 },\n\t{ time: '2018-11-06', open: 181.93, high: 182.65, low: 180.05, close: 182.01 },\n\t{ time: '2018-11-07', open: 183.79, high: 187.68, low: 182.06, close: 187.23 },\n\t{ time: '2018-11-08', open: 187.13, high: 188.69, low: 185.72, close: 188.00 },\n\t{ time: '2018-11-09', open: 188.32, high: 188.48, low: 184.96, close: 185.99 },\n\t{ time: '2018-11-12', open: 185.23, high: 186.95, low: 179.02, close: 179.43 },\n\t{ time: '2018-11-13', open: 177.30, high: 181.62, low: 172.85, close: 179.00 },\n\t{ time: '2018-11-14', open: 182.61, high: 182.90, low: 179.15, close: 179.90 },\n\t{ time: '2018-11-15', open: 179.01, high: 179.67, low: 173.61, close: 177.36 },\n\t{ time: '2018-11-16', open: 173.99, high: 177.60, low: 173.51, close: 177.02 },\n\t{ time: '2018-11-19', open: 176.71, high: 178.88, low: 172.30, close: 173.59 },\n\t{ time: '2018-11-20', open: 169.25, high: 172.00, low: 167.00, close: 169.05 },\n\t{ time: '2018-11-21', open: 170.00, high: 170.93, low: 169.15, close: 169.30 },\n\t{ time: '2018-11-23', open: 169.39, high: 170.33, low: 168.47, close: 168.85 },\n\t{ time: '2018-11-26', open: 170.20, high: 172.39, low: 168.87, close: 169.82 },\n\t{ time: '2018-11-27', open: 169.11, high: 173.38, low: 168.82, close: 173.22 },\n\t{ time: '2018-11-28', open: 172.91, high: 177.65, low: 170.62, close: 177.43 },\n\t{ time: '2018-11-29', open: 176.80, high: 177.27, low: 174.92, close: 175.66 },\n\t{ time: '2018-11-30', open: 175.75, high: 180.37, low: 175.11, close: 180.32 },\n\t{ time: '2018-12-03', open: 183.29, high: 183.50, low: 179.35, close: 181.74 },\n\t{ time: '2018-12-04', open: 181.06, high: 182.23, low: 174.55, close: 175.30 },\n\t{ time: '2018-12-06', open: 173.50, high: 176.04, low: 170.46, close: 175.96 },\n\t{ time: '2018-12-07', open: 175.35, high: 178.36, low: 172.24, close: 172.79 },\n\t{ time: '2018-12-10', open: 173.39, high: 173.99, low: 167.73, close: 171.69 },\n\t{ time: '2018-12-11', open: 174.30, high: 175.60, low: 171.24, close: 172.21 },\n\t{ time: '2018-12-12', open: 173.75, high: 176.87, low: 172.81, close: 174.21 },\n\t{ time: '2018-12-13', open: 174.31, high: 174.91, low: 172.07, close: 173.87 },\n\t{ time: '2018-12-14', open: 172.98, high: 175.14, low: 171.95, close: 172.29 },\n\t{ time: '2018-12-17', open: 171.51, high: 171.99, low: 166.93, close: 167.97 },\n\t{ time: '2018-12-18', open: 168.90, high: 171.95, low: 168.50, close: 170.04 },\n\t{ time: '2018-12-19', open: 170.92, high: 174.95, low: 166.77, close: 167.56 },\n\t{ time: '2018-12-20', open: 166.28, high: 167.31, low: 162.23, close: 164.16 },\n\t{ time: '2018-12-21', open: 162.81, high: 167.96, low: 160.17, close: 160.48 },\n\t{ time: '2018-12-24', open: 160.16, high: 161.40, low: 158.09, close: 158.14 },\n\t{ time: '2018-12-26', open: 159.46, high: 168.28, low: 159.44, close: 168.28 },\n\t{ time: '2018-12-27', open: 166.44, high: 170.46, low: 163.36, close: 170.32 },\n\t{ time: '2018-12-28', open: 171.22, high: 173.12, low: 168.60, close: 170.22 },\n\t{ time: '2018-12-31', open: 171.47, high: 173.24, low: 170.65, close: 171.82 },\n\t{ time: '2019-01-02', open: 169.71, high: 173.18, low: 169.05, close: 172.41 },\n\t{ time: '2019-01-03', open: 171.84, high: 171.84, low: 168.21, close: 168.61 },\n\t{ time: '2019-01-04', open: 170.18, high: 174.74, low: 169.52, close: 173.62 },\n\t{ time: '2019-01-07', open: 173.83, high: 178.18, low: 173.83, close: 177.04 },\n\t{ time: '2019-01-08', open: 178.57, high: 179.59, low: 175.61, close: 177.89 },\n\t{ time: '2019-01-09', open: 177.87, high: 181.27, low: 177.10, close: 179.73 },\n\t{ time: '2019-01-10', open: 178.03, high: 179.24, low: 176.34, close: 179.06 },\n\t{ time: '2019-01-11', open: 177.93, high: 180.26, low: 177.12, close: 179.41 },\n\t{ time: '2019-01-14', open: 177.59, high: 179.23, low: 176.90, close: 178.81 },\n\t{ time: '2019-01-15', open: 176.08, high: 177.82, low: 175.20, close: 176.47 },\n\t{ time: '2019-01-16', open: 177.09, high: 177.93, low: 175.86, close: 177.04 },\n\t{ time: '2019-01-17', open: 174.01, high: 175.46, low: 172.00, close: 174.87 },\n\t{ time: '2019-01-18', open: 176.98, high: 180.04, low: 176.18, close: 179.58 },\n\t{ time: '2019-01-22', open: 177.49, high: 178.60, low: 175.36, close: 177.11 },\n\t{ time: '2019-01-23', open: 176.59, high: 178.06, low: 174.53, close: 176.89 },\n\t{ time: '2019-01-24', open: 177.00, high: 177.53, low: 175.30, close: 177.29 },\n\t{ time: '2019-01-25', open: 179.78, high: 180.87, low: 178.61, close: 180.40 },\n\t{ time: '2019-01-28', open: 178.97, high: 179.99, low: 177.41, close: 179.83 },\n\t{ time: '2019-01-29', open: 178.96, high: 180.15, low: 178.09, close: 179.69 },\n\t{ time: '2019-01-30', open: 180.47, high: 184.20, low: 179.78, close: 182.18 },\n\t{ time: '2019-01-31', open: 181.50, high: 184.67, low: 181.06, close: 183.53 },\n\t{ time: '2019-02-01', open: 184.03, high: 185.15, low: 182.83, close: 184.37 },\n\t{ time: '2019-02-04', open: 184.30, high: 186.43, low: 183.84, close: 186.43 },\n\t{ time: '2019-02-05', open: 186.89, high: 186.99, low: 184.69, close: 186.39 },\n\t{ time: '2019-02-06', open: 186.69, high: 186.69, low: 184.06, close: 184.72 },\n\t{ time: '2019-02-07', open: 183.74, high: 184.92, low: 182.45, close: 184.07 },\n\t{ time: '2019-02-08', open: 183.05, high: 184.58, low: 182.72, close: 184.54 },\n\t{ time: '2019-02-11', open: 185.00, high: 185.42, low: 182.75, close: 182.92 },\n\t{ time: '2019-02-12', open: 183.84, high: 186.40, low: 183.52, close: 185.52 },\n\t{ time: '2019-02-13', open: 186.30, high: 188.68, low: 185.92, close: 188.41 },\n\t{ time: '2019-02-14', open: 187.50, high: 188.93, low: 186.00, close: 187.71 },\n\t{ time: '2019-02-15', open: 189.87, high: 192.62, low: 189.05, close: 192.39 },\n\t{ time: '2019-02-19', open: 191.71, high: 193.19, low: 191.28, close: 192.33 },\n\t{ time: '2019-02-20', open: 192.39, high: 192.40, low: 191.11, close: 191.85 },\n\t{ time: '2019-02-21', open: 191.85, high: 192.37, low: 190.61, close: 191.82 },\n\t{ time: '2019-02-22', open: 191.69, high: 192.54, low: 191.62, close: 192.39 },\n\t{ time: '2019-02-25', open: 192.75, high: 193.42, low: 189.96, close: 189.98 },\n\t{ time: '2019-02-26', open: 185.59, high: 188.47, low: 182.80, close: 188.30 },\n\t{ time: '2019-02-27', open: 187.90, high: 188.50, low: 183.21, close: 183.67 },\n\t{ time: '2019-02-28', open: 183.60, high: 185.19, low: 183.11, close: 185.14 },\n\t{ time: '2019-03-01', open: 185.82, high: 186.56, low: 182.86, close: 185.17 },\n\t{ time: '2019-03-04', open: 186.20, high: 186.24, low: 182.10, close: 183.81 },\n\t{ time: '2019-03-05', open: 184.24, high: 185.12, low: 183.25, close: 184.00 },\n\t{ time: '2019-03-06', open: 184.53, high: 184.97, low: 183.84, close: 184.45 },\n\t{ time: '2019-03-07', open: 184.39, high: 184.62, low: 181.58, close: 182.51 },\n\t{ time: '2019-03-08', open: 181.49, high: 181.91, low: 179.52, close: 181.23 },\n\t{ time: '2019-03-11', open: 182.00, high: 183.20, low: 181.20, close: 182.44 },\n\t{ time: '2019-03-12', open: 183.43, high: 184.27, low: 182.33, close: 184.00 },\n\t{ time: '2019-03-13', open: 183.24, high: 183.78, low: 181.08, close: 181.14 },\n\t{ time: '2019-03-14', open: 181.28, high: 181.74, low: 180.50, close: 181.61 },\n\t{ time: '2019-03-15', open: 182.30, high: 182.49, low: 179.57, close: 182.23 },\n\t{ time: '2019-03-18', open: 182.53, high: 183.48, low: 182.33, close: 183.42 },\n\t{ time: '2019-03-19', open: 184.19, high: 185.82, low: 183.48, close: 184.13 },\n\t{ time: '2019-03-20', open: 184.30, high: 187.12, low: 183.43, close: 186.10 },\n\t{ time: '2019-03-21', open: 185.50, high: 190.00, low: 185.50, close: 189.97 },\n\t{ time: '2019-03-22', open: 189.31, high: 192.05, low: 188.67, close: 188.75 },\n\t{ time: '2019-03-25', open: 188.75, high: 191.71, low: 188.51, close: 189.68 },\n\t{ time: '2019-03-26', open: 190.69, high: 192.19, low: 188.74, close: 189.34 },\n\t{ time: '2019-03-27', open: 189.65, high: 191.61, low: 188.39, close: 189.25 },\n\t{ time: '2019-03-28', open: 189.91, high: 191.40, low: 189.16, close: 190.06 },\n\t{ time: '2019-03-29', open: 190.85, high: 192.04, low: 190.14, close: 191.89 },\n\t{ time: '2019-04-01', open: 192.99, high: 195.90, low: 192.85, close: 195.64 },\n\t{ time: '2019-04-02', open: 195.50, high: 195.50, low: 194.01, close: 194.31 },\n\t{ time: '2019-04-03', open: 194.98, high: 198.78, low: 194.11, close: 198.61 },\n\t{ time: '2019-04-04', open: 199.00, high: 200.49, low: 198.02, close: 200.45 },\n\t{ time: '2019-04-05', open: 200.86, high: 203.13, low: 200.61, close: 202.06 },\n\t{ time: '2019-04-08', open: 201.37, high: 203.79, low: 201.24, close: 203.55 },\n\t{ time: '2019-04-09', open: 202.26, high: 202.71, low: 200.46, close: 200.90 },\n\t{ time: '2019-04-10', open: 201.26, high: 201.60, low: 198.02, close: 199.43 },\n\t{ time: '2019-04-11', open: 199.90, high: 201.50, low: 199.03, close: 201.48 },\n\t{ time: '2019-04-12', open: 202.13, high: 204.26, low: 202.13, close: 203.85 },\n\t{ time: '2019-04-15', open: 204.16, high: 205.14, low: 203.40, close: 204.86 },\n\t{ time: '2019-04-16', open: 205.25, high: 205.99, low: 204.29, close: 204.47 },\n\t{ time: '2019-04-17', open: 205.34, high: 206.84, low: 205.32, close: 206.55 },\n\t{ time: '2019-04-18', open: 206.02, high: 207.78, low: 205.10, close: 205.66 },\n\t{ time: '2019-04-22', open: 204.11, high: 206.25, low: 204.00, close: 204.78 },\n\t{ time: '2019-04-23', open: 205.14, high: 207.33, low: 203.43, close: 206.05 },\n\t{ time: '2019-04-24', open: 206.16, high: 208.29, low: 205.54, close: 206.72 },\n\t{ time: '2019-04-25', open: 206.01, high: 207.72, low: 205.06, close: 206.50 },\n\t{ time: '2019-04-26', open: 205.88, high: 206.14, low: 203.34, close: 203.61 },\n\t{ time: '2019-04-29', open: 203.31, high: 203.80, low: 200.34, close: 202.16 },\n\t{ time: '2019-04-30', open: 201.55, high: 203.75, low: 200.79, close: 203.70 },\n\t{ time: '2019-05-01', open: 203.20, high: 203.52, low: 198.66, close: 198.80 },\n\t{ time: '2019-05-02', open: 199.30, high: 201.06, low: 198.80, close: 201.01 },\n\t{ time: '2019-05-03', open: 202.00, high: 202.31, low: 200.32, close: 200.56 },\n\t{ time: '2019-05-06', open: 198.74, high: 199.93, low: 198.31, close: 199.63 },\n\t{ time: '2019-05-07', open: 196.75, high: 197.65, low: 192.96, close: 194.77 },\n\t{ time: '2019-05-08', open: 194.49, high: 196.61, low: 193.68, close: 195.17 },\n\t{ time: '2019-05-09', open: 193.31, high: 195.08, low: 191.59, close: 194.58 },\n\t{ time: '2019-05-10', open: 193.21, high: 195.49, low: 190.01, close: 194.58 },\n\t{ time: '2019-05-13', open: 191.00, high: 191.66, low: 189.14, close: 190.34 },\n\t{ time: '2019-05-14', open: 190.50, high: 192.76, low: 190.01, close: 191.62 },\n\t{ time: '2019-05-15', open: 190.81, high: 192.81, low: 190.27, close: 191.76 },\n\t{ time: '2019-05-16', open: 192.47, high: 194.96, low: 192.20, close: 192.38 },\n\t{ time: '2019-05-17', open: 190.86, high: 194.50, low: 190.75, close: 192.58 },\n\t{ time: '2019-05-20', open: 191.13, high: 192.86, low: 190.61, close: 190.95 },\n\t{ time: '2019-05-21', open: 187.13, high: 192.52, low: 186.34, close: 191.45 },\n\t{ time: '2019-05-22', open: 190.49, high: 192.22, low: 188.05, close: 188.91 },\n\t{ time: '2019-05-23', open: 188.45, high: 192.54, low: 186.27, close: 192.00 },\n\t{ time: '2019-05-24', open: 192.54, high: 193.86, low: 190.41, close: 193.59 },\n]; \ncandleSeries.setData(data);\n\nvar datesForMarkers = [data[data.length - 19], data[data.length - 39]];\nvar indexOfMinPrice = 0;\nfor (var i = 1; i < datesForMarkers.length; i++) {\n\tif (datesForMarkers[i].high < datesForMarkers[indexOfMinPrice].high) {\n\t\tindexOfMinPrice = i;\n\t}\n}\nvar markers = [];\nfor (var i = 0; i < datesForMarkers.length; i++) {\n\tif (i !== indexOfMinPrice) {\n\t\tmarkers.push({ time: datesForMarkers[i].time, position: 'aboveBar', color: '#e91e63', shape: 'arrowDown', text: 'Sell @ ' + Math.floor(datesForMarkers[i].high + 2) });\n\t} else {\n\t\tmarkers.push({ time: datesForMarkers[i].time, position: 'belowBar', color: '#2196F3', shape: 'arrowUp', text: 'Buy @ ' + Math.floor(datesForMarkers[i].low - 2) });\n\t}\n}\nmarkers.push({ time: data[data.length - 48].time, position: 'aboveBar', color: '#f68410', shape: 'circle', text: 'D' });\ncandleSeries.setMarkers(markers);\n\n\n  var smaData = calculateSMA(data, 10);\n  var smaLine = chart.addLineSeries({\n    color: 'rgba(4, 111, 232, 1)',\n    lineWidth: 2,\n  });\n  smaLine.setData(smaData);\n\n\nfunction calculateSMA(data, count){\n  var avg = function(data) {\n    var sum = 0;\n    for (var i = 0; i < data.length; i++) {\n       sum += data[i].close;\n    }\n    return sum / data.length;\n  };\n  var result = [];\n  for (var i=count - 1, len=data.length; i < len; i++){\n    var val = avg(data.slice(i - count + 1, i));\n    result.push({ time: data[i].time, value: val});\n  }\n  return result;\n}\n\n\n// var minimumPrice = data[0].value;\n// var maximumPrice = minimumPrice;\n// for(var i = 1; i < data.length; i++) {\n//   var price = data[i].value;\n//   if (price > maximumPrice) {\n//     maximumPrice = price;\n//   }\n//   if (price < minimumPrice) {\n//     minimumPrice = price;\n//   }\n// }\n// var avgPrice = (maximumPrice + minimumPrice) / 2;\n\n// var lineWidth = 2;\n// var minPriceLine = {\n//   price: minimumPrice,\n//   color: '#be1238',\n//   lineWidth: lineWidth,\n//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n//   axisLabelVisible: true,\n//   title: 'min price',\n// };\n// var avgPriceLine = {\n//   price: avgPrice,\n//   color: '#be1238',\n//   lineWidth: lineWidth,\n//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n//   axisLabelVisible: true,\n//   title: 'avg price',\n// };\n// var maxPriceLine = {\n//   price: maximumPrice,\n//   color: '#be1238',\n//   lineWidth: lineWidth,\n//   lineStyle: window.LightweightCharts.LineStyle.Solid,\n//   axisLabelVisible: true,\n//   title: 'max price',\n// }\n\n//candleSeries.createPriceLine(minPriceLine);\n//candleSeries.createPriceLine(avgPriceLine);\n//candleSeries.createPriceLine(maxPriceLine);\n//chart.timeScale().fitContent();\n\n\n\n}, 1000);\n\n\n\n  return (\n    <div  id=\"chart\">\n      \n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { createChart } from 'lightweight-charts';\nimport Input from \"@material-ui/core/Input\";\n\nimport { w3cwebsocket } from 'websocket';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"\",  //NR4ForNextDay  NR4_SameDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            backTestResultDateRange: [],\n            searchFailed: 0,\n            openEqualHighList: [],\n            openEqualLowList: [],\n            chartStaticData: [],\n            timeFrame : \"TEN_MINUTE\",\n            cursor : '',\n            advanceShareCount: 0, \n            declineShareCount: 0, \n            UnchangeShareCount: 0,\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || []\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onInputChange = (e) => {\n\n\n        this.setState({ [e.target.name]: e.target.value }, function(){\n\n            console.log(\"time\", this.state.timeFrame); \n            if (this.state.tradingsymbol) {\n                this.showStaticChart(this.state.symboltoken);\n            }\n        });\n\n       \n    }\n   \n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value == 'NR4_Daywide_daterage') {\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\n\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n        //    this.updateSocketWatch();\n            this.checkOpenEqualToLow();\n            this.setState({ cursor : ''}); \n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n          //      this.updateSocketWatch();\n                this.checkOpenEqualToLow();\n                this.setState({ cursor :''}); \n            });\n        }\n    }\n    checkOpenEqualToLow = async () => {\n\n        this.setState({ openEqualHighList: [], openEqualLowList: [],  advanceShareCount: 0, \n            declineShareCount: 0,UnchangeShareCount: 0  });\n\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n\n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\": element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if (LtpData) {\n\n                    LtpData.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2);\n\n                    if (LtpData && LtpData.open == LtpData.low) {\n                        console.log(\"o=l\", LtpData);\n                        this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\n                    }\n\n                    if (LtpData && LtpData.open == LtpData.high) {\n                        console.log(\"o=h\", LtpData);\n                        this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\n                    }\n\n                    this.state.symbolList[index].ltp = LtpData.ltp;\n                    this.state.symbolList[index].nc = LtpData.perChange;\n\n                    if (LtpData.perChange > 0)\n                    this.setState({ advanceShareCount: this.state.advanceShareCount+1 });\n                    else if (LtpData.perChange < 0)\n                    this.setState({ declineShareCount: this.state.declineShareCount +1 });\n                    else\n                    this.setState({ UnchangeShareCount: this.state.UnchangeShareCount +1 });\n\n\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({ symbolList: this.state.symbolList });\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n\n\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n   \n\n    makeConnection = (wsClint) => {\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        wsClint.send(firstTime_req);\n        this.updateSocketWatch(wsClint);\n    }\n\n    updateSocketWatch = (wsClint) => {\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n    updateSocketDetails=(wsClint)=>{\n        wsClint.onopen = (res) => {\n            this.makeConnection( wsClint );\n            this.updateSocketWatch(wsClint);\n        }\n\n        wsClint.onmessage = (message) => {\n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData = JSON.parse(data);\n            var symbolListArray = this.state.symbolList;\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                var foundLive = liveData.filter(row => row.tk == element.token);\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                    symbolListArray[index].ltp = foundLive[0].ltp;\n                    symbolListArray[index].nc = foundLive[0].nc;\n                  //  console.log(\"ws onmessage: \", foundLive);\n                    \n                }\n            });\n            symbolListArray && symbolListArray.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n            this.setState({ symbolList: symbolListArray });\n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e);\n        }\n\n        setInterval(() => {\n          //  this.makeConnection();\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n            // console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n        }, 59000);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Home\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 900, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n\n        this.setState({ chart:  chart, candleSeries: candleSeries, smaLineSeries : smaLineSeries, volumeSeries: volumeSeries });\n\n        this.checkOpenEqualToLow();\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            const wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n            this.updateSocketDetails(wsClint); \n            setInterval(() => {\n                if (this.state.tradingsymbol) {\n                    this.getLTP();\n                    this.showStaticChart(this.state.symboltoken);\n                }\n            }, 1000);\n        }\n\n        // setInterval(() => {\n        //     AdminService.getAutoScanStock().then(res => {\n        //         let data = resolveResponse(res);\n        //         console.log(data);  \n        //         if(data.status  && data.message == 'SUCCESS'){ \n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \n        //         }\n        //     })    \n        // }, 2000);\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment = startdate;\n            const endMoment = enddate;\n\n\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if (this.state.stopScaningFlag) {\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n\n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(0, 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var foundStock = {\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                symbol: element.symbol,\n                                token: element.token,\n                                pattenName: \"NR4\",\n                                SellAt: sellenty,\n                                high: firstCandle[2],\n                                low: firstCandle[3],\n                                BuyAt: buyentry,\n                                candleChartData: candleChartData,\n                                close: firstCandle[4]\n                            }\n\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    }\n\n\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (candle5min[2] < buyHighest) {\n                    buyHighest = candle5min[3];\n                }\n\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[3] < buyentry) {\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange);\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if (!buyEntryFlag && perChange >= 1) {\n\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2]);\n\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            }\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\n\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (buyHighest < histdataInside[index][2]) {\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[2] > buyentry) {\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n\n\n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if (!buyEntryFlag) {\n\n                    if (firstTimeTrail && perChange >= 0.7) {\n                        trailCount += 1;\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\n                        longTradeFound.sellEntyPrice = minPrice;\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\n                        firstTimeTrail = false;\n                    } else {\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\n\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\n\n                        if (perchngfromTriggerPrice > 0.7) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\n\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\n                            break;\n                        }\n\n                    }\n\n\n\n\n\n\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\n                        break;\n                    }\n\n                }\n\n\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            } //candle loop end\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": element.token,\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                            }\n\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\n                                histdataInside = histdataInside && histdataInside.data;\n\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n\n                            }).catch(error => {\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\n                            });\n\n\n\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[2] > buyentry) {\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                            //     sumPercentage += perChng;\n\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[2],\n                            //         stopLoss: firstCandle[3],\n                            //         buyExitPrice: buyentry,\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\n                            //         candleChartData : candleChartData,\n                            //     }\n                            //     if (Math.floor(10000 / firstCandle[2])){ \n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n                            // }\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[3] < sellenty) {\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                            //     sumPercentage += perChng;\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: sellenty,\n                            //         stopLoss: firstCandle[2],\n                            //         buyExitPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[3],\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\n                            //         candleChartData : candleChartData\n                            //     }\n                            //     if(Math.floor(10000 / firstCandle[3])){\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n\n\n                            // }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            var currentDate = date.format('DD-MM-YYYY');\n\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\n\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                sumPercentage += perChng;\n\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[2],\n                                    stopLoss: firstCandle[3],\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[2])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n\n                                }\n\n                            }\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                sumPercentage += perChng;\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: sellenty,\n                                    stopLoss: firstCandle[2],\n                                    buyExitPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[3],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[3])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\n\n                                }\n\n\n                            }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    }\n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\n        var longCandles = [], shortCandles = [];\n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata);\n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                longCandles.push(longData);\n\n                                totalLongs += 1;\n                                totalLongPer += perChng;\n                                totalLongHighPer += perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                shortCandles.push(shortData);\n\n                                totalShort += 1;\n                                totalShortPer += perChng;\n                                totalShortLowPer += perChngOnLow;\n\n                            }\n\n\n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs: totalLongs,\n                    totalShort: totalShort,\n                    totalLongPer: totalLongPer.toFixed(2),\n                    totalShortPer: totalShortPer.toFixed(2),\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\n                }\n                if (foundStock)\n                    foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles;\n                foundStock.shortCandles = shortCandles;\n\n\n                console.log(\"foundStock\", foundStock);\n                if (Math.floor(10000 / firstCandle[4])) {\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n\n\n\n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n\n                    if (transactiontype == \"BUY\") {\n                        this.placeSLMOrder(\"SELL\");\n                    }\n\n                    if (transactiontype == \"SELL\") {\n                        this.placeSLMOrder(\"BUY\");\n                    }\n\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name, i) => {\n\n        console.log(\"name\", name);\n        var token = '';\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            if (this.state.symbolList[index].symbol === name) {\n                token = this.state.symbolList[index].token;\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\n                break;\n            }\n        }\n        this.setState({ cursor : i}, function(){\n            this.getLTP(); \n            this.showStaticChart(token);\n        } ); \n\n       \n    }\n    getTimeFrameValue=(timeFrame)=> {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\") \n                return \"19:00:00\"; \n                else\n                return \"01:00:00\"; \n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\") \n                return \"23:00:00\"; \n                else                \n                return \"03:00:00\"; \n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\") \n                return \"24:21:00\"; \n                else                \n                return \"07:00:00\"; \n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\") \n                return \"28:01:00\"; \n                else                \n                return \"10:01:00\"; \n                break;\n            case 'THIRTY_MINUTE':                    \n                return \"100:01:00\"; \n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\"; \n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\"; \n                break;\n            default:\n                break;\n        }\n    }\n\n     calculateSMA = (data, count) => {\n\n        console.log(\"smarowdata\", data , count); \n\n        var avg = function(data) {\n          var sum = 0;\n          for (var i = 0; i < data.length; i++) {\n             sum += data[i].close;\n          }\n          return sum / data.length;\n        };\n        var result = [];\n        for (var i=count - 1, len=data.length; i < len; i++){\n          var val = avg(data.slice(i - count + 1, i));\n          result.push({ time: data[i].time, value: val});\n        }\n        return result;\n      }\n      \n\n\n    showStaticChart = (token) => {\n\n        this.setState({ chartStaticData: '' }, function () {\n            console.log('reset done', token);\n        });\n\n        this.dailyBollingCheck(token); \n\n\n        console.log(\"time in function \", this.state.timeFrame); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        // var time = moment.duration(\"10:50:00\");\n        // var startDate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [],volumeSeriesData=[] ;\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime() , value: element[5], color: 'rgba(211, 211, 211, 1)' })\n                    \n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length-1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1))   }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n                    \n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n                    console.log(\"smadata\", smaData); \n\n                    this.state.smaLineSeries.setData(smaData);\n\n                    function setLegendText(priceValue) {\n                        let val = 'n/a';\n                        if (priceValue !== undefined) {\n                            val = (Math.round(priceValue * 100) / 100).toFixed(2);\n                        }\n                        const domElement = document.getElementById('showChartTitle');\n                        domElement.innerHTML = \"MA: \" +val ; \n                    }\n                    \n                    setLegendText(smaData[smaData.length - 1].value);\n                    \n                    this.state.chart.subscribeCrosshairMove((param) => {\n                        console.log(\"chart param\", param); \n                       // setLegendText(param.seriesPrices.get(smaLine));\n                    });\n\n\n                });\n\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                    });\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount });\n\n\n                }\n\n                \n\n\n            }\n        })\n\n\n    }\n\n    \n\n\n    dailyBollingCheck =(token)=>{\n        //this.setState({DailyBulishStatus: ''}); \n\n         \n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum=0; \n\n\n                for (let index = candleDatad.length-20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    closeingDatadaily.push(element[4]);\n                    valumeSum+=element[5];  \n                }\n                \n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({dailyAvgValume: valumeSum/histdatad.data.length}); \n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if(DSMALastValue){\n                    this.setState({DailyBulishStatus: DSMALastValue,  todayCurrentVolume: candleDatad[candleDatad.length-1][5] }); \n\n                }\n            }\n\n\n        });\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType,\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n\n        this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\n        this.setState({ InstrumentHistroy: [] });\n        this.getLTP();\n\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (data && data.data) {\n\n                var histCandles = data.data;\n                histCandles && histCandles.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (histCandles.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy: histCandles });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0;\n                    histCandles.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                    });\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount });\n\n\n                }\n\n            }\n        })\n    }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n\n            if (!foundInWatchlist.length) {\n\n                watchlist.push(fdata);\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\n                    this.LoadSymbolDetails(fdata.symbol);\n                });\n\n                this.setState({ symbolList: watchlist }, function () {\n                  //  this.updateSocketWatch();\n                });\n\n            }\n        }\n\n    }\n    onSelectItemChart = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token, seachSumbol: \"\" }, function () {\n                this.getLTP();\n                this.showStaticChart(fdata.token);\n                this.LoadSymbolDetails(fdata.symbol);\n            });\n           \n        }\n\n    }\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n  handleKeyDown =(e) => {\n  \n    //38 for down and 40 for up key\n    if (e.keyCode === 38 && this.state.cursor > 0) {\n        this.setState( prevState => ({cursor: prevState.cursor - 1})); \n    } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n        this.setState( prevState => ({cursor: prevState.cursor + 1}))\n    }\n    \n     setTimeout(() => {\n        this.updateCandleOnkey(); \n     }, 100);\n    \n  }\n\n \n\n\n  updateCandleOnkey=()=>{\n    var selectedKeyRow =  localStorage.getItem('selectedKeyRow') && JSON.parse( localStorage.getItem('selectedKeyRow')); \n    if(selectedKeyRow.token && selectedKeyRow.symbol ){\n         this.setState({tradingsymbol:selectedKeyRow.symbol, symboltoken :  selectedKeyRow.token},function(){\n            this.getLTP();\n            this.showStaticChart(selectedKeyRow.token);\n         }); \n        \n     }\n  }\n\n\n\n \n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n                    <Grid item xs={12} sm={2}  >\n                        <Paper>\n                            <Autocomplete\n                                freeSolo\n                                id=\"free-solo-2-demo\"\n                                disableClearable\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                onChange={this.onSelectItem}\n                                //+ ' '+  option.exch_seg\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                    option.symbol\n                                ) : []}\n                                renderInput={(params) => (\n                                    <TextField\n                                        onChange={this.onChange}\n                                        {...params}\n                                        label={\"Search Symbol\"}\n                                        margin=\"normal\"\n                                        variant=\"standard\"\n                                        name=\"search\"\n                                        onKeyDown={ this.handleKeyDown }\n                                        value={this.state.search}\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    />\n                                )}\n                            />\n\n                            <div style={{ marginLeft: '10px' }}>\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                    <Select  value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                            <MenuItem value={element}>{element}</MenuItem>\n                                        ))\n                                        }\n\n                                    </Select>\n                                </FormControl>\n\n                            </div>\n\n\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map((row, i) => (\n                                    <>\n                                        <ListItem onKeyDown={ this.handleKeyDown }  button selected={this.state.cursor === i ? 'active' : null} \n                                         \n                                            style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                                                {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n                                                \n                                            <ListItemText  style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\n\n                                           \n                                        </ListItem>\n\n                                    </>\n                                )) : ''}\n                            </div>\n\n                            {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n                        </Paper>\n                        <Typography style={{fontWeight:'bold'}}><span  style={{color:\"green\"}}> Advance {this.state.advanceShareCount} </span> <span  style={{color:\"red\"}}> Decline {this.state.declineShareCount} </span> <span> Unchange {this.state.UnchangeShareCount} </span> </Typography>\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={8}>\n                        <Paper style={{ padding: \"10px\" }}>\n\n                                    \n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n                                \n                                <Grid item xs={10} sm={3}>\n\n                                    {this.state.tradingsymbol ?\n                                        <Typography variant=\"body1\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\n\n                                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\n\n                                        </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\n\n                                    O: {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                    H: {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                    L: {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                    C: {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                                </Grid>\n\n                                <Grid item xs={10} sm={2}>\n                                   \n                                   <Autocomplete\n                                       freeSolo\n                                       id=\"free-solo-2-demo\"\n                                       disableClearable\n                                       style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                       onChange={this.onSelectItemChart}\n                                       value={this.state.seachSumbol}\n                                       //+ ' '+  option.exch_seg\n                                       options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                           option.symbol\n                                       ) : []}\n                                       renderInput={(params) => (\n                                           <TextField\n                                               onChange={this.onChange}\n                                               {...params}\n                                               label={\"Search\"}\n                                               margin=\"normal\"\n                                               variant=\"standard\"\n                                               name=\"seachSumbol\"\n                                               InputProps={{ ...params.InputProps, type: 'search' }}\n                                           />\n                                       )}\n                                   />\n                               </Grid>\n                               \n\n                                <Grid item xs={10} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{marginTop: '10px'}} >\n                                        <InputLabel htmlFor=\"gender\">Time</InputLabel>\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n\n                                </Grid>\n\n                               \n                               \n                                <Grid item xs={12} sm={1}>\n                                    <FormControl style={styles.selectStyle}  style={{marginTop: '3px'}} >\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                            <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\n                                            <MenuItem value={\"DELIVERY\"}>Del</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                                </Grid>\n\n\n                                <Grid item xs={1} sm={2}  >\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                                </Grid>\n\n\n                               \n                                <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                                <Grid item xs={12} sm={3}  >\n                                       <b>  Symbol - {this.state.tradingsymbol}</b> <br />\n                                        Bollinger Bands - {this.state.timeFrame} <br />\n                                    {this.state.bblastValue? <Grid item xs={12} sm={12} >\n                                      \n                                      <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.InstrumentLTP.ltp  >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\n                                       BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\n                                      <span  title=\"Green red mean price running below lower bb band\" style={{ color: this.state.InstrumentLTP.ltp  <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\n                                    </Grid>: \"\"}\n\n                                    <Grid item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                      VWAP:  {this.state.vwapvalue}\n                                    </Grid>\n                                \n                                    <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\n                                        item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                    ))}\n\n                                        \n                                    <br />\n                                    <b>Volume:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\n                                        <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item/100000).toFixed(2)}L &nbsp;</span>\n                                    ))}\n\n                                    <br />  <br />\n\n                                    <Grid title=\"20SMA\" item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily Avg Price: {this.state.DailyBulishStatus && this.state.DailyBulishStatus.toFixed(0)} {this.state.DailyBulishStatus ? this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}  \n                                    </Grid>\n\n  \n                                    <Grid title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                        <b>Daily Avg Volume:</b>  {(this.state.dailyAvgValume/100000).toFixed(2)}L\n                                    </Grid>\n                                    <Grid title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                      {this.state.todayCurrentVolume > this.state.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(this.state.todayCurrentVolume/100000).toFixed(2)}L </b>:  \"Today Volume:\" + (this.state.todayCurrentVolume/100000).toFixed(2) + \"L\"}\n                                    </Grid>\n\n                                    \n\n                                   \n                                    </Grid>\n\n                                    <Grid item xs={12} sm={9}  >\n                                      <div id=\"showChartTitle\"> </div>\n                                     <div id=\"tvchart\"></div>\n\n                                    </Grid>\n\n                                    \n                                </Grid>\n\n\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"50vh\" }} >\n\n\n                                   \n\n\n                                        \n                                   \n\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                                </TableRow>\n                                            )) : ''}\n\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                        <br />\n\n                     \n\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest</Typography>\n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                            <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={4}>\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={6} style={{ marginTop: '28px' }}>\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </>}\n                                    SearchFailed:{this.state.searchFailed}\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12}>\n\n\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ? <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{ background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n        <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n\n\n\n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n\n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                <TableRow hover key={i}  >\n\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n        */}\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                    <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                    <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                    <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                </TableRow>\n\n\n\n                                            )) : ''}\n\n\n                                            <TableRow style={{ background: \"lightgray\" }} >\n\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                                <TableCell align=\"left\" > </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                        : \"\"}\n\n\n\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\n                                                    </TableRow>\n\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                    </TableRow>\n\n                                                </TableHead>\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n\n                                                        <TableRow hover key={i}  >\n\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                        */}\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                            <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                            <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                        </TableRow>\n\n\n                                                    ))}\n\n\n\n                                                    <TableRow style={{ background: \"lightgray\" }} >\n\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                        <TableCell align=\"left\"></TableCell>\n\n\n                                                        <TableCell align=\"left\" > </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n                                                        <TableCell align=\"left\"> </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                </TableBody>\n                                            </Table>\n\n\n\n                                        )) : ''}\n\n                                    </>\n\n                                        : \"\"}\n\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\n                                        </Typography>\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                    <TableRow hover key={i}  >\n                                                        <TableCell align=\"center\">{i + 1}</TableCell>\n                                                        <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                        <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                        <TableCell align=\"left\" title=\"based on last one 6 month\">\n\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                                </>\n                                                            ))}\n\n                                                            <br />\n\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n\n\n                                                                </>\n                                                            ))}\n\n                                                        </TableCell>\n\n\n                                                        <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.high}</TableCell>\n                                                        <TableCell align=\"left\">{row.low}</TableCell>\n                                                        <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                                    </TableRow>\n\n\n\n                                                )) : ''}\n\n                                            </TableBody>\n\n                                        </Table>\n\n                                        : \"\"}\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={2}  >\n\n\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={12}>\n                                <Paper>\n                                    <Typography style={{ textAlign: \"center\", background: \"#20d020\" }}>{this.state.openEqualHighList.length} Open = Low : BUY </Typography>\n                                    <div style={{ overflowY: 'scroll', height: \"25vh\" }}>\n                                        {this.state.openEqualHighList && this.state.openEqualHighList.length ? this.state.openEqualHighList.map(row => (\n                                            <>\n                                                <ListItem button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                                                    <ListItemText style={{ color: !row.perChange || row.perChange == 0 ? \"\" : row.perChange > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.tradingsymbol)} primary={row.tradingsymbol} /> {row.ltp} ({row.perChange}%)\n                                                </ListItem>\n                                            </>\n                                        )) : ''}\n                                    </div>\n                                </Paper>\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={12}>\n                                <Paper >\n                                    <Typography style={{ textAlign: \"center\", background: \"#e66e6e\" }}>{this.state.openEqualLowList.length} Open = High : Sell </Typography>\n                                    <div style={{ overflowY: 'scroll', height: \"25vh\" }}>\n                                        {this.state.openEqualLowList && this.state.openEqualLowList.length ? this.state.openEqualLowList.map(row => (\n                                            <>\n                                                <ListItem button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                                                    <ListItemText style={{ color: !row.perChange || row.perChange == 0 ? \"\" : row.perChange > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.tradingsymbol)} primary={row.tradingsymbol} /> {row.ltp} ({row.perChange}%)\n                                                </ListItem>\n                                            </>\n                                        )) : ''}\n                                    </div>\n                                </Paper>\n                            </Grid>\n\n\n\n\n\n                            <Grid item xs={12} sm={12}>\n                                <Paper>\n                                    <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Weekly, Daily, Hourly Bullish = Buy</Typography>\n                                    <div style={{ overflowY: 'scroll', height: \"25vh\" }}>\n\n                                    </div>\n                                </Paper>\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n                    </Grid>\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n // data.reverse();\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n               \n                this.setState({  fundData :fundsResData.data })\n               }\n           })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        this.getTodayOrder();\n       \n    }\n\n   \n    cancelOrderOfSame = (orderId,variety) =>  {\n       \n        var data = {\n            \"variety\":variety,\n            \"orderid\":orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n                this.getTodayOrder();\n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                         Oders Placed ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\n\n                                \n\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\n\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity}\n                    \n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                       </>\n                                     : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\n                                        {row.orderstatus}\n                                        <br />\n\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \n                                       </>\n                                     : ''}\n\n                                    </TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.feedToken ,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n\n            \n        wsClint.onopen  = (res) => {\n\n             this.makeConnection();\n             console.log('connected');\n         //    this.updateSocketWatch();\n                \n            //  setTimeout(function(){\n            //    this.updateSocketWatch(feedToken ,clientcode);\n            //  }, 800);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList: [], \n            lastTradedData : {}\n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngList : [...this.state.orderPenidngList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n        var isDeleted = false, delitem =''; \n       var orderPenidngList =  localStorage.getItem('orderPenidngList') && JSON.parse( localStorage.getItem('orderPenidngList')); \n       for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n           const element = orderPenidngList[index];\n           if(row.token == element.token){\n            var delitem = orderPenidngList.splice(index, 1); \n            localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList)); \n            this.setState({orderPenidngList : orderPenidngList}); \n            break; \n           }\n       }\n\n       if(delitem[0].token == row.token){\n        return true;\n       }else {\n        return false;\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n       console.log(\"call back called\");\n     // this.deleteInOrderPenidngList(row); \n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n            const element = this.state.orderPenidngList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList)); \n                    this.setState({orderPenidngList : this.state.orderPenidngList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 2000; \n            if(this.state.orderPenidngList.length > 10){\n                intervaltime = this.state.orderPenidngList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n\n\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar/> : \"\"}\n\n             <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Orders Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length}) \n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                        </Typography> \n\n\n                    </Grid>\n\n                   \n\n                    <Grid item >\n\n                        <Grid container spacing={2}>\n                        <Grid item >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        \n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"500px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                    </Grid>\n\n                            \n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport OrderWatchlist from './OrderWatchlist';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList: [],\n            autoSearchList: [],\n            InstrumentLTP: {},\n            autoSearchTemp: [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"DELIVERY\",\n            nr4TotalPer: 0,\n            pnlAmountTotal: 0,\n            totalBrokerCharges: '',\n            totalNetProfit: 0,\n            totelActivatedCount: 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting: \"\",\n            perHighLowTotal: 0,\n            netPnLAmountOnHighlowTotal: 0,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n\n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1500) })\n            //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \n        } else {\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval);\n            clearInterval(this.state.bankNiftyInterval);\n        }\n\n        var scanendTime = moment('3:30pm', 'h:mma');\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\n            //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n\n\n\n            // var tostartInteral =   setInterval(() => {\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 15 === 0){\n            //         setTimeout(() => {\n            //             this.getCandleHistoryAndStore(); \n            //         }, 70000);\n            //         setInterval(() => {\n            //                 if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n            //                 this.getCandleHistoryAndStore(); \n            //             }\n            //          }, 60000 * 15 + 70000 );  \n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern();\n            }, foundPatternsFromStored.length * 100 + 300000);\n\n\n\n        }\n\n        //this.getCandleHistoryAndStore(); \n\n        // this.findNR4PatternLive();\n        //this.findNR7PatternLive();\n\n\n\n        // this.getPositionData();\n        // this.getNSETopStock();\n\n\n        //  this.getMySelectedStock();\n\n\n\n        // setInterval(() => {\n\n        //     var timediff = moment.duration(\"00:50:00\");\n        //     var startdate = moment(new Date()).subtract(timediff);\n\n\n        //     var enddiff = moment.duration(\"00:01:00\");\n        //     var enddate = moment(new Date()).add(enddiff);\n\n\n        //     var data  = {\n        //         \"exchange\": \"NSE\",\n        //         \"symboltoken\": 212,\n        //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n        //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n        //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n        //     }\n\n        //     AdminService.getHistoryData(data).then(res => { \n        //         let histdata = resolveResponse(res,'noPop' );\n        //         var candleData = histdata.data; \n        //         candleData.reverse(); \n        //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n        //     }); \n\n        // }, 1000);\n\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        this.setState({ foundPatternList: backTestResult })\n\n\n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n\n    getCandleHistoryAndStore = async () => {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        const today = moment().isoWeekday();\n        var timediff = '';\n\n\n\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\n            timediff = moment.duration(\"66:00:00\");\n        } else {\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    if (candleData && candleData.length >= 10) {\n                        var last10Candle = candleData.slice(0, 10);\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist, symbol) => {\n\n        //   console.log(\"TweezerTop finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n\n            //\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\n\n                        var ttophistCandle = [];\n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser Top',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: ttophistCandle\n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\n        // console.log(\"TweezerBottom finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var last8candleHigh = candleHist[9][2];\n            var last8candleLow = candleHist[2][3];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n\n            //  \n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n\n\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle = [];\n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser bottom',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: tBophistCandle\n                        }\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data; var rgrangeCount = 0;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    var last5Candle = candleData.slice(0, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last5Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0];\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        console.log(index + 1, element.symbol, rgrangeCount);\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n\n                        if (rgrangeCount == 4) {\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\n\n\n                            var firstCandle = last4Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR4',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr4 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 300));\n\n            // var showtestdata = (index + 1);\n\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n            //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last7Candle = candleData.slice(1, 8);\n                    var last9Candle = candleData.slice(0, 9);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last7Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last9Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\n\n\n                        if (rgrangeCount == 7) {\n\n\n                            var firstCandle = last7Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR7',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr7 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol;\n            this.setState({ stockTesting: showtestdata });\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n\n\n    refreshLtpOnFoundPattern = async () => {\n\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\n\n\n        var foundPatternList = this.state.foundPatternList;\n\n        this.setState({ foundPatternList: [] });\n\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        //       foundPatternList.forEach(element => {\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\n            const element = foundPatternList[index];\n\n            if (element && element.pattenName == 'NR4') {\n\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\": element.token,\n                }\n\n                AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                    var LtpData = data && data.data;\n                    //console.log(LtpData);\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\n                    if (LtpData && LtpData.ltp) {\n\n                        var orderActivated = <span> {LtpData.ltp} </span>;\n\n                        if (LtpData.ltp > element.BuyAt) {\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\n                            quantity = Math.floor(10000 / element.BuyAt);\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n\n                        }\n                        if (LtpData.ltp < element.SellAt) {\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n                        }\n\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol: element.symbol,\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\n                            token: element.token,\n                            pattenName: 'NR4',\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(),\n                            BuyAt: element.BuyAt,\n                            SellAt: element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated: orderActivated,\n                            candleChartData: element.candleChartData,\n                            quantity: quantity ? quantity : \"\",\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange: perChange,\n                            todayChange: todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated', foundData);\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\n\n                        var foundlist = this.state.foundPatternList;\n\n                        foundlist.sort(function (a, b) {\n                            return b.perChange - a.perChange;\n                        });\n\n                        this.setState({ foundPatternList: foundlist });\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                    }\n\n                }).catch(error => {\n                    Notify.showError(element.symbol + \" ltd data not found!\");\n                })\n\n            }\n            await new Promise(r => setTimeout(r, 101));\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                if (row.netqty > 0) {\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n                } else if (row.netqty < 0) {\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((row.sellavgprice - element.triggerprice) * parseInt(row.netqty)).toFixed(2);\n                }\n                break;\n            }\n        }\n\n        return data;\n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        oderbookData.forEach(element => {\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n            }\n        });\n        return data;\n    }\n    getHighLowPercentage = async () => {\n\n        this.setState({showHighLowWisePer: true});\n\n        if (!this.state.positionList.length) {\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n\n            if (element.producttype == \"DELIVERY\") {\n                return \"\";\n            }\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\": element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                    this.state.positionList[index].high = LtpData.high;\n                    this.state.positionList[index].low = LtpData.low;\n                }\n            })\n            await new Promise(r => setTimeout(r, 125));\n            this.setState({ positionList: this.state.positionList });\n\n        }\n\n    }\n    tagPatternWhichTaken =(token)=> {\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \n       \n       var pattern = ''; \n       for (let index = 0; index < orderTagToPosition.length; index++) {\n           const element = orderTagToPosition[index];\n           if(token == element.token){\n            pattern = element.pattenName; \n            break;\n           }\n        }\n        return pattern\n    //    console.log(\"findpatter\", token, orderTagToPosition);\n    //    orderTagToPosition.forEach(element => {\n    //         if(token == element.token){\n    //             return element.pattenName; \n    //         }\n    //    });\n\n    }\n    getPositionData = async () => {\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0;\n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var positionList = data && data.data;\n            if (positionList && positionList.length > 0) {\n\n\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0;\n                positionList.forEach(element => {\n\n                    if (element.producttype == \"DELIVERY\") {\n                        return \"\";\n                    }\n\n                    var percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice)).toFixed(2);\n                    todayProfitPnL += parseFloat(element.pnl);\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n                    totalQtyTraded += parseInt(element.buyqty);\n                    allbuyavgprice += parseFloat(element.buyavgprice);\n                    allsellavgprice += parseFloat(element.sellavgprice);\n                    element.percentPnL = percentPnL;\n                    totalPercentage += parseFloat(percentPnL);\n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \n\n                    var slData = this.getStoplossFromOrderbook(element);\n                    if (slData) {\n                        element.stopLoss = slData.stopLoss;\n                        element.stopLossAmount = slData.maxLossAmount;\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\n                    }\n\n                });\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\n\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\n                this.setState({ totalBrokerCharges: allCharges.toFixed(2) });\n\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\n\n\n                positionList.sort(function (a, b) {\n                    return (b.netqty - a.netqty);\n\n                    //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList: positionList });\n\n            }\n        })\n\n    }\n\n    getNSETopStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n                                    console.log(found[0].symbol, \"found\", found);\n                                    localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                    this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    getMySelectedStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getSelectedStockFromDb().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\n                                    selectedStockwatchList.push(found[0]);\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    checkAndPlaceSingleOrder = (stock) => {\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data = res.data;\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\n            console.log(\"stockfound\", found);\n            if (found && found.length) {\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\n            }\n        })\n    }\n\n\n    getStockOnebyOne() {\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            console.log(\"still ok\");\n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    if (scandata && scandata.length > 0) {\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\n                        var isFound = false;\n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\n                                isFound = true;\n                            }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\n                        }\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n            var LtpData = data && data.data;\n            var ltpPrice = LtpData.ltp\n            if (ltpPrice) {\n\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\n                var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken: token,\n                    buyPrice: 0,\n                    quantity: quantity,\n                    stopLossPrice: stopLossPrice\n                }\n\n                if (quantity && stopLossPrice) {\n                    this.placeOrderMethod(orderOption);\n                }\n\n            }\n\n        }).catch((error) => {\n            console.log(symbol, \"not found\", 'error', error);\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //    console.log(data);       \n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n    }\n\n\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\": \"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                localStorage.setItem({ 'BankLtpltp': LtpData.ltp + '  ' + ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) + '%' });\n                //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\n            }\n\n        })\n    }\n\n\n    getStopLossPrice = async (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n\n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            if (LtpData && LtpData.ltp) {\n                var ltp = parseFloat(LtpData.ltp);\n                ltp = ltp - (ltp * 0.7 / 100);\n                var slPrice = this.getMinPriceAllowTick(ltp);\n\n                this.setState({ stoploss: slPrice });\n                return slPrice;\n            }\n\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"21:10:00\");\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                            stoploss = this.getMinPriceAllowTick(stoploss);\n\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\n\n                            console.log(symbol, \" LTP \", LtpData.ltp);\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                            console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue);\n\n                            var orderOption = {\n                                transactiontype: 'BUY',\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5) {\n                                this.placeOrderMethod(orderOption);\n                            } else {\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                console.log(symbol + \" its not fullfilled\");\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(symbol + \" candle data emply\");\n                    }\n                })\n\n            }\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    cancelOrderOfSame = (row) => {\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if (data.status && data.message === 'SUCCESS') {\n                console.log(\"cancel order\", data);\n                // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n    }\n\n    squareOff = (row) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\n            \"exchange\": row.exchange,\n            \"ordertype\": \"MARKET\",\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n\n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);\n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                this.cancelOrderOfSame(row);\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n\n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'hey Vijay, ' + slmOption.tradingsymbol;\n                window.speechSynthesis.speak(msg);\n\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    getOpenPeningOrderId = (symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\n                data.orderId = oderbookData[index].orderid\n                data.variety = oderbookData[index].variety\n                break;\n            }\n        }\n        return data;\n    }\n    modifyOrderMethod = (row, minPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\": row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"triggerprice\": parseFloat(minPrice),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n\n\n            if (data.status && data.message === 'SUCCESS') {\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\n                msg.text = row.tradingsymbol + ' modified ' + data.message;\n                window.speechSynthesis.speak(msg);\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minPrice));\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n    getOptionPercentage =(row)=> {\n\n        console.log(\"option per calling\"); \n        var percentChange = 0, trailPerChange = 0; \n\n        row.buyavgprice = parseFloat(row.buyavgprice);\n        percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n        if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 5) {\n            var minPrice = row.buyavgprice + (row.buyavgprice * 1 / 100);\n            minPrice = this.getMinPriceAllowTick(minPrice);\n            this.modifyOrderMethod(row, minPrice);\n        } else {\n            var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n            var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n            trailPerChange = perchngfromTriggerPrice; \n            if (perchngfromTriggerPrice >= 5) {\n                minPrice = lastTriggerprice + (lastTriggerprice * 1 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                this.modifyOrderMethod(row, minPrice);\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n \n    }\n\n    \n    getPercentage = (row) => {\n\n        var percentChange = 0, trailPerChange = 0; \n\n        if (row.netqty > 0) {\n            row.buyavgprice = parseFloat(row.buyavgprice);\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 0.3) {\n                var minPrice = row.buyavgprice + (row.buyavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                this.modifyOrderMethod(row, minPrice);\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                if (perchngfromTriggerPrice >= 0.5) {\n                    minPrice = lastTriggerprice + (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            }\n        }\n\n        if (row.netqty < 0) {\n\n            row.sellavgprice = parseFloat(row.sellavgprice);\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -0.3) {\n                var minPrice = row.sellavgprice - (row.sellavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.25 / 100));\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                console.log(\"perchngfromTriggerPrice\", perchngfromTriggerPrice);\n                if (perchngfromTriggerPrice <= -0.5) {\n                    minPrice = lastTriggerprice - (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            }\n        }\n\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n\n            if (!localStorage.getItem('squiredOff' + row.symboltoken)) {\n                localStorage.setItem('squiredOff' + row.symboltoken, 'yes');\n                this.squareOff(row);\n                console.log(\"Sqr off called for\", row.symbolname);\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n    }\n\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\n                    <Grid item >\n                       <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Positions ({this.state.positionList && this.state.positionList.length}) \n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={3} >\n                        <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Total Turnover {this.state.totalTornOver} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item >\n                        <Typography component=\"h3\"  >\n                            <b> Charges</b> <b style={{ color: \"red\" }}>-{this.state.totalBrokerCharges} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalBrokerCharges) > 0 ? \"green\" : \"red\" }}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\n\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\n                    </Grid>\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\n                    </Grid>\n                </Grid>\n\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                    <Grid item xs={12} sm={12}>\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Pattern Name</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n\n                                        {this.state.showHighLowWisePer ? \n                                        <>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                          </> : \"\"}\n\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\n\n                                            <TableCell align=\"left\">\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                                    {row.tradingsymbol} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\n                                                </Button>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\n\n\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== '0' && row.optiontype  == '' ? this.getPercentage(row) : \"\"}\n                                                {(row.optiontype  == 'CE' || row.optiontype  == 'PE') && row.netqty > 0 ? this.getOptionPercentage(row) : \"\"}  \n                                                {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n\n                                        {this.state.showHighLowWisePer ? <>\n                                            <TableCell   align=\"left\">{row.high}</TableCell>\n                                            <TableCell  align=\"left\">{row.low}</TableCell>\n                                          </> : \"\"}\n\n\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\n                                            </TableCell>\n\n                                        </TableRow> : \"\"\n\n                                    )) : ''}\n\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\n\n                                            {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\" : \"\"}\n\n                                        </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                    </TableRow>\n\n\n                                </TableBody>\n                            </Table>\n\n                        </Paper>\n\n\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '250px', overflow: \"auto\" }}>\n                        <OrderBook />\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '300px', overflow: \"auto\" }}>\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\n                    </Grid>\n\n\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \n                    <Grid item xs={12} sm={12} >\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n\n\n                            <Grid justify=\"space-between\"\n                                container>\n                                <Grid item  >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\n\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\n                                    </Typography>\n                                </Grid>\n                                <Grid item >\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                        <TableRow hover key={row.symboltoken}>\n\n\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\n                                                {row.pastPerferm ? <>\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                </> : \"\"}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                            <TableCell align=\"left\">{row.time}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n\n\n                        </Paper>\n                    </Grid> \n                    : \"\"}\n\n\n\n                </Grid>\n\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport LightChartCom from \"./LightChartCom\";\n\nimport Chart from \"./Chart\";\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n  //  this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {\n      cursor: 0,\n      areaData: [\n        { time: '2018-10-19', value: 54.90 },\n        { time: '2018-10-22', value: 54.98 },\n        { time: '2018-10-23', value: 57.21 },\n        { time: '2018-10-24', value: 57.42 },\n        { time: '2018-10-25', value: 56.43 },\n        { time: '2018-10-26', value: 55.51 },\n        { time: '2018-10-29', value: 56.48 },\n        { time: '2018-10-30', value: 58.18 },\n        { time: '2018-10-31', value: 57.09 },\n        { time: '2018-11-01', value: 56.05 },\n        { time: '2018-11-02', value: 56.63 },\n        { time: '2018-11-05', value: 57.21 },\n        { time: '2018-11-06', value: 57.21 },\n        { time: '2018-11-07', value: 57.65 },\n        { time: '2018-11-08', value: 58.27 },\n        { time: '2018-11-09', value: 58.46 },\n        { time: '2018-11-12', value: 58.72 },\n        { time: '2018-11-13', value: 58.66 },\n        { time: '2018-11-14', value: 58.94 },\n        { time: '2018-11-15', value: 59.08 },\n        { time: '2018-11-16', value: 60.21 },\n        { time: '2018-11-19', value: 60.62 },\n        { time: '2018-11-20', value: 59.46 },\n        { time: '2018-11-21', value: 59.16 },\n        { time: '2018-11-23', value: 58.64 },\n        { time: '2018-11-26', value: 59.17 },\n        { time: '2018-11-27', value: 60.65 },\n        { time: '2018-11-28', value: 60.06 },\n        { time: '2018-11-29', value: 59.45 },\n        { time: '2018-11-30', value: 60.30 },\n        { time: '2018-12-03', value: 58.16 },\n        { time: '2018-12-04', value: 58.09 },\n        { time: '2018-12-06', value: 58.08 },\n        { time: '2018-12-07', value: 57.68 },\n        { time: '2018-12-10', value: 58.27 },\n        { time: '2018-12-11', value: 58.85 },\n        { time: '2018-12-12', value: 57.25 },\n        { time: '2018-12-13', value: 57.09 },\n        { time: '2018-12-14', value: 57.08 },\n        { time: '2018-12-17', value: 55.95 },\n        { time: '2018-12-18', value: 55.65 },\n        { time: '2018-12-19', value: 55.86 },\n        { time: '2018-12-20', value: 55.07 },\n        { time: '2018-12-21', value: 54.92 },\n        { time: '2018-12-24', value: 53.05 },\n        { time: '2018-12-26', value: 54.44 },\n        { time: '2018-12-27', value: 55.15 },\n        { time: '2018-12-28', value: 55.27 },\n        { time: '2018-12-31', value: 56.22 },\n        { time: '2019-01-02', value: 56.02 },\n        { time: '2019-01-03', value: 56.22 },\n        { time: '2019-01-04', value: 56.36 },\n        { time: '2019-01-07', value: 56.72 },\n        { time: '2019-01-08', value: 58.38 },\n        { time: '2019-01-09', value: 57.05 },\n        { time: '2019-01-10', value: 57.60 },\n        { time: '2019-01-11', value: 58.02 },\n        { time: '2019-01-14', value: 58.03 },\n        { time: '2019-01-15', value: 58.10 },\n        { time: '2019-01-16', value: 57.08 },\n        { time: '2019-01-17', value: 56.83 },\n        { time: '2019-01-18', value: 57.09 },\n        { time: '2019-01-22', value: 56.99 },\n        { time: '2019-01-23', value: 57.76 },\n        { time: '2019-01-24', value: 57.07 },\n        { time: '2019-01-25', value: 56.40 },\n        { time: '2019-01-28', value: 55.07 },\n        { time: '2019-01-29', value: 53.28 },\n        { time: '2019-01-30', value: 54.00 },\n        { time: '2019-01-31', value: 55.06 },\n        { time: '2019-02-01', value: 54.55 },\n        { time: '2019-02-04', value: 54.04 },\n        { time: '2019-02-05', value: 54.14 },\n        { time: '2019-02-06', value: 53.79 },\n        { time: '2019-02-07', value: 53.57 },\n        { time: '2019-02-08', value: 53.95 },\n        { time: '2019-02-11', value: 54.05 },\n        { time: '2019-02-12', value: 54.42 },\n        { time: '2019-02-13', value: 54.48 },\n        { time: '2019-02-14', value: 54.03 },\n        { time: '2019-02-15', value: 55.16 },\n        { time: '2019-02-19', value: 55.44 },\n        { time: '2019-02-20', value: 55.76 },\n        { time: '2019-02-21', value: 56.15 },\n        { time: '2019-02-22', value: 56.92 },\n        { time: '2019-02-25', value: 56.78 },\n        { time: '2019-02-26', value: 56.64 },\n        { time: '2019-02-27', value: 56.72 },\n        { time: '2019-02-28', value: 56.92 },\n        { time: '2019-03-01', value: 56.96 },\n        { time: '2019-03-04', value: 56.24 },\n        { time: '2019-03-05', value: 56.08 },\n        { time: '2019-03-06', value: 55.68 },\n        { time: '2019-03-07', value: 56.30 },\n        { time: '2019-03-08', value: 56.53 },\n        { time: '2019-03-11', value: 57.58 },\n        { time: '2019-03-12', value: 57.43 },\n        { time: '2019-03-13', value: 57.66 },\n        { time: '2019-03-14', value: 57.95 },\n        { time: '2019-03-15', value: 58.39 },\n        { time: '2019-03-18', value: 58.07 },\n        { time: '2019-03-19', value: 57.50 },\n        { time: '2019-03-20', value: 57.67 },\n        { time: '2019-03-21', value: 58.29 },\n        { time: '2019-03-22', value: 59.76 },\n        { time: '2019-03-25', value: 60.08 },\n        { time: '2019-03-26', value: 60.63 },\n        { time: '2019-03-27', value: 60.88 },\n        { time: '2019-03-28', value: 59.08 },\n        { time: '2019-03-29', value: 59.13 },\n        { time: '2019-04-01', value: 59.09 },\n        { time: '2019-04-02', value: 58.53 },\n        { time: '2019-04-03', value: 58.87 },\n        { time: '2019-04-04', value: 58.99 },\n        { time: '2019-04-05', value: 59.09 },\n        { time: '2019-04-08', value: 59.13 },\n        { time: '2019-04-09', value: 58.40 },\n        { time: '2019-04-10', value: 58.61 },\n        { time: '2019-04-11', value: 58.56 },\n        { time: '2019-04-12', value: 58.74 },\n        { time: '2019-04-15', value: 58.71 },\n        { time: '2019-04-16', value: 58.79 },\n        { time: '2019-04-17', value: 57.78 },\n        { time: '2019-04-18', value: 58.04 },\n        { time: '2019-04-22', value: 58.37 },\n        { time: '2019-04-23', value: 57.15 },\n        { time: '2019-04-24', value: 57.08 },\n        { time: '2019-04-25', value: 55.85 },\n        { time: '2019-04-26', value: 56.58 },\n        { time: '2019-04-29', value: 56.84 },\n        { time: '2019-04-30', value: 57.19 },\n        { time: '2019-05-01', value: 56.52 },\n        { time: '2019-05-02', value: 56.99 },\n        { time: '2019-05-03', value: 57.24 },\n        { time: '2019-05-06', value: 56.91 },\n        { time: '2019-05-07', value: 56.63 },\n        { time: '2019-05-08', value: 56.38 },\n        { time: '2019-05-09', value: 56.48 },\n        { time: '2019-05-10', value: 56.91 },\n        { time: '2019-05-13', value: 56.75 },\n        { time: '2019-05-14', value: 56.55 },\n        { time: '2019-05-15', value: 56.81 },\n        { time: '2019-05-16', value: 57.38 },\n        { time: '2019-05-17', value: 58.09 },\n        { time: '2019-05-20', value: 59.01 },\n        { time: '2019-05-21', value: 59.50 },\n        { time: '2019-05-22', value: 59.25 },\n        { time: '2019-05-23', value: 58.87 },\n        { time: '2019-05-24', value: 59.32 },\n        { time: '2019-05-28', value: 59.57 },\n      ],\n      volumeData: [\n        { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-22', value: 21737523.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-23', value: 29328713.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-24', value: 37435638.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-25', value: 25269995.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-26', value: 24973311.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-29', value: 22103692.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-30', value: 25231199.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-31', value: 24214427.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-01', value: 22533201.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-02', value: 14734412.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-05', value: 12733842.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-06', value: 12371207.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-07', value: 14891287.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-08', value: 12482392.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-09', value: 17365762.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-12', value: 13236769.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-13', value: 13047907.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-14', value: 18288710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-15', value: 17147123.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-16', value: 19470986.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-19', value: 18405731.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-20', value: 22028957.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-21', value: 18482233.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-23', value: 7009050.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-26', value: 12308876.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-27', value: 14118867.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-28', value: 18662989.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-29', value: 14763658.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-30', value: 31142818.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-03', value: 27795428.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-04', value: 21727411.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-06', value: 26880429.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-07', value: 16948126.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-10', value: 16603356.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-11', value: 14991438.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-12', value: 18892182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-13', value: 15454706.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-14', value: 13960870.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-17', value: 18902523.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-18', value: 18895777.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-19', value: 20968473.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-20', value: 26897008.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-21', value: 55413082.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-24', value: 15077207.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-26', value: 17970539.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-27', value: 17530977.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-28', value: 14771641.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-31', value: 15331758.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-02', value: 13969691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-03', value: 19245411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-04', value: 17035848.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-07', value: 16348982.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-08', value: 21425008.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-09', value: 18136000.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-10', value: 14259910.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-11', value: 15801548.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-14', value: 11342293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-15', value: 10074386.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-16', value: 13411691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-17', value: 15223854.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-18', value: 16802516.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-22', value: 18284771.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-23', value: 15109007.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-24', value: 12494109.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-25', value: 17806822.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-28', value: 25955718.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-29', value: 33789235.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-30', value: 27260036.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-31', value: 28585447.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-01', value: 13778392.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-04', value: 15818901.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-05', value: 14124794.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-06', value: 11391442.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-07', value: 12436168.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-08', value: 12011657.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-11', value: 9802798.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-12', value: 11227550.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-13', value: 11884803.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-14', value: 11190094.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-15', value: 15719416.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-19', value: 12272877.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-20', value: 11379006.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-21', value: 14680547.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-22', value: 12534431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-25', value: 15051182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-26', value: 12005571.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-27', value: 8962776.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-28', value: 15742971.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-01', value: 10942737.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-04', value: 13674737.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-05', value: 15749545.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-06', value: 13935530.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-07', value: 12644171.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-08', value: 10646710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-11', value: 13627431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-12', value: 12812980.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-13', value: 14168350.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-14', value: 12148349.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-15', value: 23715337.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-18', value: 12168133.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-19', value: 13462686.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-20', value: 11903104.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-21', value: 10920129.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-22', value: 25125385.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-25', value: 15463411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-26', value: 12316901.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-27', value: 13290298.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-28', value: 20547060.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-29', value: 17283871.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-01', value: 16331140.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-02', value: 11408146.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-03', value: 15491724.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-04', value: 8776028.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-05', value: 11497780.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-08', value: 11680538.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-09', value: 10414416.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-10', value: 8782061.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-11', value: 9219930.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-12', value: 10847504.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-15', value: 7741472.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-16', value: 10239261.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-17', value: 15498037.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-18', value: 13189013.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-22', value: 11950365.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-23', value: 23488682.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-24', value: 13227084.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-25', value: 17425466.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-26', value: 16329727.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-29', value: 13984965.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-30', value: 15469002.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-01', value: 11627436.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-02', value: 14435436.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-03', value: 9388228.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-06', value: 10066145.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-07', value: 12963827.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-08', value: 12086743.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-09', value: 14835326.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-10', value: 10707335.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-13', value: 13759350.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-14', value: 12776175.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-15', value: 10806379.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-16', value: 11695064.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-17', value: 14436662.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-20', value: 20910590.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-21', value: 14016315.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-22', value: 11487448.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-23', value: 11707083.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-24', value: 8755506.00, color: 'rgba(0, 150, 136, 0.8)' },\n      ]\n    }\n  }\n\n\n  render() {\n    const { cursor } = this.state\n\n    return (\n      <Container>\n\n          <LightChartCom ChartData={{areaSeries: this.state.areaData, volumeData : this.state.volumeData}}/>\n       \n      </Container>\n    )\n  }\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        \n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n//     loadIndexesList() {\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n//         AdminService.getAllIndices()\n//             .then((res) => {\n//                 if (res.data) {\n//                     var data = res.data, sectorStockList = [];\n//                     this.setState({ indexTimeStamp: data.timestamp })\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n//                   //  this.setState({sectorList :  softedData});\n                  \n// //                    this.setState({ sectorList: []});\n//                     function sleep(ms) {\n//                         return new Promise(resolve => setTimeout(resolve, ms));\n//                     }\n//                     var updateLtpOnInterval = async (ref, softedData) => {\n\n//                             var middleSector = []; \n//                             for (let i = 0; i < softedData.length; i++) {\n\n//                                 var length = 1;                                     \n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n//                                     softedData[i].stockList = sectorStocks;\n//                                     length = sectorStocks.length; \n//                                     if (sectorStocks && sectorStocks.length) {\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n//                                     }\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n//                                 }else{\n//                                     softedData[i].stockList = sectorStocks;\n//                                     middleSector.push(softedData[i]); \n//                                 }\n\n                                \n                            \n//                                 await sleep(length / 10 * 1500);\n//                             }\n\n\n//                             middleSector.forEach(element => {\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\n//                             });\n//                         }\n//                         updateLtpOnInterval(this, softedData);\n//                 }\n//             })\n//             .catch((reject) => {\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n//                 this.speckIt(\"All Indices API Failed\");\n\n//             })\n\n//         this.setState({ refreshFlag: true });\n\n//     }\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n        \n\n                    var data = res.data && res.data.data, sectorStockList = [];\n                   // this.setState({ indexTimeStamp: data.timestamp })\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\n                  //  this.setState({sectorList :  softedData});\n\n                  console.log(softedData); \n\n                    this.setState({ sectorList: []});  \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1;                                     \n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\n\n                                    if(sectorStocks && sectorStocks.length){\n                                        softedData[i].stockList = sectorStocks;\n                                        length = sectorStocks.length; \n                                        if (sectorStocks && sectorStocks.length) {\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\n                                        }\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                    }\n                                }else{\n                                    if(sectorStocks && sectorStocks.length>=1){\n                                        softedData[i].stockList = sectorStocks;\n                                        middleSector.push(softedData[i]); \n                                    }\n                                  \n                                }\n\n                                await sleep(length / 10 * 150);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n          //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                        \n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            sluglist : {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                // 'NIFTY NEXT 50': 'juniorNifty',\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\n            },\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0,\n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        window.document.title = \"Hit Map2\"; \n\n\n       this.loadIndexesList();\n\n       \n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 30000);\n    \n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function (error) {\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n                \n                   var softedData = res.data && res.data.data; \n                   softedData.sort(function (a, b) {\n                    return b.percChange - a.percChange;\n                   });\n\n                   \n                   this.setState({ indexTimeStamp: softedData[0].timeVal });\n\n\n                    for (let index = 0; index < softedData.length; index++) {\n                        const element = softedData[index];\n                        var slugName =  this.state.sluglist[element.indexName]; \n\n                        if(slugName){\n                            console.log(\"secName\", element.indexName, slugName);\n                            AdminService.checkSectorApiOther(slugName).then(res => {\n                                console.log(element.indexName, res.data.data);\n                                softedData[index].stockList = res.data && res.data.data; \n                                softedData[index].time = res.data && res.data.time; \n                                this.setState({ sectorList: softedData });\n                            }).catch(error => {\n                               // Notify.showError(element.indexName + \"fail to get stockdata\"); \n                               console.log(\"list fetch error\", error)\n                            })\n                        }\n                    }\n\n             \n\n\n                    // this.state.sectorList.forEach(element => {\n                    //     if(element.stockList && element.stockList.length){\n                    //         document.title = \"Top1: \" + element.indexName; \n                    //         return;\n                    //     }\n                    // });\n\n\n                    \n                }\n            })\n            .catch((reject) => {\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({ stockUpdate: index });\n\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n        // this.refreshSectorCandleManually(index); \n        //  this.checkLast5MinMovement(index); \n\n\n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\n\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber = (number) => {\n\n        if (number) {\n            return number.toFixed(2);\n        } else {\n            return number;\n        }\n    }\n\n    render() {\n\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n        //         return b.nc - a.nc;\n        //     });\n        // });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\n                            &nbsp;\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\n                        indexdata.stockList ?  <Grid item xs={12} sm={3}>\n                        <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                            {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Button>\n                            &nbsp;\n\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                <ShowChartIcon />\n                            </Button> */}\n\n                            <Typography variant=\"body1\" >\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Typography>\n\n                            <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n                                {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                    <Grid item xs={12} sm={6} >\n                                        <Paper style={{ textAlign: \"center\" }} >\n\n                                            {/* {sectorItem.cng} */}\n                                            <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\n                                                {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\n                                            </Typography>\n\n\n\n\n                                            {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\n                                            </span> : \"\"}\n\n                                            {sectorItem.vwapValue ?\n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                                : \"\"}\n\n\n                                            {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                options={{\n                                                    chart: {\n                                                        type: 'candlestick',\n                                                        //  height: 40\n\n                                                    },\n                                                    title: {\n                                                        text: '',\n                                                        align: 'left'\n                                                    },\n                                                    xaxis: {\n                                                        type: 'datetime',\n                                                    },\n                                                    yaxis: {\n                                                        tooltip: {\n                                                            enabled: true\n                                                        }\n                                                    }\n                                                }}\n                                                series={[{\n                                                    data: sectorItem.candleChartData\n\n                                                }]}\n                                                type=\"candlestick\"\n                                    \n                                            /> : \"\"} */}\n\n\n                                            {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\n                                                </Grid>\n                                            </Grid>\n*/}\n\n\n                                        </Paper>\n\n\n                                    </Grid>\n\n                                ))\n                                }\n\n                            </Grid>\n\n                        </Paper>\n                    </Grid> : \"\" \n                  \n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType : \"BBBlastOnly\",\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Fast Movement\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 5 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 5 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"50:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            var upsidecount = 0, downsidecount = 0, startingRsiupside = lastRsiValue[2], startingRsiDownside = lastRsiValue[2];\n                            lastRsiValue.forEach((element, i) => {\n                                if (i > 2 && element >= 55 && element <= 65) {\n                                    if (startingRsiupside <= element) {\n                                        startingRsiupside = element;\n                                        upsidecount += 1;\n                                    }\n                                }\n\n                                if (i > 2 && element >= 35 && element <= 45) {\n                                    if (element <= startingRsiDownside) {\n                                        startingRsiDownside = element;\n                                        downsidecount += 1;\n                                    }\n                                }\n                            });\n\n\n\n                            console.log(watchList[index].symbol, \"last continue rsi\", upsidecount);\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" RSI rising :\" + upsidecount });\n                            if (upsidecount >= 1 || downsidecount >= 1) {\n                                if (this.state.BBBlastType == 'BBBlastOnly') {\n                                    if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                        foundData.push({\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData\n                                        })\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM: Buy \" + watchList[index].symbol;\n\n                                    }\n                                    if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                        foundData.push({\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData\n                                        })\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                    }\n                                } else {\n\n                                    let timeDuration = this.getTimeFrameValue('ONE_DAY');\n                                    var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n                                    var startDateforDaily = moment(new Date()).subtract(time);\n                                    var dataDay = {\n                                        \"exchange\": watchList[index].exch_seg,\n                                        \"symboltoken\": watchList[index].token,\n                                        \"interval\": 'ONE_DAY',\n                                        \"fromdate\": moment(startDateforDaily).format(format1),\n                                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                                    }\n                                    AdminService.getHistoryData(dataDay).then(resd => {\n                                        let histdatad = resolveResponse(resd, 'noPop');\n                                        var DSMA = '';\n                                        if (histdatad && histdatad.data && histdatad.data.length) {\n                                            var candleDatad = histdatad.data;\n                                            var closeingDatadaily = [];\n                                            candleDatad.forEach((element, loopindex) => {\n                                                closeingDatadaily.push(element[4]);\n                                            });\n\n                                            DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n\n                                            var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                                            console.log(watchList[index].symbol, \"DSMA\", DSMALastValue);\n\n                                            if (LtpData.ltp > DSMALastValue && bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                foundData.push({\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData\n                                                    \n                                                })\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.speckIt(watchList[index].symbol + ' BB  buy');\n                                                window.document.title = \"FM: Buy \" + watchList[index].symbol;\n\n                                            }\n                                            if (LtpData.ltp < DSMALastValue && bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                foundData.push({\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData\n                                                })\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.speckIt(watchList[index].symbol + ' BB sell');\n                                                window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                            }\n                                        }\n\n\n                                    });\n\n                                }\n\n\n                            }\n\n\n\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        console.log(\"findlast5minMovement\",  this.state.findlast5minMovement); \n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\n// import NiftyView from \"./MyTrade/NiftyView\";\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\nimport Test from \"./MyTrade/Test\";\n\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\n\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\n\n\n                    \n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\n\n                    <Route path=\"/test\" component={Test}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}