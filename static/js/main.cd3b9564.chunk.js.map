{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/FindFastMovement.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","Math","random","toString","substr","CookieExpireDate","Date","setDate","getDate","document","cookie","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","split","i","eqPos","indexOf","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","foundPatternList","reverse","FoundPatternDialog_DialogTitle","FoundPatternDialog_DialogContent","Table","stickyHeader","size","TableRow","TableCell","TableBody","map","idata","hover","key","marginLeft","candleData","symbol","getElementById","click","Equalizer_default","pattenName","time","BuyAt","SellAt","FoundPatternDialog_DialogActions","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","clsx","edge","Menu_default","item","noWrap","direction","FoundPatternDialog_CustomizedDialogs","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","wsClint","w3cwebsocket","Home","autoCompleteSearch","console","log","autoSearchList","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","fromDate","startDate","endDate","getLTP","exchange","tradingsymbol","symboltoken","LtpData","InstrumentLTP","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","firstTime_req","feedToken","send","updateSocketWatch","channel","sbin","task","user","acctid","stopBacktesting","stopScaningFlag","backTestAnyPattern","asyncToGenerator","regenerator_default","mark","_callee","startdate","enddate","currentMoment","endMoment","watchList","runningTest","_loop","wrap","_context2","prev","next","backTestResult","backTestFlag","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","moment","isSameOrBefore","backTestNR4DatewiseRange","r","setTimeout","add","_context","interval","fromdate","todate","getHistoryData","histdata","index2","last10Candle","slice","next10Candle","toLocaleTimeString","backtestTweezerTop","backtestTweezerBottom","stockTesting","stop","delegateYield","_callee2","_loop2","_context4","FoundPatternList","_context3","subtract","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","toFixed","sellenty","foundStock","high","low","close","nr4CheckPastPerfommance","catch","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","toLocaleString","stopLoss","brokerageCharges","quantity","floor","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","toConsumableArray","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","minPrice","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee3","sumPercentage","_loop3","_context6","searchFailed","_context5","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref4","_callee4","_loop4","_context8","_context7","dateWithWlType","selectedWatchlist","datewisetrades","perChngOnLow","_x","apply","_callee5","_loop5","_context10","_context9","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","round","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","placeOrder","transactiontype","slmOrderType","variety","ordertype","buyPrice","producttype","price","squareoff","stoploss","orderid","placeSLMOrder","LoadSymbolDetails","getHistory","triggerprice","histCandles","sort","b","InstrumentHistroy","onSelectItem","values","autoSearchTemp","fdata","saveWatchListJSON","stock","resdata","search","deleteItemWatchlist","list","findIndex","splice","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","ifNotBought","_this2","beginningTime","endTime","currentTime","isoWeekday","isBetween","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","ltp","nc","onerror","setInterval","_req","_this3","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Autocomplete","freeSolo","disableClearable","paddingLeft","paddingRight","option","renderInput","params","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","Delete_default","sbinLtp","TableHead","whiteSpace","fontWeight","MaterialUIDateTimePicker","lib_default","background","colSpan","parseFloat","gutterBottom","cursor","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","textAlign","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","indexSymbolData","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","speckIt","toLocaleLowerCase","innerHTML","substring","percent","SpeechSynthesisUtterance","stopnview","indexTimeStamp","products","loadPackList","todayTime","getAllIndices","softedData","calendar","_this4","overflow","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","connect","diffData","putData","callData","totPEOI","totCEOI","diff","dateTime","x","y","colors","upward","downward","ApexCharts","querySelector","render","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","Paper","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","updatetime","modifyOrder","trailingstoploss","lotsize","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","hash","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","positionList","heartbeatReq","exchtime","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","findlast5minMovement","timediff","foundData","percentChangeList","changePer","getCandleHistoryAndStore","today","clearInterval","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","findNR7PatternLive","showtestdata","last7Candle","last9Candle","refreshCandleChartManually","_ref5","symbolname","failedCount","showMultipleCandleChart","refreshLtpOnFoundPattern","_callee6","foundPatternsFromStored","_context11","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","netqty","buyavgprice","maxLossAmount","parseInt","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_callee7","_loop6","_ret","_context13","_context12","v","getPositionData","_callee8","totalMaxPnL","_context14","getPosition","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","pnl","buyqty","slData","stopLossAmount","brokerageOnlyCharges","allCharges","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","found","exch_seg","orderWithFlatstoploss","ltpPrice","stopLossPrice","perTradeStopLossPer","getMinPriceAllowTick","orderOption","placeOrderMethod","BankLtpltp","getStopLossPrice","_ref9","_callee9","_context15","slPrice","_x2","_x3","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","abs","updateOrderList","slmOption","modifyOrderMethod","wholenumber","decimal","getPercentage","sqrOffbeginningTime","sqrOffendTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","totalDayLoss","dailyLossPer","getNSETopStock","scandata","result","_loop7","isFound","j","symbolName","searchRes","selectedStockInteval","getSelectedStockFromDb","_loop8","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","findlast5minMovementUpdate","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","sectorItem","orderType","isAutomatic","spinnerIndex","highestsum","bbhigerValue","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","indexData","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","vwapdata","closeingData","highData","lowData","openData","valumeData","refreshSectorCandleManually","_ref3","_index3","bbdata","inputRSI","period","lastRsiValue","RSI","calculate","inputVWAP","volume","input","stdDev","bb","BollingerBands","vwapValue","vwap","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","getPercentageColor","get2DecimalNumber","number","topGLCount","loadIndexesList","sleep","ms","resolve","ref","middleSector","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","startSearching","findlast5minMovementInterval","stopSearching","AppRouter","react_router","path","exact","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","FindFastMovement","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.cd3b9564.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    getAllIndices(){\n       var sessionId =  Math.random().toString(36).substr(2, 9);\n       var CookieExpireDate = new Date();\n       CookieExpireDate.setDate(CookieExpireDate.getDate() + 1);\n       document.cookie = \"sessionId=\" + sessionId + \";expires=\" + CookieExpireDate + \";domain=www.nseindia.com;path=/\";\n\n\n        return axios.get(apiConstant.allIndices);\n    }\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Heat Map\" />\n    </ListItem>\n\n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Search Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n  \n    <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem>\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values] = React.useState({\n        acquisitionCount: '',\n        resubmitCount: ''\n    });\n\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    // function handleClick(e) {\n    //     console.log(e.target.innerText)\n    //     //this.props.history.push('/login');\n    // }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n                        </Grid>\n\n                        <Grid item >\n                            <Typography variant=\"h6\" noWrap>\n                                {localStorage.getItem('BankLtpltp')}\n                            </Typography>\n\n                        </Grid>\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                                style={{ color: \"white\" }}\n                            >\n\n                                <Grid item> \n                                    <Button variant=\"outlined\" color=\"primary\" href={\"/mtrade/#/sector-heat-map\"}>\n                                        Sector Hit Map\n                                    </Button>\n                                </Grid>\n\n\n                                <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid>\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n                    \n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n // console.log(\"startDatestartDate,\",props ); \n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\n\nimport { w3cwebsocket } from 'websocket';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"NR4_SameDay\",  //NR4ForNextDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData : localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData : [],\n            stopScaningFlag : false,\n            backTestResultDateRange : [],\n            searchFailed:0,\n            FoundPatternList : localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || []\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if( e.target.value == 'NR4_Daywide_daterage'){\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n            \n            this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange : backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] });\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) });\n\n        }\n\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        //  console.log(\"1st Request :- \" + firstTime_req);\n        wsClint.send(firstTime_req);\n\n        this.updateSocketWatch();\n\n    }\n\n    updateSocketWatch = () => {\n\n        \n\n        \n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n\n        channel = channel.join('&');\n        var sbin = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n\n        console.log(\"update watech\", sbin); \n        wsClint.send(JSON.stringify(sbin));\n    }\n\n\n    componentDidMount() {\n\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n      \n\n            wsClint.onopen  = (res) => {\n              //  this.makeConnection();\n              //  this.updateSocketWatch();\n           }\n   \n           wsClint.onmessage = (message) => {\n               var decoded = window.atob(message.data);\n               var data = this.decodeWebsocketData(pako.inflate(decoded));\n               var liveData = JSON.parse(data);\n               var symbolListArray = this.state.symbolList; \n               this.state.symbolList && this.state.symbolList.forEach((element, index)  => {\n                   var foundLive = liveData.filter(row => row.tk == element.token);\n                   if(foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc){\n                       symbolListArray[index].ltp = foundLive[0].ltp; \n                       symbolListArray[index].nc = foundLive[0].nc; \n                       console.log(\"foundLive\", foundLive);\n                   }\n               });\n               symbolListArray && symbolListArray.sort(function (a, b) {\n                   return  b.nc - a.nc;\n               });\n               this.setState({symbolList : symbolListArray}); \n           }\n   \n           wsClint.onerror = (e) => {\n               console.log(\"socket error\", e);\n           }\n   \n           setInterval(() => {\n               this.makeConnection();\n               var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n               // console.log(\"Request :- \" + _req);\n               wsClint.send(_req);\n           }, 59000);\n\n\n        }\n\n\n        var list = localStorage.getItem('watchList');\n        if (!list) {\n            localStorage.setItem('watchList', []);\n        }\n\n        // setInterval(() => {\n        //     AdminService.getAutoScanStock().then(res => {\n        //         let data = resolveResponse(res);\n        //         console.log(data);  \n        //         if(data.status  && data.message == 'SUCCESS'){ \n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \n        //         }\n        //     })    \n        // }, 2000);\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n     \n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment =startdate; \n            const endMoment = enddate; \n            \n            \n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if(this.state.stopScaningFlag){\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r,  this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n        \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n    \n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n        this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(0, 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n\n\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            \n                                var foundStock = {\n                                    foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                    symbol: element.symbol,\n                                    token : element.token, \n                                    pattenName : \"NR4\", \n                                    SellAt: sellenty,\n                                    high: firstCandle[2],\n                                    low: firstCandle[3],\n                                    BuyAt: buyentry,\n                                    candleChartData : candleChartData, \n                                    close : firstCandle[4]\n                                }\n                            \n                                this.nr4CheckPastPerfommance(element.token, foundStock) ; \n\n                            }\n\n                        }\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n            \n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    } \n\n    \n    findShortTraadeOnNextDay =(element, firstCandle, candleChartData, histdataInside)=>{\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n       // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry*1/100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true,  longTradeFound = {},   elementInside = '', buyHighest = histdataInside[0][3]; \n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n            \n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(),candle5min[1],candle5min[2],candle5min[3],candle5min[4]]); \n                if(candle5min[2] < buyHighest){\n                    buyHighest = candle5min[3]; \n                }\n               \n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if(buyEntryFlag && elementInside[3] < buyentry){\n                    console.log(element.symbol, \"taken short enty\", elementInside[3] );\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData : candleChartData,\n                    }\n                    buyEntryFlag = false; \n                }\n                                                          \n               \n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange );\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if(!buyEntryFlag && perChange >= 1){\n\n                    var sellEntyPrice = buyentry - buyentry * 1/100; \n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2] );\n\n                if(!buyEntryFlag && elementInside[2] >= buyentrySL){\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"SL_Hit\"; \n                    break;\n                }\n             \n            }\n\n            if(!buyEntryFlag && !longTradeFound.sellEntyPrice){\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus  = \"Market_End\"; \n            }\n\n            if(!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice){\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay =(element, firstCandle, candleChartData, histdataInside)=>{\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n//        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n   //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n       var buyentrySL = (buyentry - (buyentry*0.3/100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount =0,  longTradeFound = {},   elementInside = '', buyHighest = histdataInside[0][2]; \n\n\n        if (histdataInside && histdataInside.length) {\n            \n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(),candle5min[1],candle5min[2],candle5min[3],candle5min[4]]); \n                if(buyHighest < histdataInside[index][2]){\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if(buyEntryFlag && elementInside[2] > buyentry){\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData : candleChartData,\n                    }\n                    buyEntryFlag = false; \n                }\n                                                          \n               \n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n                \n            \n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if(!buyEntryFlag){\n\n                        if(firstTimeTrail && perChange >= 0.7){\n                            trailCount +=1;\n                            var minPrice =  buyentry + (buyentry * 0.1/100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus  = \"Trail by 0.1% \"+trailCount + \"time\"; \n                            firstTimeTrail = false; \n                        }else{ \n                            var lastTriggerprice =  longTradeFound.sellEntyPrice; \n                            var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n                           \n                            var buyExitPricePer =  longTradeFound.buyExitPrice; \n                            var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer)*100/buyExitPricePer).toFixed(2);   \n                           \n                            if(perchngfromTriggerPrice > 0.7){\n                                    trailCount +=1;\n                                    minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                                    longTradeFound.sellEntyPrice = minPrice;\n                                    longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                                    longTradeFound.exitStatus  = \"Trail by 0.25% \"+trailCount + \"time\"; \n                                   \n                            }else if(buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4){\n                                trailCount +=1;\n                                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                                longTradeFound.sellEntyPrice = minPrice;\n                                longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                                longTradeFound.exitStatus  = \"Min range 0.3 -0.4% \"+trailCount + \"time\"; \n                                break; \n                            }\n\n                        }\n\n                        \n\n\n\n\n                        if(elementInside[3] <= longTradeFound.sellEntyPrice){\n                            console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3] , longTradeFound.sellEntyPrice,  new Date(elementInside[0]).toLocaleString()); \n                            break; \n                        }\n\n                }\n\n                \n                if(!buyEntryFlag && elementInside[3] <= buyentrySL){\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3] , buyentrySL,  new Date(elementInside[0]).toLocaleString()); \n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus  = \"SL_Hit\"; \n                    break;\n                }\n             \n            } //candle loop end\n\n            if(!buyEntryFlag && !longTradeFound.sellEntyPrice){\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus  = \"Market_End\"; \n            }\n\n            if(!buyEntryFlag && Math.floor(100000 / buyentry)  && longTradeFound.buyExitPrice){\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\",longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed : 0});\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(1, 5);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n                           \n                                var start5thdate = moment(next5thCandle[0]).set({\"hour\": 9, \"minute\": 15});\n                                var end5thdate = moment(next5thCandle[0]).set({\"hour\": 15, \"minute\": 30});\n                            \n                                var data = {\n                                    \"exchange\": \"NSE\",\n                                    \"symboltoken\": element.token,\n                                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                    \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                    \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                                }\n                        \n                                AdminService.getHistoryData(data).then(insideCandleRes => {\n                                    let histdataInside = resolveResponse(insideCandleRes, 'noPop'); \n                                    histdataInside =  histdataInside && histdataInside.data; \n\n                                    this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n                                   // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n                        \n                                }).catch(error => {\n                                    Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                    this.setState({searchFailed : this.state.searchFailed +1})\n                                });\n\n\n                               \n                                // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                                // if (next5thCandle[2] > buyentry) {\n                                //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                //     sumPercentage += perChng;\n        \n                                //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                //     var foundStock = {\n                                //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                //         symbol: element.symbol,\n                                //         sellEntyPrice: next5thCandle[4],\n                                //         highAndLow: next5thCandle[2],\n                                //         stopLoss: firstCandle[3],\n                                //         buyExitPrice: buyentry,\n                                //         brokerageCharges: 0.06,\n                                //         perChange: perChng.toFixed(2),\n                                //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                //         quantity: Math.floor(10000 / firstCandle[2]),\n                                //         candleChartData : candleChartData,\n                                //     }\n                                //     if (Math.floor(10000 / firstCandle[2])){ \n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                //     }\n                                // }\n                                // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                                // if (next5thCandle[3] < sellenty) {\n                                //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                //     sumPercentage += perChng;\n                                //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                //     var foundStock = {\n                                //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                //         symbol: element.symbol,\n                                //         sellEntyPrice: sellenty,\n                                //         stopLoss: firstCandle[2],\n                                //         buyExitPrice: next5thCandle[4],\n                                //         highAndLow: next5thCandle[3],\n                                //         brokerageCharges: 0.06,\n                                //         perChange: perChng.toFixed(2),\n                                //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                                //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                //         quantity: Math.floor(10000 / firstCandle[3]),\n                                //         candleChartData : candleChartData\n                                //     }\n                                //     if(Math.floor(10000 / firstCandle[3])){\n                                //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                //     }\n\n\n                                // }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({searchFailed : this.state.searchFailed +1})\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({searchFailed : this.state.searchFailed +1})\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n         //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    } \n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            \n            if(this.state.stopScaningFlag){\n                break;\n            }\n\n\n            \n        var time = moment.duration(\"240:00:00\");\n        var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                      candleData.reverse(); \n                    \n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(1, 5);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4) {\n\n                            //last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[0];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                var currentDate = date.format('DD-MM-YYYY'); \n\n                                var dateWithWlType =  currentDate+' '+ this.state.selectedWatchlist; \n\n                                var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                                var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : []; \n                              \n                                console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n        \n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[4],\n                                        highAndLow: next5thCandle[2],\n                                        stopLoss: firstCandle[3],\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])){ \n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                        datewisetrades.push(foundStock);\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n                                          \n                                        \n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        stopLoss: firstCandle[2],\n                                        buyExitPrice: next5thCandle[4],\n                                        highAndLow: next5thCandle[3],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if(Math.floor(10000 / firstCandle[3])){\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                        datewisetrades.push(foundStock);\n                                        backTestResultDateRange[dateWithWlType] = datewisetrades; \n\n                                        console.log('backTestResultDateRange', backTestResultDateRange);\n                                        localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n                                     \n                                      //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n            \n                                        this.setState({dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange : backTestResultDateRange });\n                            \n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                        \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') +' '+ index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    } \n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = []; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow : perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])){ \n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult:  this.state.backTestResult.reverse()});\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow : perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData : candleChartData\n                                    }\n                                    if(Math.floor(10000 / firstCandle[3])){\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs=0, totalShort=0, totalLongPer=0, totalShortPer=0, totalLongHighPer=0, totalShortLowPer=0; \n        var longCandles=[], shortCandles=[]; \n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = []; \n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount,firstCandle[0].toString().substr(0, 25)) ; \n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow : perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData : candleChartData\n                                }\n                                longCandles.push(longData); \n                                \n                                totalLongs+=1; \n                                totalLongPer+=perChng; \n                                totalLongHighPer+=perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow : perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData : candleChartData\n                                }\n                                shortCandles.push(shortData); \n\n                                totalShort+=1; \n                                totalShortPer+=perChng;\n                                totalShortLowPer+=perChngOnLow; \n\n                            }\n\n                           \n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs:totalLongs, \n                    totalShort:totalShort, \n                    totalLongPer:totalLongPer.toFixed(2),\n                    totalShortPer:totalShortPer.toFixed(2),\n                    totalLongHighPer:totalLongHighPer.toFixed(2),\n                    totalShortLowPer:totalShortLowPer.toFixed(2),\n                }\n                if(foundStock) \n                foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles; \n                foundStock.shortCandles = shortCandles; \n \n\n                 console.log(\"foundStock\",foundStock); \n                if (Math.floor(10000 / firstCandle[4])){ \n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n      \n     \n        \n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype, slmOrderType) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name) => {\n\n        console.log(\"this.state.symbolList\", this.state.symbolList);\n\n        var token = '';\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            if (this.state.symbolList[index].symbol === name) {\n                token = this.state.symbolList[index].token;\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\n                break;\n            }\n        }\n        this.getHistory(token);\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType ? slmOrderType : \"SELL\",\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (data && data.data) {\n\n                var histCandles = data.data;\n                histCandles && histCandles.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (histCandles.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy: histCandles, buyPrice: histCandles[0][2] });\n                }\n                this.getLTP();\n            }\n        })\n    }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol);\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [];\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n            if (!foundInWatchlist.length) {\n                watchlist.push(fdata);\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                AdminService.saveWatchListJSON({ stock: fdata }).then(res => {\n                    let resdata = resolveResponse(res, 'noPop');\n                    console.log(resdata);\n                });\n            }\n\n            this.setState({ symbolList: JSON.parse(localStorage.getItem('watchList')), search: \"\" });\n            this.updateSocketWatch();\n\n        }\n\n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if(insiderow)\n        localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n        \n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if(candleChartDataInside)\n        localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n        \n        document.getElementById('showCandleChart').click();\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n       \n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0;\n        var tradetotal = 0, totalWin = 0,  totalLoss  = 0; \n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <ChartDialog />\n                <Grid direction=\"row\" container>\n\n                    <Grid item xs={12} sm={2}  >\n\n                        <Autocomplete\n                            freeSolo\n                            id=\"free-solo-2-demo\"\n                            disableClearable\n                            style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                            onChange={this.onSelectItem}\n                            //+ ' '+  option.exch_seg\n                            options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                option.symbol\n                            ) : []}\n                            renderInput={(params) => (\n                                <TextField\n                                    onChange={this.onChange}\n                                    {...params}\n                                    label={\"Search Symbol\"}\n                                    margin=\"normal\"\n                                    variant=\"standard\"\n\n                                    name=\"search\"\n                                    value={this.state.search}\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\n                                /> \n                            )}\n                        />\n\n                        <div style={{ marginLeft: '10px' }}>\n                            <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                    <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                    {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                        <MenuItem value={element}>{element}</MenuItem>\n                                    ))\n                                    }\n\n                                </Select>\n                            </FormControl>\n\n                        </div>\n\n\n\n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\n\n                            {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\n                                <>\n                                    <ListItem button style={{ fontSize: '12px' }} >\n                                        <ListItemText style={{ color: !row.nc  || row.nc == 0 ? \"\" : row.nc > 0 ? 'green' : \"red\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {row.ltp} ({row.nc}%) <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />\n                                    </ListItem>\n\n                                </>\n                            )) : ''}\n                        </div>\n\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n\n                    </Grid>\n\n\n\n\n                    <Grid item xs={12} sm={10}>\n\n\n                        <Grid direction=\"row\" alignItems=\"center\" container>\n\n                           <Grid style={{display:\"visible\"}} direction=\"row\" alignItems=\"center\" container>\n    \n                            <Grid item xs={10} sm={5}>\n                                <Typography variant=\"h5\"  >\n                                    {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"}   {this.state.sbinLtp}\n                                </Typography>\n                                Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                            </Grid>\n                            <Grid item xs={12} sm={2}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                    <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={10} sm={1}>\n                                <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                            </Grid>\n\n\n                            <Grid item xs={1} sm={2}  >\n\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                            </Grid>\n\n                    `            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                    {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                        <TableRow key={i} >\n\n                                            <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                            <TableCell align=\"center\">{row[1]}</TableCell>\n                                            <TableCell align=\"center\">{row[2]}</TableCell>\n                                            <TableCell align=\"center\">{row[3]}</TableCell>\n                                            <TableCell align=\"center\">{row[4]}</TableCell>\n                                            <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n                            </Grid>\n\n\n\n                            <Grid direction=\"row\" alignItems=\"center\" container>\n\n                                    <Grid direction=\"row\" container spacing={2}>\n\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                            <FormControl style={styles.selectStyle}>\n                                                <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                                <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                                    <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                                    <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                                    <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                                    <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n                                            \n                                                    <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                                    <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n                                                    \n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={4}>\n                                            <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                        </Grid>\n\n\n\n                                        <Grid item xs={12} sm={6} style={{ marginTop:'28px'}}>\n                                            {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </> }\n                                            SearchFailed:{this.state.searchFailed}\n\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={12}>\n\n                                 \n                                        {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ?   <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{  background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n                                            \n                                                {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n                                            \n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n                                                \n\n                                            \n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"green\" : \"red\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n                                        \n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n                                                \n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n                                            \n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        \n\n                                    {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                        <TableRow hover key={i}  >\n\n                                            <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                                            */}\n                                            <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin +=  (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0}  style={{ color: tradetotal > 0 ? \"green\" : \"red\" }}  align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                            <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                            <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + ( row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\n                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                            <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                            <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                            \n                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                        </TableRow>\n\n\n\n                                    )) : ''}\n\n\n                                    <TableRow style={{  background: \"lightgray\" }} >\n\n                                        <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n                                        \n                                        {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n                                        <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                        <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                        <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                        <TableCell align=\"left\" > </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n\n                                        <TableCell align=\"left\"> </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n                                        <TableCell align=\"left\"> </TableCell>\n\n\n                                        \n\n                                    </TableRow>\n                                        </TableBody>\n                                        </Table>\n\n                                        : \"\"}\n\n\n\n                                        {this.state.patternType == 'NR4_Daywide_daterage' ?  <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                                <Table size=\"small\" aria-label=\"sticky table\"  style={{ padding:\"5px\"}}>\n                                                    <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                                    \n                                                            <TableRow style={{  background: \"lightgray\" }}  key={key}>\n                                                                <TableCell  colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0,sumPerChangeHighLow =0,  sumPnlValue = 0,sumPnlValueOnHighLow = 0,  totalInvestedValue = 0, totalLongTrade=0, totalShortTrade=0}</TableCell>\n                                                            </TableRow>\n\n                                                            <TableRow key={key+1}  variant=\"head\" style={{ fontWeight: 'bold' , background: \"lightgray\" }}>\n\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                                <TableCell className=\"TableHeadFormat\"  align=\"center\">CNetPnL </TableCell>\n\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                                <TableCell className=\"TableHeadFormat\"  title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                            </TableRow>\n\n                                                            </TableHead>\n                                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                                        \n\n                                                            {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                            \n                                                                    <TableRow hover key={i}  >\n\n                                                                    <TableCell style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                                                                    <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"green\" : \"red\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                                                                */}\n                                                                    <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"green\" : \"red\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                                    <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0  ? \"green\" : \"red\" }} {... totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0) }>{row.foundAt}</TableCell>\n                                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0  ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity)) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                                    <TableCell  title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n                                                                \n                                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                                </TableRow>\n\n\n                                                            ))}\n\n\n\n                                                    <TableRow style={{  background: \"lightgray\" }} >\n\n                                                    <TableCell style={{ color: sumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                    {/* <TableCell style={{ color: \"red\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n                                                    <TableCell style={{ color: netSumPerChange > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                    <TableCell style={{ color: sumPnlValue > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                    <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                    <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"green\" : \"red\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                    <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                    <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                    <TableCell align=\"left\"></TableCell>\n\n\n                                                    <TableCell align=\"left\" > </TableCell>\n                                                    <TableCell align=\"left\"> </TableCell>\n\n                                                    <TableCell align=\"left\"> </TableCell>\n                                                    <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                    </TableBody>\n                                                </Table>\n                                                \n\n                                            \n                                            )) : ''}\n\n                                            </>\n\n                                        : \"\"}\n\n\n                                        {this.state.patternType == 'NR4ForNextDay' ?   \n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                           NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16)   : new Date().toString().substr(0, 16)}\n                                        </Typography> \n                                        : \"\"}\n                                            \n                                        {this.state.patternType == 'NR4ForNextDay' ?   \n                                         <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                               \n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                   <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n\n                                                    <TableCell className=\"TableHeadFormat\"  align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n                                                 \n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        \n\n                                           \n                                        {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                            //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                            <TableRow hover key={i}  >\n                                                <TableCell align=\"center\">{i + 1}</TableCell>\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                <TableCell align=\"left\" title=\"based on last one 6 month\">  \n                                                \n                                                <span style={{background: row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\"}}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br/>\n                                                 Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer/row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br/>\n                                                 {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                       <>\n                                                         {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n                                                     \n                                                        <a style={{textDecoration: 'underline', background: 'lightgray',cursor: 'pointer'}} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                        </>\n                                                ))}\n\n                                                <br/>\n\n                                                <span style={{background: row.pastPerferm.totalShortPer/row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\"}}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer/row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br/>\n                                                Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer/row.pastPerferm.totalShort).toFixed(2)}% per trade)<br/>\n                                                {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                <>\n                                                <a style={{textDecoration: 'underline', background: 'lightgray', cursor: 'pointer'}} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n                                              \n \n                                                </>\n                                                ))}\n                                                \n                                                </TableCell>\n\n                                                \n                                                <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                <TableCell align=\"left\">{row.high}</TableCell>\n                                                <TableCell align=\"left\">{row.low}</TableCell>\n                                                <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                            </TableRow>\n\n\n\n                                        )) : ''}\n\n                                        </TableBody>\n\n                                        </Table>\n                                        \n                                        : \"\"}\n                                        </Grid>             \n\n\n                                    </Grid>\n\n\n              \n                            </Grid>\n\n\n\n\n                        </Grid>\n                    </Grid>\n\n\n\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n // data.reverse();\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n               \n                this.setState({  fundData :fundsResData.data })\n               }\n           })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        this.getTodayOrder();\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n        {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                    Oders Details ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                    </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity}\n                    \n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                        : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.feedToken ,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n\n            \n        wsClint.onopen  = (res) => {\n\n             this.makeConnection();\n             console.log('connected');\n         //    this.updateSocketWatch();\n                \n            //  setTimeout(function(){\n            //    this.updateSocketWatch(feedToken ,clientcode);\n            //  }, 800);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog'; \nimport ChartMultiple from './ChartMultiple'; \nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            autoSearchList :[],\n            InstrumentLTP : {},\n            autoSearchTemp : [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"DELIVERY\",\n            nr4TotalPer : 0,\n            pnlAmountTotal: 0,\n            totalBrokerCharges:'',\n            totalNetProfit: 0, \n            totelActivatedCount : 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting : \"\",\n            perHighLowTotal: 0, \n            netPnLAmountOnHighlowTotal:0,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n            \n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n            this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 1001)}) \n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \n        }else{\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval); \n            clearInterval(this.state.bankNiftyInterval); \n        }\n    \n        var scanendTime = moment('3:30pm', 'h:mma');\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n            \n\n            \n            var tostartInteral =   setInterval(() => {\n\n               // console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n                var time = new Date(); \n                if(time.getMinutes() % 15 === 0){\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n                    \n                    setTimeout(() => {\n                        console.log(\"set timout at 70sec \", new Date());\n                        this.getCandleHistoryAndStore(); \n                    }, 70000);\n\n                    setInterval(() => {\n                        \n                        console.log(\"2st interval every 5min 10Sec\", new Date());\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n                            this.getCandleHistoryAndStore(); \n                        }\n\n\n                     }, 60000 * 15 + 70000 );  \n\n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern(); \n            },  foundPatternsFromStored.length * 100 + 300000);\n    \n            \n          \n        } \n\n\n    //this.findlast5minMovement(); \n\n\n     \n   //this.getCandleHistoryAndStore(); \n\n   // this.findNR4PatternLive();\n   //this.findNR7PatternLive();\n\n\n   \n    // this.getPositionData();\n    // this.getNSETopStock();\n     \n\n    //  this.getMySelectedStock();\n\n    \n\n    // setInterval(() => {\n        \n    //     var timediff = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(timediff);\n    \n\n    //     var enddiff = moment.duration(\"00:01:00\");\n    //     var enddate = moment(new Date()).add(enddiff);\n\n\n    //     var data  = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": 212,\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n    //     }\n    \n    //     AdminService.getHistoryData(data).then(res => { \n    //         let histdata = resolveResponse(res,'noPop' );\n    //         var candleData = histdata.data; \n    //         candleData.reverse(); \n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n    //     }); \n\n    // }, 1000);\n\n    var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n    this.setState({foundPatternList: backTestResult})\n\n   \n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n       // clearInterval(this.state.scaninterval);\n      //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n  \n    findlast5minMovement = async()=> {\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";       \n        var startdate = moment(new Date()).subtract(timediff);\n  //      var watchList = this.state.staticData['NIFTY 100'];\n        var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        console.log(\"watchList NIFTY 100\", watchList); \n        var foundData = []; \n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1) , \n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var percentChangeList = []; var foundCount =0; \n                    histdata.data.forEach(element => {\n                       var changePer =  (element[4] - element[1])*100/element[1]; \n\n                       if(changePer >= 0.3 ){\n                        foundCount = foundCount +1; \n                         percentChangeList.push(  changePer.toFixed(2) + \"% at: \" + new Date( element[0]).toLocaleTimeString() )\n                       }\n                        if(changePer <= -0.3 ){\n                            foundCount = foundCount +1; \n                            percentChangeList.push(  changePer.toFixed(2) + \"% at: \" + new Date( element[0]).toLocaleTimeString() )\n                        }\n                       \n                   });\n\n                   if(percentChangeList.length){\n                    foundData.push({symbol:watchList[index].symbol, percentChangeList: percentChangeList.join(\" | \")})\n                    console.log(\"foundData\", foundData);\n                    this.setState({findlast5minMovement : foundData})\n                   }\n                 \n\n                }else{\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 350));  \n        }\n\n\n    }\n\n\n    getCandleHistoryAndStore = async()=> {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \n       var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n       const today = moment().isoWeekday();\n        var timediff = '';\n\n        \n\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\n            timediff = moment.duration(\"66:00:00\");\n        }else{\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";       \n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1) , \n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var candleData = histdata.data; \n                    candleData.reverse(); \n\n                    if(candleData && candleData.length >= 10){\n                        var last10Candle = candleData.slice(0, 10); \n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n                \n                }else{\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 350));  \n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist,symbol) => {\n\n     //   console.log(\"TweezerTop finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var lastTrendCandleLow = candleHist[9][3]; \n            var firstTrendCandleHigh = candleHist[2][2]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n           \n            //\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \n        \n                        var ttophistCandle  = []; \n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \n                        });\n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser Top', \n                            time: new Date( candleHist[0][0]).toLocaleString(), \n                            candleChartData :ttophistCandle \n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                       this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\n       // console.log(\"TweezerBottom finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var last8candleHigh = candleHist[9][2]; \n            var last8candleLow = candleHist[2][3]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n           \n            //  \n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\n\n              \n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                      \n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle  = []; \n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0],element[1],element[2],element[3],element[4]]);   \n                        });\n\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser bottom', \n                            time: new Date( candleHist[0][0]).toLocaleString(), \n                            candleChartData : tBophistCandle\n                        }\n                     \n                       this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                        \n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak( msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting'); \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n           \n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                \n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;var rgrangeCount = 0; \n                     candleData.reverse(); \n\n                     // var startindex = index2 * 10; \n                     var last4Candle = candleData.slice(1, 5);\n                     var last5Candle = candleData.slice(0, 5);\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                     if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                         var rangeArr = [], candleChartData = []; \n                         last4Candle.forEach(element => {\n                             rangeArr.push(element[2] - element[3]);\n                         });\n\n                         last5Candle.forEach(element => {\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                         });\n                         var firstElement = rangeArr[0];\n                         rangeArr.forEach(element => {\n                             if (firstElement <= element) {\n                                 firstElement = element;\n                                 rgrangeCount += 1;\n                             }\n                         });\n\n                         console.log(index+1,element.symbol, rgrangeCount); \n                       //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n                         \n                         if (rgrangeCount == 4) {\n                            console.log(index+1, element.symbol, last4Candle, rangeArr, rgrangeCount); \n\n                            \n                             var firstCandle = last4Candle[0];\n\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                             var data  = {\n                                \"exchange\":\"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\":element.token,\n                            }\n\n                            console.log('nr4 ltp',data ); \n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                 var LtpData = data && data.data; \n                                 console.log(LtpData, data);\n                                 if(LtpData && LtpData.ltp){\n\n\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \n                                    if(LtpData.ltp > buyentry){\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                      \n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    } \n                                    if(LtpData.ltp < sellenty){\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    } \n\n                                    var foundData = {\n                                        symbol : element.symbol, \n                                        token : element.token, \n                                        pattenName: 'NR4', \n                                        time: new Date( firstCandle[0]).toLocaleString(), \n                                        BuyAt : buyentry, \n                                        SellAt : sellenty,\n                                        orderActivated : orderActivated,\n                                        candleChartData : candleChartData, \n                                        quantity :  quantity,\n                                        brokerageCharges : brokerageCharges, \n                                        pnlAmount : pnlAmount,\n                                        netPnLAmount : netPnLAmount,\n                                        perChange : perChange\n                                    }\n        \n                                    console.log('nr4 scaned',foundData ); \n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n    \n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                                    foundPatternList.push(foundData); \n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                                \n                                }\n                                \n                           })\n\n\n\n                            \n\n                         }\n\n                     }\n                  \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n           \n\n         \n            await new Promise(r => setTimeout(r, 300));\n\n           // var showtestdata = (index + 1);\n            \n         //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n       //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting'); \n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n           \n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                \n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                     candleData.reverse(); \n\n                     // var startindex = index2 * 10; \n                     var last7Candle = candleData.slice(1, 8);\n                     var last9Candle = candleData.slice(0, 9);\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                     if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                         var rangeArr = [], candleChartData = []; \n                         last7Candle.forEach(element => {\n                             rangeArr.push(element[2] - element[3]);\n                         });\n\n                         last9Candle.forEach(element => {\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \n                         });\n                         var firstElement = rangeArr[0], rgrangeCount = 0; \n                         rangeArr.forEach(element => {\n                             if (firstElement <= element) {\n                                 firstElement = element;\n                                 rgrangeCount += 1;\n                             }\n                         });\n\n\n                         console.log(element.symbol, last7Candle, rangeArr, rgrangeCount); \n\n                         \n                         if (rgrangeCount == 7) {\n\n                            \n                             var firstCandle = last7Candle[0];\n\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                             var data  = {\n                                \"exchange\":\"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\":element.token,\n                            }\n\n                            console.log('nr4 ltp',data ); \n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                 var LtpData = data && data.data; \n                                 console.log(LtpData, data);\n                                 if(LtpData && LtpData.ltp){\n\n\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \n                                    if(LtpData.ltp > buyentry){\n                                      orderActivated =  <span style={{color:'green'}}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}%) </span>; \n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                      \n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    } \n                                    if(LtpData.ltp < sellenty){\n                                        orderActivated =  <span style={{color:'red'}}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%)</span>; \n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    } \n\n                                    var foundData = {\n                                        symbol : element.symbol, \n                                        token : element.token, \n                                        pattenName: 'NR7', \n                                        time: new Date( firstCandle[0]).toLocaleString(), \n                                        BuyAt : buyentry, \n                                        SellAt : sellenty,\n                                        orderActivated : orderActivated,\n                                        candleChartData : candleChartData, \n                                        quantity :  quantity,\n                                        brokerageCharges : brokerageCharges, \n                                        pnlAmount : pnlAmount,\n                                        netPnLAmount : netPnLAmount,\n                                        perChange : perChange\n                                    }\n        \n                                    console.log('nr7 scaned',foundData ); \n                                    this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n    \n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                                    foundPatternList.push(foundData); \n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                                \n                                }\n                                \n                           })\n\n\n\n                            \n\n                         }\n\n                     }\n                  \n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol; \n            this.setState({ stockTesting: showtestdata});\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = []; \n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                \n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close)*100/row.close).toFixed(2)); \n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname); \n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData  = candleData &&  candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n    \n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n    \n\n    refreshLtpOnFoundPattern = async() => {\n\n       this.setState({nr4TotalPer : 0, totalBrokerChargesNR4: 0,totalNetProfit: 0, totelActivatedCount:0, pnlAmountTotal:0,perHighLowTotal : 0,netPnLAmountOnHighlowTotal:0 }); \n\n       \n       var foundPatternList = this.state.foundPatternList;\n\n       this.setState({foundPatternList : [] }); \n\n       var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n       \n//       foundPatternList.forEach(element => {\n         for (let index = 0; index < foundPatternsFromStored.length; index++) {\n             const element = foundPatternList[index];\n           \n            if(element && element.pattenName == 'NR4'){\n\n                var data  = {\n                    \"exchange\":\"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\":element.token,\n                }\n\n               AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                     var LtpData = data && data.data; \n                     //console.log(LtpData);\n                     var quantity = 0, pnlAmount = 0, netPnLAmount=0, brokerageCharges = 0.06,perChange = 0, perChangeOnHighLow =0,netPnLAmountOnHighlow=0; \n                     if(LtpData && LtpData.ltp){\n\n                        var orderActivated =  <span> {LtpData.ltp} </span>; \n\n                        if(LtpData.ltp > element.BuyAt){\n                          perChange = ((LtpData.ltp - element.BuyAt)*100/element.BuyAt);\n                          orderActivated =  <span style={{color:'green'}}> Long: {perChange.toFixed(2)}% </span>; \n                          quantity = Math.floor(10000 / element.BuyAt);\n                          pnlAmount = (( LtpData.ltp - element.BuyAt ) * quantity);  \n                          brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges/100)*2); \n                          netPnLAmount =  (pnlAmount -brokerageCharges); \n                          this.setState({nr4TotalPer : this.state.nr4TotalPer +  perChange });\n                          this.setState({ totalBrokerChargesNR4 : this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit:  this.state.totalNetProfit + netPnLAmount });\n                          this.setState({ totelActivatedCount : this.state.totelActivatedCount + 1, pnlAmountTotal:this.state.pnlAmountTotal +   pnlAmount});\n\n                          perChangeOnHighLow = ((LtpData.high - element.BuyAt)*100/element.BuyAt);\n                          var pnlAmountOnhigh = (( LtpData.high - element.BuyAt ) * quantity);\n                          netPnLAmountOnHighlow =  (pnlAmountOnhigh - brokerageCharges); \n                          this.setState({ perHighLowTotal : this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal:this.state.netPnLAmountOnHighlowTotal +   netPnLAmountOnHighlow});\n                        \n\n                        } \n                        if(LtpData.ltp < element.SellAt){\n                            perChange =  ((element.SellAt - LtpData.ltp)*100/element.SellAt); \n                            orderActivated =  <span style={{color:'red'}}> Short: {perChange.toFixed(2)}%</span>; \n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = (( element.SellAt - LtpData.ltp  ) * quantity); \n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges/100)*2); \n                            netPnLAmount =  (pnlAmount -brokerageCharges); \n                            this.setState({nr4TotalPer : this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount : this.state.totelActivatedCount + 1, pnlAmountTotal:this.state.pnlAmountTotal + pnlAmount  });\n                            this.setState({ totalBrokerChargesNR4 : this.state.totalBrokerChargesNR4 + brokerageCharges,totalNetProfit : this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low)*100/element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low ) * quantity);\n                            netPnLAmountOnHighlow =  (pnlAmountOnLow - brokerageCharges); \n                            this.setState({ perHighLowTotal : this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal:this.state.netPnLAmountOnHighlowTotal +   netPnLAmountOnHighlow});\n                       \n                        } \n\n                        var todayChange =  (LtpData.ltp- LtpData.close)*100/LtpData.close; \n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp]; \n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol :  element.symbol, \n                            symbolUpdated : LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\", \n                            token : element.token, \n                            pattenName: 'NR4', \n                            OnHighLowActivated : quantity ?  perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(), \n                            BuyAt : element.BuyAt, \n                            SellAt : element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated : orderActivated,\n                            candleChartData : element.candleChartData,\n                            quantity : quantity ? quantity : \"\",\n                            brokerageCharges : quantity ? brokerageCharges.toFixed(2) : \"\", \n                            pnlAmount : pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount : netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange : perChange,\n                            todayChange:todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated',foundData ); \n                        \n                        this.setState({foundPatternList: [...this.state.foundPatternList, foundData ]}); \n\n                        var foundlist = this.state.foundPatternList; \n\n                          foundlist.sort(function(a,b){\n                            return b.perChange - a.perChange;\n                          });\n\n                          this.setState({foundPatternList: foundlist}); \n                      \n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                    \n                    }\n                    \n               }).catch(error => {\n                Notify.showError(element.symbol + \" ltd data not found!\");\n               })\n\n            }\n            await new Promise(r => setTimeout(r, 101)); \n       }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n       var oderbookData = localStorage.getItem('oderbookData'); \n       oderbookData =  JSON.parse(oderbookData);\n       var stopLoss = 0; \n       var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\n                if(row.netqty > 0){\n                    data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \n                    data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \n                }else if(row.netqty < 0){\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice,  \"trigger\", element.triggerprice); \n                    data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.sellavgprice)*100/row.sellavgprice).toFixed(2) + \"%)\"; \n                    data.maxLossAmount = ((row.sellavgprice - element.triggerprice)* parseInt(row.netqty)).toFixed(2); \n                }\n               break;\n            }\n        }\n\n       return data; \n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData'); \n        oderbookData =  JSON.parse(oderbookData);\n        var stopLoss = 0; \n        var data = {}; \n        oderbookData.forEach(element => {\n         if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\n             data.stopLoss = element.triggerprice + \"(\"+ ((row.buyavgprice-element.triggerprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \n             data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \n         }\n        });\n        return data; \n     }\n     getHighLowPercentage = async() => {\n\n        if(!this.state.positionList.length){\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n            \n            if(element.producttype == \"DELIVERY\"){\n                return \"\"; \n            }\n        \n            var data  = {\n                \"exchange\":\"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\":element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                 var LtpData = data && data.data; \n                 //console.log(LtpData);\n                 if(LtpData && LtpData.ltp){\n                    this.state.positionList[index].high= LtpData.high;\n                    this.state.positionList[index].low= LtpData.low;\n                 }\n                \n           })\n           await new Promise(r => setTimeout(r, 100)); \n           this.setState({ positionList : this.state.positionList}); \n\n        }\n\n     }\n    getPositionData = async() => {\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0; \n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var positionList = data && data.data;\n             if (positionList && positionList.length>0){\n\n                \n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\n                  positionList.forEach(element => {\n\n                    if(element.producttype == \"DELIVERY\"){\n                        return \"\"; \n                    }\n\n                    var percentPnL = ((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \n                    todayProfitPnL+= parseFloat( element.pnl); \n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \n                    totalQtyTraded+=parseInt( element.buyqty); \n                    allbuyavgprice+=parseFloat(element.buyavgprice); \n                    allsellavgprice+=parseFloat(element.sellavgprice); \n                    element.percentPnL=percentPnL;\n                    totalPercentage+= parseFloat( percentPnL); \n\n                    var slData  = this.getStoplossFromOrderbook(element) ; \n                    if(slData){\n                        element.stopLoss = slData.stopLoss;       \n                        element.stopLossAmount = slData.maxLossAmount; \n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;     \n                    }\n\n                }); \n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \n                \n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25/100); \n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25/100; \n                this.setState({ totalBrokerCharges: allCharges.toFixed(2)});                \n\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \n\n\n                positionList.sort(function(a,b){\n                    return (b.netqty - a.netqty);\n                    \n                   //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList : positionList}); \n\n            }\n       })   \n\n    }\n   \n    getNSETopStock(){\n\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n               AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                   // console.log(\"scandata\",scandata); \n            \n                    for (let index = 0; index < scandata.length; index++) {\n                            var isFound = false; \n                            for (let j = 0; j < this.state.positionList.length; j++) {\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\n                                    isFound  = true; \n                                 }\n                            }\n                           \n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                               \n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                    let searchResdata =  searchRes.data; \n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                   \n                                    if(found.length){\n                                        console.log(found[0].symbol, \"found\",found);      \n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\n                                    }\n                               })\n                             \n                            }\n                    }\n                }\n            })  \n        }\n\n    }\n\n\n    getMySelectedStock(){\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \n \n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n         totalDayLoss = -Math.abs(totalDayLoss); \n         if(this.state.todayProfitPnL < totalDayLoss) {\n             console.log(\"daily loss crossed\",totalDayLoss); \n             clearInterval(this.state.scaninterval);\n         }else{\n                AdminService.getSelectedStockFromDb().then(res => {\n                 let data = resolveResponse(res, \"noPop\");\n                 if(data.status  && data.message === 'SUCCESS'){ \n                     var scandata =  data.result;   \n                    // console.log(\"scandata\",scandata); \n             \n                     for (let index = 0; index < scandata.length; index++) {\n                             var isFound = false; \n                             for (let j = 0; j < this.state.positionList.length; j++) {\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\n                                     isFound  = true; \n                                  }\n                             }\n                            \n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                                \n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n \n                                     let searchResdata =  searchRes.data; \n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                    \n                                     if(found.length){\n\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \n                                        selectedStockwatchList.push(found[0]); \n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                     }\n                                })\n                              \n                             }\n                     }\n                 }\n             })  \n         }\n \n     }\n\n\n    checkAndPlaceSingleOrder = (stock)=>{\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data =  res.data; \n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\n             console.log(\"stockfound\",found);  \n            if(found && found.length){\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \n            }\n       })\n    }\n\n\n    getStockOnebyOne(){\n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n            console.log(\"still ok\"); \n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                    if(scandata && scandata.length>0){\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \n                        var isFound = false; \n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\n                                isFound  = true; \n                             }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, '+lastSeachStock; \n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \n                        }\n                    }\n                    \n                }\n            })  \n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n             var LtpData = data && data.data; \n             var ltpPrice  = LtpData.ltp\n             if(ltpPrice){ \n              \n            //  var stopLossPrice = ltp - (ltp*0.7/100);\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \n              var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken:token,\n                    buyPrice : 0,\n                    quantity: quantity, \n                    stopLossPrice: stopLossPrice\n                }\n\n              if(quantity && stopLossPrice){\n                this.placeOrderMethod(orderOption);   \n              }\n               \n            }         \n\n       }).catch((error)=>{\n            console.log(symbol, \"not found\", 'error', error);\n        })  \n    }\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n        //    console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n    }\n\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\":\"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             //console.log(LtpData);\n             if(LtpData && LtpData.ltp){\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\n             }\n            \n       })\n    }\n\n\n    getStopLossPrice = async(token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n      \n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             if(LtpData &&  LtpData.ltp){\n                var ltp = parseFloat(LtpData.ltp); \n                ltp  = ltp - (ltp*0.7/100);\n                var slPrice = this.getMinPriceAllowTick(ltp); \n\n                this.setState({ stoploss : slPrice});\n                return slPrice; \n             }\n           \n       })\n    }\n  \n    placeOrderMethod = (orderOption) => { \n       \n        var data = {\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\":orderOption.symboltoken,\n            \"quantity\":orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"exchange\":\"NSE\",\n            \"variety\":\"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                if(orderOption.stopLossPrice){\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n                var LtpData = ltpres && ltpres.data; \n                console.log(symbol, \" ltd data \", LtpData);\n                let quantity =0; \n                if(LtpData && LtpData.ltp){\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \n                }\n\n                \n                quantity = quantity>0 ? 1 : 0; \n                console.log(symbol, \"  quantity can be order \", quantity);\n                if(quantity){\n                    const format1 = \"YYYY-MM-DD HH:mm\";\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                    console.log(\"beginningTime\", beginningTime); \n\n                    var time = moment.duration(\"21:10:00\");\n                    var startdate = moment(new Date()).subtract(time);\n                    var data  = {\n                        \"exchange\": \"NSE\",\n                        \"symboltoken\": token ,\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                        \"fromdate\": moment(startdate).format(format1) , \n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                    }\n                \n                    AdminService.getHistoryData(data).then(res => {\n                        let histdata = resolveResponse(res,'noPop' );\n                       // console.log(\"candle history\", histdata); \n                        if(histdata && histdata.data && histdata.data.length){\n                           \n                           \n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \n                            candleData.reverse(); \n                            lowestLow = candleData[0][3]; \n                            highestHigh = candleData[0][2]; \n                            if(candleData && candleData.length>0){\n                                for (let index = 0; index < 20; index++) {\n                                    if(candleData[index]){\n                                        clossest += candleData[index][4]; //close  \n                                        lowerest += candleData[index][3];  //low\n                                        if(candleData[index][2] > highestHigh){\n                                            console.log( index, highestHigh,  candleData[index][2]); \n                                            highestHigh = candleData[index][2];  \n                                        }\n                                        if(candleData[index][3] <= lowestLow){\n                                            lowestLow = candleData[index][3];  \n                                        }\n                                    }\n                                }\n\n\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \n    \n                                var bbmiddleValue = clossest/devideLen; \n                                var bblowerValue = lowerest/devideLen; \n                                \n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \n                                stoploss = this.getMinPriceAllowTick(stoploss); \n    \n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \n                                \n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\n                            \n                                var orderOption = {\n                                    transactiontype: 'BUY',\n                                    tradingsymbol: symbol,\n                                    symboltoken:token,\n                                    buyPrice : 0,\n                                    quantity: quantity, \n                                    stopLossPrice: stoploss\n                                }\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \n                                   this.placeOrderMethod(orderOption);\n                                }else{\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                    console.log(symbol + \" its not fullfilled\"); \n                                }\n                            }\n\n                           \n                        }else{\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\n                            console.log(symbol + \" candle data emply\"); \n                        }\n                    })\n\n                }\n        })\n       // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n  \n\n    cancelOrderOfSame = (row) =>  {\n       \n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \n        var data = {\n            \"variety\":orderData.variety,\n            \"orderid\":orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n    squareOff = (row) =>  {\n       \n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\":row.symboltoken,\n            \"transactiontype\":row.netqty > 0 ? 'SELL' : \"BUY\", \n            \"exchange\": row.exchange, \n            \"ordertype\": \"MARKET\", \n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n            \n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                this.cancelOrderOfSame(row); \n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n\n            }\n        })\n       \n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res);\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \n            }\n        });\n    }\n    \n    placeSLMOrder = (slmOption) => {\n        \n        var data = {\n            \"triggerprice\":slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \n            \"exchange\": 'NSE', \n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\" : \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data); \n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n               // this.updateOrderList(); \n               var msg = new SpeechSynthesisUtterance();\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \n               window.speechSynthesis.speak(msg);\n\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n            }\n        })\n    }\n\n    getOpenPeningOrderId =(symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {}; \n         for (let index = 0; index < oderbookData.length; index++) {\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\n                data.orderId = oderbookData[index].orderid  \n                data.variety = oderbookData[index].variety  \n                break;\n            }\n         } \n         return data;\n     }\n    modifyOrderMethod = (row, minPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \n        console.log(\"modifyOrderMethod\", row,  \"minPrice\", minPrice);\n\n        var data = {\n            \"variety\" : \"STOPLOSS\",\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\":  0,\n            \"triggerprice\": parseFloat( minPrice ),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n          \n          \n            if(data.status  && data.message ===  'SUCCESS'){\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\n              msg.text = row.tradingsymbol +' modified '+data.message;\n           //   window.speechSynthesis.speak(msg);\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\n              localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice =  minPrice.toFixed(2); \n       // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt( minPrice.split('.')[0]);\n      //  console.log(\"wholenumber\",wholenumber); \n        var decimal =  parseFloat( minPrice.split('.')[1]);\n       // console.log(\"decimal\",decimal); \n        var tickedecimal =  decimal-decimal%5; \n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \n     //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice; \n    }\n\n    getPercentage = (row) =>  {\n\n        var percentChange = 0; \n\n        if(row.netqty > 0){\n            row.buyavgprice = parseFloat(row.buyavgprice);             \n            percentChange =  ((row.ltp - row.buyavgprice)*100/row.buyavgprice); \n            if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange >= 0.4){\n                var minPrice =  row.buyavgprice + (row.buyavgprice * 0.25/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n            }else{\n                var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice)*100/lastTriggerprice);   \n                if(perchngfromTriggerPrice >= 0.6){\n                     minPrice =  lastTriggerprice + (lastTriggerprice * 0.2/100);\n                     minPrice = this.getMinPriceAllowTick(minPrice); \n                     this.modifyOrderMethod(row, minPrice);\n                }\n              }\n        }\n\n\n        if(row.netqty < 0){\n            row.sellavgprice = parseFloat(row.sellavgprice);             \n            percentChange =  ((row.ltp - row.sellavgprice)*100/row.sellavgprice); \n            if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange <= 0.4){\n                var minPrice =  row.sellavgprice - (row.sellavgprice * 0.25/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n\n                console.log(row.tradingsymbol,  row.sellavgprice, minPrice, );\n                this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.25/100));\n            }else{\n              \n                var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice)*100/lastTriggerprice);   \n                if(perchngfromTriggerPrice <= 0.6){\n                     minPrice =  lastTriggerprice + (lastTriggerprice * 0.2/100);\n                     minPrice = this.getMinPriceAllowTick(minPrice); \n                     this.modifyOrderMethod(row, minPrice);\n                }\n              }\n        }\n\n\n      \n       \n        //  if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange >= 0.5){\n        //         if(totalbuyavgprice)   \n        //         var minPrice =  totalbuyavgprice + (totalbuyavgprice * 0.2/100);\n        //         if(totalsellavgprice)   \n        //         var minPrice =  totalsellavgprice - (totalsellavgprice * 0.2/100);\n        //         minPrice = this.getMinPriceAllowTick(minPrice); \n        //         this.modifyOrderMethod(row, minPrice);\n        //  }else{\n        //    var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \n        //    var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n        //    if(perchngfromTriggerPrice > 0.6){\n        //         minPrice =  lastTriggerprice + (lastTriggerprice * 0.3/100);\n        //         minPrice = this.getMinPriceAllowTick(minPrice); \n        //         this.modifyOrderMethod(row, minPrice);\n        //    }\n        //    else if(percentChange >= 0.3 && percentChange <= 0.4){\n\n        //         // if(!localStorage.getItem('squiredOff'+row.symboltoken)){\n        //         //     localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\n        //         //     this.squareOff(row); \n        //         //     var msg = new SpeechSynthesisUtterance();\n        //         //     msg.text = row.symbolname +' squired Off Success at ' + percentChange.toFixed(2) + '%'; \n        //         //     window.speechSynthesis.speak(msg);\n        //         //     console.log(\"Sqr off called for 0.3% \",row.symbolname);  \n        //         // }\n\n        //         if(totalbuyavgprice)   \n        //         var minPrice =  totalbuyavgprice + (totalbuyavgprice * 0.3/100);\n        //         if(totalsellavgprice)   \n        //         var minPrice =  totalsellavgprice - (totalsellavgprice * 0.3/100);\n        //         minPrice = this.getMinPriceAllowTick(minPrice); \n        //         this.modifyOrderMethod(row, minPrice);\n        //    }\n        //  }\n\n\n\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\n\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\n                this.squareOff(row); \n                console.log(\"Sqr off called for\",row.symbolname);  \n            }\n        }\n\n        return percentChange.toFixed(2);\n    }\n\n\n    render() {\n      \n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                     <br />\n                     <ChartDialog /> <ChartMultiple />\n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\n                        <Grid item >\n                            <Typography variant=\"h6\" >\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={3} >\n                          <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                            </Typography> \n                        </Grid>\n\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\">\n                            <b>Total Turnover {this.state.totalTornOver} </b>\n                            </Typography> \n                        </Grid>\n                        \n                       \n                        <Grid item >\n                          <Typography component=\"h3\"  >\n                            <b> Charges</b> <b style={{color:\"red\"}}>-{this.state.totalBrokerCharges} </b>\n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"green\":\"red\"}}>{this.state.todayProfitPnL} </b>\n                            </Typography> \n                        </Grid>\n\n                        <Grid item>\n                          <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"green\":\"red\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\n                            \n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \n                        </Grid>\n                        <Grid item  >\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>    \n                        </Grid>\n                </Grid>\n               \n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                \n\n                    <Grid item xs={12} sm={12}> \n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\n                                 \n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n  \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n                                \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Closing%</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">HighLow%</TableCell>\n\n        \n    \n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n                           \n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                row.producttype !== 'DELIVERY1' ? <TableRow  hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'lightgray': \"\"}} >\n\n                                    {/* href={\"https://chartink.com/stocks/\"+row.symbolname+\".html\" */}\n                                <TableCell align=\"left\">\n                                    \n                                    <Button style={{ color: (row.ltp - row.close)*100/row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} > \n                                            {row.symbolname} {row.ltp} ({((row.ltp - row.close)*100/row.close).toFixed(2)}%) <ShowChartIcon />\n                                    </Button>  \n                                \n                                </TableCell>\n                                {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n                             \n                                <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                <TableCell align=\"left\">{row.netqty}</TableCell>\n                                {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                <TableCell align=\"left\"> {row.stopLoss}</TableCell> \n                                <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \n\n                                \n                                {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\n                                <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'green' : 'red'}}><b>{row.pnl}</b></TableCell>\n                                <TableCell align=\"left\">\n                                    { row.netqty !== '0' ? this.getPercentage(row) : \"\"} \n                                    {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\n                                  </TableCell> \n                                <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n                              \n                                {row.netqty > 0 ? \n                                <TableCell align=\"left\">{((row.ltp - row.totalbuyavgprice)*100/row.totalbuyavgprice).toFixed(2)}%</TableCell>\n                                : \n                                <TableCell align=\"left\">{((row.totalsellavgprice - row.ltp)*100/row.totalsellavgprice).toFixed(2)}%</TableCell>\n                               }\n\n                                {row.netqty > 0 ? \n                                <TableCell title=\"Buy Side  High\" align=\"left\">{row.high}({row.high ? ((row.high - row.totalbuyavgprice)*100/row.totalbuyavgprice).toFixed(2) +\"%\" : \"Refresh H/L\"}) </TableCell>\n                                    : \n                                <TableCell title=\"Sell Side Low\" align=\"left\">{row.low}({row.low ? ((row.totalsellavgprice - row.low)*100/row.totalsellavgprice).toFixed(2) +\"%\"  : \"Refresh H/L\"}) </TableCell>\n                                }\n\n\n                                <TableCell align=\"left\">\n                                    {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \n                                </TableCell>\n\n                            </TableRow> : \"\"\n                                \n                            )):''}\n\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"\"}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\n          \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'green' : 'red'}}>{this.state.todayProfitPnL} </TableCell>\n \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\n                                    \n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) +\"%\" : \"\"}\n                    \n                                </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                \n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                \n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                \n\n                                </TableRow>\n\n\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n\n\n                    </Grid>\n\n                  \n\n                        <Grid item xs={12} sm={12}  style={{height: '300px', overflow:\"auto\"}}>\n                             <OrderBook/>\n                        </Grid>\n\n\n\n                        <Grid item xs={12} sm={12} >\n                            <Paper style={{overflow:\"auto\", padding:'5px'}} >\n\n\n                              {this.state.findlast5minMovement ? <Grid justify=\"space-between\"\n                                container>\n                                            <Grid item  >\n                                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                                  Found last 5min Movement ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})  \n\n                                                <span id=\"stockTesting\" style={{fontSize: \"18px\", color: 'gray'}}> {this.state.findlast5minMovementUpdate} </span>\n                                                </Typography> \n                                            </Grid>\n                                            <Grid item >\n                                                 <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.findlast5minMovement()}>Live Refresh</Button>\n                                            </Grid>\n                                            \n                             \n                          \n                                 \n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\n                                     <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n             \n                                              \n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>                             \n\n                                             <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n             \n                                          \n                                         </TableRow>\n                                     </TableHead>\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n             \n                                         {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                                             <TableRow hover key={row.symbol}>\n                                                 <TableCell align=\"left\">{row.symbol}</TableCell>\n                                                <TableCell align=\"left\">{row.percentChangeList}\n\n\n                                                    \n                                                </TableCell>\n                                                \n                                             </TableRow>\n                                         )):''}\n                                     </TableBody>\n                                 </Table>\n\n                                 </Grid>\n\n                                : \"\"}\n             \n                                </Paper>\n\n                               \n\n\n                        </Grid>\n\n\n                        <Grid item xs={12} sm={12} >\n                            <Paper style={{overflow:\"auto\", padding:'5px'}} >\n\n                            \n\n                                <Grid justify=\"space-between\"\n                                container>\n                                            <Grid item  >\n                                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                                 Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})  \n\n                                                <span id=\"stockTesting\" style={{fontSize: \"18px\", color: 'gray'}}> {this.state.stockTesting} </span>\n                                                </Typography> \n                                            </Grid>\n                                            <Grid item >\n                                                 <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                            </Grid>\n                                            \n                                </Grid>\n                            \n                                 \n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\n                                     <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n             \n                                              \n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n                                           \n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                             <TableCell className=\"TableHeadFormat\"  align=\"left\">UpdatedAt</TableCell>\n             \n                                          \n                                         </TableRow>\n                                     </TableHead>\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n             \n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                             <TableRow hover key={row.symboltoken}>\n             \n\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ color:  !row.todayChange ?  '' :  row.todayChange > 0 ? 'green' : 'red'  }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                                <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{fontSize: '9px', cursor: 'pointer'}} onClick={() => this.showMultipleCandleChart(row)}>\n                                                   {row.pastPerferm ? <>\n                                                    <span  style={{ background: row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\"}}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer/row.pastPerferm.totalLongs).toFixed(2)}%</span> <br/>\n                                                     <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer/row.pastPerferm.totalLongs).toFixed(2)}%</span> <br/>\n                                                     <span style={{background: row.pastPerferm.totalShortPer/row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\"}}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer/row.pastPerferm.totalShort).toFixed(2)}%</span> <br/>\n                                                     <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer/row.pastPerferm.totalShort).toFixed(2)}%</span> <br/>\n                                                    </> : \"\"}\n                                                  \n                                                </TableCell>\n\n                                                 <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                                 <TableCell align=\"left\">{row.quantity}</TableCell>\n                                                 <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                                 <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                                 <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                                 <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                                <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0,15)}</TableCell>\n\n                                                <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                                <TableCell align=\"left\">{row.time}</TableCell>\n                                                \n                                             </TableRow>\n                                         )):''}\n                                     </TableBody>\n                                 </Table>\n\n                               \n             \n                                 </Paper>\n                        </Grid>\n\n                               \n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.getAllIndices()\n            .then((res) => {\n                if (res.data) {\n                    var data = res.data, sectorStockList = [];\n                    this.setState({ indexTimeStamp: data.timestamp })\n                    var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n                  //  this.setState({sectorList :  softedData});\n                    this.setState({ sectorList: []});\n\n\n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1; \n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n                                console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n                                if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n                                    var sectorStocks = this.state.staticData[softedData[i].index];\n                                    softedData[i].stockList = sectorStocks;\n                                    length = sectorStocks.length; \n                                    if (sectorStocks && sectorStocks.length) {\n                                        ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n                                    }\n                                    this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                }else{\n                                    middleSector.push(softedData[i]); \n                                }\n\n                                \n                            \n                                await sleep(length / 10 * 1500);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n                Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                        \n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index + \" \" + indexdata.last}({indexdata.percentChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog'; \nimport ChartMultiple from './ChartMultiple'; \nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n    \n        };\n    }\n\n\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        // if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n        //     this.setState({findlast5minMovementInterval :  setInterval(() => {this.findlast5minMovement(); }, 1001)}) \n        // }\n    }\n\n    startSearching =()=>{\n        this.setState({findlast5minMovementInterval :  setInterval(() => {this.findlast5minMovement(); }, 5000)}) \n    }\n\n    stopSearching =() => {\n        clearInterval(this.state.findlast5minMovementInterval); \n    }\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n       // clearInterval(this.state.scaninterval);\n      //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n  \n    findlast5minMovement = async()=> {\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";       \n        var startdate = moment(new Date()).subtract(timediff);\n  //      var watchList = this.state.staticData['NIFTY 100'];\n        var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        console.log(\"watchList NIFTY 100\", watchList); \n        var foundData = []; \n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1) , \n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var percentChangeList = []; var foundCount =0; \n                    histdata.data.forEach(element => {\n                       var changePer =  (element[4] - element[1])*100/element[1]; \n\n                       if(changePer >= 0.3 ){\n                        foundCount = foundCount +1; \n                         percentChangeList.push(  changePer.toFixed(2) + \"% at: \" + new Date( element[0]).toLocaleTimeString() )\n                       }\n                        if(changePer <= -0.3 ){\n                            foundCount = foundCount +1; \n                            percentChangeList.push(  changePer.toFixed(2) + \"% at: \" + new Date( element[0]).toLocaleTimeString() )\n                        }\n                       \n                   });\n\n                   if(percentChangeList.length){\n                    foundData.push({symbol:watchList[index].symbol, percentChangeList: percentChangeList.join(\" | \")})\n                    console.log(\"foundData\", foundData);\n                    this.setState({findlast5minMovement : foundData})\n                   }\n                 \n\n                \n                }else{\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 350));  \n        }\n\n\n    }\n\n\n\n\n    render() {\n      \n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                     <br />\n                     <ChartDialog /> <ChartMultiple />\n                \n                \n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\n\n                        <Grid justify=\"space-between\"\n                        container>\n                                    <Grid item  >\n                                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            Found last 5min Movement ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})  \n\n                                        <span id=\"stockTesting\" style={{fontSize: \"18px\", color: 'gray'}}> {this.state.findlast5minMovementUpdate} </span>\n                                        </Typography> \n                                    </Grid>\n                                    <Grid item >\n                                            <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.startSearching()}>Start Searching</Button>\n                                    </Grid>\n                                    <Grid item >\n                                            <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.stopSearching()}>Stop Searching</Button>\n                                    </Grid>\n                        </Grid>\n                    \n                            \n                        <Table  size=\"small\"   aria-label=\"sticky table\" >\n                            <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                                <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n    \n                                    \n                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>                             \n\n                                    <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n    \n                                \n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n    \n                                {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                                    <TableRow hover key={row.symbol}>\n                                        <TableCell align=\"left\">{row.symbol}</TableCell>\n                                    <TableCell align=\"left\">{row.percentChangeList}\n\n\n                                        \n                                    </TableCell>\n                                    \n                                    </TableRow>\n                                )):''}\n                            </TableBody>\n                        </Table>\n\n                        \n        \n                        </Paper>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\n// import NiftyView from \"./MyTrade/NiftyView\";\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n\n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}