{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/SimpleExpansionPanel.js","components/MyTrade/SimpleExpansionFastMovement.js","components/MyTrade/LiveBidsExpantion.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/NiftyView.js","components/MyTrade/Chart.js","components/MyTrade/BankNiftyView.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/LightChartDialog.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/MyTrade/FindFastMovement2.js","components/MyTrade/DeliveryData.js","components/MyTrade/SlowMotion.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","symbol","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","toFixed","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","console","log","placeOrder","getElementById","click","getStockTokenDetails","SYMBOL","updateOrderList","retrieveOrderBook","orderlist","sort","b","updatetime","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","Math","floor","qtyToTake","format1","beginningTime","moment","format","time","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","candleData","clossest","lowerest","highestHigh","lowestLow","highestsum","reverse","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","orderOption","buyPrice","placeOrderMethod","catch","placeOptionOrder","placeOptionSLMOrder","stopLossTriggerPrice","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","item","noWrap","LoadSymbolDetails","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","lib_default","direction","OpenInNew_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","list","ExpansionPanelDetails","overflowY","map","paddingLeft","paddingRight","nc","background","highlisht","totalBuyQuantity","totalSellQuantity","deliveryToTradedQuantity","Home","autoSearchList","onInputChange","showStaticChart","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","checkOpenEqualToLow","cursor","asyncToGenerator","regenerator_default","mark","_callee","_this$setState5","_loop","wrap","_context2","prev","next","openEqualHighList","openEqualLowList","_context","change","close","low","toConsumableArray","high","advanceShareCount","declineShareCount","UnchangeShareCount","r","setTimeout","stop","delegateYield","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","wsClint","firstTime_req","feedToken","send","updateSocketWatch","channel","updateSocket","task","user","acctid","selectedWatchlist","updateSocketDetails","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","setInterval","_req","stopBacktesting","stopScaningFlag","backTestAnyPattern","_callee2","enddate","currentMoment","endMoment","watchList","runningTest","_loop2","_context4","backTestResult","backTestFlag","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","_context3","index2","last10Candle","slice","next10Candle","toLocaleTimeString","backtestTweezerTop","backtestTweezerBottom","stockTesting","_callee3","_loop3","_context6","FoundPatternList","_context5","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","sellenty","foundStock","pattenName","SellAt","BuyAt","nr4CheckPastPerfommance","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","toLocaleString","stopLoss","brokerageCharges","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee4","sumPercentage","_loop4","_context8","searchFailed","_context7","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref5","_callee5","_loop5","_context10","_context9","dateWithWlType","datewisetrades","perChngOnLow","_x","apply","_callee6","_loop6","_context12","_context11","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","round","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","orderid","getTimeFrameValue","timeFrame","calculateSMA","count","avg","sum","result","len","val","chartStaticData","dailyBasisInfoCheck","timeDuration","historyData","cdata","d","volumeSeriesData","loopindex","rsiValues","bblastValue","vwapvalue","max","candleSeries","setData","volumeSeries","smaData","smaLineSeries","subscribeCrosshairMove","param","getit","seriesPrices","Symbol","iterator","string","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","elem","err","return","str","innerHTML","InstrumentHistroy","upsideMoveCount","downMoveCount","totalSum","per","totalPerchentageChange","startingFrom","checkSlowMotionStock","stock","dataDay","resd","histdatad","candleDatad","bigCandleCount","slowMotionStockList","checkSlowMotionCheckLive","_callee7","_loop7","_context14","_context13","checkLiveBids","_callee8","_context15","bidlivedata","biddata","pChange","lastPrice","liveBidsList","oneHourBullBearCheck","_callee9","_loop8","_context17","_context16","lastCandle","oneHourBullBearCheckList","searchValumeBreakoutStock","_callee10","_loop9","_context19","_context18","volumeSum","findmaxVol","currentCandleVol","firstCandleCloseingPrice","priceGoingHighCount","firstCandleCloseingPriceDownSide","priceGoingLowCount","avgVol","volumeBreakoutlast5CandleList","startDateforDaily","DSMA","closeingDatadaily","valumeSum","SMA","dailyAvgValume","DSMALastValue","DailyBulishStatus","todayCurrentVolume","volumeCrossedList","slmOrderType","onSelectItem","autoSearchTemp","fdata","onSelectItemChart","seachSumbol","getPercentageColor","percent","deleteItemWatchlist","findIndex","splice","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","handleKeyDown","keyCode","prevState","updateCandleOnkey","selectedKeyRow","ifNotBought","fastMovementList","_this2","domElement","createChart","timeVisible","secondsVisible","addCandlestickSeries","addLineSeries","lineWidth","addHistogramSeries","priceFormat","priceScaleId","scaleMargins","bottom","endTime","currentTime","isoWeekday","isBetween","tostartInteral","clearInterval","_this3","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Paper","Autocomplete","freeSolo","disableClearable","option","renderInput","params","onKeyDown","search","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","selected","textAlign","upper","middle","lower","j","Table","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","key","MaterialUIDateTimePicker","colSpan","hover","Equalizer_default","gutterBottom","LiveBidsExpantion_SimpleExpansionPanel","SimpleExpansionFastMovement_SimpleExpansionPanel","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","MenuProps","PaperProps","ITEM_HEIGHT","MyView","filterOptionChain","actualValue","filereddata","alldata","optionChainData","records","expiryDate","strikePrice","filtered","FilteredBY","getDataforStrike","sumOfCEoi","sumOfPEoi","CE","openInterest","PE","findSupportResistence","optiondata","PEoi","CEoi","PEoiChange","CEoiChange","changeinOpenInterest","expiryDates","strikePrices","totalspeoi","totalsceoi","resdata","AllspTotalOI","selectedSPpcr","allStrikediff","allStrikeChngeDiff","products","stopnview","curnewdata","underlyingValue","timestamp","totalCOI","expiry","strike","pcrTable","loadPackList","todayTime","updatepcr","getBNcpdata","diff","totOI","newdata","dateTime","dateFormat","totCEOI","totCEVol","totVol","totPEOI","totPEVol","totChangeINOICall","totChangeINOIPut","totChangeINOIDiff","oldproducts","lastrow","isDuplicate","totCEOIChange","totPEOIChange","totDiffChange","pcrdata","allPCR","expiryPCR","_React$createElement2","_React$createElement3","_React$createElement4","_this4","Input","labelId","max-height","paddingTop","overflow","stickyHeader","substring","borderLeft","borderRight","opdata","impliedVolatility","tableStyle","connect","diffData","putData","onChangeSelectSymbol","optionChainDataBN","handleScroll","scrollcount","onChangeCallLot","calculateCallMargin","totalMargin","Parser","lotSize","buyCallLot","maxLoss","onChangePutLot","calculatePutMargin","buyPutLot","myStrike","startDiff","showOptionDownside","rem","startFrom","endDiff","showOptionUpside","rem2","endTo","waitForChainFlag","pcrTableBN","selectOptionStock","niftyLogSize","niftybankLogSize","SecuritiesInFO","Chart_App","buyOption","indexSymbol","MyDialog_DialogTitle","MyDialog_DialogContent","indexSymbolData","idata","MyDialog_DialogActions","getIndicesStocks","getIndiceStock","toLocaleLowerCase","indexTimeStamp","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","x","y","colors","upward","downward","ApexCharts","querySelector","render","toFixedAmount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","OrderBook","getTodayOrder","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","hash","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","w3cwebsocket","actiontype","feedtype","jwttoken","apikey","sbin","getHistory","histCandles","positionList","heartbeatReq","exchtime","searchSymbolPendingOrder","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","createdAt","buyAt","sellAt","pattenNamePending","orderPenidngList","deleteInOrderPenidngList","delitem","callBackUpdate","updateLTP","getTradePrice","refreshCandleChartManually","_ref3","failedCount","onChange2","openNewPage","backToPositionPage","optiontype","noOfLot","exp","optionName","optionData","ltpparam","perStopTrigerLoss","intervaltime","findlast5minMovementInterval","Delete_default","BankNiftyView","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","today","timediff","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","foundData","foundPatternList","toLowerCase","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","findNR7PatternLive","showtestdata","last7Candle","last9Candle","_ref4","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","netqty","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_ret","showHighLowWisePer","v","tagPatternWhichTaken","orderTagToPosition","pattern","calculateTradeExpence","totalbuyvalue","totalsellvalue","buyCharge","sellCharge","turnOver","totalBroker","sst","sstCharge","transCharge","stampDuty","sebiCharge","gstCharge","total","tradeExpence","expenceInfo","getPositionData","totalMaxPnL","getPosition","todayProfitPnL","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","totalExpence","pnl","buyqty","percentPnL","chargeInfo","slData","stopLossAmount","totalTornOver","checkAndPlaceSingleOrder","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","getNiftyLTP","getBankNiftyLTP","getStopLossPrice","_ref8","slPrice","_x2","_x3","LockedSymbolName","orderData","getOpenPeningOrderId","squareOff","abs","modifyOrderMethod","minTriggerPrice","minSLPrice","get2DecimalNumber","number","getSLAndTriggerPrice","getOptionPercentage","trailPerChange","slPriceData","getPercentage","positionInterval","bankNiftyInterval","squireInterval","sqrOffbeginningTime","sqrOffendTime","scaninterval","scanendTime","totalDayLoss","dailyLossPer","getNSETopStock","scandata","isFound","symbolName","selectedStockInteval","getSelectedStockFromDb","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","OrderWatchlist","Example","areaData","volumeData","readCsv","parsedList","newJsonList","addtowatchlist","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","indexData","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","LightChartDialog_DialogTitle","LightChartData","selectedSymbol","LightChartDialog_DialogContent","LightChartDialog_DialogActions","showCandleChartPopUp","isThere","switchToListView","switchToListViewFlag","get5DaysMoveCount","getDeliveryInfo","getDeliveryData","sluglist","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","timeVal","slugName","checkSectorApiOther","LightChartDialog_CustomizedDialogs","iislPercChange","ltP","stopSearching","stop10bbSearch","onChangeQty","find10MinBBBlast","startSearching","totalStockToWatch","findlast5minMovement","updateToLocalStorage","isfound","updateData","findlast5minMovementUpdate","lightcandleChartData","getFullYear","getMonth","getDate","sma","bbvlastvalue","dataltp","upsidecount","downsidecount","startingRsiupside","startingRsiDownside","volumeUpside","BBBlastType","RSIValue","BB","updateMsg","percentChangeList","changePer","quantityTraded","deliveryQuantity","totalTradedVolume","totalTradedValue","highlight","lastUpdateTime","convertToFloat","isNaN","sortByColumn","sortedType","averagePrice","dayHigh","dayLow","previousClose","checkSlowMotion","scanUpdate","stockindex","sectorName","isActivated","midBullishCount","bullishCount","activationTime","activationPrice","update","deleteAllScan","AppRouter","react_router","path","exact","NiftyView","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","FindFastMovement2","DeliveryData","SlowMotion","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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AM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,IAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,MAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KAAM,aAAcnQ,MAAO,OAC7B,CAAEmQ,KA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ACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAYI,MAAO,0BAChD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,QAAYI,MAAO,0BAChD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,0BACjD,CAAE+P,KAAM,aAAcnQ,MAAO,SAAaI,MAAO,wBACjD,C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","file":"static/js/main.25d64bbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\n\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    checkOtherApi(index){\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n    }\n\n    checkSectorApiOther(index){\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n      }\n\n    \n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices);\n    }\n\n    allIndicesDirectJSON(){\n        return axios.get('http://localhost:8081/nse/get_indices', '');\n        // return axios.get(apiConstant.allIndices2Json);\n     }\n\n     getBNcpdata(symbol){\n         if(symbol == 'NIFTY' || symbol == 'BANKNIFTY'){\n            return axios.get('http://localhost:8081/nse/getOptionChain?symbol='+symbol, '');\n         }else{\n            return axios.get('http://localhost:8081/nse/getOptionChainEquity?symbol='+symbol, '');\n         }\n        \n     }\n\n\n     getDeliveryData(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n     checkLiveBids(symbol){\n        return axios.get('http://localhost:8081/nse/get_quote_info?companyName='+ symbol, '');\n     }\n\n\n\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map2\" />\n    </ListItem>\n\n\n\n    <ListItem button component='a' href={\"/mtrade/#/delivery\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Delivery\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/slow-motion\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Slow Motion\" />\n    </ListItem>\n\n\n   \n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Watchlist\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map\" />\n    </ListItem>\n  \n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem> */}\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { resolveResponse } from \"./ResponseHandler\";\nimport AdminService from \"../components/service/AdminService\";\nimport TradeConfig from '../components/MyTrade/TradeConfig';\nimport * as moment from 'moment';\nimport Notify from './Notify';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\n\n\nclass CommonOrderMethod {\n\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n              //  this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n              //  this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n\n    getStockTokenDetails = (SYMBOL) => {\n        // AdminService.autoCompleteSearch(e.target.value).then(searchRes => {   \n        //     let searchResdata =  searchRes.data; \n        //     if(e.target.value){\n        //         var uppercaseName =  e.target.value.toUpperCase() + \"-EQ\"; \n        //         var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.symbol === uppercaseName);      \n        //       //  console.log(\"found\", found[0] && found[0].symbol); \n        //         if(found.length){ \n        //             setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token'] : found[0].token });    \n        //         }\n        //     }\n\n        //  })\n    }\n\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        // if (isAutomatic != \"Automatic\") {\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n        //         return;\n        //     }\n        // }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n           if(quantity > 0 && sectorItem.qtyToTake ) {\n                quantity = sectorItem.qtyToTake;\n           }           \n           console.log(symbol, \"  quantity can be order \", sectorItem, quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                    \n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n\n\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                            histdata.data.forEach((element, index) => {\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                                closeingData.push(element[4]);\n                                highData.push(element[2]);\n                                lowData.push(element[3]);\n                                openData.push(element[3]);\n                                valumeData.push(element[5]);\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            });\n\n                            var inputRSI = { values: closeingData, period: 14 };\n                            var lastRsiValue = RSI.calculate(inputRSI)\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n        \n                            var inputVWAP = {\n                                open: openData,\n                                high: highData,\n                                low: lowData,\n                                close: closeingData,\n                                volume: valumeData\n                            };\n        \n                            var input = {\n                            period : 20, \n                            values : bbdata,\n                            stdDev : 2\n                            }\n        \n                            var bb = BollingerBands.calculate(input); \n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\n\n                            var bbLastValue = bb[bb.length-1]; \n\n                            \n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                \n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                       \n\n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                    \n                            }\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                          \n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                            }\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption, callback);\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        var callData = {\n                            \"transactiontype\": orderType,//BUY OR SELL\n                            \"tradingsymbol\": symbol,\n                            \"symboltoken\": token,\n                            \"status\": false\n                        }\n                        callback(callData);\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n            }\n        }).catch(function (error) {\n\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n    \n\n    placeOptionOrder = (orderOption) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": orderOption.producttype ? orderOption.producttype : \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": orderOption.exchange ? orderOption.exchange : \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n        this.placeOptionSLMOrder(orderOption);\n\n\n        // AdminService.placeOrder(data).then(res => {\n        //     let data = resolveResponse(res);\n        //     //  console.log(data);   \n        //     if (data.status && data.message === 'SUCCESS') {\n        //         if (orderOption.stopLossPrice) {\n        //             setTimeout(() => {\n        //                 this.placeOptionSLMOrder(orderOption);\n        //             }, 1000);\n        //         }\n        //         this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n        //         var callData = {\n        //             \"token\": orderOption.symboltoken,\n        //             \"status\": true\n        //         }\n        //     }\n\n        // })\n    }\n\n    placeOptionSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossTriggerPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": \"SELL\", \n            \"exchange\": slmOption.exchange,\n            \"producttype\": slmOption.producttype, \n            \"duration\": \"DAY\",\n            \"price\": slmOption.stopLossPrice,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n\n    \n\n\n\n    placeOrderMethod = (orderOption, callback) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n                callback(callData);\n                return;  \n            }\n\n        })\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n                this.updateOrderList(); \n            }\n        })\n    }\n}\n\nexport default new CommonOrderMethod();\n\n   ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\nimport AdminService from \"./service/AdminService\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CommonOrderMethod from \"../utils/CommonMethods\";\nimport Spinner from \"react-spinner-material\";\nimport Notify from '../utils/Notify';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        buyFlag: true,\n        sellFlag: true,\n        searchSymbol: \"\",\n\n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const autoSearchList = [];\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n\n    function handleInput(e) {\n        setValues({ ...values, ['searchSymbol']: e.target.value });\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n\n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token']: found[0].token });\n                }\n            }\n        })\n    }\n\n    function handleInputQty(e) {\n        setValues({ ...values, ['qtyToTake']: e.target.value });\n    }\n\n    function callbackAfterOrderDone(order) {\n        setValues({ ...values, ['buyFlag']: order.status });\n        setValues({ ...values, ['sellFlag']: order.status });\n        setValues({ ...values, ['searchSymbol']: '' });\n    }\n\n    function handleClick(type) {\n\n        if (values.token && values.searchSymbol) {\n            if (type == 'BUY') {\n                setValues({ ...values, ['buyFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol, \n                    qtyToTake : values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\n            }\n\n            if (type == 'SELL') {\n                setValues({ ...values, ['sellFlag']: false });\n                var symbolInfo = {\n                    token: values.token,\n                    symbol: values.searchSymbol,\n                    qtyToTake : values.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\n            }\n        } else {\n            Notify.showError(\"Type Symbol!!!\");\n        }\n    }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            {/* <Button href={\"/mtrade/#/home\"}>\n                                <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n\n                            </Button> */}\n\n                        </Grid>\n\n\n                        <Grid item  >\n\n                            <Grid\n                                justify=\"space-between\"\n                                container\n                                spacing={2}\n                            >\n\n                                <Grid item  >\n                                    <Typography style={{  marginTop: '20px',fontSize:\"12px\" }}  variant=\"h6\" noWrap >\n                                       <span id=\"niftySpid\" onClick={() => props.LoadSymbolDetails(\"NIFTY\")}  > </span>  &nbsp;&nbsp;  <span id=\"bankniftySpid\" onClick={() => props.LoadSymbolDetails(\"BANKNIFTY\")} > </span>  \n                                     </Typography> \n                                    \n                                </Grid>\n\n                                <Grid item>\n                                    <TextField label=\"Type full Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput} />\n                                </Grid>\n                                <Grid item>\n                                    <TextField label=\"Qty\" style={{width:\"50px\"}} type=\"number\" name=\"qtyToTake\" value={values.qtyToTake} onChange={handleInputQty} />\n                                </Grid>\n                                <Grid item>\n                                    {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\n                                </Grid>\n\n                                <Grid item>\n                                    {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                               \n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/order-watchlist\"}>\n                                        Option <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" target={'_blank'} color=\"primary\" href={\"/mtrade/#/sector-heat-map2\"}>\n                                        Hit Map <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" target={'_blank'} href={\"/mtrade/#/find-fast-movement\"}>\n                                        Fast Move <OpenInNewIcon />\n                                    </Button>\n                                </Grid>\n\n\n                                {/* <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid> */}\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                               \n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position \n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={false} >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list.length ? data.list.map((row, i)  => (\n                  <>\n                      {row ? <ListItem  button style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", background:row.highlisht ? \"#375a00\": \"\"}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol} /> {row.ltp} ({row.nc}%)\n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '10px'}} onClick={() => data.LoadSymbolDetails(row.symbol)} primary={row.symbol +\" \"+row.orderType} /> <span style={{fontSize: '14px'}}>{row.ltp} ({row.nc}%)  <br /> At {row.foundAt} </span> \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var data = props.data; \n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={ false } >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography> {data.title} ({data.list && data.list.length})</Typography>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n          <div style={{ overflowY: 'scroll', width:\"100%\", height: \"50vh\" }}>\n              {data && data.list ? data.list.map((row, i)  => (\n                  <>\n                      {/* {row ? \n                      <div  button style={{ fontSize: '10px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n\n                        <button >onClick={() => data.LoadSymbolDetails(row.symbol)}   {row.symbol} {row.orderType} At {row.foundAt} </button>\n\n                      </div> : \"\"} */}\n\n                      {row ? <ListItem  onClick={() => data.LoadSymbolDetails(row.symbol)} button style={{  padding: '0px', paddingLeft: '5px', paddingRight: '5px' }}  >\n                          <p style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\", fontSize: '16px'}}  > \n                          \n                          {row.symbol} {row.ltp} ({row.nc}%)   <br /> \n                 \n                          Tot Buy Bids: {row.totalBuyQuantity}    <br />\n                          Tol Sell Bids: {row.totalSellQuantity}    <br />\n                          DeliveryToTraded {row.deliveryToTradedQuantity}% \n                          </p>\n                          \n                      </ListItem> : \"\"}\n                      \n                  </>\n              )) : ''}\n          </div>\n\n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\nimport { createChart } from 'lightweight-charts';\nimport Input from \"@material-ui/core/Input\";\n\nimport { w3cwebsocket } from 'websocket';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport LightChartCom from \"./LightChartCom\";\nimport SimpleExpansionPanel from \"./SimpleExpansionPanel\";\nimport SimpleExpansionFastMovement from \"./SimpleExpansionFastMovement\";\nimport LiveBidsExpantion from \"./LiveBidsExpantion\";\n\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"\",  //NR4ForNextDay  NR4_SameDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK', //'Securities in F&O',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            backTestResultDateRange: [],\n            searchFailed: 0,\n            openEqualHighList: [],\n            openEqualLowList: [],\n            chartStaticData: [],\n            volumeCrossedList: [],\n            slowMotionStockList: [],\n            volumeBreakoutlast5CandleList: [], \n            oneHourBullBearCheckList: [],\n            timeFrame: \"FIFTEEN_MINUTE\",\n            cursor: '',\n            advanceShareCount: 0,\n            declineShareCount: 0,\n            UnchangeShareCount: 0,\n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || [],\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList :  [] //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n          //  console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n        //    console.log(\"time\", this.state.timeFrame);\n            if (this.state.tradingsymbol) {\n                this.showStaticChart(this.state.symboltoken);\n            }\n        });\n\n\n    }\n\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value == 'NR4_Daywide_daterage') {\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\n\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n            //    this.updateSocketWatch();\n            this.checkOpenEqualToLow();\n            this.setState({ cursor: '' });\n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n                //      this.updateSocketWatch();\n                this.checkOpenEqualToLow();\n                this.setState({ cursor: '' });\n            });\n        }\n    }\n    checkOpenEqualToLow = async () => {\n\n        this.setState({\n            openEqualHighList: [], openEqualLowList: [], openEqualLowList: [], advanceShareCount: 0,\n            declineShareCount: 0, UnchangeShareCount: 0, volumeCrossedList: []\n        });\n\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n\n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\": element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if (LtpData) {\n\n                    let change = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    LtpData.nc = change;\n                    LtpData.symbol = element.symbol; \n                    \n                    this.state.symbolList[index].ltp = LtpData.ltp;\n                    this.state.symbolList[index].nc =change; \n\n                    if (LtpData && LtpData.open == LtpData.low) {\n                        console.log(\"o=l\", LtpData);\n                        var isfound = this.state.openEqualLowList.filter(row => row.symboltoken == element.token);\n                        if(!isfound.length)\n                        this.setState({ openEqualLowList: [...this.state.openEqualLowList, LtpData] });\n                    }\n\n                    if (LtpData && LtpData.open == LtpData.high) {\n                        console.log(\"o=h\", LtpData);\n                        var isfound = this.state.openEqualHighList.filter(row => row.symboltoken == element.token);\n                        if(!isfound.length)\n                        this.setState({ openEqualHighList: [...this.state.openEqualHighList, LtpData] });\n\n                    }\n\n                    if (LtpData.perChange > 0)\n                        this.setState({ advanceShareCount: this.state.advanceShareCount + 1 });\n                    else if (LtpData.perChange < 0)\n                        this.setState({ declineShareCount: this.state.declineShareCount + 1 });\n                    else\n                        this.setState({ UnchangeShareCount: this.state.UnchangeShareCount + 1 });\n\n\n                    this.state.symbolList && this.state.symbolList.sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({ symbolList: this.state.symbolList, tradingsymbol: element.symbol, symboltoken: element.token });\n\n                 //   this.dailyBasisInfoCheck(element.token, element);\n\n                   // this.checkSlowMotionStock(element.token, element);\n\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n\n\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n\n\n    makeConnection = (wsClint) => {\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        wsClint.send(firstTime_req);\n        this.updateSocketWatch(wsClint);\n    }\n\n    updateSocketWatch = (wsClint) => {\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n    updateSocketDetails = (wsClint) => {\n        wsClint.onopen = (res) => {\n            this.makeConnection(wsClint);\n            this.updateSocketWatch(wsClint);\n        }\n\n        wsClint.onmessage = (message) => {\n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData = JSON.parse(data);\n            var symbolListArray = this.state.symbolList;\n            this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                var foundLive = liveData.filter(row => row.tk == element.token);\n                if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                    symbolListArray[index].ltp = foundLive[0].ltp;\n                    symbolListArray[index].nc = foundLive[0].nc;\n                    //  console.log(\"ws onmessage: \", foundLive);\n\n                }\n            });\n            symbolListArray && symbolListArray.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n            this.setState({ symbolList: symbolListArray });\n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e);\n        }\n\n        setInterval(() => {\n            //  this.makeConnection();\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n            // console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n        }, 59000);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Home\";\n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n        const domElement = document.getElementById('tvchart');\n        document.getElementById('tvchart').innerHTML = '';\n        const chart = createChart(domElement, { width: 900, height: 400, timeVisible: true, secondsVisible: true, });\n        const candleSeries = chart.addCandlestickSeries();\n        var smaLineSeries = chart.addLineSeries({\n            color: 'rgba(4, 111, 232, 1)',\n            lineWidth: 2,\n        });\n        var volumeSeries = chart.addHistogramSeries({\n            color: '#26a69a',\n            priceFormat: {\n                type: 'volume',\n            },\n            priceScaleId: '',\n            scaleMargins: {\n                top: 0.8,\n                bottom: 0,\n            },\n        });\n\n        this.setState({ chart: chart, candleSeries: candleSeries, smaLineSeries: smaLineSeries, volumeSeries: volumeSeries });\n\n        this.checkOpenEqualToLow();\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            // const wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n            // this.updateSocketDetails(wsClint);\n            setInterval(() => {\n                if (this.state.tradingsymbol) {\n                    this.getLTP();\n                    //this.showStaticChart(this.state.symboltoken);\n                }\n                var fastMovementList  = localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')); \n                fastMovementList && fastMovementList.length && fastMovementList.reverse(); \n                this.setState({fastMovementList :fastMovementList })\n            }, 1000);\n           \n            setInterval(() => {\n                this.checkSlowMotionCheckLive(); \n             }, 5*75000);\n\n           \n             setInterval(() => {\n                this.searchValumeBreakoutStock(); \n            }, 15*75000);\n          \n\n             var tostartInteral =   setInterval(() => {\n                var time = new Date();\n                console.log(\"setinterval \", new Date().toLocaleString()); \n                if(time.getMinutes() % 60 === 0){\n                    setTimeout(() => {\n                        this.oneHourBullBearCheck(); \n                    }, 90000);\n                    setInterval(() => {\n                        this.oneHourBullBearCheck(); \n                     }, 60000 * 60 + 70000 );  \n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n            \n        }     \n        \n        this.oneHourBullBearCheck(); \n\n       // this.checkLiveBids();\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment = startdate;\n            const endMoment = enddate;\n\n\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if (this.state.stopScaningFlag) {\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n\n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(0, 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var foundStock = {\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                symbol: element.symbol,\n                                token: element.token,\n                                pattenName: \"NR4\",\n                                SellAt: sellenty,\n                                high: firstCandle[2],\n                                low: firstCandle[3],\n                                BuyAt: buyentry,\n                                candleChartData: candleChartData,\n                                close: firstCandle[4]\n                            }\n\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    }\n\n\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (candle5min[2] < buyHighest) {\n                    buyHighest = candle5min[3];\n                }\n\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[3] < buyentry) {\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange);\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if (!buyEntryFlag && perChange >= 1) {\n\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2]);\n\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            }\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\n\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (buyHighest < histdataInside[index][2]) {\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[2] > buyentry) {\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n\n\n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if (!buyEntryFlag) {\n\n                    if (firstTimeTrail && perChange >= 0.7) {\n                        trailCount += 1;\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\n                        longTradeFound.sellEntyPrice = minPrice;\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\n                        firstTimeTrail = false;\n                    } else {\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\n\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\n\n                        if (perchngfromTriggerPrice > 0.7) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\n\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\n                            break;\n                        }\n\n                    }\n\n\n\n\n\n\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\n                        break;\n                    }\n\n                }\n\n\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            } //candle loop end\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": element.token,\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                            }\n\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\n                                histdataInside = histdataInside && histdataInside.data;\n\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n\n                            }).catch(error => {\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\n                            });\n\n\n\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[2] > buyentry) {\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                            //     sumPercentage += perChng;\n\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[2],\n                            //         stopLoss: firstCandle[3],\n                            //         buyExitPrice: buyentry,\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\n                            //         candleChartData : candleChartData,\n                            //     }\n                            //     if (Math.floor(10000 / firstCandle[2])){ \n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n                            // }\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[3] < sellenty) {\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                            //     sumPercentage += perChng;\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: sellenty,\n                            //         stopLoss: firstCandle[2],\n                            //         buyExitPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[3],\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\n                            //         candleChartData : candleChartData\n                            //     }\n                            //     if(Math.floor(10000 / firstCandle[3])){\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n\n\n                            // }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            var currentDate = date.format('DD-MM-YYYY');\n\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\n\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                sumPercentage += perChng;\n\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[2],\n                                    stopLoss: firstCandle[3],\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[2])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n\n                                }\n\n                            }\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                sumPercentage += perChng;\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: sellenty,\n                                    stopLoss: firstCandle[2],\n                                    buyExitPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[3],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[3])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\n\n                                }\n\n\n                            }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    }\n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\n        var longCandles = [], shortCandles = [];\n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata);\n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                longCandles.push(longData);\n\n                                totalLongs += 1;\n                                totalLongPer += perChng;\n                                totalLongHighPer += perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                shortCandles.push(shortData);\n\n                                totalShort += 1;\n                                totalShortPer += perChng;\n                                totalShortLowPer += perChngOnLow;\n\n                            }\n\n\n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs: totalLongs,\n                    totalShort: totalShort,\n                    totalLongPer: totalLongPer.toFixed(2),\n                    totalShortPer: totalShortPer.toFixed(2),\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\n                }\n                if (foundStock)\n                    foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles;\n                foundStock.shortCandles = shortCandles;\n\n\n                console.log(\"foundStock\", foundStock);\n                if (Math.floor(10000 / firstCandle[4])) {\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n\n\n\n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n\n                    if (transactiontype == \"BUY\") {\n                        this.placeSLMOrder(\"SELL\");\n                    }\n\n                    if (transactiontype == \"SELL\") {\n                        this.placeSLMOrder(\"BUY\");\n                    }\n\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name, i) => {\n\n        console.log(\"name\", name);\n        var token = '';\n\n         var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n\n        for (let index = 0; index < watchList.length; index++) {\n\n            if (watchList[index].symbol === name) {\n               \n                token = watchList[index].token;\n\n                console.log(\"name % token\", name,token );\n                this.setState({ tradingsymbol: name, symboltoken:watchList[index].token },function(){\n                    this.setState({ cursor: i }, function () {\n                        this.getLTP();\n                        this.showStaticChart(token);\n                    });\n                });\n                break;\n            }\n        }\n\n    }\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"19:00:00\";\n                else\n                    return \"01:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"23:00:00\";\n                else\n                    return \"03:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"24:21:00\";\n                else\n                    return \"07:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"28:01:00\";\n                else\n                    return \"10:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"100:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    calculateSMA = (data, count) => {\n\n      //  console.log(\"smarowdata\", data, count);\n\n        var avg = function (data) {\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                sum += data[i].close;\n            }\n            return sum / data.length;\n        };\n        var result = [];\n        for (var i = count - 1, len = data.length; i < len; i++) {\n            var val = avg(data.slice(i - count + 1, i));\n            result.push({ time: data[i].time, value: val });\n        }\n        return result;\n    }\n\n    //   calculateBBValue = (data, type ) => {\n\n    //     console.log(\"smarowdata\", data , count); \n\n    //     var result = [];\n    //     for (var i=count - 1, len=data.length; i < len; i++){\n    //       var val = avg(data.slice(i - count + 1, i));\n    //       result.push({ time: data[i].time, value: val});\n    //     }\n    //     return result;\n    //   }\n\n\n\n    showStaticChart = (token) => {\n\n        this.setState({ chartStaticData: '' }, function () {\n            console.log('reset done', token);\n        });\n\n        this.dailyBasisInfoCheck(token);\n\n\n        console.log(\"time in function \", this.state.timeFrame);\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        // var time = moment.duration(\"10:50:00\");\n        // var startDate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n\n        AdminService.getHistoryData(data).then(res => {\n            let historyData = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (historyData && historyData.data) {\n\n                var data = historyData.data;\n\n                const cdata = data.map(d => {\n                    return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                });\n\n                var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                data.forEach((element, loopindex) => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                    closeingData.push(element[4]);\n                    highData.push(element[2]);\n                    lowData.push(element[3]);\n                    openData.push(element[3]);\n                    valumeData.push(element[5]);\n                    bbdata.push((element[2] + element[3] + element[4]) / 3);\n                    volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n\n                });\n\n                var input = {\n                    period: 20,\n                    values: bbdata,\n                    stdDev: 2\n                }\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var bb = BollingerBands.calculate(input);\n                console.log(token, \"Bolinger band\", input, bb);\n\n                var inputRSI = { values: closeingData, period: 14 };\n                var rsiValues = RSI.calculate(inputRSI);\n\n                console.log(token, \"Rsi\", inputRSI, rsiValues);\n                console.log(token, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                this.setState({ chartStaticData: cdata, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                    // candleSeries.setData(this.state.chartStaticData); \n                    this.state.candleSeries.setData(this.state.chartStaticData);\n\n                    this.state.volumeSeries.setData(volumeSeriesData);\n\n                    var smaData = this.calculateSMA(this.state.chartStaticData, 20);\n\n                    this.state.smaLineSeries.setData(smaData);\n\n\n                    this.state.chart.subscribeCrosshairMove((param) => {\n\n                        var getit = param.seriesPrices[Symbol.iterator]();\n\n                        var string = \"\";\n                        var change = \"\";\n\n                        for (var elem of getit) {\n\n                            if (typeof elem[1] == 'object') {\n                                string += \" Open: <b>\" + elem[1].open + \"</b>\";\n                                string += \" High: <b>\" + elem[1].high + \"</b>\";\n                                string += \" Low: <b>\" + elem[1].low + \"</b>\";\n                                string += \" Close: <b>\" + elem[1].close + \"</b>\";\n                                change = (elem[1].close - elem[1].open) * 100 / elem[1].open;\n                                string += \" Chng: <b>\" + change.toFixed(2) + '%</b>';\n                            } else {\n                                string += \" &nbsp; \" + elem[1].toFixed(2) + \" \";\n                            }\n                        }\n\n                        if (param.time)\n                            string += \" Time: <b>\" + new Date(param.time).toLocaleString() + \"</b>\";\n                        else\n                            string += \" <b>Time: </b>\";\n\n\n                        const domElement = document.getElementById('showChartTitle');\n\n\n                        var str = \"<span style=color:green>\" + string + \"</span> \";\n                        if (change < 0)\n                            str = \"<span style=color:red>\" + string + \"</span> \";\n\n                        domElement.innerHTML = str;\n                    });\n\n\n                });\n\n\n                data && data.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (data.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(data));\n                    this.setState({ InstrumentHistroy: data });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0, totalSum = 0;\n                    data.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                        totalSum += per;\n\n                    });\n\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount, totalPerchentageChange: totalSum, startingFrom: moment(startDate).format(format1) });\n\n                }\n            }\n        })\n\n\n    }\n\n    checkSlowMotionStock = (token, stock) => {\n    \n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n                var bigCandleCount = 0; \n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    \n                    if(element){\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol,  per , element[0]);\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n                            console.log(stock.symbol,  per , element[0]);\n\n                        }\n                    }\n                }\n                console.log(\"Totalcount\", stock.symbol,  bigCandleCount);\n                if(bigCandleCount <= 15){\n\n                    stock.bigCandleCount = bigCandleCount; \n                    \n                    this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function(){\n                        localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList)); \n                    }); \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async() => {\n    \n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n                    var closeingDatadaily = [], valumeSum = 0;\n    \n                    var bigCandleCount = 0, bullishCount = 0; \n    \n                    for (let index = candleDatad.length-3; index < candleDatad.length; index++) {\n                        const element = candleDatad[index];\n                        \n                        if(element){\n    \n                            var per = (element[4] - element[1]) * 100 / element[1];\n                            if (per >= 0.7) {\n                                bigCandleCount += 1;\n                            } \n                            if (per >= 0) {\n                                bullishCount += 1;\n                            }\n    \n                        }\n                    }\n                    if(bigCandleCount >= 1){\n                        row.highlisht =  true; \n                        window.document.title = \"SM: \" + row.symbol; \n                        console.log('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.speckIt('hey listen, slow motion stock' + row.symbol + \" broken\");\n\n                        this.setState({ slowMotionStockList: this.state.slowMotionStockList })\n                    }\n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n    checkLiveBids = async() => {\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n          \n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n                \n                console.log(\"bid\",resd.data.data ); \n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if(resd.data && resd.data.data.length){\n\n                    let bidlivedata = resd.data.data[0]; \n                    let biddata = {\n                        totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                        totalSellQuantity: bidlivedata.totalSellQuantity,\n                        deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                        symbol : bidlivedata.symbol, \n                        orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity, \n                        nc : bidlivedata.pChange, \n                        ltp : bidlivedata.lastPrice, \n                    }\n    \n                    this.setState({ liveBidsList: [...this.state.liveBidsList, biddata] }, function(){\n\n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList)); \n                    });\n    \n        \n                }\n                \n            });\n            await new Promise(r => setTimeout(r, 100));  \n        }\n   \n    }\n\n\n    oneHourBullBearCheck = async() => {\n    \n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"02:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'ONE_HOUR',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n    \n                    let lastCandle = candleDatad[candleDatad.length-1];\n\n                    \n                    if((lastCandle[1] == lastCandle[3]) && (lastCandle[2] == lastCandle[4])){\n                        window.document.title = \"Hourly Buy: \" + row.symbol;\n                        console.log(row.name, \"Hourly Buy\",  candleDatad[candleDatad.length-1]); \n                        row.orderType =  \" Hourly Buy\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Bullish \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n                    if((lastCandle[1] == lastCandle[2]) && (lastCandle[3] == lastCandle[4])){\n                        window.document.title = \"Hourly Sell: \" + row.symbol;\n                        console.log(row.name, \"Hourly Sell\",  candleDatad[candleDatad.length-1]); \n                        row.orderType =  \" Hourly Sell\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        this.speckIt(row.name + \" Hourly Sell \");\n                        this.setState({ oneHourBullBearCheckList: [...this.state.oneHourBullBearCheckList, row] });\n                    }\n               \n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n\n    searchValumeBreakoutStock = async() => {\n    \n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const row = this.state.symbolList[index];\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var time = moment.duration(\"60:00:00\");  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n            var dataDay = {\n                \"exchange\": 'NSE',\n                \"symboltoken\": row.token,\n                \"interval\": 'FIFTEEN_MINUTE',\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n            AdminService.getHistoryData(dataDay).then(resd => {\n                let histdatad = resolveResponse(resd, 'noPop');\n                var DSMA = '';\n                if (histdatad && histdatad.data && histdatad.data.length) {\n                    var candleDatad = histdatad.data;\n    \n                    var  volumeSum = 0, findmaxVol = candleDatad[0][5]; \n                    let currentCandleVol =  candleDatad[candleDatad.length-1][5]; \n                    let firstCandleCloseingPrice = candleDatad[0][4], priceGoingHighCount=0;  \n                    let firstCandleCloseingPriceDownSide = candleDatad[0][4], priceGoingLowCount=0;  \n\n                    for (let index = candleDatad.length-6; index < candleDatad.length-1; index++) {\n                        const element = candleDatad[index];\n                        if(element){\n                            volumeSum += element[5];  \n                            //  console.log(row.symbol, ' last candle index ',index,   element[0] );\n                              if(findmaxVol < element[5]){\n                                  findmaxVol = element[5]; \n                              }\n      \n                              if(firstCandleCloseingPrice < element[4]){\n                                 console.log(row.symbol, firstCandleCloseingPrice , 'upside last candle index ',index,   element[4] );\n                                  firstCandleCloseingPrice = element[4]; \n                                  priceGoingHighCount += 1; \n                              }\n      \n                              if(element[4] < firstCandleCloseingPriceDownSide){\n                                  console.log(row.symbol, firstCandleCloseingPrice , ' downside last candle index ',index,   element[4] );\n                                  firstCandleCloseingPriceDownSide = element[4]; \n                                  priceGoingLowCount += 1; \n                               }\n                        }\n                       \n\n                    }\n                    let avgVol = volumeSum/5;\n\n                    if(currentCandleVol/findmaxVol > 1.75 && priceGoingHighCount >= 4){\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType =  \" Vol \" + (currentCandleVol/findmaxVol).toFixed(2) + \" Time & price incresing\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" time of average \", avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0],  findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" Time and price incresing\");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    if(currentCandleVol/findmaxVol > 1.75 && priceGoingLowCount >= 4){\n                        window.document.title = \"VB: \" + row.symbol;\n                        row.orderType =  \" Vol \" + (currentCandleVol/findmaxVol).toFixed(2) + \" Time & price decresing\"; \n                        row.foundAt = new Date( candleDatad[candleDatad.length-1][0]).toLocaleString()\n                        console.log(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" time of average \", avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0],  findmaxVol);\n                        this.speckIt(row.name + \" volume crossed \"+ (currentCandleVol/findmaxVol).toFixed(2) +\" Time and price decresing \");\n                        this.setState({ volumeBreakoutlast5CandleList: [...this.state.volumeBreakoutlast5CandleList, row] });\n                    }\n                    // else if(currentCandleVol > avgVol){\n                    //     row.highlisht =  true; \n                    //     window.document.title = \"VB: \" + row.symbol;\n                    //     console.log(row.symbol, ' avg ', avgVol, currentCandleVol,  candleDatad[candleDatad.length-1][0]);\n                    //     this.speckIt('Volume  in ' + row.name + \" crossed average \");\n                    //     this.setState({ volumeBreakoutlast5CandleList: this.state.slowMotionStockList })\n                    // }\n                }\n    \n            });\n            await new Promise(r => setTimeout(r, 310));  \n        }\n   \n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n\n\n\n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if(element){\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n                  \n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                    this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType,\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    // getHistory = (token) => {\n\n\n    //     this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\n    //     this.setState({ InstrumentHistroy: [] });\n    //     this.getLTP();\n\n\n    //     const format1 = \"YYYY-MM-DD HH:mm\";\n\n    //     var time = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(time);\n    //     // var startdate = moment(this.state.startDate).subtract(time);\n    //     var beginningTime = moment('9:15am', 'h:mma');\n\n    //     var data = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": token,\n    //         \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n    //         \"fromdate\": moment(startdate).format(format1),\n    //         \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n    //     }\n\n    //     AdminService.getHistoryData(data).then(res => {\n    //         let data = resolveResponse(res, 'noPop');\n    //         //    console.log(data); \n    //         if (data && data.data) {\n\n    //             var histCandles = data.data;\n    //             histCandles && histCandles.sort(function (a, b) {\n    //                 return new Date(b[0]) - new Date(a[0]);\n    //             });\n    //             if (histCandles.length > 0) {\n    //                 localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n    //                 this.setState({ InstrumentHistroy: histCandles });\n\n    //             }\n\n    //         }\n    //     })\n    // }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n\n            if (!foundInWatchlist.length) {\n\n                watchlist.push(fdata);\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\n                    this.LoadSymbolDetails(fdata.symbol);\n                });\n\n                this.setState({ symbolList: watchlist }, function () {\n                    //  this.updateSocketWatch();\n                });\n\n            }\n        }\n\n    }\n    onSelectItemChart = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token, seachSumbol: \"\" }, function () {\n                this.getLTP();\n                this.showStaticChart(fdata.token);\n                this.LoadSymbolDetails(fdata.symbol);\n            });\n\n        }\n\n    }\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    handleKeyDown = (e) => {\n\n        console.log(\"key\", e.keyCode);\n        //38 for down and 40 for up key\n        if (e.keyCode === 38 && this.state.cursor > 0) {\n            this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n        } else if (e.keyCode === 40 && this.state.cursor < this.state.symbolList.length - 1) {\n            this.setState(prevState => ({ cursor: prevState.cursor + 1 }))\n        }\n\n        setTimeout(() => {\n            this.updateCandleOnkey();\n        }, 100);\n\n    }\n\n\n    updateCandleOnkey = () => {\n        var selectedKeyRow = localStorage.getItem('selectedKeyRow') && JSON.parse(localStorage.getItem('selectedKeyRow'));\n        if (selectedKeyRow.token && selectedKeyRow.symbol) {\n            this.setState({ tradingsymbol: selectedKeyRow.symbol, symboltoken: selectedKeyRow.token }, function () {\n                this.getLTP();\n                this.showStaticChart(selectedKeyRow.token);\n            });\n\n        }\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar   LoadSymbolDetails ={this.LoadSymbolDetails} />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n                    <Grid item xs={12} sm={2}  >\n                        <Paper>\n                            <Autocomplete\n                                freeSolo\n                                id=\"free-solo-2-demo\"\n                                disableClearable\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                onChange={this.onSelectItem}\n                                //+ ' '+  option.exch_seg\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                    option.symbol\n                                ) : []}\n                                renderInput={(params) => (\n                                    <TextField\n                                        onChange={this.onChange}\n                                        {...params}\n                                        label={\"Search Symbol\"}\n                                        margin=\"normal\"\n                                        variant=\"standard\"\n                                        name=\"search\"\n                                        onKeyDown={this.handleKeyDown}\n                                        value={this.state.search}\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    />\n                                )}\n                            />\n\n                            <div style={{ marginLeft: '10px' }}>\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                    <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                            <MenuItem value={element}>{element}</MenuItem>\n                                        ))\n                                        }\n\n                                    </Select>\n                                </FormControl>\n\n                            </div>\n\n\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }} >\n\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map((row, i) => (\n                                    <>\n                                        <ListItem onKeyDown={this.handleKeyDown} button selected={this.state.cursor === i ? 'active' : null}\n\n                                            style={{ fontSize: '12px', padding: '0px', paddingLeft: '5px', paddingRight: '5px' }} >\n\n                                            {this.state.cursor === i ? localStorage.setItem(\"selectedKeyRow\", JSON.stringify(row)) : \"\"}\n\n                                            <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol, i)} primary={row.name} /> {row.ltp} ({row.nc}%)\n\n\n                                        </ListItem>\n\n                                    </>\n                                )) : ''}\n                            </div>\n\n                            {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n                        </Paper>\n                        <Typography style={{ fontWeight: 'bold' }}><span style={{ color: \"green\" }}> Advance {this.state.advanceShareCount} </span> <span style={{ color: \"red\" }}> Decline {this.state.declineShareCount} </span> <span> Unchange {this.state.UnchangeShareCount} </span> </Typography>\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={8}>\n                        <Paper style={{ padding: \"10px\" }}>\n\n\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\n\n                            <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                <Grid item xs={10} sm={3}>\n\n                                    {this.state.tradingsymbol ?\n                                        <Typography variant=\"body1\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\n\n                                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\n\n                                        </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\n\n                                    O: {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                    H: {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                    L: {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                    C: {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                                </Grid>\n\n                                <Grid item xs={10} sm={2}>\n\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        disableClearable\n                                        style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                        onChange={this.onSelectItemChart}\n                                        value={this.state.seachSumbol}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange}\n                                                {...params}\n                                                label={\"Search\"}\n                                                margin=\"normal\"\n                                                variant=\"standard\"\n                                                name=\"seachSumbol\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n\n\n                                <Grid item xs={10} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '10px' }} >\n                                        <InputLabel htmlFor=\"gender\">Time</InputLabel>\n                                        <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onInputChange}>\n                                            <MenuItem value={'ONE_MINUTE'}>{'1M'}</MenuItem>\n                                            <MenuItem value={'FIVE_MINUTE'}>{'5M'}</MenuItem>\n                                            <MenuItem value={'TEN_MINUTE'}>{'10M'}</MenuItem>\n                                            <MenuItem value={'FIFTEEN_MINUTE'}>{'15M'}</MenuItem>\n                                            <MenuItem value={'THIRTY_MINUTE'}>{'30M'}</MenuItem>\n                                            <MenuItem value={'ONE_HOUR'}>{'1H'}</MenuItem>\n                                            <MenuItem value={'ONE_DAY'}>{'1D'}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={1}>\n                                    <FormControl style={styles.selectStyle} style={{ marginTop: '3px' }} >\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                            <MenuItem value={\"INTRADAY\"}>Interaday</MenuItem>\n                                            <MenuItem value={\"DELIVERY\"}>Del</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                                </Grid>\n\n\n                                <Grid item xs={1} sm={2}  >\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                                </Grid>\n\n\n\n                                <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n                                         <br />\n\n                                    {this.state.InstrumentLTP ? \n                                    <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n                                          \n                                        <div style={{ background: '#bdbdbd' }}>\n                                            <b>  Daily: {this.state.tradingsymbol}</b> <br />\n\n                                            <span title=\"20SMA\" item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                                Daily Avg Price: {this.state.DailyBulishStatus && this.state.DailyBulishStatus.toFixed(0)} {this.state.DailyBulishStatus ? this.state.InstrumentLTP.ltp > this.state.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                                            </span><br />\n\n\n                                            <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                <b>Daily Avg Volume:</b>  {(this.state.dailyAvgValume / 100000).toFixed(2)}L\n                                            </span><br />\n                                            <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                                                {this.state.todayCurrentVolume > this.state.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(this.state.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (this.state.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                                            </span>\n                                        </div>\n                                        <br />\n\n\n\n                                        <b>  Intraday: {this.state.timeFrame} : {this.state.tradingsymbol}</b> <br />\n                                        {this.state.bblastValue ? <span item xs={12} sm={12} >\n\n                                            <span title=\"Green color mean price running above upper bb band\" style={{ color: this.state.InstrumentLTP.ltp >= this.state.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {this.state.bblastValue.upper.toFixed(2)}</span><br />\n                                            BB Middle(20 SMA): {this.state.bblastValue.middle.toFixed(2)}<br />\n                                            <span title=\"Green red mean price running below lower bb band\" style={{ color: this.state.InstrumentLTP.ltp <= this.state.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {this.state.bblastValue.lower.toFixed(2)}</span><br />\n                                        </span> : \"\"}\n\n                                        <span item xs={12} sm={12} style={{ color: this.state.InstrumentLTP.ltp > this.state.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                            VWAP:  {this.state.vwapvalue && this.state.vwapvalue.toFixed(2)}\n                                        </span>\n                                        <br />\n                                        <b> RSI: </b>{this.state.rsiValues && this.state.rsiValues.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                        <br />\n                                        <b>Vol:</b> {this.state.valumeData && this.state.valumeData.map((item, j) => (\n                                            <span style={{ color: item > this.state.dailyAvgValume ? \"green\" : \"\", fontWeight: item > this.state.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n                                        ))}\n\n                                        <br />  <br />\n\n                                    </Grid>\n                                    : \"\"}\n                                    <Grid item xs={12} sm={9}  >\n                                        <div id=\"showChartTitle\">\n\n\n\n                                        </div>\n                                        <div id=\"tvchart\"></div>\n\n                                    </Grid>\n\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"50vh\" }} >\n\n\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> | Total:  <b style={{ color: this.state.totalPerchentageChange > 0 ? \"green\" : 'red' }}>  {this.state.totalPerchentageChange && this.state.totalPerchentageChange.toFixed(2)}% </b> from {this.state.startingFrom} </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                            {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                                <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                    <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                    <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                                </TableRow>\n                                            )) : ''}\n\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                        <br />\n\n\n\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest</Typography>\n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                            <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={4}>\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={6} style={{ marginTop: '28px' }}>\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </>}\n                                    SearchFailed:{this.state.searchFailed}\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12}>\n\n\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ? <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{ background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n        <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n\n\n\n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n\n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                <TableRow hover key={i}  >\n\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n        */}\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                    <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                    <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                    <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                </TableRow>\n\n\n\n                                            )) : ''}\n\n\n                                            <TableRow style={{ background: \"lightgray\" }} >\n\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                                <TableCell align=\"left\" > </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                        : \"\"}\n\n\n\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\n                                                    </TableRow>\n\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                    </TableRow>\n\n                                                </TableHead>\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n\n                                                        <TableRow hover key={i}  >\n\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                        */}\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                            <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                            <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                        </TableRow>\n\n\n                                                    ))}\n\n\n\n                                                    <TableRow style={{ background: \"lightgray\" }} >\n\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                        <TableCell align=\"left\"></TableCell>\n\n\n                                                        <TableCell align=\"left\" > </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n                                                        <TableCell align=\"left\"> </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                </TableBody>\n                                            </Table>\n\n\n\n                                        )) : ''}\n\n                                    </>\n\n                                        : \"\"}\n\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\n                                        </Typography>\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                    <TableRow hover key={i}  >\n                                                        <TableCell align=\"center\">{i + 1}</TableCell>\n                                                        <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                        <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                        <TableCell align=\"left\" title=\"based on last one 6 month\">\n\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                                </>\n                                                            ))}\n\n                                                            <br />\n\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n\n\n                                                                </>\n                                                            ))}\n\n                                                        </TableCell>\n\n\n                                                        <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.high}</TableCell>\n                                                        <TableCell align=\"left\">{row.low}</TableCell>\n                                                        <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                                    </TableRow>\n\n\n\n                                                )) : ''}\n\n                                            </TableBody>\n\n                                        </Table>\n\n                                        : \"\"}\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={2}>\n\n\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n                       \n\n                            <Grid item xs={12} sm={12}>\n                                <LiveBidsExpantion data={{ list: this.state.liveBidsList, title: \"Live Bids\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n                        \n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.oneHourBullBearCheckList, title: \"Hourly Bullish/Bearish\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n\n                        \n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.volumeBreakoutlast5CandleList, title: \"Last 5 bar Volume breakout\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid> \n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionFastMovement data={{ list: this.state.fastMovementList, title: \"Fast Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.volumeCrossedList, title: \"Average Volume Crossed\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualLowList, title: \"Open = Low : Buy\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.openEqualHighList, title: \"Open = High : Sell\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={12}>\n                                <SimpleExpansionPanel data={{ list: this.state.slowMotionStockList, title: \"Last 5 days no Movement\", LoadSymbolDetails: this.LoadSymbolDetails }} />\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n                    </Grid>\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            pcrTable : JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data,\n            optionChainData: JSON.parse( localStorage.getItem('optionChainData')),\n            filtered: JSON.parse(localStorage.getItem('optionChainData'))  && JSON.parse(localStorage.getItem('optionChainData')).filtered && JSON.parse(localStorage.getItem('optionChainData')).filtered.data  \n            \n            //JSON.parse(localStorage.getItem('optionChainData')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n    filterOptionChain = (name, actualValue) =>{\n        //console.log('filtername', name, actualValue); \n        var filereddata = []; \n    \n       var alldata =  this.state.optionChainData && this.state.optionChainData.records &&  this.state.optionChainData.records.data; \n\n       if(name === 'expiry' && actualValue === 'All' ) {\n            \n        filereddata =  alldata; \n       }\n     \n        if(name === 'expiry') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.expiryDate === actualValue){\n                    filereddata.push(element); \n                } \n            }   \n        }\n\n        if(name === 'strike') {\n            \n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element.strikePrice === actualValue){\n                    filereddata.push(element); \n                } \n            } \n        }\n\n        \n\n        this.setState({filtered : filereddata, FilteredBY: name +\" \"+ actualValue});\n       //  console.log(filereddata); \n    }\n\n\n\n    componentDidMount() {\n\n\n       this.loadPackList();\n   //   console.log('this.state.optionChainData.records.expiryDates', this.state.optionChainData.records.expiryDates)\n\n\n        if(!JSON.parse(localStorage.getItem('cpdata')))\n        localStorage.setItem('cpdata', JSON.stringify( {data : []}) )\n        else\n        this.setState({products:  JSON.parse(localStorage.getItem('cpdata')).data})\n       // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n       //  clearInterval(this.state.stopnview)\n\n       if(!JSON.parse(localStorage.getItem('pcrTable')))\n       localStorage.setItem('pcrTable', JSON.stringify( {data : []}) )\n       else\n       this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')).data})\n     \n\n\n       var todayTime =  new Date(); \n       if(todayTime.getHours()>=9 && todayTime.getHours()< 16 ){\n            setInterval(() => {\n                this.loadPackList();\n            }, 60001 * 2);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60010 * 2);\n\n   //     this.findSupportResistence(this.state.optionChainData); \n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse( localStorage.getItem('optionChainData')).records.data;// this.state.optionChainData && this.state.optionChainData.records.data; \n        var     sumOfCEoi = 0,sumOfPEoi = 0; \n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n            \n            if(strikePrice === element.strikePrice){\n\n                if(element.CE && element.CE.openInterest){\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest; \n                }\n                if(element.PE && element.PE.openInterest){\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest; \n                }\n               \n            }                    \n        }\n       // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return {strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi , sumOfPEoi : sumOfPEoi}; \n\n      //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n           // console.log(optiondata);\n            var alldata =  optiondata && optiondata.records && optiondata.records.data; \n            //var underlyingValue = optiondata && optiondata.records.underlyingValue; \n            var PEoi = 0,CEoi = 0, PEoiChange=0,CEoiChange=0, peStrikePriceByDate=[]  ;\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if(element &&  element.PE){\n                    PEoi = PEoi + element.PE.openInterest; \n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest; \n                }\n                if(element &&  element.CE){\n                    CEoi = CEoi + element.CE.openInterest; \n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest; \n\n                } \n            }\n\n          var allexpiryDates =   optiondata.records.expiryDates; \n          var strikePrices =  optiondata.records.strikePrices; \n        //  var fliterExData = [];  \n           \n            // for (let index = 0; index < allexpiryDates.length; index++) {\n            //     const element = allexpiryDates[index];\n            //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n            //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n            //             fliterExData.push(alldata[indexJ]); \n            //         } \n            //     }                  \n            // }   \n\n            var myStrike = [14000, 14050, 14100, 14150, 14200, 14050, 14300, 14350, 14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n\n           // myStrike =   myStrike.sort(function(a, b){return b - a});\n       \n          //   var myStrike = [14400,14450,14500,14550,14600,14650,14700,14750,14800,14850,14900,14950,15000,15050,15100,15150,15200,15250]; \n       \n\n\n           // var myStrike = [15200,15250]; \n\n\n            var data  = [], totalspeoi= 0, totalsceoi= 0;\n             myStrike.forEach(element => {\n                var resdata =  this.getDataforStrike(element); \n                totalspeoi = totalspeoi+resdata.sumOfPEoi; \n                totalsceoi = totalsceoi+resdata.sumOfCEoi; \n\n                data.push(resdata); \n             \n               // console.log(element, resdata);\n                \n                 \n             });\n             this.setState({AllspTotalOI : data, selectedSPpcr : (totalspeoi / totalsceoi).toFixed(3), totalspeoi : totalspeoi,  totalsceoi : totalsceoi }); \n\n            // for (let index = 0; index < alldata.length; index++) {\n            //     const element = alldata[index];\n              \n            //     // if(alldata[index].strikePrice ==  14800){\n            //     //     fliterExData.push(element); \n            //     // } \n            //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n            //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n            //             fliterExData.push(element); \n            //         }   \n            //     }\n               \n            // }   \n\n//            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({CEoi: CEoi, PEoi : PEoi, allStrikediff:  PEoi - CEoi, CEoiChange: CEoiChange,PEoiChange: PEoiChange,allStrikeChngeDiff:  PEoiChange - CEoiChange });\n    }\n\n    \n\n\n\n    loadPackList() {\n\n\n        var data = { allPacks:true, portal: true};\n        AdminService.getBNcpdata(\"NIFTY\")\n            .then((res) => {\n        //     let data = resolveResponse(res);\n\n             var data =  res.data && res.data;\n\n             \n           localStorage.setItem(\"optionChainData\",  JSON.stringify( data) );\n\n          // this.findSupportResistence(data); \n\n           // console.log(\"livedata\", data.filtered);\n\n           this.setState({filtered : data.filtered && data.filtered.data , optionChainData: data});\n\n            if(data.filtered){\n\n                var diff =  data.filtered.PE.totOI - data.filtered.CE.totOI; \n\n                var newdata = {\n                    dateTime : this.dateFormat(new Date()), \n                    totCEOI : data.filtered.CE.totOI ,\n                    totCEVol: data.filtered.CE.totVol, \n                    totPEOI: data.filtered.PE.totOI , \n                    totPEVol: data.filtered.PE.totVol, \n                    diff: diff, \n                    totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')), \n                    totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')), \n                    totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange')) \n\n                } \n                this.setState({curnewdata : newdata });\n\n                var resname = ''; \n                if(diff > 0 )\n                 resname = \"BUY\";\n                 else\n                resname = \"SELL\"\n                \n\n                document.getElementById('title').innerHTML=  (diff/100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange'))/100000).toFixed(2) + \"L\" +  \" NIFTY \"; \n               // createData.push(newdata); \n               if(JSON.parse(localStorage.getItem('cpdata'))){\n                var oldproducts = JSON.parse(localStorage.getItem('cpdata')); \n               // console.log(\"oldproductsindex0\", ); \n                var lastrow = oldproducts && oldproducts.data[0]; \n                \n\n                // oldproducts.data.forEach((data) => {\n                //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                //         newdata.isDuplicate = true; \n                //     }else{\n                //         newdata.isDuplicate = false;\n                //     }\n                // });\n                if(lastrow){\n                    newdata.isDuplicate = newdata.diff == lastrow.diff ? true : false\n                    newdata.totCEOIChange = (((newdata.totCEOI-lastrow.totCEOI) * 100)/lastrow.totCEOI).toFixed(3);;\n                    newdata.totPEOIChange =   (((newdata.totPEOI-lastrow.totPEOI) * 100)/lastrow.totPEOI).toFixed(3);;\n                    newdata.totDiffChange =  (((newdata.diff-lastrow.diff) * 100)/lastrow.diff).toFixed(3); \n                }else{\n                    newdata.isDuplicate = false\n                    newdata.totCEOIChange = 0;\n                    newdata.totPEOIChange =  0;\n                    newdata.totDiffChange =  0; \n                }\n                \n\n                oldproducts.data.unshift(newdata);\n\n                if(data.records){\n                    oldproducts.timestamp = data.records.timestamp; \n                    oldproducts.underlyingValue = data.records.underlyingValue; \n                }\n              \n\n                localStorage.setItem(\"cpdata\",  JSON.stringify( oldproducts) );\n\n                this.setState({products: oldproducts.data, underlyingValue : data.records.underlyingValue,timestamp: data.records.timestamp  })\n               }\n               \n             //  console.log(\"dddd\", this.state.curnewdata); \n   \n                 \n            }\n\n\n            this.updatepcr()\n            this.setState({pcrTable:  JSON.parse(localStorage.getItem('pcrTable')) && JSON.parse(localStorage.getItem('pcrTable')).data})\n\n            });\n\n\n\n\n    }\n\n\n    updatepcr(){\n\n\n        var pcrdata =  {\n            allPCR : (this.state.PEoi /this.state.CEoi).toFixed(3), \n            expiryPCR: localStorage.getItem('thisWeekPCR'), \n            selectedSPpcr: this.state.selectedSPpcr, \n         }\n\n         if(JSON.parse(localStorage.getItem('pcrTable'))){\n             var pcrTable = JSON.parse(localStorage.getItem('pcrTable')); \n             pcrTable.data.unshift(pcrdata);\n             localStorage.setItem(\"pcrTable\",  JSON.stringify( pcrTable) );\n         }\n         \n         console.log(pcrdata); \n         this.setState({pcrTable: pcrTable })\n    }\n \n\n    \n\n    dateFormat(date){ \n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n  \n\n\n    render(){\n     \n        var totCEOI = 0, totCEVol = 0,totCEOIChange=0, totCEBUY=0, totCESell=0; \n        var totPEOI = 0, totPEVol = 0,totPEOIChange=0, totPEBUY=0, totPESell=0; \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                    <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        My View({this.state.products && this.state.products.length}) <b> Nifty: {this.state.underlyingValue}</b> at Time: {this.state.timestamp} \n                        {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                    </Typography> \n                </Grid>\n\n                <Grid item xs={2} sm={2} > \n                    <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                            id=\"expiry\"\n                            name=\"expiry\"\n                            value={this.state.expiry}\n                            onChange={this.onChange}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                            {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.expiryDates ? this.state.optionChainData.records.expiryDates.map((name, index) => (\n                                <MenuItem key={name+'key'+index} value={name} >\n                                    {name}\n                                </MenuItem>\n                            )): \"\"}\n                            </Select>\n                        </FormControl>\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} > \n                            <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                                    <Select\n                                    labelId=\"strike\"\n                                    id=\"strike\"\n                                    max-height={'100%'}\n                                    name=\"strike\"\n                                    value={this.state.strike}\n                                    onChange={this.onChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    {this.state.optionChainData && this.state.optionChainData.records && this.state.optionChainData.records.strikePrices ? this.state.optionChainData.records.strikePrices.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                        </Grid>\n                        <Grid item xs={1} sm={1} style={{paddingTop:'20px',paddingLeft:'20px'}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button>      \n                        </Grid>\n\n                </Grid>\n              \n            \n                <Grid item xs={12} sm={12}>\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}}>\n                   \n                    <Grid container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                        <Grid item xs={3} sm={3} >\n                         \n                         <span>All PUT OI: <b>{this.state.PEoi} ({(this.state.PEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL OI: <b>{this.state.CEoi} ({(this.state.CEoi/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Diff: {\n                             this.state.allStrikediff > 0 ? <b style={{color:'green'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikediff} ({((this.state.allStrikediff)/100000).toFixed(3)}L)</b> } \n                        </span>\n                        </Grid>\n\n                        <Grid item xs={3} sm={3} >\n                \n                        <span>All PUT Chng in OI: <b>{this.state.PEoiChange} ({(this.state.PEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All CALL Chng in  OI: <b>{this.state.CEoiChange} ({(this.state.CEoiChange/100000).toFixed(3)}L)</b></span><br />\n                         <span>All Put-Call Chng in Diff: {\n                             this.state.allStrikeChngeDiff > 0 ? <b style={{color:'green'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b>\n                            :  <b style={{color:'red'}}>{this.state.allStrikeChngeDiff} ({((this.state.allStrikeChngeDiff)/100000).toFixed(3)}L)</b> } \n                        </span>\n\n\n                        </Grid>\n\n                        <Grid item xs={2} sm={2} >\n\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>ALL PCR: <b>{(this.state.PEoi /this.state.CEoi).toFixed(3) } </b></span>\n                         </Typography> \n                         </Grid>\n\n                         <Grid item xs={2} sm={2} >\n                        <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" >\n                            <span>Expire Week PCR: <b>{ localStorage.getItem('thisWeekPCR') } </b></span>\n                        </Typography> \n                        </Grid>\n                         \n\n\n                         <Grid item xs={2} sm={2} >\n                         <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                            <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n\n                         </Typography> \n                \n              \n\n                        </Grid>\n\n\n                        \n            </Grid>\n            </Paper>\n            </Grid>\n\n           \n\n\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={0}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n              \n              \n                <Grid item xs={7} sm={7} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                            <TableCell align=\"center\"><b>Time</b></TableCell>\n                            <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                            <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                            <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                            <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>                            \n\n                            <TableCell align=\"center\"><b>Call OI</b></TableCell>\n\n                         \n                            <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>                            \n                            \n                            {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody hover style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.products ? this.state.products.map(row => (\n                            <TableRow key={row.dateTime} style={{background: row.isDuplicate ? \"lightgray\":\"\"}}>\n                                <TableCell align=\"center\">{row.dateTime.substring(19,11)}</TableCell>\n                                <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color:'green' }} >BUY</Typography>  : <Typography variant=\"body2\" style={{ color:'red' }} >SELL</Typography> }</TableCell>\n                                <TableCell align=\"center\">{row.diff} ({(row.diff/100000).toFixed(2)}L)({row.totDiffChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totDiffChange}%</span>: row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totDiffChange}%</span> }) </TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff/100000).toFixed(2)}L)</TableCell>\n\n                                <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totPEOIChange}%</span>: row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{row.totPEOIChange}%</span> })</TableCell>\n                                <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{row.totCEOIChange}%</span>: row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color:'red',fontWeight:'bold' }} >{row.totCEOIChange}%</span> })</TableCell>\n                              \n                                <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n                \n                            </TableRow>\n                        )):<Spinner/>}\n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={3} sm={3} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }}  id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead style={{}} variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi/100000).toFixed(3)}L</b></TableCell>\n                            <TableCell align=\"center\"><b>Strike Price</b> </TableCell>\n                            <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi/100000).toFixed(3)}L</b></TableCell>\n                           \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                    \n                        { this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                             <TableRow  hover key={row.dateTime} >\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfCEoi} ({(row.sumOfCEoi/100000).toFixed(2)}L)</TableCell>\n                             <TableCell  align=\"center\">{row.strikePrice}</TableCell>\n                             <TableCell align=\"center\" style={{backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : ''}}>{row.sumOfPEoi} ({(row.sumOfPEoi/100000).toFixed(2)}L)</TableCell>\n                     \n                         </TableRow>\n                        )):<Spinner/>}\n\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n                <Grid item xs={2} sm={2} style={{padding:\"2px\", overflow:\"auto\", height:\"250px\"}}>\n                <Table   id=\"tabledata\" stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n                    \n                    <TableHead variant=\"head\">\n                        <TableRow variant=\"head\">\n                          \n                            <TableCell align=\"center\">ALL Pcr</TableCell>\n                            <TableCell align=\"center\">Expiry Pcr </TableCell>\n                            <TableCell align=\"center\">Selected Pcr</TableCell>\n                         \n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{whiteSpace: \"nowrap\"}}>\n\n                        {this.state.pcrTable && this.state.pcrTable.length>0 && this.state.pcrTable ? this.state.pcrTable.map(row => (\n                            <TableRow  hover key={row.expiryPCR} >\n                                <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                <TableCell  align=\"center\">{row.expiryPCR}</TableCell>\n                                <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                            </TableRow>\n                        )):<Spinner/>}\n\n                        \n                    </TableBody>\n                </Table>\n                \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"2px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableHead variant=\"head\">\n\n                    <TableRow variant=\"head\"  >\n                        \n                        <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell align=\"center\"><b></b></TableCell>\n                        <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                    </TableRow>\n                    <TableRow variant=\"head\" >\n                    \n                        {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n                     \n\n                        <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI')/100000).toFixed(3)}L) </b></TableCell>\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                        {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> STRIKE PRICE</span> </TableCell>\n                        <TableCell align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> Expiry</span> </TableCell>\n\n                        {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                        <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                        {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                        <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                        <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                        <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                        {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                        <TableCell align=\"center\"><b>LTP</b></TableCell>\n                        <TableCell align=\"center\"><b>IV</b></TableCell>\n                        <TableCell align=\"center\"><b>Delta</b></TableCell>\n\n\n                        {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                        <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange')/100000).toFixed(3)}L)</b></TableCell>\n                        <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI')/100000).toFixed(3)}L)</b></TableCell>\n\n\n                    </TableRow>\n                </TableHead>                   \n                    \n                    <TableBody>\n                    \n                        { this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                            <TableRow hover key={index} style={{background: opdata.isDuplicate ? \"lightgray\":\"\"}}>\n                              \n                                {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                { opdata && opdata.CE && opdata.PE ? <>\n                                            <TableCell {...totCEOI = totCEOI +  opdata.CE.openInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.CE.change/opdata.strikePrice-opdata.CE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> }) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                        \n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{borderLeft: 'dashed',borderRight: 'dashed', fontWeight:'500' }} align=\"center\"><span> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{borderRight: 'dashed', whiteSpace: \"nowrap\"}} align=\"center\" ><span style={{paddingLeft:'5px',paddingRight:'5px'  }}> <a href=\"#\" style={{textDecoration: 'none'}} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\"><span style={{color:'#3e85c5', fontWeight:'bold'}}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            <TableCell align=\"center\">{((opdata.PE.change/opdata.strikePrice-opdata.PE.underlyingValue) * 10).toFixed(2)} </TableCell>\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}}align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n                            <TableRow  variant=\"head\"> \n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOI',totCEOI)}><b>{totCEOI}<br />({(totCEOI/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange',totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totCEVol',totCEVol)}><b>{totCEVol}<br />({(totCEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n                                {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                <TableCell {...localStorage.setItem('thisWeekPCR',(totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                <TableCell colSpan={3} align=\"center\"></TableCell>\n\n\n                                {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                {/* <TableCell colSpan={3} align=\"center\"></TableCell> */} \n                                <TableCell align=\"center\" {...localStorage.setItem('totPEVol',totPEVol)}><b>{totPEVol}<br />({(totPEVol/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange',totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange/100000).toFixed(3)}L)</b> </TableCell>\n                                <TableCell align=\"center\" {...localStorage.setItem('totPEOI',totPEOI)}><b>{totPEOI}<br />({(totPEOI/100000).toFixed(3)}L)</b> </TableCell>\n\n                            </TableRow>\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n\n                \n          \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n  data.reverse();\n\n  for (let index = data.length - 20; index <  data.length; index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Parser from 'html-react-parser';\n\nimport Chart from \"./Chart\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview: '',\n            curnewdata: '',\n            showOptionUpside: 800,\n            showOptionDownside: 800,\n            timestamp: '',\n            totalCOI: 0,\n            expiry: '',\n            strike: '',\n            FilteredBY: '',\n            AllspTotalOI: [],\n            PEoi: 0,\n            CEoi: 0,\n            waitForChainFlag: true,\n            scrollcount: 0,\n            pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data,\n            optionChainDataBN: JSON.parse(localStorage.getItem('optionChainDataBN')),\n            filtered: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered && JSON.parse(localStorage.getItem('optionChainDataBN')).filtered.data,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'Securities in F&O',\n            selectOptionStock: \"NIFTY\",\n            underlyingValue: JSON.parse(localStorage.getItem('optionChainDataBN')) && JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.underlyingValue,\n\n            buyCallLot:1, \n            buyPutLot:1, \n            niftyLogSize : 50, \n            niftybankLogSize : 25, \n            \n\n\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n        this.findSupportResistence = this.findSupportResistence.bind(this);\n\n    }\n\n    onChangeSelectSymbol = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.loadPackList();\n        });\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.filterOptionChain(e.target.name, e.target.value);\n        });\n    }\n\n\n   \n\n    filterOptionChain = (name, actualValue) => {\n        //console.log('filtername', name, actualValue); \n        var filereddata = [];\n\n        var alldata = this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.data;\n\n        if (name === 'expiry' && actualValue === 'All') {\n\n            filereddata = alldata;\n        }\n\n        if (name === 'expiry') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.expiryDate === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n        if (name === 'strike') {\n\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element.strikePrice === actualValue) {\n                    filereddata.push(element);\n                }\n            }\n        }\n\n\n\n        this.setState({ filtered: filereddata, FilteredBY: name + \" \" + actualValue });\n        //  console.log(filereddata); \n    }\n\n    // componentWillUnmount() {\n    //     var tabledata = document.getElementById('tabledata'); \n    //     tabledata.removeEventListener('scroll', this.handleScroll);\n\n    // }\n\n    handleScroll = (data) => {\n\n        var scrollcount = this.state.scrollcount;\n\n        this.setState({ scrollcount: scrollcount += 1 });\n\n    }\n\n    onChangeCallLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculateCallMargin(); \n        });\n    }\n\n    calculateCallMargin =(e)=> {\n        this.state.filtered.forEach(element => {\n            if(element.CE && element.CE.lastPrice)  {\n                element.CE.totalMargin = Parser(  this.state.lotSize * this.state.buyCallLot+ \" * \" + element.CE.lastPrice  + \"<br /> <b> \" + (element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.CE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.CE.lastPrice * this.state.buyCallLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n    \n            }\n         \n        });\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    onChangePutLot = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            this.calculatePutMargin(); \n        });\n    }\n\n    calculatePutMargin =(e)=> {\n\n        this.state.filtered.forEach(element => {\n            if(element.PE && element.PE.lastPrice)  {\n                element.PE.totalMargin = Parser(  this.state.lotSize * this.state.buyPutLot+ \" * \" + element.PE.lastPrice  + \"<br /> <b> \" + (element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize).toFixed(2) + \"</b>\");\n                element.PE.maxLoss = Parser( \" <b> Max Loss: <br />\" + ((element.PE.lastPrice * this.state.buyPutLot * this.state.lotSize) * 10/100).toFixed(2) + \"</b>\");\n\n            }\n        });\n\n        this.setState({filtered: this.state.filtered}); \n    }\n\n    componentDidMount() {\n\n\n       \n\n        this.setState({ SecuritiesInFO: this.state.staticData[this.state.selectedWatchlist] }, function () {\n            // this.state.SecuritiesInFO && this.state.SecuritiesInFO.sort(function (a, b) {\n            //     if(a.name < b.name) { return -1; }\n            //     if(a.name > b.name) { return 1; }\n            //     return 0;\n            // });\n        });\n\n       \n\n\n        // var tabledatachart = document.getElementById('tabledatachart'); \n        // tabledatachart.addEventListener('scroll', this.handleScroll);\n\n        //   this.loadPackList();\n        //   console.log('this.state.optionChainDataBN.records.expiryDates', this.state.optionChainDataBN.records.expiryDates)\n\n\n        if (!JSON.parse(localStorage.getItem('optionDiffdata' + this.state.selectOptionStock)))\n            localStorage.setItem('optionDiffdata'+ this.state.selectOptionStock, JSON.stringify({ data: [] }))\n        else\n            this.setState({ products: JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock)).data })\n        // this.setState({ stopnview:  setInterval( this.loadPackList ,  60001 * 2)});\n        //  clearInterval(this.state.stopnview)\n\n        if (!JSON.parse(localStorage.getItem('pcrTableBN')))\n            localStorage.setItem('pcrTableBN', JSON.stringify({ data: [] }))\n        else\n            this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n\n\n\n        var todayTime = new Date();\n        if (todayTime.getHours() >= 9 && todayTime.getHours() < 16) {\n            setInterval(() => {\n                this.loadPackList();\n            }, 60000 * 6);\n        }\n        setInterval(() => {\n            this.updatepcr()\n        }, 60000 * 6);\n\n        // this.findSupportResistence(this.state.optionChainDataBN ? this.state.optionChainDataBN : \"\");\n\n\n        let lotSize = 25; \n        if(this.state.selectOptionStock == \"NIFTY\")\n         lotSize = 50;\n        if(this.state.selectOptionStock == \"BANKNIFTY\")\n        lotSize = 50;\n\n        this.setState({lotSize :lotSize}, function(){\n            this.calculateCallMargin(); \n            this.calculatePutMargin(); \n        })\n\n\n    }\n    // componentDidUpdate(){\n    //   //  this.updatepcr(); \n    //    // console.log(\"updaate called\") \n    // }\n\n    getDataforStrike = strikePrice => {\n\n        var alldata = JSON.parse(localStorage.getItem('optionChainDataBN')).records && JSON.parse(localStorage.getItem('optionChainDataBN')).records.data;// this.state.optionChainDataBN && this.state.optionChainDataBN.records.data; \n        var sumOfCEoi = 0, sumOfPEoi = 0;\n        for (let index = 0; index < alldata.length; index++) {\n            const element = alldata[index];\n\n            if (strikePrice === element.strikePrice) {\n\n                if (element.CE && element.CE.openInterest) {\n                    sumOfCEoi = sumOfCEoi + element.CE.openInterest;\n                }\n                if (element.PE && element.PE.openInterest) {\n                    sumOfPEoi = sumOfPEoi + element.PE.openInterest;\n                }\n\n            }\n        }\n        // fliterExData.push({strikePrice : strikePrice,  sumOfCEoi : sumOfCEoi});    \n        return { strikePrice: strikePrice, sumOfCEoi: sumOfCEoi, sumOfPEoi: sumOfPEoi };\n\n        //  console.log(\"alldata\", alldata);\n    }\n\n    findSupportResistence = (optiondata) => {\n        // console.log(optiondata);\n        var alldata = optiondata && optiondata.records && optiondata.records.data;\n        // var underlyingValue = optiondata.records && optiondata.records.underlyingValue; \n        var PEoi = 0, CEoi = 0, PEoiChange = 0, CEoiChange = 0;\n        if (alldata) {\n            for (let index = 0; index < alldata.length; index++) {\n                const element = alldata[index];\n                if (element && element.PE) {\n                    PEoi = PEoi + element.PE.openInterest;\n                    PEoiChange = PEoiChange + element.PE.changeinOpenInterest;\n                }\n                if (element && element.CE) {\n                    CEoi = CEoi + element.CE.openInterest;\n                    CEoiChange = CEoiChange + element.CE.changeinOpenInterest;\n\n                }\n            }\n        }\n\n\n        //   var allexpiryDates =   optiondata.records.expiryDates; \n        //   var strikePrices =  optiondata.records.strikePrices; \n        //   var fliterExData = [];  \n\n        // for (let index = 0; index < allexpiryDates.length; index++) {\n        //     const element = allexpiryDates[index];\n        //     for (let indexJ = 0; indexJ < alldata.length; indexJ++) {\n        //         if(alldata[indexJ].expiryDate == '22-Apr-2021'){\n        //             fliterExData.push(alldata[indexJ]); \n        //         } \n        //     }                  \n        // }   \n\n        var myStrike = [];\n\n        let startDiff = this.state.underlyingValue - this.state.showOptionDownside\n        let rem = Math.round(startDiff) % 100;\n        let startFrom = Math.round(startDiff) + 100 - rem;\n\n        let endDiff = this.state.underlyingValue + this.state.showOptionUpside;\n        let rem2 = Math.round(endDiff) % 100;\n        let endTo = Math.round(endDiff) + 100 - rem2;\n\n\n        console.log(this.state.underlyingValue, 'start from', startFrom, 'endto', endTo);\n\n\n        for (let index = startFrom; index <= endTo; index += 100) {\n            myStrike.push(index)\n        }\n\n        myStrike = myStrike.sort(function (a, b) { return b - a });\n\n\n\n        var data = [], totalspeoi = 0, totalsceoi = 0;\n        myStrike.forEach(element => {\n            var resdata = this.getDataforStrike(element);\n            totalspeoi = totalspeoi + resdata.sumOfPEoi;\n            totalsceoi = totalsceoi + resdata.sumOfCEoi;\n\n            data.push(resdata);\n\n            console.log(element, resdata);\n\n\n        });\n        this.setState({ AllspTotalOI: data, selectedSPpcr: (totalspeoi / totalsceoi).toFixed(3), totalspeoi: totalspeoi, totalsceoi: totalsceoi });\n\n        // for (let index = 0; index < alldata.length; index++) {\n        //     const element = alldata[index];\n\n        //     // if(alldata[index].strikePrice ==  14800){\n        //     //     fliterExData.push(element); \n        //     // } \n        //     for (let indexJ = 0; indexJ < strikePrices.length; indexJ++) {\n        //         if(  alldata[index].strikePrice == strikePrices[indexJ].strikePrice){\n        //             fliterExData.push(element); \n        //         }   \n        //     }\n\n        // }   \n\n        //            console.log(\"allfliterExData\",fliterExData);\n\n\n        this.setState({ CEoi: CEoi, PEoi: PEoi, allStrikediff: PEoi - CEoi, CEoiChange: CEoiChange, PEoiChange: PEoiChange, allStrikeChngeDiff: PEoiChange - CEoiChange });\n    }\n\n\n\n\n\n    loadPackList() {\n\n\n        this.setState({ waitForChainFlag: false });\n\n        AdminService.getBNcpdata(this.state.selectOptionStock)\n            .then((res) => {\n                //     let data = resolveResponse(res);\n\n                var data = res.data && res.data;\n\n\n                localStorage.setItem(\"optionChainDataBN\", JSON.stringify(data));\n\n                // this.findSupportResistence(data);\n\n                // console.log(\"livedata\", data.filtered);\n\n                this.setState({ filtered: data.filtered && data.filtered.data, optionChainDataBN: data });\n\n                if (data.filtered) {\n\n                    var diff = data.filtered.PE.totOI - data.filtered.CE.totOI;\n\n                    var newdata = {\n                        dateTime: this.dateFormat(new Date()),\n                        totCEOI: data.filtered.CE.totOI,\n                        totCEVol: data.filtered.CE.totVol,\n                        totPEOI: data.filtered.PE.totOI,\n                        totPEVol: data.filtered.PE.totVol,\n                        diff: diff,\n                        totChangeINOICall: parseInt(localStorage.getItem('totCEOIChange')),\n                        totChangeINOIPut: parseInt(localStorage.getItem('totPEOIChange')),\n                        totChangeINOIDiff: parseInt(localStorage.getItem('totPEOIChange')) - parseInt(localStorage.getItem('totCEOIChange'))\n\n                    }\n                    this.setState({ curnewdata: newdata });\n\n\n                    document.getElementById('title').innerHTML = (diff / 100000).toFixed(2) + '|' + ((localStorage.getItem('totPEOIChange') - localStorage.getItem('totCEOIChange')) / 100000).toFixed(2) + \"L \" + this.state.selectOptionStock;\n                    // createData.push(newdata); \n                    if (JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock))) {\n                        var oldproducts = JSON.parse(localStorage.getItem('optionDiffdata'+ this.state.selectOptionStock));\n                        // console.log(\"oldproductsindex0\", ); \n                        var lastrow = oldproducts && oldproducts.data[0];\n\n\n                        // oldproducts.data.forEach((data) => {\n                        //     if(data.totCEOI == newdata.totCEOI && data.totCEVol == newdata.totCEVol && data.totPEOI == newdata.totPEOI  && data.totPEVol == newdata.totPEVol ){\n                        //         newdata.isDuplicate = true; \n                        //     }else{\n                        //         newdata.isDuplicate = false;\n                        //     }\n                        // });\n                        if (lastrow) {\n                            newdata.isDuplicate = newdata.diff === lastrow.diff ? true : false\n                            newdata.totCEOIChange = (((newdata.totCEOI - lastrow.totCEOI) * 100) / lastrow.totCEOI).toFixed(3);;\n                            newdata.totPEOIChange = (((newdata.totPEOI - lastrow.totPEOI) * 100) / lastrow.totPEOI).toFixed(3);;\n                            newdata.totDiffChange = (((newdata.diff - lastrow.diff) * 100) / lastrow.diff).toFixed(3);\n                        } else {\n                            newdata.isDuplicate = false\n                            newdata.totCEOIChange = 0;\n                            newdata.totPEOIChange = 0;\n                            newdata.totDiffChange = 0;\n                        }\n\n\n                        oldproducts.data.unshift(newdata);\n\n                        if (data.records) {\n                            oldproducts.timestamp = data.records.timestamp;\n                            oldproducts.underlyingValue = data.records.underlyingValue;\n                        }\n\n                        oldproducts.data.reverse();\n\n                        localStorage.setItem(\"optionDiffdata\" + this.state.selectOptionStock, JSON.stringify(oldproducts));\n\n\n\n                        this.setState({ products: oldproducts.data, underlyingValue: data.records.underlyingValue, timestamp: data.records.timestamp })\n                        this.setState({ waitForChainFlag: true });\n\n                    }\n\n                    //  console.log(\"dddd\", this.state.curnewdata); \n\n\n                }\n\n\n                this.updatepcr()\n                this.setState({ pcrTableBN: JSON.parse(localStorage.getItem('pcrTableBN')) && JSON.parse(localStorage.getItem('pcrTableBN')).data })\n\n            });\n\n    }\n\n\n    updatepcr() {\n\n\n        var pcrdata = {\n            allPCR: (this.state.PEoi / this.state.CEoi).toFixed(3),\n            expiryPCR: localStorage.getItem('thisWeekPCR'),\n            selectedSPpcr: this.state.selectedSPpcr,\n        }\n\n        if (JSON.parse(localStorage.getItem('pcrTableBN'))) {\n            var pcrTableBN = JSON.parse(localStorage.getItem('pcrTableBN'));\n            pcrTableBN.data.unshift(pcrdata);\n            localStorage.setItem(\"pcrTableBN\", JSON.stringify(pcrTableBN));\n        }\n\n        console.log(pcrdata);\n        this.setState({ pcrTableBN: pcrTableBN })\n    }\n\n\n\n\n    dateFormat(date) {\n\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n\n\n\n    render() {\n\n        var totCEOI = 0, totCEVol = 0, totCEOIChange = 0, totCEBUY = 0, totCESell = 0;\n        var totPEOI = 0, totPEVol = 0, totPEOIChange = 0, totPEBUY = 0, totPESell = 0;\n\n        return (\n            <React.Fragment >\n\n                {/* <PostLoginNavBar /> */}\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"selectOptionStock\">Select Symbol</InputLabel>\n                            <Select\n                                id=\"selectOptionStock\"\n                                name=\"selectOptionStock\"\n                                value={this.state.selectOptionStock}\n                                onChange={this.onChangeSelectSymbol}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'NIFTY'} value={'NIFTY'} > {'NIFTY'}</MenuItem>\n                                <MenuItem key={'BANKNIFTY'} value={'BANKNIFTY'} > {'BANKNIFTY'}</MenuItem>\n\n                                {this.state.SecuritiesInFO && this.state.SecuritiesInFO.length ? this.state.SecuritiesInFO.map((row, index) => (\n                                    <MenuItem key={row.name} value={row.name} >\n                                        {row.name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"expiry\">Select Expiry Date</InputLabel>\n                            <Select\n                                id=\"expiry\"\n                                name=\"expiry\"\n                                value={this.state.expiry}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                <MenuItem key={'All'} value={'All'} >\n                                    {'All'}\n                                </MenuItem>\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.expiryDates ? this.state.optionChainDataBN.records.expiryDates.map((name, index) => (\n                                    <MenuItem key={name + 'key' + index} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} >\n                        <FormControl style={styles.selectStyle}>\n                            <InputLabel id=\"strike\">Select Strick Price</InputLabel>\n                            <Select\n                                labelId=\"strike\"\n                                id=\"strike\"\n                                max-height={'100%'}\n                                name=\"strike\"\n                                value={this.state.strike}\n                                onChange={this.onChange}\n                                input={<Input />}\n                                MenuProps={MenuProps}\n                            >\n                                {this.state.optionChainDataBN && this.state.optionChainDataBN.records && this.state.optionChainDataBN.records.strikePrices ? this.state.optionChainDataBN.records.strikePrices.map(name => (\n                                    <MenuItem key={name} value={name} >\n                                        {name}\n                                    </MenuItem>\n                                )) : \"\"}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                        {this.state.waitForChainFlag ? <Button variant=\"contained\" onClick={() => this.loadPackList()}>\n                            Refesh\n                        </Button> : <Spinner />}\n                    </Grid>\n\n                    <Grid item xs={6} sm={4}>\n\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            {this.state.selectOptionStock} {this.state.underlyingValue} {this.state.timestamp}\n                            {/* <b> FilteredBY : {this.state.FilteredBY} </b>  */}\n                        </Typography>\n                    </Grid>\n\n\n                </Grid>\n\n\n                <Grid item xs={12} sm={12}>\n                    <Paper style={{ padding: \"10px\", overflow: \"auto\" }}>\n\n                        <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={3} sm={3} >\n                                <span> <b>Total </b></span>\n                                <span> PE OI: <b> {(this.state.PEoi / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoi / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikediff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}>{((this.state.allStrikediff) / 100000).toFixed(3)}L</b>}\n                                </span>\n                            </Grid>\n\n                            <Grid item xs={3} sm={5} >\n                                <span> <b>Total Chng </b></span>\n                                <span> PE OI: <b>{(this.state.PEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> CE OI: <b>{(this.state.CEoiChange / 100000).toFixed(3)}L</b></span>\n                                <span> PE-CE: {\n                                    this.state.allStrikeChngeDiff > 0 ? <b style={{ color: 'green' }}>{((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>\n                                        : <b style={{ color: 'red' }}> {((this.state.allStrikeChngeDiff) / 100000).toFixed(3)}L</b>}\n                                </span>\n\n\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>ALL PCR: <b>{(this.state.PEoi / this.state.CEoi).toFixed(3)} </b></span>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2} >\n                                <span>Expire Week PCR: <b>{localStorage.getItem('thisWeekPCR')} </b></span>\n\n                            </Grid>\n\n\n\n                            {/* <Grid item xs={2} sm={2} >\n                            <Typography  component=\"h3\" variant=\"body1\" color=\"primary\" style={{justifyContent:'left'}}>\n                                <span>14000 to 15250 PCR: <b>{this.state.selectedSPpcr} </b></span>\n                            </Typography> \n                        </Grid> */}\n\n\n\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n\n\n\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={0} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n\n\n                    <Grid id=\"tabledatachart\" item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" size=\"small\">\n                            <TableHead key={2222} variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\"><b>Time</b></TableCell>\n                                    <TableCell align=\"center\"><b>VIEW</b></TableCell>\n                                    <TableCell align=\"center\"><b>Put-Call(diff)</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI(diff)</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>PUT OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Put OI</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Call OI</b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng Call OI</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total PUT Volume</b></TableCell>\n                            <TableCell align=\"center\"><b>Total Call Volume</b> </TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody hover style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n\n\n                                {this.state.products ? this.state.products.map(row => (\n                                    <TableRow key={row.dateTime} style={{ background: row.isDuplicate ? \"lightgray\" : \"\" }}>\n                                        <TableCell align=\"center\">{row.dateTime.substring(19, 11)}</TableCell>\n                                        <TableCell align=\"center\">{row.diff > 0 ? <Typography variant='body2' style={{ color: 'green' }} >BUY</Typography> : <Typography variant=\"body2\" style={{ color: 'red' }} >SELL</Typography>}</TableCell>\n                                        <TableCell align=\"center\">{row.diff} ({(row.diff / 100000).toFixed(2)}L)({row.totDiffChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totDiffChange}%</span> : row.totDiffChange == '0.000' ? <span>{row.totDiffChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totDiffChange}%</span>}) </TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIDiff} ({(row.totChangeINOIDiff / 100000).toFixed(2)}L)</TableCell>\n\n                                        <TableCell align=\"center\">{row.totPEOI} ({row.totPEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totPEOIChange}%</span> : row.totPEOIChange == '0.000' ? <span>{row.totPEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totPEOIChange}%</span>})</TableCell>\n                                        <TableCell align=\"center\">{row.totChangeINOIPut} </TableCell>\n\n                                        <TableCell align=\"center\">{row.totCEOI} ({row.totCEOIChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{row.totCEOIChange}%</span> : row.totCEOIChange == '0.000' ? <span>{row.totCEOIChange}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{row.totCEOIChange}%</span>})</TableCell>\n\n                                        <TableCell align=\"center\">{row.totChangeINOICall}</TableCell>\n\n                                        {/* <TableCell align=\"center\">{row.totPEVol} ({(row.totPEVol/100000).toFixed(2)}L)</TableCell>\n                                <TableCell align=\"center\">{row.totCEVol} ({(row.totCEVol/100000).toFixed(2)}L)</TableCell>      */}\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n                    <Grid item xs={4} sm={4} style={{ padding: \"2px\", overflow: \"auto\", height: \"300px\" }}>\n\n                        <Chart diffData={{ data: this.state.products, scrollcount: this.state.scrollcount }} />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead style={{}} variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\"><b>Total CE OI <br />{(this.state.totalsceoi / 100000).toFixed(3)}L</b></TableCell>\n                                    <TableCell align=\"center\"><b>Strike Price<br />{this.state.totalspeoi - this.state.totalsceoi}({((this.state.totalspeoi - this.state.totalsceoi) / 100000).toFixed(3)}L) </b> </TableCell>\n                                    <TableCell align=\"center\"><b>Total PE OI<br />{(this.state.totalspeoi / 100000).toFixed(3)}L</b></TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                                {this.state.AllspTotalOI ? this.state.AllspTotalOI.map(row => (\n                                    <TableRow hover key={row.dateTime} >\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice < this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfCEoi} ({(row.sumOfCEoi / 100000).toFixed(2)}L)</TableCell>\n                                        <TableCell align=\"center\">{row.strikePrice}</TableCell>\n                                        <TableCell align=\"center\" style={{ backgroundColor: row.strikePrice > this.state.underlyingValue ? '#ded6a269' : '' }}>{row.sumOfPEoi} ({(row.sumOfPEoi / 100000).toFixed(2)}L)</TableCell>\n\n                                    </TableRow>\n                                )) : <Spinner />}\n\n\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} style={{ padding: \"2px\", overflow: \"auto\", height: \"250px\" }}>\n                        <Table id=\"tabledata\" stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n                                <TableRow variant=\"head\">\n\n                                    <TableCell align=\"center\">ALL Pcr</TableCell>\n                                    <TableCell align=\"center\">Expiry Pcr </TableCell>\n                                    <TableCell align=\"center\">Selected Pcr</TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{ whiteSpace: \"nowrap\" }}>\n\n                                {this.state.pcrTableBN && this.state.pcrTableBN.length > 0 && this.state.pcrTableBN ? this.state.pcrTableBN.map(row => (\n                                    <TableRow hover key={row.expiryPCR} >\n                                        <TableCell align=\"center\">{row.allPCR} </TableCell>\n                                        <TableCell align=\"center\">{row.expiryPCR}</TableCell>\n                                        <TableCell align=\"center\">{row.selectedSPpcr} </TableCell>\n                                    </TableRow>\n                                )) : ''}\n\n                            </TableBody>\n                        </Table>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={12} style={{ padding: \"2px\", overflow: \"auto\", height: \"900px\" }}>\n\n                        <Table stickyHeader aria-label=\"sticky table\" id=\"tabledata\" size=\"small\">\n\n                            <TableHead variant=\"head\">\n\n                                <TableRow variant=\"head\"  >\n\n                                    <TableCell colSpan={6} align=\"center\"><b>CALL</b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell align=\"center\"><b></b></TableCell>\n                                    <TableCell colSpan={6} align=\"center\"><b>PUT</b></TableCell>\n                                </TableRow>\n                                <TableRow variant=\"head\" style={{ width: \"\", whiteSpace: \"nowrap\" }} >\n\n                                    {/* <TableCell align=\"center\" ><b>Sr No.</b></TableCell>  */}\n\n\n                                    <TableCell align=\"center\"><b>OI Total OI <br />{localStorage.getItem('totCEOI')}({(localStorage.getItem('totCEOI') / 100000).toFixed(3)}L) </b></TableCell>\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totCEOIChange')}({(localStorage.getItem('totCEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totCEVol')}({(localStorage.getItem('totCEVol')/100000).toFixed(3)}L)</b> </TableCell> */}\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Bid qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>ASK qty</b></TableCell> */}\n\n                                    {/* <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> */}\n\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> STRIKE PRICE</span> </TableCell>\n                                    <TableCell align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> Expiry</span> </TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Total Sell Qty</b></TableCell> \n                                    <TableCell align=\"center\"><b>Total Buy Qty</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Bid Qty</b></TableCell>\n                                    <TableCell align=\"center\"><b>Bid Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Price</b></TableCell>\n                                    <TableCell align=\"center\"><b>Ask Qty</b></TableCell>\n                        */}\n                                    <TableCell align=\"center\"><b>Buy</b></TableCell>\n                                    <TableCell align=\"center\"><b>Max Loss</b></TableCell>\n                                    <TableCell align=\"center\"><b>Cost</b></TableCell>\n\n                                    <TableCell align=\"center\"><b>Lot</b></TableCell>\n\n\n\n                                    <TableCell align=\"center\"><b>CHNG</b></TableCell>\n                                    {/* <TableCell align=\"center\"><b>PChange%</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>LTP</b></TableCell>\n                                    <TableCell align=\"center\"><b>IV</b></TableCell>\n\n                                    {/* <TableCell align=\"center\"><b>Delta</b></TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\"><b>Volume <br />{localStorage.getItem('totPEVol')}({(localStorage.getItem('totPEVol')/100000).toFixed(3)}L)</b></TableCell> */}\n                                    <TableCell align=\"center\"><b>Chng in OI <br />{localStorage.getItem('totPEOIChange')}({(localStorage.getItem('totPEOIChange') / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\"><b>OI <br />{localStorage.getItem('totPEOI')}({(localStorage.getItem('totPEOI') / 100000).toFixed(3)}L)</b></TableCell>\n\n\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n\n                                {this.state.filtered ? this.state.filtered.map((opdata, index) => (\n                                    <TableRow hover key={index} style={{ background: opdata.isDuplicate ? \"lightgray\" : \"\" }}>\n\n                                        {/* <TableCell style={{whiteSpace: \"nowrap\"}} align=\"center\">{index+1} </TableCell>*/}\n                                        {opdata && opdata.CE && opdata.PE && (opdata.strikePrice >= opdata.CE.underlyingValue - this.state.showOptionUpside && opdata.strikePrice <= opdata.CE.underlyingValue + this.state.showOptionDownside) ? <>\n\n                                            <TableCell {...totCEOI = totCEOI + opdata.CE.openInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.openInterest}</TableCell>\n                                            <TableCell {...totCEOIChange = totCEOIChange + opdata.CE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.changeinOpenInterest}</TableCell>\n                                            {/* <TableCell {...totCEVol = totCEVol + opdata.CE.totalTradedVolume} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.totalTradedVolume} </TableCell> */}\n                                            <TableCell align=\"center\">{opdata.CE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.CE.change / (opdata.strikePrice - opdata.CE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n\n\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.CE.lastPrice}</span>({opdata.CE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span> : opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>}) </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.CE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.CE.pChange.toFixed(2)}%</span>: opdata.CE.pChange == 0 ? <span>{opdata.CE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.CE.pChange.toFixed(2)}%</span> } </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.CE.change.toFixed(2)} </TableCell>\n                                            \n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyCallLot} onChange={this.onChangeCallLot} name=\"buyCallLot\"  />\n                                             </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.totalMargin} </TableCell>\n                                            <TableCell align=\"center\"> {opdata.CE.maxLoss} </TableCell>\n\n                                            \n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"CE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyCallLot)}> Call Buy </Button> </TableCell>\n\n                                            {/* <TableCell align=\"center\">{opdata.CE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.CE.askQty} </TableCell> */}\n\n                                            {/* <TableCell {...totCEBUY = totCEBUY + opdata.CE.totalBuyQuantity}  style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Buy Qty'} align=\"center\">{opdata.CE.totalBuyQuantity}({(opdata.CE.totalBuyQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totCESell = totCESell + opdata.CE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice < opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total CALL Sell Qty'} align=\"center\">{opdata.CE.totalSellQuantity}({(opdata.CE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                         */}\n                                            <TableCell style={{ borderLeft: 'dashed', borderRight: 'dashed', fontWeight: '500' }} align=\"center\"><span> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('strike', opdata.strikePrice)}> {opdata.strikePrice}</a> </span> </TableCell>\n                                            <TableCell style={{ borderRight: 'dashed', whiteSpace: \"nowrap\" }} align=\"center\" ><span style={{ paddingLeft: '5px', paddingRight: '5px' }}> <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => this.filterOptionChain('expiry', opdata.expiryDate)}> {opdata.expiryDate}</a></span> </TableCell>\n\n                                            <TableCell align=\"center\">  <Button size={\"small\"} variant=\"contained\" onClick={() => this.props.buyOption(\"PE\", this.state.selectOptionStock, opdata.strikePrice, opdata.expiryDate, this.state.buyPutLot)}>Put Buy </Button> </TableCell>\n                                            <TableCell align=\"center\"> {opdata.PE.maxLoss} </TableCell>\n\n                                            <TableCell align=\"center\"> {opdata.PE.totalMargin} </TableCell>\n\n                                            <TableCell align=\"center\">                            \n                                                <TextField label={\"Lot: \" + this.state.lotSize} type={\"number\"} style={{width:\"50px\", textAlign:\"center\"}} value={this.state.buyPutLot} onChange={this.onChangePutLot} name=\"buyPutLot\"  />\n                                             </TableCell>\n                                            {/* <TableCell {...totPESell = totPESell + opdata.PE.totalSellQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Sell Qty'} align=\"center\">{opdata.PE.totalSellQuantity}({(opdata.PE.totalSellQuantity/100000).toFixed(3)}L) </TableCell>\n                                            <TableCell {...totPEBUY = totPEBUY + opdata.PE.totalBuyQuantity} style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} title={'Total PUT Buy Qty'} align=\"center\">{opdata.PE.totalBuyQuantity}({(opdata.PE.totalBuyQuantity/100000).toFixed(3)}L)</TableCell>\n                                         */}\n                                            {/* <TableCell align=\"center\">{opdata.PE.bidQty} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.bidprice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askPrice} </TableCell>\n                                            <TableCell align=\"center\">{opdata.PE.askQty} </TableCell>\n                                            */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.change.toFixed(2)} </TableCell>\n                                            {/* <TableCell style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>: opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{opdata.PE.pChange.toFixed(2)}%</span>} </TableCell> */}\n                                            <TableCell style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\"><span style={{ color: '#3e85c5', fontWeight: 'bold' }}> {opdata.PE.lastPrice}</span>({opdata.PE.pChange > 0 ? <span style={{ color: 'green', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span> : opdata.PE.pChange == 0 ? <span>{opdata.PE.pChange.toFixed(2)}%</span> : <span style={{ color: 'red', fontWeight: 'bold' }} >{opdata.PE.pChange.toFixed(2)}%</span>})</TableCell>\n\n                                            <TableCell align=\"center\">{opdata.PE.impliedVolatility} </TableCell>\n                                            {/* <TableCell align=\"center\">{(opdata.PE.change / (opdata.strikePrice - opdata.PE.underlyingValue)).toFixed(2)} </TableCell> */}\n\n                                            {/* <TableCell {...totPEVol = totPEVol + opdata.PE.totalTradedVolume}  style={{backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : ''}} align=\"center\">{opdata.PE.totalTradedVolume} </TableCell> */}\n                                            <TableCell {...totPEOIChange = totPEOIChange + opdata.PE.changeinOpenInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.changeinOpenInterest}</TableCell>\n                                            <TableCell {...totPEOI = totPEOI + opdata.PE.openInterest} style={{ backgroundColor: opdata.strikePrice > opdata.CE.underlyingValue ? '#ded6a269' : '' }} align=\"center\">{opdata.PE.openInterest} </TableCell>\n                                        </> : \"\"\n                                        }\n\n\n                                    </TableRow>\n\n                                )) : <Spinner />}\n\n\n                                <TableRow variant=\"head\">\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOI', totCEOI)}><b>{totCEOI}<br />({(totCEOI / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEOIChange', totCEOIChange)}><b>{totCEOIChange}<br />({(totCEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totCEVol', totCEVol)}><b>{totCEVol}<br />({(totCEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell colSpan={3} align=\"center\"></TableCell>\n                                    {/* <TableCell align=\"center\"><b>{totCEBUY}<br />({(totCEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totCESell}<br />({(totCESell/100000).toFixed(3)}L)</b> </TableCell> */}\n\n                                    <TableCell {...localStorage.setItem('thisWeekPCR', (totPEOI / totCEOI).toFixed(3))} align=\"center\" colSpan={2}><b> PCR : {(totPEOI / totCEOI).toFixed(3)}</b></TableCell>\n\n\n                                    <TableCell colSpan={5} align=\"center\"></TableCell>\n\n\n                                    {/* <TableCell align=\"center\"><b>{totPESell}<br />({(totPESell/100000).toFixed(3)}L)</b></TableCell>\n                                <TableCell align=\"center\"><b>{totPEBUY}<br />({(totPEBUY/100000).toFixed(3)}L)</b></TableCell>\n                                */}\n                                    {/* <TableCell colSpan={3} align=\"center\"></TableCell> */}\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEVol', totPEVol)}><b>{totPEVol}<br />({(totPEVol / 100000).toFixed(3)}L)</b></TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOIChange', totPEOIChange)}><b>{totPEOIChange}<br />({(totPEOIChange / 100000).toFixed(3)}L)</b> </TableCell>\n                                    <TableCell align=\"center\" {...localStorage.setItem('totPEOI', totPEOI)}><b>{totPEOI}<br />({(totPEOI / 100000).toFixed(3)}L)</b> </TableCell>\n\n                                </TableRow>\n\n\n                            </TableBody>\n\n\n                        </Table>\n                    </Grid>\n\n                </Grid>\n\n\n\n\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle: {\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TradeConfig from './TradeConfig.json';\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n                this.setState({  fundData :fundsResData.data }); \n                localStorage.setItem(\"netCapital\", fundsResData.data && fundsResData.data.net); \n\n               }\n        })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    Total Capital  :   {TradeConfig.totalCapital }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {TradeConfig.perTradeExposurePer}% \n                    </Typography>\n\n                    <Typography variant=\"h6\">\n                    Per Trade Exposure  :   {(TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100).toFixed(2)}\n                    </Typography>\n\n                    </Paper>\n\n                </Grid>\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.getTodayOrder();\n        }, 10000);\n       \n    }\n\n   \n    cancelOrderOfSame = (orderId,variety) =>  {\n       \n        var data = {\n            \"variety\":variety,\n            \"orderid\":orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n                this.getTodayOrder();\n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n               this.setState({triggerprice : 0}); \n               this.getTodayOrder();\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                         Oders Placed ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\n\n                                \n\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>AvgPrice</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>TriggerPrice</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\n\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\">\n                                        {/* {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity} */}\n                                    {row.quantity}\n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                       </>\n                                     : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\n                                        {row.orderstatus}\n                                        <br />\n\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \n                                       </>\n                                     : ''}\n\n                                    </TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.jwtToken,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode , jwtToken: jwtToken });\n\n            \n        wsClint.onopen  = (res) => {\n\n\n            var firstTime_req =  {\n                \"jwttoken\": this.state.jwtToken,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n           }\n    \n           \n            console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n            wsClint.send(firstTime_req);\n\n            // this.makeConnection();\n            // console.log('connected');\n            // this.updateSocketWatch();\n                \n             setTimeout(function(){\n               this.makeConnection(feedToken ,clientcode);\n             }, 1000);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nimport SymbolOptions from './BankNiftyView'\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList: [], \n            lastTradedData : {}\n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngList : [...this.state.orderPenidngList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n        var isDeleted = false, delitem =''; \n       var orderPenidngList =  localStorage.getItem('orderPenidngList') && JSON.parse( localStorage.getItem('orderPenidngList')); \n       for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n           const element = orderPenidngList[index];\n           if(row.token == element.token){\n            var delitem = orderPenidngList.splice(index, 1); \n            localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList)); \n            this.setState({orderPenidngList : orderPenidngList}); \n            break; \n           }\n       }\n\n       if(delitem[0].token == row.token){\n        return true;\n       }else {\n        return false;\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n       console.log(\"call back called\");\n     // this.deleteInOrderPenidngList(row); \n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n            const element = this.state.orderPenidngList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList)); \n                    this.setState({orderPenidngList : this.state.orderPenidngList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        var isDelete = this.deleteInOrderPenidngList(element); \n                        if(isDelete){\n                            CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\n                        }\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 2000; \n            if(this.state.orderPenidngList.length > 10){\n                intervaltime = this.state.orderPenidngList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n\n\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n    buyOption =(optiontype ,symbol, strikePrice, expiryDate, noOfLot)=>{\n      console.log(optiontype ,symbol, strikePrice, expiryDate); \n      let exp = expiryDate.toUpperCase().split('-'); \n       exp = exp[0]+exp[1]+exp[2]%1000; \n\n      let optionName = symbol + exp + strikePrice + optiontype; \n      console.log(optionName); \n\n      AdminService.autoCompleteSearch(optionName).then(res => {\n        let data = res.data; \n        let optionData = data && data[0]; \n        console.log(\"optionData\", optionData);\n\n\n        if(optionData && optionData.symbol && optionData.symbol ==  optionName){\n            var  ltpparam = { \"exchange\":optionData.exch_seg, \"tradingsymbol\": optionData.symbol , \"symboltoken\": optionData.token}; \n\n            AdminService.getLTP(ltpparam).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if(LtpData && LtpData.ltp) {\n                    \n                    console.log(\"option ltp\", LtpData);\n\n                   let quantity = optionData.lotsize * noOfLot;   \n\n    \n                   let perStopTrigerLoss = LtpData.ltp - (LtpData.ltp * 10/100); \n                   perStopTrigerLoss =  CommonOrderMethod.getMinPriceAllowTick(perStopTrigerLoss); \n\n                   let stopLossPrice = perStopTrigerLoss - (perStopTrigerLoss * 1/100); \n\n                   stopLossPrice =  CommonOrderMethod.getMinPriceAllowTick(stopLossPrice); \n\n    \n                    let element = {\n                        tradingsymbol : optionData.symbol, \n                        symboltoken : optionData.token, \n                        transactiontype: \"BUY\", \n                        ordertype: \"LIMIT\", \n                        buyPrice : LtpData.ltp,  \n                        producttype : \"CARRYFORWARD\", \n                        exchange : optionData.exch_seg,\n                        stopLossTriggerPrice: perStopTrigerLoss,\n                        stopLossPrice: stopLossPrice,\n                        quantity : quantity\n                    }        \n                    console.log( \"option buy element\", element);\n                   CommonOrderMethod.placeOptionOrder(element);\n                }\n            })\n        }else{\n            Notify.showError(optionName + \" not found\");\n        }\n\n\n       \n\n\n\n       \n\n        //localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n    //    this.setState({ autoSearchList: data });\n\n    \n      \n    })\n\n\n\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar/> : \"\"}\n\n             <Paper style={{ overflow: \"auto\", padding: '5px',  background:\"#f500570a\"}} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Orders Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length}) \n                        {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                        {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                        </Typography> \n\n\n                    </Grid>\n\n                   \n\n                    <Grid item >\n\n                        <Grid container spacing={2}>\n                        <Grid item >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        \n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"500px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                    </Grid>\n\n                            \n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n                <br />\n\n                <Paper style={{ overflow: \"auto\", padding: '5px'}} > \n                    <Grid item> \n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                          Option Chain (Equity Derivatives)\n                        </Typography> \n\n\n                    </Grid>\n\n\n                        <SymbolOptions buyOption={this.buyOption} />\n                </Paper>\n\n               \n\n\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport OrderWatchlist from './OrderWatchlist';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList: [],\n            autoSearchList: [],\n            InstrumentLTP: {},\n            autoSearchTemp: [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"DELIVERY\",\n            nr4TotalPer: 0,\n            pnlAmountTotal: 0,\n            totalNetProfit: 0,\n            totelActivatedCount: 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting: \"\",\n            perHighLowTotal: 0,\n            netPnLAmountOnHighlowTotal: 0,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n\n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1000) })\n              this.setState({bankNiftyInterval :  setInterval(() => {this.getNiftyLTP(); this.getBankNiftyLTP(); }, 30000)}) \n\n            var squireInterval = setInterval(() => {\n                console.log(\"squireoff\", new Date().toLocaleString()); \n                let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n                let sqrOffendTime = moment('3:15pm', 'h:mma');\n                let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n            \n                if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n                    this.state.positionList.forEach((element, i)=> {\n                        if(element.netqty > 0 || element.netqty < 0){\n                            this.squareOff(element);\n                        }\n                        if(this.state.positionList.length == i+1){\n                            clearInterval(squireInterval);\n                            console.log(\"squireInterval ended\"); \n                        }\n                    });\n                } \n            }, 5000);\n\n        } else {\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval);\n            clearInterval(this.state.bankNiftyInterval);\n        }\n\n        var scanendTime = moment('3:30pm', 'h:mma');\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\n            //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n\n\n\n            // var tostartInteral =   setInterval(() => {\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 15 === 0){\n            //         setTimeout(() => {\n            //             this.getCandleHistoryAndStore(); \n            //         }, 70000);\n            //         setInterval(() => {\n            //                 if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n            //                 this.getCandleHistoryAndStore(); \n            //             }\n            //          }, 60000 * 15 + 70000 );  \n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern();\n            }, foundPatternsFromStored.length * 100 + 300000);\n        }\n\n       \n\n       \n        //this.getCandleHistoryAndStore(); \n\n        // this.findNR4PatternLive();\n        //this.findNR7PatternLive();\n\n\n\n        // this.getPositionData();\n        // this.getNSETopStock();\n\n\n        //  this.getMySelectedStock();\n\n\n\n        // setInterval(() => {\n\n        //     var timediff = moment.duration(\"00:50:00\");\n        //     var startdate = moment(new Date()).subtract(timediff);\n\n\n        //     var enddiff = moment.duration(\"00:01:00\");\n        //     var enddate = moment(new Date()).add(enddiff);\n\n\n        //     var data  = {\n        //         \"exchange\": \"NSE\",\n        //         \"symboltoken\": 212,\n        //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n        //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n        //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n        //     }\n\n        //     AdminService.getHistoryData(data).then(res => { \n        //         let histdata = resolveResponse(res,'noPop' );\n        //         var candleData = histdata.data; \n        //         candleData.reverse(); \n        //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n        //     }); \n\n        // }, 1000);\n\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        this.setState({ foundPatternList: backTestResult })\n\n\n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n\n    getCandleHistoryAndStore = async () => {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        const today = moment().isoWeekday();\n        var timediff = '';\n\n\n\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\n            timediff = moment.duration(\"66:00:00\");\n        } else {\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    if (candleData && candleData.length >= 10) {\n                        var last10Candle = candleData.slice(0, 10);\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist, symbol) => {\n\n        //   console.log(\"TweezerTop finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n\n            //\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\n\n                        var ttophistCandle = [];\n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser Top',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: ttophistCandle\n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\n        // console.log(\"TweezerBottom finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var last8candleHigh = candleHist[9][2];\n            var last8candleLow = candleHist[2][3];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n\n            //  \n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n\n\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle = [];\n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser bottom',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: tBophistCandle\n                        }\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data; var rgrangeCount = 0;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    var last5Candle = candleData.slice(0, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last5Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0];\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        console.log(index + 1, element.symbol, rgrangeCount);\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n\n                        if (rgrangeCount == 4) {\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\n\n\n                            var firstCandle = last4Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR4',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr4 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 300));\n\n            // var showtestdata = (index + 1);\n\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n            //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last7Candle = candleData.slice(1, 8);\n                    var last9Candle = candleData.slice(0, 9);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last7Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last9Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\n\n\n                        if (rgrangeCount == 7) {\n\n\n                            var firstCandle = last7Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR7',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr7 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol;\n            this.setState({ stockTesting: showtestdata });\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n\n\n    refreshLtpOnFoundPattern = async () => {\n\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\n\n\n        var foundPatternList = this.state.foundPatternList;\n\n        this.setState({ foundPatternList: [] });\n\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        //       foundPatternList.forEach(element => {\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\n            const element = foundPatternList[index];\n\n            if (element && element.pattenName == 'NR4') {\n\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\": element.token,\n                }\n\n                AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                    var LtpData = data && data.data;\n                    //console.log(LtpData);\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\n                    if (LtpData && LtpData.ltp) {\n\n                        var orderActivated = <span> {LtpData.ltp} </span>;\n\n                        if (LtpData.ltp > element.BuyAt) {\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\n                            quantity = Math.floor(10000 / element.BuyAt);\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n\n                        }\n                        if (LtpData.ltp < element.SellAt) {\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n                        }\n\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol: element.symbol,\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\n                            token: element.token,\n                            pattenName: 'NR4',\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(),\n                            BuyAt: element.BuyAt,\n                            SellAt: element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated: orderActivated,\n                            candleChartData: element.candleChartData,\n                            quantity: quantity ? quantity : \"\",\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange: perChange,\n                            todayChange: todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated', foundData);\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\n\n                        var foundlist = this.state.foundPatternList;\n\n                        foundlist.sort(function (a, b) {\n                            return b.perChange - a.perChange;\n                        });\n\n                        this.setState({ foundPatternList: foundlist });\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                    }\n\n                }).catch(error => {\n                    Notify.showError(element.symbol + \" ltd data not found!\");\n                })\n\n            }\n            await new Promise(r => setTimeout(r, 101));\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                if (row.netqty > 0) {\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n                } else if (row.netqty < 0) {\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.sellavgprice) * parseInt(row.netqty)).toFixed(2);\n                }\n                break;\n            }\n        }\n\n        return data;\n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        oderbookData.forEach(element => {\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n            }\n        });\n        return data;\n    }\n    getHighLowPercentage = async () => {\n\n        this.setState({showHighLowWisePer: true});\n\n        if (!this.state.positionList.length) {\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n\n            if (element.producttype == \"DELIVERY\") {\n                return \"\";\n            }\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\": element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                    this.state.positionList[index].high = LtpData.high;\n                    this.state.positionList[index].low = LtpData.low;\n                }\n            })\n            await new Promise(r => setTimeout(r, 125));\n            this.setState({ positionList: this.state.positionList });\n\n        }\n\n    }\n    tagPatternWhichTaken =(token)=> {\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \n       \n       var pattern = ''; \n       for (let index = 0; index < orderTagToPosition.length; index++) {\n           const element = orderTagToPosition[index];\n           if(token == element.token){\n            pattern = element.pattenName; \n            break;\n           }\n        }\n        return pattern\n    //    console.log(\"findpatter\", token, orderTagToPosition);\n    //    orderTagToPosition.forEach(element => {\n    //         if(token == element.token){\n    //             return element.pattenName; \n    //         }\n    //    });\n\n    }\n    calculateTradeExpence =(element)=>{\n\n        var totalbuyvalue =  parseFloat(element.totalbuyvalue) === 0 ? parseFloat(element.totalsellvalue) : parseFloat(element.totalbuyvalue);\n        var buyCharge = parseFloat(totalbuyvalue) * 0.25/100; \n        if(buyCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            buyCharge = 20; \n        }\n        var totalsellvalue =  parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n        var sellCharge = parseFloat(totalsellvalue) * 0.25/100; \n        if(sellCharge > 20 || (element.optiontype  == 'CE' || element.optiontype  == 'PE')){\n            sellCharge = 20; \n        }\n        let turnOver = totalbuyvalue + totalsellvalue; \n        let totalBroker = buyCharge+sellCharge;\n\n        let sst = 0.025; //stock intraday\n        if(element.optiontype  == 'CE' || element.optiontype  == 'PE'){\n            sst = 0.05;  \n        }\n\n        let sstCharge = totalsellvalue *  sst/100; \n        let transCharge = turnOver *  0.00335/100; \n        let stampDuty  = totalbuyvalue *   0.003/100; \n        let sebiCharge = turnOver * 10/10000000; \n        let gstCharge = (totalBroker+transCharge+sebiCharge) * 18/100; \n\n        let total = totalBroker+sstCharge+transCharge+stampDuty+sebiCharge+gstCharge; \n\n        var chargeInfo ={\n          tradeExpence:  total,\n          expenceInfo : \"Brokerage: \"+totalBroker.toFixed(2)+ \" \\nSTT: \"+ sstCharge.toFixed(2) + \" \\nTransaction: \"+ transCharge.toFixed(2) + \" \\nStamp Duty: \"+stampDuty.toFixed(2) + \" \\nSebi: \"+sebiCharge.toFixed(2) + \" \\nGST: \" + gstCharge.toFixed(2) + \" \\n\\nTotal: \"+ total.toFixed(2)\n        }\n        return chargeInfo; \n    }\n    getPositionData = async () => {\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0;\n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var positionList = data && data.data;\n            if (positionList && positionList.length > 0) {\n\n\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0, totalExpence=0; \n                positionList.forEach(element => {\n\n                    if (element.producttype == \"DELIVERY\") {\n                        return \"\";\n                    }\n\n                    todayProfitPnL += parseFloat(element.pnl);\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n                    totalQtyTraded += parseInt(element.buyqty);\n                    allbuyavgprice += parseFloat(element.buyavgprice);\n                    allsellavgprice += parseFloat(element.sellavgprice);\n                    if(element.netqty == 0){\n                        let percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice));\n                        element.percentPnL = percentPnL.toFixed(2) + \"%\";\n                        totalPercentage += parseFloat(percentPnL);\n\n                        localStorage.removeItem('firstTimeModify' + element.tradingsymbol)\n                        localStorage.removeItem('lastTriggerprice_' + element.tradingsymbol)\n                    }\n                   \n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \n\n                    let chargeInfo = this.calculateTradeExpence(element);\n                    element.tradeExpence = chargeInfo.tradeExpence.toFixed(2); \n                    element.expenceInfo = chargeInfo.expenceInfo; \n                    totalExpence += chargeInfo.tradeExpence; \n\n                    var slData = this.getStoplossFromOrderbook(element);\n                    if (slData) {\n                        element.stopLoss = slData.stopLoss;\n                        element.stopLossAmount = slData.maxLossAmount;\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\n                    }\n\n\n                });\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\n\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\n                this.setState({ totalExpence: totalExpence.toFixed(2) });\n\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\n\n                \n                positionList.sort(function (a, b) {\n                    return (b.netqty - a.netqty);\n\n                    //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList: positionList });\n\n            }\n        })\n\n    }\n\n    getNSETopStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n                                    console.log(found[0].symbol, \"found\", found);\n                                    localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                    this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    getMySelectedStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getSelectedStockFromDb().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\n                                    selectedStockwatchList.push(found[0]);\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    checkAndPlaceSingleOrder = (stock) => {\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data = res.data;\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\n            console.log(\"stockfound\", found);\n            if (found && found.length) {\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\n            }\n        })\n    }\n\n\n    getStockOnebyOne() {\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            console.log(\"still ok\");\n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    if (scandata && scandata.length > 0) {\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\n                        var isFound = false;\n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\n                                isFound = true;\n                            }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\n                        }\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n            var LtpData = data && data.data;\n            var ltpPrice = LtpData.ltp\n            if (ltpPrice) {\n\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\n                var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken: token,\n                    buyPrice: 0,\n                    quantity: quantity,\n                    stopLossPrice: stopLossPrice\n                }\n\n                if (quantity && stopLossPrice) {\n                    this.placeOrderMethod(orderOption);\n                }\n\n            }\n\n        }).catch((error) => {\n            console.log(symbol, \"not found\", 'error', error);\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //    console.log(data);       \n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n    }\n\n\n    getNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"NIFTY\",\n            \"symboltoken\": \"26000\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:green'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('niftySpid').innerHTML = \"<span style='color:red'> Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n    getBankNiftyLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\": \"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                let per = (LtpData.ltp - LtpData.close) * 100 / LtpData.close; \n                if(per > 0)\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:green'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n                else\n                document.getElementById('bankniftySpid').innerHTML = \"<span style='color:red'> Bank Nifty \" + LtpData.ltp + ' (' + (per).toFixed(2) + '%)</span>'; \n            }\n        })\n    }\n\n\n    getStopLossPrice = async (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n\n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            if (LtpData && LtpData.ltp) {\n                var ltp = parseFloat(LtpData.ltp);\n                ltp = ltp - (ltp * 0.7 / 100);\n                var slPrice = this.getMinPriceAllowTick(ltp);\n\n                this.setState({ stoploss: slPrice });\n                return slPrice;\n            }\n\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"21:10:00\");\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                            stoploss = this.getMinPriceAllowTick(stoploss);\n\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\n\n                            console.log(symbol, \" LTP \", LtpData.ltp);\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                            console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue);\n\n                            var orderOption = {\n                                transactiontype: 'BUY',\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5) {\n                                this.placeOrderMethod(orderOption);\n                            } else {\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                console.log(symbol + \" its not fullfilled\");\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(symbol + \" candle data emply\");\n                    }\n                })\n\n            }\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    cancelOrderOfSame = (row) => {\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if (data.status && data.message === 'SUCCESS') {\n                console.log(\"cancel order\", data);\n                // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n    }\n\n    squareOff = (row) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\n            \"exchange\": row.exchange,\n            \"ordertype\": \"MARKET\",\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n\n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);\n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                this.cancelOrderOfSame(row);\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n\n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'hey Vijay, ' + slmOption.tradingsymbol;\n                window.speechSynthesis.speak(msg);\n\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    getOpenPeningOrderId = (symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\n                data.orderId = oderbookData[index].orderid\n                data.variety = oderbookData[index].variety\n                break;\n            }\n        }\n        return data;\n    }\n\n    modifyOrderMethod = (row, minTriggerPrice, minSLPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\": row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": minSLPrice ?  parseFloat(minSLPrice) : 0,\n            \"triggerprice\": parseFloat(minTriggerPrice),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n\n\n            if (data.status && data.message === 'SUCCESS') {\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\n                msg.text = row.symbolname + ' modified ' + data.message;\n                window.speechSynthesis.speak(msg);\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minTriggerPrice));\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n    get2DecimalNumber =(number)=>{\n        number = parseFloat(number); \n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    getSLAndTriggerPrice =(price)=> {\n        let minTriggerPrice = this.getMinPriceAllowTick(price);\n\n        var minSLPrice = minTriggerPrice - (minTriggerPrice * 1 / 100);\n        minSLPrice = this.getMinPriceAllowTick(minSLPrice);\n\n        let slPriceData = {\n            minTriggerPrice : minTriggerPrice, \n            minSLPrice : minSLPrice\n        }\n        return slPriceData; \n    }\n    getOptionPercentage =(row)=> {\n\n        console.log(\"option per calling\"); \n        var percentChange = 0, trailPerChange = 0; \n\n        row.buyavgprice = parseFloat(row.buyavgprice);\n        percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n        if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 5) {\n\n            var minTriggerPrice = row.buyavgprice + (row.buyavgprice * 1 / 100);\n            let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n            if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                this.modifyOrderMethod(row, slPriceData.minTriggerPrice ,slPriceData.minSLPrice );\n            }\n\n        } else {\n            var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n            var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n            trailPerChange = perchngfromTriggerPrice; \n            if (perchngfromTriggerPrice >= 5) {\n                minTriggerPrice = lastTriggerprice + (lastTriggerprice * 1 / 100);\n                let slPriceData =  this.getSLAndTriggerPrice(minTriggerPrice); \n\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != slPriceData.minTriggerPrice){\n                    this.modifyOrderMethod(row, slPriceData.minTriggerPrice, slPriceData.minSLPrice);\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n \n    }\n\n    \n    getPercentage = (row) => {\n\n        var percentChange = 0, trailPerChange = 0; \n\n        if (row.netqty > 0) {\n            row.buyavgprice = parseFloat(row.buyavgprice);\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 0.3) {\n                var minPrice = row.buyavgprice + (row.buyavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                if (perchngfromTriggerPrice >= 0.3) {\n                    minPrice = lastTriggerprice + (lastTriggerprice * 0.10/ 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if (row.netqty < 0) {\n\n            row.sellavgprice = parseFloat(row.sellavgprice);\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -0.3) {\n                var minPrice = row.sellavgprice - (row.sellavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                    this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.25 / 100));\n                }\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                console.log(\"perchngfromTriggerPrice\", perchngfromTriggerPrice);\n                if (perchngfromTriggerPrice <= -0.5) {\n                    minPrice = lastTriggerprice - (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    if(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol) != minPrice){\n                        this.modifyOrderMethod(row, minPrice);\n                    }\n                }\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n    }\n\n  \n\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\n                    <Grid item >\n                       <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Positions ({this.state.positionList && this.state.positionList.length}) \n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={3} >\n                        <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                        </Typography>\n                    </Grid>\n\n                    \n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Net Capital  {this.get2DecimalNumber(localStorage.getItem('netCapital'))}  </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\" >\n                            <b> Net Cap P/L </b> <b style={{ color: ((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')) > 0 ? \"green\" : \"red\" }}>{((this.state.todayProfitPnL - this.state.totalExpence) * 100/localStorage.getItem('netCapital')).toFixed(2)}% </b>\n                        </Typography>\n                    </Grid>\n\n                   \n\n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Turnover {this.state.totalTornOver} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item >\n                        <Typography component=\"h3\"  >\n\n                        <b style={{ color: \"red\" }}>Expenses: {this.state.totalExpence} </b>\n\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalExpence) > 0 ? \"green\" : \"red\" }}>{this.state.totalExpence ? (this.state.todayProfitPnL - this.state.totalExpence).toFixed(2) : \"\"} </b>\n                        </Typography>\n                    </Grid>\n                    \n\n                    \n\n\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\n                    </Grid>\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\n                    </Grid>\n                </Grid>\n\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                    <Grid item xs={12} sm={12}>\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Pattern Name</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Expense</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n\n                                        {this.state.showHighLowWisePer ? \n                                        <>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                         <TableCell  className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                          </> : \"\"}\n\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\n\n                                            <TableCell align=\"left\">\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                                    {row.tradingsymbol} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\n                                                </Button>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\n                                            <TableCell style={{cursor:'help'}} title={row.expenceInfo} align=\"left\">{row.tradeExpence}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\n\n\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== '0' && row.optiontype  == '' ? this.getPercentage(row) : \"\"}\n                                                {(row.optiontype  == 'CE' || row.optiontype  == 'PE') && row.netqty > 0 ? this.getOptionPercentage(row) : \"\"}  \n                                                {row.percentPnL}\n                                                {/* new Date().toLocaleTimeString() > \"15:15:00\" ? */}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n\n                                        {this.state.showHighLowWisePer ? <>\n                                            <TableCell   align=\"left\">{row.high}</TableCell>\n                                            <TableCell  align=\"left\">{row.low}</TableCell>\n                                          </> : \"\"}\n\n\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\n                                            </TableCell>\n\n                                        </TableRow> : \"\"\n\n                                    )) : ''}\n\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\n\n                                        {/* new Date().toLocaleTimeString() > \"15:15:00\" ?  */}\n                                            {this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\"}\n\n                                        </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                    </TableRow>\n\n\n                                </TableBody>\n                            </Table>\n\n                        </Paper>\n\n\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '250px', overflow: \"auto\" }}>\n                        <OrderBook />\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '100%', overflow: \"auto\" }}>\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\n                    </Grid>\n\n\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \n                    <Grid item xs={12} sm={12} >\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n\n\n                            <Grid justify=\"space-between\"\n                                container>\n                                <Grid item  >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\n\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\n                                    </Typography>\n                                </Grid>\n                                <Grid item >\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                        <TableRow hover key={row.symboltoken}>\n\n\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\n                                                {row.pastPerferm ? <>\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                </> : \"\"}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                            <TableCell align=\"left\">{row.time}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n\n\n                        </Paper>\n                    </Grid> \n                    : \"\"}\n\n\n\n                </Grid>\n\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport LightChartCom from \"./LightChartCom\";\n\nimport Chart from \"./Chart\";\n\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n  //  this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {\n      cursor: 0,\n      areaData: [\n        { time: '2018-10-19', value: 54.90 },\n        { time: '2018-10-22', value: 54.98 },\n        { time: '2018-10-23', value: 57.21 },\n        { time: '2018-10-24', value: 57.42 },\n        { time: '2018-10-25', value: 56.43 },\n        { time: '2018-10-26', value: 55.51 },\n        { time: '2018-10-29', value: 56.48 },\n        { time: '2018-10-30', value: 58.18 },\n        { time: '2018-10-31', value: 57.09 },\n        { time: '2018-11-01', value: 56.05 },\n        { time: '2018-11-02', value: 56.63 },\n        { time: '2018-11-05', value: 57.21 },\n        { time: '2018-11-06', value: 57.21 },\n        { time: '2018-11-07', value: 57.65 },\n        { time: '2018-11-08', value: 58.27 },\n        { time: '2018-11-09', value: 58.46 },\n        { time: '2018-11-12', value: 58.72 },\n        { time: '2018-11-13', value: 58.66 },\n        { time: '2018-11-14', value: 58.94 },\n        { time: '2018-11-15', value: 59.08 },\n        { time: '2018-11-16', value: 60.21 },\n        { time: '2018-11-19', value: 60.62 },\n        { time: '2018-11-20', value: 59.46 },\n        { time: '2018-11-21', value: 59.16 },\n        { time: '2018-11-23', value: 58.64 },\n        { time: '2018-11-26', value: 59.17 },\n        { time: '2018-11-27', value: 60.65 },\n        { time: '2018-11-28', value: 60.06 },\n        { time: '2018-11-29', value: 59.45 },\n        { time: '2018-11-30', value: 60.30 },\n        { time: '2018-12-03', value: 58.16 },\n        { time: '2018-12-04', value: 58.09 },\n        { time: '2018-12-06', value: 58.08 },\n        { time: '2018-12-07', value: 57.68 },\n        { time: '2018-12-10', value: 58.27 },\n        { time: '2018-12-11', value: 58.85 },\n        { time: '2018-12-12', value: 57.25 },\n        { time: '2018-12-13', value: 57.09 },\n        { time: '2018-12-14', value: 57.08 },\n        { time: '2018-12-17', value: 55.95 },\n        { time: '2018-12-18', value: 55.65 },\n        { time: '2018-12-19', value: 55.86 },\n        { time: '2018-12-20', value: 55.07 },\n        { time: '2018-12-21', value: 54.92 },\n        { time: '2018-12-24', value: 53.05 },\n        { time: '2018-12-26', value: 54.44 },\n        { time: '2018-12-27', value: 55.15 },\n        { time: '2018-12-28', value: 55.27 },\n        { time: '2018-12-31', value: 56.22 },\n        { time: '2019-01-02', value: 56.02 },\n        { time: '2019-01-03', value: 56.22 },\n        { time: '2019-01-04', value: 56.36 },\n        { time: '2019-01-07', value: 56.72 },\n        { time: '2019-01-08', value: 58.38 },\n        { time: '2019-01-09', value: 57.05 },\n        { time: '2019-01-10', value: 57.60 },\n        { time: '2019-01-11', value: 58.02 },\n        { time: '2019-01-14', value: 58.03 },\n        { time: '2019-01-15', value: 58.10 },\n        { time: '2019-01-16', value: 57.08 },\n        { time: '2019-01-17', value: 56.83 },\n        { time: '2019-01-18', value: 57.09 },\n        { time: '2019-01-22', value: 56.99 },\n        { time: '2019-01-23', value: 57.76 },\n        { time: '2019-01-24', value: 57.07 },\n        { time: '2019-01-25', value: 56.40 },\n        { time: '2019-01-28', value: 55.07 },\n        { time: '2019-01-29', value: 53.28 },\n        { time: '2019-01-30', value: 54.00 },\n        { time: '2019-01-31', value: 55.06 },\n        { time: '2019-02-01', value: 54.55 },\n        { time: '2019-02-04', value: 54.04 },\n        { time: '2019-02-05', value: 54.14 },\n        { time: '2019-02-06', value: 53.79 },\n        { time: '2019-02-07', value: 53.57 },\n        { time: '2019-02-08', value: 53.95 },\n        { time: '2019-02-11', value: 54.05 },\n        { time: '2019-02-12', value: 54.42 },\n        { time: '2019-02-13', value: 54.48 },\n        { time: '2019-02-14', value: 54.03 },\n        { time: '2019-02-15', value: 55.16 },\n        { time: '2019-02-19', value: 55.44 },\n        { time: '2019-02-20', value: 55.76 },\n        { time: '2019-02-21', value: 56.15 },\n        { time: '2019-02-22', value: 56.92 },\n        { time: '2019-02-25', value: 56.78 },\n        { time: '2019-02-26', value: 56.64 },\n        { time: '2019-02-27', value: 56.72 },\n        { time: '2019-02-28', value: 56.92 },\n        { time: '2019-03-01', value: 56.96 },\n        { time: '2019-03-04', value: 56.24 },\n        { time: '2019-03-05', value: 56.08 },\n        { time: '2019-03-06', value: 55.68 },\n        { time: '2019-03-07', value: 56.30 },\n        { time: '2019-03-08', value: 56.53 },\n        { time: '2019-03-11', value: 57.58 },\n        { time: '2019-03-12', value: 57.43 },\n        { time: '2019-03-13', value: 57.66 },\n        { time: '2019-03-14', value: 57.95 },\n        { time: '2019-03-15', value: 58.39 },\n        { time: '2019-03-18', value: 58.07 },\n        { time: '2019-03-19', value: 57.50 },\n        { time: '2019-03-20', value: 57.67 },\n        { time: '2019-03-21', value: 58.29 },\n        { time: '2019-03-22', value: 59.76 },\n        { time: '2019-03-25', value: 60.08 },\n        { time: '2019-03-26', value: 60.63 },\n        { time: '2019-03-27', value: 60.88 },\n        { time: '2019-03-28', value: 59.08 },\n        { time: '2019-03-29', value: 59.13 },\n        { time: '2019-04-01', value: 59.09 },\n        { time: '2019-04-02', value: 58.53 },\n        { time: '2019-04-03', value: 58.87 },\n        { time: '2019-04-04', value: 58.99 },\n        { time: '2019-04-05', value: 59.09 },\n        { time: '2019-04-08', value: 59.13 },\n        { time: '2019-04-09', value: 58.40 },\n        { time: '2019-04-10', value: 58.61 },\n        { time: '2019-04-11', value: 58.56 },\n        { time: '2019-04-12', value: 58.74 },\n        { time: '2019-04-15', value: 58.71 },\n        { time: '2019-04-16', value: 58.79 },\n        { time: '2019-04-17', value: 57.78 },\n        { time: '2019-04-18', value: 58.04 },\n        { time: '2019-04-22', value: 58.37 },\n        { time: '2019-04-23', value: 57.15 },\n        { time: '2019-04-24', value: 57.08 },\n        { time: '2019-04-25', value: 55.85 },\n        { time: '2019-04-26', value: 56.58 },\n        { time: '2019-04-29', value: 56.84 },\n        { time: '2019-04-30', value: 57.19 },\n        { time: '2019-05-01', value: 56.52 },\n        { time: '2019-05-02', value: 56.99 },\n        { time: '2019-05-03', value: 57.24 },\n        { time: '2019-05-06', value: 56.91 },\n        { time: '2019-05-07', value: 56.63 },\n        { time: '2019-05-08', value: 56.38 },\n        { time: '2019-05-09', value: 56.48 },\n        { time: '2019-05-10', value: 56.91 },\n        { time: '2019-05-13', value: 56.75 },\n        { time: '2019-05-14', value: 56.55 },\n        { time: '2019-05-15', value: 56.81 },\n        { time: '2019-05-16', value: 57.38 },\n        { time: '2019-05-17', value: 58.09 },\n        { time: '2019-05-20', value: 59.01 },\n        { time: '2019-05-21', value: 59.50 },\n        { time: '2019-05-22', value: 59.25 },\n        { time: '2019-05-23', value: 58.87 },\n        { time: '2019-05-24', value: 59.32 },\n        { time: '2019-05-28', value: 59.57 },\n      ],\n      volumeData: [\n        { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-22', value: 21737523.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-23', value: 29328713.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-24', value: 37435638.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-25', value: 25269995.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-26', value: 24973311.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-10-29', value: 22103692.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-30', value: 25231199.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-10-31', value: 24214427.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-01', value: 22533201.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-02', value: 14734412.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-05', value: 12733842.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-06', value: 12371207.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-07', value: 14891287.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-08', value: 12482392.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-09', value: 17365762.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-12', value: 13236769.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-13', value: 13047907.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-14', value: 18288710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-15', value: 17147123.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-16', value: 19470986.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-19', value: 18405731.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-20', value: 22028957.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-21', value: 18482233.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-23', value: 7009050.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-26', value: 12308876.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-27', value: 14118867.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-11-28', value: 18662989.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-29', value: 14763658.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-11-30', value: 31142818.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-03', value: 27795428.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-04', value: 21727411.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-06', value: 26880429.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-07', value: 16948126.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-10', value: 16603356.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-11', value: 14991438.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-12', value: 18892182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-13', value: 15454706.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-14', value: 13960870.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-17', value: 18902523.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-18', value: 18895777.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-19', value: 20968473.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-20', value: 26897008.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-21', value: 55413082.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-24', value: 15077207.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2018-12-26', value: 17970539.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-27', value: 17530977.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-28', value: 14771641.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2018-12-31', value: 15331758.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-02', value: 13969691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-03', value: 19245411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-04', value: 17035848.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-07', value: 16348982.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-08', value: 21425008.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-09', value: 18136000.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-10', value: 14259910.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-11', value: 15801548.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-14', value: 11342293.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-15', value: 10074386.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-16', value: 13411691.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-17', value: 15223854.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-18', value: 16802516.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-22', value: 18284771.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-23', value: 15109007.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-24', value: 12494109.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-25', value: 17806822.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-28', value: 25955718.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-29', value: 33789235.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-01-30', value: 27260036.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-01-31', value: 28585447.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-01', value: 13778392.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-04', value: 15818901.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-05', value: 14124794.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-06', value: 11391442.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-07', value: 12436168.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-08', value: 12011657.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-11', value: 9802798.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-12', value: 11227550.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-13', value: 11884803.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-14', value: 11190094.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-15', value: 15719416.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-19', value: 12272877.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-20', value: 11379006.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-21', value: 14680547.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-22', value: 12534431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-25', value: 15051182.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-26', value: 12005571.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-02-27', value: 8962776.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-02-28', value: 15742971.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-01', value: 10942737.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-04', value: 13674737.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-05', value: 15749545.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-06', value: 13935530.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-07', value: 12644171.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-08', value: 10646710.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-11', value: 13627431.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-12', value: 12812980.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-13', value: 14168350.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-14', value: 12148349.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-15', value: 23715337.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-18', value: 12168133.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-19', value: 13462686.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-20', value: 11903104.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-21', value: 10920129.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-22', value: 25125385.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-25', value: 15463411.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-26', value: 12316901.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-27', value: 13290298.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-03-28', value: 20547060.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-03-29', value: 17283871.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-01', value: 16331140.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-02', value: 11408146.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-03', value: 15491724.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-04', value: 8776028.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-05', value: 11497780.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-08', value: 11680538.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-09', value: 10414416.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-10', value: 8782061.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-11', value: 9219930.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-12', value: 10847504.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-15', value: 7741472.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-16', value: 10239261.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-17', value: 15498037.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-18', value: 13189013.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-22', value: 11950365.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-23', value: 23488682.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-24', value: 13227084.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-25', value: 17425466.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-04-26', value: 16329727.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-29', value: 13984965.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-04-30', value: 15469002.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-01', value: 11627436.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-02', value: 14435436.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-03', value: 9388228.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-06', value: 10066145.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-07', value: 12963827.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-08', value: 12086743.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-09', value: 14835326.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-10', value: 10707335.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-13', value: 13759350.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-14', value: 12776175.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-15', value: 10806379.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-16', value: 11695064.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-17', value: 14436662.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-20', value: 20910590.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-21', value: 14016315.00, color: 'rgba(0, 150, 136, 0.8)' },\n        { time: '2019-05-22', value: 11487448.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-23', value: 11707083.00, color: 'rgba(255,82,82, 0.8)' },\n        { time: '2019-05-24', value: 8755506.00, color: 'rgba(0, 150, 136, 0.8)' },\n      ]\n    }\n  }\n\n\n  render() {\n    const { cursor } = this.state\n\n    return (\n      <Container>\n\n          {/* <LightChartCom ChartData={{areaSeries: this.state.areaData, volumeData : this.state.volumeData}}/> */}\n       \n\n      </Container>\n    )\n  }\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        \n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n//     loadIndexesList() {\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n//         AdminService.getAllIndices()\n//             .then((res) => {\n//                 if (res.data) {\n//                     var data = res.data, sectorStockList = [];\n//                     this.setState({ indexTimeStamp: data.timestamp })\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n//                   //  this.setState({sectorList :  softedData});\n                  \n// //                    this.setState({ sectorList: []});\n//                     function sleep(ms) {\n//                         return new Promise(resolve => setTimeout(resolve, ms));\n//                     }\n//                     var updateLtpOnInterval = async (ref, softedData) => {\n\n//                             var middleSector = []; \n//                             for (let i = 0; i < softedData.length; i++) {\n\n//                                 var length = 1;                                     \n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n//                                     softedData[i].stockList = sectorStocks;\n//                                     length = sectorStocks.length; \n//                                     if (sectorStocks && sectorStocks.length) {\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n//                                     }\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n//                                 }else{\n//                                     softedData[i].stockList = sectorStocks;\n//                                     middleSector.push(softedData[i]); \n//                                 }\n\n                                \n                            \n//                                 await sleep(length / 10 * 1500);\n//                             }\n\n\n//                             middleSector.forEach(element => {\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\n//                             });\n//                         }\n//                         updateLtpOnInterval(this, softedData);\n//                 }\n//             })\n//             .catch((reject) => {\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n//                 this.speckIt(\"All Indices API Failed\");\n\n//             })\n\n//         this.setState({ refreshFlag: true });\n\n//     }\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n        \n\n                    var data = res.data && res.data.data, sectorStockList = [];\n                   // this.setState({ indexTimeStamp: data.timestamp })\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\n                  //  this.setState({sectorList :  softedData});\n\n                  console.log(softedData); \n\n                    this.setState({ sectorList: []});  \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1;                                     \n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\n\n                                    if(sectorStocks && sectorStocks.length){\n                                        softedData[i].stockList = sectorStocks;\n                                        length = sectorStocks.length; \n                                        if (sectorStocks && sectorStocks.length) {\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\n                                        }\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                    }\n                                }else{\n                                    if(sectorStocks && sectorStocks.length>=1){\n                                        softedData[i].stockList = sectorStocks;\n                                        middleSector.push(softedData[i]); \n                                    }\n                                  \n                                }\n\n                                await sleep(length / 10 * 150);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n          //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\nimport LightChartCom from './LightChartCom';\n\nimport Test from './Test';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n\n  const [open, setOpen] = React.useState(false);\n\n  var [values, setValues] = React.useState({\n    data: [],\n    candledata: {}\n  })\n\n\n\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n\n   \n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showLightCandleChart\" color=\"primary\" style={{ display: \"none\" }} onClick={handleClickOpen}>\n        Chart\n      </Button>\n      <Dialog maxWidth={'lg'} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} style={{color : props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change > 0 ? \"green\" : \"red\" }}>\n          {props.LightChartData.selectedSymbol}  {props.LightChartData.InstrumentLTP && props.LightChartData.InstrumentLTP.ltp}    ({props.LightChartData.InstrumentLTP  && props.LightChartData.InstrumentLTP.change.toFixed(2)}%) \n          <br />\n\n\n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n          <br />\n\n          {props.LightChartData && props.LightChartData.InstrumentLTP ?\n            <Grid item xs={12} sm={3} style={{ background: \"#00000014\" }} >\n\n              <div style={{ background: '#bdbdbd' }}>\n                <b>  Daily: {props.LightChartData.selectedSymbol}</b> <br />\n\n                <span title=\"20SMA\" item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                  Daily Avg Price: {props.LightChartData.DailyBulishStatus && props.LightChartData.DailyBulishStatus.toFixed(0)} {props.LightChartData.DailyBulishStatus ? props.LightChartData.InstrumentLTP.ltp > props.LightChartData.DailyBulishStatus ? \"BUY\" : \"SELL\" : \"\"}\n                </span><br />\n\n\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  <b>Daily Avg Volume:</b>  {(props.LightChartData.dailyAvgValume / 100000).toFixed(2)}L\n                </span><br />\n                <span title=\"averge of showed candle volume\" item xs={12} sm={12}>\n                  {props.LightChartData.todayCurrentVolume > props.LightChartData.dailyAvgValume ? <b title=\"if cossed avg volume then its green\" style={{ color: \"green\" }}>Today Volume: {(props.LightChartData.todayCurrentVolume / 100000).toFixed(2)}L </b> : \"Today Volume:\" + (props.LightChartData.todayCurrentVolume / 100000).toFixed(2) + \"L\"}\n                </span>\n              </div>\n              <br />\n\n\n\n              <b>  Intraday: {props.LightChartData.timeFrame} : {props.LightChartData.tradingsymbol}</b> <br />\n              {props.LightChartData.bblastValue ? <span item xs={12} sm={12} >\n\n                <span title=\"Green color mean price running above upper bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp >= props.LightChartData.bblastValue.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>BB Upper: {props.LightChartData.bblastValue.upper.toFixed(2)}</span><br />\n                BB Middle(20 SMA): {props.LightChartData.bblastValue.middle.toFixed(2)}<br />\n                <span title=\"Green red mean price running below lower bb band\" style={{ color: props.LightChartData.InstrumentLTP.ltp <= props.LightChartData.bblastValue.lower ? \"red\" : \"\", fontWeight: \"bold\" }}>BB Lower: {props.LightChartData.bblastValue.lower.toFixed(2)}</span><br />\n              </span> : \"\"}\n\n              <span item xs={12} sm={12} style={{ color: props.LightChartData.InstrumentLTP.ltp > props.LightChartData.vwapvalue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                VWAP:  {props.LightChartData.vwapvalue && props.LightChartData.vwapvalue.toFixed(2)}\n              </span>\n              <br />\n              <b> RSI: </b>{props.LightChartData.rsiValues && props.LightChartData.rsiValues.map((item, j) => (\n                item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n              ))}\n\n\n              <br />\n              <b>Vol:</b> {props.LightChartData.valumeData && props.LightChartData.valumeData.map((item, j) => (\n                <span style={{ color: item > props.LightChartData.dailyAvgValume ? \"green\" : \"\", fontWeight: item > props.LightChartData.dailyAvgValume ? \"bold\" : \"\" }}> {(item / 100000).toFixed(2)}L &nbsp;</span>\n              ))}\n\n              <br />  <br />\n\n            </Grid>\n            : \"\"}\n\n\n\n          {/* <Grid item xs={12} sm={9}  >\n            <div id=\"showChartTitle\">\n            </div>\n            <div id=\"tvchart\"></div>\n          </Grid> */}\n\n\n            <Grid item xs={12} sm={9}  >\n            {localStorage.getItem('candleChartData') ? <ReactApexChart\n            options={{\n              chart: {\n                type: 'candlestick',\n                height: 350\n              },\n              title: {\n                text: '',\n                align: 'left'\n              },\n              xaxis: {\n                type: 'datetime',\n              },\n              yaxis: {\n                tooltip: {\n                  enabled: true\n                }\n              }\n            }}\n            series={[{\n              data: props.LightChartData.chartStaticData\n\n            }]}\n            type=\"candlestick\"\n            width={500}\n            height={350}\n          /> : \"\"}\n\n\n\n            </Grid>\n\n\n          </Grid>\n\n\n\n          {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n          <Grid item>\n             <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' )}>BUY</Button> \n          </Grid>\n\n          <Grid item>\n            <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={props.LightChartData.qtyToTake} onChange={this.onChangeQty} />\n          </Grid>\n\n          <Grid item >\n            <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked')}>SELL</Button> \n          </Grid>\n          </Grid> */}\n\n          {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n         \n\n\n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n          */}\n          {/* {props.LightChartData.chartStaticData ? <Test ChartData={props.LightChartData} /> : \"\"} */}\n\n\n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LightChartDialog from './LightChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            sluglist: {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n              //  \"NIFTY HEALTHCARE\": \"niftyHealthcare\"\n                //'NIFTY CONSR DURBL':  \"niftyConsrDurbl\"\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                // 'NIFTY NEXT 50': 'juniorNifty',\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\n            },\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0,\n            refreshFlagCandle: true,\n            switchToListViewFlag: true,\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || [],\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        window.document.title = \"Hit Map2\";\n\n\n        this.loadIndexesList();\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n   \n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n                    var softedData = res.data && res.data.data;\n                    softedData.sort(function (a, b) {\n                        return b.percChange - a.percChange;\n                    });\n\n\n                    this.setState({ indexTimeStamp: softedData[0].timeVal });\n\n\n                    for (let index = 0; index < softedData.length; index++) {\n                        const element = softedData[index];\n                        var slugName = this.state.sluglist[element.indexName];\n\n                        if (slugName) {\n                            console.log(\"secName\", element.indexName, slugName);\n                            AdminService.checkSectorApiOther(slugName).then(res => {\n                                console.log(element.indexName, res.data.data);\n                                softedData[index].stockList = res.data && res.data.data;\n                                softedData[index].time = res.data && res.data.time;\n                                this.setState({ sectorList: softedData });\n                            }).catch(error => {\n                                // Notify.showError(element.indexName + \"fail to get stockdata\"); \n                                console.log(\"list fetch error\", error)\n                            })\n                        }\n                    }\n\n\n\n\n                    // this.state.sectorList.forEach(element => {\n                    //     if(element.stockList && element.stockList.length){\n                    //         document.title = \"Top1: \" + element.indexName; \n                    //         return;\n                    //     }\n                    // });\n\n\n\n                }\n            })\n            .catch((reject) => {\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({ stockUpdate: index });\n\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n        // this.refreshSectorCandleManually(index); \n        //  this.checkLast5MinMovement(index); \n\n\n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\n\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"19:00:00\";\n                else\n                    return \"01:00:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"23:00:00\";\n                else\n                    return \"03:00:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"24:21:00\";\n                else\n                    return \"07:00:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"28:01:00\";\n                else\n                    return \"10:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"100:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"200:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"1000:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n    \n    dailyBasisInfoCheck = (token, element) => {\n        //this.setState({DailyBulishStatus: ''}); \n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        let timeDuration = this.getTimeFrameValue('ONE_DAY');\n        var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n        var startDateforDaily = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'ONE_DAY',\n            \"fromdate\": moment(startDateforDaily).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n\n                for (let index = candleDatad.length - 20; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n                    if(element){\n                        closeingDatadaily.push(element[4]);\n                        valumeSum += element[5];\n                    }\n                  \n                }\n\n\n                DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n                this.setState({ dailyAvgValume: valumeSum / 20 });\n\n                var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                console.log(token, \"DSMA\", DSMALastValue);\n\n                if (DSMALastValue) {\n                    this.setState({ DailyBulishStatus: DSMALastValue, todayCurrentVolume: candleDatad[candleDatad.length - 1][5] });\n                }\n\n                if (candleDatad[candleDatad.length - 1][5] > valumeSum / 20) {\n                    console.log(\"crosssed voliue\", element);\n                 //   this.setState({ volumeCrossedList: [...this.state.volumeCrossedList, element] })\n                }\n\n            }\n\n\n        });\n    }\n\n\n\n    showCandleChartPopUp = (symbol) => {\n\n\n        // //  candleData  = candleData && candleData.reverse();\n\n        // // localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        // localStorage.setItem('cadleChartSymbol', symbol);\n        // // localStorage.setItem('candlePriceShow', price);\n        // // localStorage.setItem('candleChangeShow', change);\n        // // localStorage.setItem('vwapDataChart', vwapDataChart);\n\n        // document.getElementById('showCandleChart').click();\n\n  \n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || []; \n        var isThere = watchList.filter(row => row.name === symbol);\n        if(isThere && isThere.length){\n\n            let stock = isThere[0]; \n\n           \n\n            this.dailyBasisInfoCheck( stock.token);\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"22:00:00\");  //22:00:00\" for last day  2hours \n           // var beginningTime = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\":  stock.token,\n                \"interval\": 'FIVE_MINUTE',\n                \"fromdate\": moment(beginningTime).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n    \n    \n            AdminService.getHistoryData(data).then(res => {\n                let historyData = resolveResponse(res, 'noPop');\n                    console.log(\"candledata\", historyData); \n                if (historyData && historyData.data) {\n    \n                    var data = historyData.data;\n    \n                    const cdata = data.map(d => {\n                        return { time: new Date(d[0]).getTime(), open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }\n                    });\n\n                    \n\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [], volumeSeriesData = [];\n                    data.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n                        volumeSeriesData.push({ time: new Date(element[0]).getTime(), value: element[5], color: 'rgba(211, 211, 211, 1)' })\n    \n                    });\n    \n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n                    }\n    \n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n    \n                    var bb = BollingerBands.calculate(input);\n                    console.log(stock.symbol, \"Bolinger band\", input, bb);\n    \n                    var inputRSI = { values: closeingData, period: 14 };\n                    var rsiValues = RSI.calculate(inputRSI);\n    \n                    console.log(stock.symbol, \"Rsi\", inputRSI, rsiValues);\n                    console.log(stock.symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var data = {\n                        \"exchange\":stock.exch_seg,\n                        \"tradingsymbol\": stock.symbol,\n                        \"symboltoken\": stock.token,\n                    }\n                    AdminService.getLTP(data).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;  \n                        \n                        LtpData.change =  (LtpData.ltp - LtpData.close) * 100 /  LtpData.close; \n\n\n\n                        this.showCandleChart(candleChartData, stock.symbol, LtpData.ltp , LtpData.change);  \n\n                       \n                        // this.setState({InstrumentLTP: LtpData , selectedSymbol : stock.symbol,  chartStaticData: candleChartData, bblastValue: bb[bb.length - 1], vwapvalue: vwap(vwapdata), rsiValues: rsiValues.slice(Math.max(valumeData.length - 19, 1)), valumeData: valumeData.slice(Math.max(valumeData.length - 5, 1)) }, function () {\n                            \n                        //     document.getElementById('showLightCandleChart').click();\n                        // });\n            \n                    \n                    })\n\n                }\n            })\n        }\n\n       \n\n\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber = (number) => {\n\n        if (number) {\n            return number.toFixed(2);\n        } else {\n            return number;\n        }\n    }\n    switchToListView = () => {\n        this.setState({ switchToListViewFlag: !this.state.switchToListViewFlag });\n    }\n\n    get5DaysMoveCount =(symbol)=> {\n        var isThere = this.state.slowMotionStockList.filter(row => row.name === symbol);\n        if (isThere.length) {\n           return \"SM: \" + isThere[0].bigCandleCount ;  \n        }else{\n            return '';\n        }\n    }\n\n    getDeliveryInfo =(symbol)=> {\n         \n        AdminService.getDeliveryData(symbol).then(resd => {\n            if(resd && resd.data &&  resd.data.length)\n            return \"D2T%: \" +  resd.data[0].deliveryToTradedQuantity; \n        });\n       \n    }\n    \n    render() {\n\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n        //         return b.nc - a.nc;\n        //     });\n        // });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <LightChartDialog LightChartData = {{InstrumentLTP : this.state.InstrumentLTP, DailyBulishStatus: this.state.DailyBulishStatus, todayCurrentVolume : this.state.todayCurrentVolume,  selectedSymbol : this.state.selectedSymbol,  chartStaticData: this.state.chartStaticData, bblastValue: this.state.bblastValue, vwapvalue: this.state.vwapvalue, rsiValues: this.state.rsiValues, valumeData: this.state.valumeData }} />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\n                            &nbsp;\n                            <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button> \n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n                            <Button onClick={() => this.switchToListView()}>switch to list view</Button>\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {!this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\n                        indexdata.stockList ? <Grid item xs={12} sm={3}>\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Button>\n                            &nbsp;\n\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                <ShowChartIcon />\n                            </Button> */}\n\n                                <Typography variant=\"body1\" >\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13, 8)}\n                                </Typography>\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\n                                                </Typography>\n\n\n                                                {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                    <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ?\n                                                    <Typography >\n                                                        {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                        &nbsp;\n                                                        {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                    </Typography>\n                                                    : \"\"}\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                options={{\n                                                    chart: {\n                                                        type: 'candlestick',\n                                                        //  height: 40\n\n                                                    },\n                                                    title: {\n                                                        text: '',\n                                                        align: 'left'\n                                                    },\n                                                    xaxis: {\n                                                        type: 'datetime',\n                                                    },\n                                                    yaxis: {\n                                                        tooltip: {\n                                                            enabled: true\n                                                        }\n                                                    }\n                                                }}\n                                                series={[{\n                                                    data: sectorItem.candleChartData\n\n                                                }]}\n                                                type=\"candlestick\"\n                                    \n                                            /> : \"\"} */}\n\n\n                                                {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\n                                                </Grid>\n                                            </Grid>\n                                            */}\n\n\n                                            </Paper>\n\n\n                                        </Grid>\n                                    ))\n                                    }\n                                </Grid>\n\n                            </Paper>\n                        </Grid> : \"\"\n\n                    )) : \"\"}\n\n\n                    <Table id=\"tabledata\" aria-label=\"a dense table\" stickyHeader size=\"small\" >\n                        <TableBody hover style={{whiteSpace: \"nowrap\" }} >\n\n\n                            {this.state.switchToListViewFlag && this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                                indexdata.stockList ? <TableRow hover={true} key={index}>\n                                    <TableCell>\n                                        <Typography variant=\"body1\" >\n                                          {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)\n                                            {/* &nbsp; {indexdata.time} */}\n                                        </Typography>\n                                    </TableCell>\n                                   \n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n                                        <TableCell style={{ textAlign: \"left\", }} >\n                                            <div style={{padding:\"5px\"}}> \n                                              <Button size=\"small\" onClick={() => this.showCandleChartPopUp(sectorItem.symbol)}>\n                                                  <span style={{ background: this.getPercentageColor(sectorItem.iislPercChange)}}>  <b>{i + 1}.</b> {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%) </span>\n                                                  <span title=\"last 5 days 5min big movement  maximum count\">&nbsp;{this.get5DaysMoveCount(sectorItem.symbol)}  </span> \n                                                  \n                                                  {/* <span title=\"Delivery Info\">&nbsp;{this.getDeliveryInfo(sectorItem.symbol)}  </span>  */}\n\n                                                  \n                                            </Button>  \n\n                                            </div>\n\n\n                                        </TableCell>\n                                    ))\n                                    }\n\n                                </TableRow>\n                                : \"\"\n\n                            )) : ''}\n\n\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Fast Movement\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 5 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 5 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n      \n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n\n        if(!isfound.length){\n\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  ); \n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                    console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                            var upsidecount = 0, downsidecount = 0, startingRsiupside = lastRsiValue[2], startingRsiDownside = lastRsiValue[2];\n                            lastRsiValue.forEach((element, i) => {\n                                if (i > 2 && element >= 55 && element <= 65) {\n                                    if (startingRsiupside <= element) {\n                                        startingRsiupside = element;\n                                        upsidecount += 1;\n                                    }\n                                }\n\n                                if (i > 2 && element >= 35 && element <= 45) {\n                                    if (element <= startingRsiDownside) {\n                                        startingRsiDownside = element;\n                                        downsidecount += 1;\n                                    }\n                                }\n                            });\n\n                            var volumeUpside = valumeData[2], volUpCount =0;                          \n                            valumeData.forEach((element, i) => {\n                                if (i > 2 && volumeUpside < element) {\n                                    volumeUpside = element;\n                                    volUpCount += 1;\n                                }\n                            });\n\n                            console.log(watchList[index].symbol, \"valumeData\", valumeData, );\n\n                            console.log(watchList[index].symbol, \"last continue rsi\", upsidecount);\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" RSI rising :\" + upsidecount });\n                        \n\n                            if (upsidecount >= 2 || downsidecount >= 2) {\n                                if (this.state.BBBlastType == 'BBBlastOnly') {\n                                    if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                        let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"BUY\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM: Buy \" + watchList[index].symbol;\n                                    }\n                                    if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                        var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                       let data = {\n                                            symbol: watchList[index].symbol,\n                                            token: watchList[index].token,\n                                            ltp: LtpData.ltp,\n                                            perChange: perChange,\n                                            RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                            RSI: lastRsiValue,\n                                            VWAP: vwap(vwapdata),\n                                            BB: bbvlastvalue,\n                                            candleChartData: candleChartData,\n                                            lightcandleChartData: lightcandleChartData,\n                                            foundAt : candleData && candleData[candleData.length-1][0],\n                                            orderType: \"SELL\",\n                                            name: watchList[index].name,\n                                        }\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.updateToLocalStorage(data); \n\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                    }\n                                } else {\n\n                                    let timeDuration = this.getTimeFrameValue('ONE_DAY');\n                                    var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n                                    var startDateforDaily = moment(new Date()).subtract(time);\n                                    var dataDay = {\n                                        \"exchange\": watchList[index].exch_seg,\n                                        \"symboltoken\": watchList[index].token,\n                                        \"interval\": 'ONE_DAY',\n                                        \"fromdate\": moment(startDateforDaily).format(format1),\n                                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                                    }\n                                    AdminService.getHistoryData(dataDay).then(resd => {\n                                        let histdatad = resolveResponse(resd, 'noPop');\n                                        var DSMA = '';\n                                        if (histdatad && histdatad.data && histdatad.data.length) {\n                                            var candleDatad = histdatad.data;\n                                            var closeingDatadaily = [];\n                                            candleDatad.forEach((element, loopindex) => {\n                                                closeingDatadaily.push(element[4]);\n                                            });\n\n                                            DSMA = SMA.calculate({ period: 20, values: closeingDatadaily });\n\n                                            var DSMALastValue = DSMA && DSMA[DSMA.length - 1];\n                                            console.log(watchList[index].symbol, \"DSMA\", DSMALastValue);\n\n                                            if (LtpData.ltp > DSMALastValue && bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                \n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"BUY\",\n                                                    name: watchList[index].name,\n                                                    \n                                                }; \n                                                \n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB  buy');\n                                                window.document.title = \"FM: Buy \" + watchList[index].symbol;\n\n                                            }\n                                            if (LtpData.ltp < DSMALastValue && bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                                let data = {\n                                                    symbol: watchList[index].symbol,\n                                                    token: watchList[index].token,\n                                                    ltp: LtpData.ltp,\n                                                    perChange: perChange,\n                                                    RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                                    RSI: lastRsiValue,\n                                                    VWAP: vwap(vwapdata),\n                                                    BB: bbvlastvalue,\n                                                    DSMALastValue: DSMALastValue,\n                                                    candleChartData: candleChartData,\n                                                    lightcandleChartData: lightcandleChartData,\n                                                    foundAt : candleData && candleData[candleData.length-1][0],\n                                                    orderType: \"SELL\",\n                                                    name: watchList[index].name,\n                                                }\n                                                foundData.push(data)\n                                                this.setState({ findlast5minMovement: foundData });\n                                                this.updateToLocalStorage(data); \n\n                                                this.speckIt(watchList[index].symbol + ' BB sell');\n                                                window.document.title = \"FM: Sell \" + watchList[index].symbol;\n                                            }\n                                        }\n\n\n                                    });\n\n                                }\n                            }\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem>\n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n                                    \n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY 50\",\n            totalStockToWatch: 0,\n            timeFrame: \"FIFTEEN_MINUTE\",\n            chartStaticData: [],\n            BBBlastType : \"BBStrongBreakout\",\n            qtyToTake:'',\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"FM2\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n        //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral = setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());\n            if (time.getMinutes() % 2 === 0) {\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());\n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({\n                    stop10bbSearch:\n                        setInterval(() => {\n                            console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());\n                            if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n                                this.find10MinBBBlast();\n                            }\n                        }, 60000 * 2 + 70000)\n                });\n\n                clearInterval(tostartInteral);\n            }\n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n\n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n    onChangeQty = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue = (timeFrame) => {\n\n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n        \n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\")\n                    return \"18:21:00\";\n                else\n                    return \"00:21:00\";\n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\")\n                    return \"19:41:00\";\n                else\n                    return \"01:41:00\";\n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\")\n                    return \"21:21:00\";\n                else\n                    return \"03:21:00\";\n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\")\n                    return \"23:01:00\";\n                else\n                    return \"05:01:00\";\n                break;\n            case 'THIRTY_MINUTE':\n                return \"84:01:00\";\n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\";\n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    updateToLocalStorage =(row)=>{\n\n        let foundAt = new Date(row.foundAt).toLocaleString();\n       var isfound = this.state.fastMovementList.filter(element => (element.token == row.token && element.foundAt == foundAt));\n       console.log(\"isfound\", isfound); \n        if(!isfound.length){\n            var updateData = {\n                token: row.token, \n                foundAt: foundAt, \n                ltp: row.ltp, \n                symbol: row.symbol, \n                nc:  row.perChange.toFixed(2),\n                orderType: row.orderType\n            }\n            this.state.fastMovementList.push(updateData); \n            //this.setState({ fastMovementList: [..., updateData] });\n            localStorage.setItem(\"fastMovementList\", JSON.stringify(this.state.fastMovementList)  );\n            return true; \n          \n        }else{\n            return false;\n        }\n\n    }\n\n    find10MinBBBlast = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '', findlast5minMovement: [] });\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Scaning\" });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(\"100:00:00\");  //22:00:00\" for last day  2hours  timeDuration\n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": watchList[index].exch_seg,\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [],lightcandleChartData=[], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n\n                        var time = { year: new Date(element[0]).getFullYear() ,month: new Date(element[0]).getMonth() ,day: new Date(element[0]).getDate() }\n                      \n                    //    { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                        lightcandleChartData.push({\n                            x: new Date(element[0]).getTime(),\n                            y:  (element[2] + element[3] + element[4]) / 3\n                          });\n                           \n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                   // { time: '2018-10-19', value: 19103293.00, color: 'rgba(0, 150, 136, 0.8)' },\n\n                    var sma = SMA.calculate({ period: 20, values: closeingData });\n                 //   console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI);\n\n                    // console.log(watchList[index].symbol, \"Rsi\", inputRSI, lastRsiValue);\n                    // console.log(watchList[index].symbol, \"vwap\", vwapdata, vwap(vwapdata));\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                 //   console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n\n                    var bbvlastvalue = bb[bb.length - 1];\n                    if (bbvlastvalue) {\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2);\n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2);\n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2);\n\n                    }\n                    var dataltp = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n\n                    AdminService.getLTP(dataltp).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                            lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length);\n\n                        \n                            // var volumeUpside = valumeData[2], volUpCount =0;                          \n                            // valumeData.forEach((element, i) => {\n                            //     if (i > 2 && volumeUpside < element) {\n                            //         volumeUpside = element;\n                            //         volUpCount += 1;\n                            //     }\n                            // });\n\n                            this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() + \" Searching\"  });\n                        \n                            let isFound = false; \n\n                            if (this.state.BBBlastType == 'BBStrongBreakout') {\n                                if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper && candleData[candleData.length-1][2] == candleData[candleData.length-1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt : candleData && candleData[candleData.length-1][0],\n                                        orderType: \"BUY\",\n                                        name: watchList[index].name,\n                                    }\n                                   \n                                    if(this.updateToLocalStorage(data)){\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB  buy');\n                                        window.document.title = \"FM2: Buy \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" BUY Eligible\" });\n                                    }\n                                \n                                } else if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower && candleData[candleData.length-1][3] == candleData[candleData.length-1][4]) {\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                   let data = {\n                                        symbol: watchList[index].symbol,\n                                        token: watchList[index].token,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        RSIValue: lastRsiValue[lastRsiValue.length - 1],\n                                        RSI: lastRsiValue,\n                                        VWAP: vwap(vwapdata),\n                                        BB: bbvlastvalue,\n                                        candleChartData: candleChartData,\n                                        lightcandleChartData: lightcandleChartData,\n                                        foundAt : candleData && candleData[candleData.length-1][0],\n                                        orderType: \"SELL\",\n                                        name: watchList[index].name,\n                                    }\n                                    if(this.updateToLocalStorage(data)){\n                                        foundData.push(data)\n                                        this.setState({ findlast5minMovement: foundData });\n                                        this.speckIt(watchList[index].symbol + ' BB sell');\n                                        window.document.title = \"FM2: Sell \" + watchList[index].symbol;\n                                        this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" SELL Eligible\" });\n                                    }\n                                   \n                                }else{\n                                    this.setState({ findlast5minMovementUpdate: index + 1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() +   \" Not Eligible\" });\n                                }\n                            }\n\n\n\n\n                        }\n\n                    })\n\n\n\n\n\n\n\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 600));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone = (order) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n        //  this.setState({ [spineerId]: order.status}); \n\n\n        console.log(\"order executed\", order);\n\n    }\n\n\n\n    handleClick = (row, type, spinnerIndex) => {\n\n\n        console.log(row);\n        if (row.token && row.symbol) {\n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol, \n                    qtyToTake : this.state.qtyToTake\n                }\n                console.log(symbolInfo); \n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone );\n                this.setState({ [spinnerIndex]: false });\n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true });\n                var symbolInfo = {\n                    token: row.token,\n                    symbol: row.symbol,\n                    qtyToTake : this.state.qtyToTake\n                }\n                console.log(symbolInfo); \n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false });\n            }\n        } else {\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            &nbsp;BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length})\n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={1} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.BBBlastType} name=\"BBBlastType\" onChange={this.onChangeWatchlist}>\n                                {/* <MenuItem value={'BBBlastOnly'}>{'BB Blast'}</MenuItem>\n                                <MenuItem value={'BBBlastDaily'}>{'BB Blast Daily'}</MenuItem> */}\n                                <MenuItem value={'BBStrongBreakout'}>{'BB Strong Breakout'}</MenuItem>\n\n                                \n\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.find10MinBBBlast()}>Start</Button>\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.stopSearching()}>Stop</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}%) </b></Typography>\n\n                                {/* <LightChart candleData={row.candleChartData.length} />  */}\n                                \n\n                                {/* {row.lightcandleChartData.length > 0 ?  <div id=\"showchart\"> \n                                    <LightChartCom ChartData={{lightcandleChartData: row.lightcandleChartData.slice(Math.max(row.candleChartData.length - 10, 1)), volumeData : this.state.volumeData}}/>\n                                </div>\n                                : \"\"} */}\n\n                                {row.candleChartData.length > 0 ?  <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData.slice(Math.max(row.candleChartData.length - 10, 1))\n                                    }, \n                                    // {\n                                    //     name: 'line',\n                                    //     type: 'line',\n                                    //     data: [\n                                    //         row.lightcandleChartData\n                                    //     ]\n                                    //   }\n                                \n                                    ]}\n                                   \n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n\n                                    \n\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n\n\n                                    {row.DSMALastValue ? <Grid item xs={12} sm={12} style={{ color: row.ltp > row.DSMALastValue ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        Daily SMA: {row.DSMALastValue} {row.ltp > row.DSMALastValue ? \"BUY\" : \"SELL\"}\n                                    </Grid> : \"\"}\n                                    <Grid item xs={12} sm={12} style={{ color: row.ltp > row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\" }}>\n                                        VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n\n                                        RSI: {row.RSI.map((item, j) => (\n                                            item >= 60 ? <span style={{ color: 'green', fontWeight: \"bold\" }}> {item} &nbsp;</span> : <span style={{ color: item <= 40 ? 'red' : \"\", fontWeight: \"bold\" }}> {item} &nbsp;</span>\n                                        ))}\n\n\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                        BB\n                                        &nbsp; <span style={{ color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\" }}>Upper: {row.BB.upper}</span>\n                                        &nbsp; Middle: {row.BB.middle}\n                                        &nbsp; <span style={{ color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\" }}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>\n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item>\n                                    <TextField label=\"Qty\" type=\"number\" name=\"qtyToTake\" value={this.state.qtyToTake} onChange={this.onChangeQty} />\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\n\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true, \n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake:'',\n            BBBlastType : \"BBBlastOnly\",\n            fastMovementList:  localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            liveBidsList :  [],  //localStorage.getItem('liveBidsList') && JSON.parse(localStorage.getItem('liveBidsList')) || [],\n            sortedType : \"pChange\"\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        setInterval(() => {\n            this.checkLiveBids();\n        }, 10 * 60000);\n\n        this.checkLiveBids(); \n\n       \n    }\n\n   \n \n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkLiveBids();\n\n        });\n    }\n\n\n    checkLiveBids = async() => {\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({liveBidsList : [] });\n\n\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n          \n            AdminService.checkLiveBids(row.name).then(resd => {\n                // let histdatad = resolveResponse(resd, 'noPop');\n                \n                console.log(\"bid\",resd.data.data ); \n\n                // adhocMargin: \"0.48\"\n                // applicableMargin: \"19.00\"\n                // averagePrice: \"705.27\"\n                // basePrice: \"717.15\"\n                // bcEndDate: \"-\"\n                // bcStartDate: \"-\"\n                // buyPrice1: \"710.60\"\n                // buyPrice2: \"710.55\"\n                // buyPrice3: \"710.50\"\n                // buyPrice4: \"710.45\"\n                // buyPrice5: \"710.40\"\n                // buyQuantity1: \"6\"\n                // buyQuantity2: \"50\"\n                // buyQuantity3: \"33\"\n                // buyQuantity4: \"153\"\n                // buyQuantity5: \"100\"\n                // change: \"-6.55\"\n                // closePrice: \"0.00\"\n                // cm_adj_high_dt: \"28-SEP-21\"\n                // cm_adj_low_dt: \"28-SEP-20\"\n                // cm_ffm: \"4,96,600.56\"\n                // companyName: \"ICICI Bank Limited\"\n                // css_status_desc: \"Listed\"\n                // dayHigh: \"710.95\"\n                // dayLow: \"701.30\"\n                // deliveryQuantity: \"55,54,344\"\n                // deliveryToTradedQuantity: \"63.08\"\n                // exDate: \"29-JUL-21\"\n                // extremeLossMargin: \"3.50\"\n                // faceValue: \"2.00\"\n                // high52: \"735.40\"\n                // indexVar: \"-\"\n                // isExDateFlag: false\n                // isinCode: \"INE090A01021\"\n                // lastPrice: \"710.60\"\n                // low52: \"349.10\"\n                // marketType: \"N\"\n                // ndEndDate: \"-\"\n                // ndStartDate: \"-\"\n                // open: \"707.35\"\n                // pChange: \"-0.91\"\n                // previousClose: \"717.15\"\n                // priceBand: \"No Band\"\n                // pricebandlower: \"645.45\"\n                // pricebandupper: \"788.85\"\n                // purpose: \"DIVIDEND - RS 2 PER SHARE\"\n                // quantityTraded: \"88,05,883\"\n                // recordDate: \"30-JUL-21\"\n                // secDate: \"29-Sep-2021 14:00:00\"\n                // securityVar: \"15.02\"\n                // sellPrice1: \"710.65\"\n                // sellPrice2: \"710.70\"\n                // sellPrice3: \"710.75\"\n                // sellPrice4: \"710.80\"\n                // sellPrice5: \"710.85\"\n                // sellQuantity1: \"1,382\"\n                // sellQuantity2: \"719\"\n                // sellQuantity3: \"1,217\"\n                // sellQuantity4: \"4,159\"\n                // sellQuantity5: \"793\"\n                // series: \"EQ\"\n                // surv_indicator: \"-\"\n                // symbol: \"ICICIBANK\"\n                // totalBuyQuantity: \"10,31,358\"\n                // totalSellQuantity: \"8,75,359\"\n                // totalTradedValue: \"66,963.99\"\n                // totalTradedVolume: \"94,94,802\"\n\n                if(resd.data && resd.data.data.length){\n\n                    let bidlivedata = resd.data.data[0]; \n                    // let biddata = {\n                    //     totalBuyQuantity: bidlivedata.totalBuyQuantity,\n                    //     totalSellQuantity: bidlivedata.totalSellQuantity,\n                    //     deliveryToTradedQuantity: bidlivedata.deliveryToTradedQuantity,\n                    //     symbol : bidlivedata.symbol, \n                    //     orderType: bidlivedata.totalBuyQuantity + \"|\" + bidlivedata.totalSellQuantity, \n                    //     nc : bidlivedata.pChange, \n                    //     ltp : bidlivedata.lastPrice, \n                    // }\n \n                    bidlivedata.quantityTraded = bidlivedata.quantityTraded != '-' ?  parseFloat(bidlivedata.quantityTraded.split(\",\").join('')) : \"-\"; \n                    bidlivedata.deliveryQuantity =  bidlivedata.deliveryQuantity != '-' ?  parseFloat(bidlivedata.deliveryQuantity.split(\",\").join('')) : \"-\";  \n                    \n\n                    bidlivedata.totalBuyQuantity =  bidlivedata.totalBuyQuantity != '-' ?  parseFloat(bidlivedata.totalBuyQuantity.split(\",\").join('')) : \"-\";  \n\n                    bidlivedata.totalSellQuantity =  bidlivedata.totalSellQuantity != '-' ?  parseFloat(bidlivedata.totalSellQuantity.split(\",\").join('')) : \"-\";  \n                    bidlivedata.totalTradedVolume =  bidlivedata.totalTradedVolume != '-' ?  parseFloat(bidlivedata.totalTradedVolume.split(\",\").join('')) : \"-\";  \n                    bidlivedata.totalTradedValue =  bidlivedata.totalTradedValue != '-' ?  parseFloat(bidlivedata.totalTradedValue.split(\",\").join('')) : \"-\";  \n\n                    \n                    this.state.liveBidsList.sort(function (a, b) {\n                        return b.pChange - a.pChange;\n                    });\n\n\n\n                    if(bidlivedata.totalBuyQuantity/bidlivedata.totalSellQuantity > 1.25){\n                        CommonMethods.speckIt(bidlivedata.symbol + \" buying bid \" + (bidlivedata.totalBuyQuantity/bidlivedata.totalSellQuantity ).toFixed(2) +\" of seller\");\n                        bidlivedata.highlight = true; \n                    }\n\n                    this.setState({ liveBidsList: [...this.state.liveBidsList, bidlivedata] , lastUpdateTime : resd.data.lastUpdateTime}, function(){\n                        \n                        localStorage.setItem(\"liveBidsList\", JSON.stringify(this.state.liveBidsList)); \n                        window.document.title = \"Del: \" + this.state.liveBidsList[0].symbol;\n\n\n                    });\n    \n        \n                }\n                \n            });\n            await new Promise(r => setTimeout(r, 200));  \n        }\n   \n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat =(str)=> {\n        if(!isNaN(str)){\n            return   \"(\" + (str/100000).toFixed(2)+ \"L)\"; \n        }\n           \n        \n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn =(type)=>{\n\n        this.state.liveBidsList.sort(function (a, b) {\n            return b[type] - a[type];\n        });\n\n        this.setState({liveBidsList : this.state.liveBidsList, sortedType: type});\n\n    }\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n     \n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                                     <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                       {this.state.selectedWatchlist} ({this.state.liveBidsList.length}) updated at {this.state.lastUpdateTime}\n                                    </Typography> \n\n                                    <span>Sorted By:  {this.state.sortedType} </span>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    \n\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkLiveBids()}>Refresh</Button>\n                    </Grid>\n\n                </Grid>\n\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                              \n                                     <TableCell   align=\"left\"><Button  onClick={() => this.sortByColumn(\"pChange\")}> Symbol</Button> </TableCell>\n                                     <TableCell  align=\"center\">Average Price</TableCell>\n                                     <TableCell  align=\"center\"><Button onClick={() => this.sortByColumn(\"quantityTraded\")}> Quantity Traded</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"deliveryQuantity\")}> Delivery Quantity</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button title={\"Delivery To Traded Quantity\"} onClick={() => this.sortByColumn(\"deliveryToTradedQuantity\")}> Del To Traded Qty%</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalBuyQuantity\")}> Total Buy Quantity</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalSellQuantity\")}> Total Sell Quantity</Button>  </TableCell>\n\n\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedVolume\")}> Total Traded Volume</Button>  </TableCell>\n                                    <TableCell  align=\"center\" ><Button onClick={() => this.sortByColumn(\"totalTradedValue\")}> Total Traded Value(L)</Button>  </TableCell>\n\n                                    <TableCell  align=\"center\">Day Open</TableCell>\n                                    <TableCell  align=\"center\">Day High</TableCell>\n                                    <TableCell  align=\"center\">Day Low</TableCell>\n                                    <TableCell  align=\"center\">Previous Close</TableCell>\n\n                \n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n\n                            {this.state.liveBidsList ? this.state.liveBidsList.map((row, i)  => (\n                                <TableRow hover key={i} style={{ background :this.getPercentageColor(row.pChange)}}>\n                                    \n                                    <TableCell  align=\"left\">{row.symbol} {row.lastPrice} ({row.pChange}%)</TableCell>\n                                    <TableCell  align=\"left\">{row.averagePrice}</TableCell>\n\n                                    \n                                    <TableCell  align=\"center\">{row.quantityTraded} {this.convertToFloat(row.quantityTraded)}</TableCell>\n                                    <TableCell  align=\"center\">{row.deliveryQuantity} {this.convertToFloat(row.deliveryQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.deliveryToTradedQuantity}%</TableCell>\n                                    <TableCell style={{background: row.highlight ? \"lightgray\" : \"\"}} align=\"center\">{row.totalBuyQuantity} {this.convertToFloat(row.totalBuyQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalSellQuantity} {this.convertToFloat(row.totalSellQuantity)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalTradedVolume} {this.convertToFloat(row.totalTradedVolume)}</TableCell>\n                                    <TableCell  align=\"center\">{row.totalTradedValue}Cr</TableCell>\n\n                                    <TableCell  align=\"center\">{row.open}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayHigh}</TableCell>\n                                    <TableCell  align=\"center\">{row.dayLow}</TableCell>\n                                    <TableCell  align=\"center\">{row.previousClose}</TableCell>\n\n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport * as moment from 'moment';\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonMethods from \"../../utils/CommonMethods\";\nimport LightChart from \"./LightChart\";\nimport LightChartCom from \"./LightChartCom\";\nimport Parser from 'html-react-parser';\n\n\n\n\nclass OrderBook extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData: [],\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            selectAllzone: 'Select All',\n            triggerprice: 0,\n            price: 0,\n            lotsize: 0,\n            firstTimeFlag: true,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0,\n            timeFrame: \"TEN_MINUTE\",\n            chartStaticData: [],\n            qtyToTake: '',\n            BBBlastType: \"BBBlastOnly\",\n            fastMovementList: localStorage.getItem('fastMovementList') && JSON.parse(localStorage.getItem('fastMovementList')) || [],\n            sortedType: \"isActivated\",\n            slowMotionStockList: localStorage.getItem('slowMotionStockList') && JSON.parse(localStorage.getItem('slowMotionStockList')) || []\n\n        }\n    }\n\n\n\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n            var tostartInteral = setInterval(() => {\n                var time = new Date();\n                if (time.getMinutes() % 5 === 0) {\n                    setTimeout(() => {\n                        this.checkSlowMotionCheckLive();\n                    }, 70000);\n                    setInterval(() => {\n                        this.checkSlowMotionCheckLive();\n                    }, 60000 * 5 + 70000);\n                    clearInterval(tostartInteral);\n                }\n            }, 1000);\n\n        }\n\n    }\n\n\n\n    onChangeWatchlist = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.checkSlowMotion();\n\n        });\n    }\n\n\n    checkSlowMotion = async () => {\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n\n\n        this.setState({ scanUpdate: \"\" });\n        for (let index = 0; index < watchList.length; index++) {\n            const row = watchList[index];\n\n            var isfound = this.state.slowMotionStockList.filter(item => item.token == row.token);\n            if (!isfound.length) {\n                this.checkSlowMotionStock(row.token, row, index + 1);\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n        }\n\n    }\n\n    checkSlowMotionStock = (token, stock, stockindex) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var time = moment.duration(\"240:00:00\");  //22:00:00\" for last day  2hours \n        var startDate = moment(new Date()).subtract(time);\n        var dataDay = {\n            \"exchange\": 'NSE',\n            \"symboltoken\": token,\n            \"interval\": 'FIVE_MINUTE',\n            \"fromdate\": moment(startDate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n        AdminService.getHistoryData(dataDay).then(resd => {\n            let histdatad = resolveResponse(resd, 'noPop');\n            var DSMA = '';\n            if (histdatad && histdatad.data && histdatad.data.length) {\n                var candleDatad = histdatad.data;\n                var closeingDatadaily = [], valumeSum = 0;\n\n                var bigCandleCount = 0;\n\n                for (let index = candleDatad.length - 375; index < candleDatad.length; index++) {\n                    const element = candleDatad[index];\n\n                    if (element) {\n                        var per = (element[4] - element[1]) * 100 / element[1];\n\n                        if (per >= 0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                        if (per <= -0.4) {\n                            bigCandleCount += 1;\n\n                        }\n                    }\n                }\n                console.log(\"Totalcount\", stock.name, bigCandleCount);\n\n                this.setState({ scanUpdate: \"Scan: \" + stockindex + \". \" + stock.name + \" maxCount: \" + bigCandleCount })\n\n                if (bigCandleCount <= 15) {\n\n                    var isfound = this.state.slowMotionStockList.filter(item => item.token == token);\n                    if (!isfound.length) {\n                        stock.bigCandleCount = bigCandleCount;\n                        stock.sectorName = this.state.selectedWatchlist;\n\n                        this.setState({ slowMotionStockList: [...this.state.slowMotionStockList, stock] }, function () {\n                            localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                        });\n                    }\n        \n\n                   \n                }\n            }\n\n        });\n    }\n\n    checkSlowMotionCheckLive = async () => {\n\n        for (let index = 0; index < this.state.slowMotionStockList.length; index++) {\n            const row = this.state.slowMotionStockList[index];\n\n            if (!row.isActivated) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var time = moment.duration(\"30:00:00\");  //22:00:00\" for last day  2hours \n                var startDate = moment(new Date()).subtract(time);\n                var dataDay = {\n                    \"exchange\": 'NSE',\n                    \"symboltoken\": row.token,\n                    \"interval\": 'FIVE_MINUTE',\n                    \"fromdate\": moment(startDate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n                AdminService.getHistoryData(dataDay).then(resd => {\n                    let histdatad = resolveResponse(resd, 'noPop');\n                    var DSMA = '';\n                    if (histdatad && histdatad.data && histdatad.data.length) {\n                        var candleDatad = histdatad.data;\n                        var closeingDatadaily = [], valumeSum = 0;\n\n                        var bigCandleCount = 0, midBullishCount = 0, bullishCount = 0, activationTime = \"\", activationPrice = 0;\n\n                        for (let index = candleDatad.length - 3; index < candleDatad.length; index++) {\n                            const element = candleDatad[index];\n\n                            if (element) {\n\n                                var per = (element[4] - element[1]) * 100 / element[1];\n                                if (per >= 1) {\n                                    bigCandleCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0.5) {\n                                    midBullishCount += 1;\n                                    activationPrice = element[2];\n                                    activationTime = new Date(element[0]).toLocaleString();\n                                }\n                                if (per >= 0) {\n                                    bullishCount += 1;\n                                }\n\n                            }\n                        }\n\n                        let update = Parser(\"Update: \" + (index + 1) + \".\" + row.name + \" large(1%): <b>\" + bigCandleCount +\"</b> mid(0.5%): <b>\"+ midBullishCount+\"</b> small(>0%): <b>\"+ bullishCount+\"</b>\" ); \n                        this.setState({ scanUpdate:  update})\n                        console.log(row.symbol, bigCandleCount, midBullishCount, bullishCount);\n\n\n                        if (bigCandleCount >= 1 || (midBullishCount >= 1 && bullishCount >= 2)) {\n\n                            row.isActivated = true;\n                            row.activationTime = activationTime;\n                            row.activationPrice = activationPrice;\n\n                            window.document.title = \"SM: \" + row.symbol;\n                            console.log('hey, slow motion stock' + row.symbol + \" broken\");\n\n                            this.speckIt('hey, slow motion stock' + row.symbol + \" broken\");\n\n                            this.setState({ slowMotionStockList: this.state.slowMotionStockList }, function () {\n                                this.sortByColumn(\"isActivated\");\n                                localStorage.setItem(\"slowMotionStockList\", JSON.stringify(this.state.slowMotionStockList));\n                            })\n                        }\n                    }\n\n                });\n                await new Promise(r => setTimeout(r, 310));\n            }\n\n\n        }\n\n    }\n\n    deleteAllScan = () => {\n\n        if(window.confirm(\"Are you sure to delete all scan stocks?\")){\n            this.setState({ slowMotionStockList: []})\n            localStorage.setItem(\"slowMotionStockList\",[]);\n        }\n     \n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    convertToFloat = (str) => {\n        if (!isNaN(str)) {\n            return \"(\" + (str / 100000).toFixed(2) + \"L)\";\n        }\n\n\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n    sortByColumn = (type) => {\n\n        this.state.slowMotionStockList.sort(function (a, b) {\n            if (type == \"isActivated\" && a.isActivated) {\n                return (a.isActivated === b.isActivated) ? 0 : a ? -1 : 1;\n            } else {\n                return b[type] - a[type];\n            }\n        });\n\n        this.setState({ slowMotionStockList: this.state.slowMotionStockList, sortedType: type });\n\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n\n\n                {window.location.hash !== \"#/position\" ? <PostLoginNavBar /> : \"\"}\n\n\n\n                <Grid direction=\"row\" alignItems=\"center\" container>\n                    <Grid item xs={12} sm={12} >\n\n                        <Paper style={{ padding: \"10px\" }} >\n\n                            <Grid justify=\"space-between\"\n                                container spacing={1}>\n\n                                <Grid item xs={12} sm={4} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                      Slow Motion ({this.state.slowMotionStockList.length})  <DeleteIcon  onClick={() => this.deleteAllScan()}/>  found at {new Date().toLocaleString()}\n                                    </Typography>\n                                    {this.state.sortedType ? <> <b> Sorted By: </b> {this.state.sortedType}  </> : \"\"}\n\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={2} >\n                                    <FormControl style={styles.selectStyle} >\n                                        <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                        <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                            <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                            {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                                <MenuItem value={element}>{element}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n\n                                <Grid item xs={12} sm={4} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotion()}>Scan</Button>\n                            \n                                    {this.state.scanUpdate ? <>{this.state.scanUpdate}  </> : \"\"}\n                                    </Grid>\n\n                                <Grid item xs={12} sm={2} >\n                                    <Button variant=\"contained\" style={{ marginRight: '20px' }} onClick={() => this.checkSlowMotionCheckLive()}>Refresh</Button>\n                                </Grid>\n\n                                \n\n                            </Grid>\n\n\n                            <Table size=\"small\" style={{ width: \"100%\" }} aria-label=\"sticky table\" >\n\n                                <TableHead style={{ whiteSpace: \"nowrap\" }} variant=\"head\">\n                                    <TableRow variant=\"head\">\n                                        <TableCell align=\"left\">Sr.</TableCell>\n\n                                        <TableCell align=\"left\"><Button onClick={() => this.sortByColumn(\"pchange\")}>Symbol</Button> </TableCell>\n                                        <TableCell align=\"center\">Sector</TableCell>\n\n                                        <TableCell align=\"center\">Max Count</TableCell>\n\n\n\n                                        <TableCell align=\"center\"><Button onClick={() => this.sortByColumn(\"isActivated\")}>Is Activated</Button></TableCell>\n                                        <TableCell align=\"center\">Activate Time</TableCell>\n                                        <TableCell align=\"center\">Activation Price</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n\n\n\n                                    {this.state.slowMotionStockList ? this.state.slowMotionStockList.map((row, i) => (\n                                        <TableRow hover key={i} style={{ background: row.isActivated ? \"lightgray\" : \"\" }}>\n                                            <TableCell align=\"left\">{i + 1}</TableCell>\n\n                                            <TableCell align=\"left\">{row.name}</TableCell>\n                                            <TableCell align=\"center\">{row.sectorName}</TableCell>\n                                            <TableCell align=\"center\">{row.bigCandleCount}</TableCell>\n\n                                            <TableCell align=\"center\">{row.isActivated ? \"Yes\" : \"No\"}</TableCell>\n                                            <TableCell align=\"center\">{row.activationTime}</TableCell>\n                                            <TableCell align=\"center\">{row.activationPrice}</TableCell>\n\n\n                                        </TableRow>\n                                    )) : <Spinner />}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </Grid>\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\nimport NiftyView from \"./MyTrade/NiftyView\";\nimport BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\nimport Test from \"./MyTrade/Test\";\n\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\n\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\nimport FindFastMovement2 from \"./MyTrade/FindFastMovement2\";\n\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\nimport DeliveryData from \"./MyTrade/DeliveryData\";\nimport SlowMotion from \"./MyTrade/SlowMotion\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    <Route path=\"/nifty-view\" component={NiftyView}/>\n                    <Route path=\"/bn-view\" component={BankNiftyView}/>\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\n\n\n                    \n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n                    <Route path=\"/find-fast-movement2\" component={FindFastMovement2}/>\n\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\n                    <Route path=\"/delivery\" component={DeliveryData}/>\n                    <Route path=\"/slow-motion\" component={SlowMotion}/>\n                    <Route path=\"/test\" component={Test}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}