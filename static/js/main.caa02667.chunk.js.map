{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/PostLoginNavbar.js","utils/Notify.js","utils/ResponseHandler.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Orderbook.js","components/MyTrade/Position.js","components/MyTrade/Tab.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/Funds.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/AddToWatchlist.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","LoginComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","status","message","setItem","stringify","getUserData","profileRes","location","replace","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","push","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","EmojiEmotions_default","ListItemText","primary","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","res","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","_React$useState3","_React$useState4","open","setOpen","clsx","IconButton","edge","Menu_default","item","noWrap","direction","AccountCircle_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","utils_Notify","msg","toast","error","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","Notify","showSuccess","showError","Promise","reject","MaterialUIPickers","startd","Date","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","useUtils_cfb96ac9","utils","DateFnsUtils","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","sort","b","updatetime","oderbookData","modifyOrder","row","trailingstoploss","console","log","triggerprice","variety","orderid","ordertype","price","producttype","quantity","lotsize","tradingsymbol","symboltoken","exchange","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","_this2","Paper","gutterBottom","float","Table","size","TableHead","whiteSpace","TableRow","TableCell","align","TableBody","map","hover","key","toString","substring","transactiontype","orderstatus","textAlign","averageprice","fontSize","text","lib_default","Home","getCandleHistoryAndStore","asyncToGenerator","regenerator_default","mark","_callee","watchList","today","timediff","startdate","_loop","index","wrap","_context2","prev","next","toLocaleTimeString","clearInterval","candleHistoryInterval","moment","isoWeekday","subtract","element","_context","interval","fromdate","todate","getHistoryData","histdata","candleData","reverse","last10Candle","slice","symbol","findTweezerTopPatternLive","findTweezerBottomPatternLive","r","setTimeout","stop","delegateYield","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","time","high","low","close","secondCandle","diffPer","Math","round","foundData","pattenName","foundPatternList","toConsumableArray","SpeechSynthesisUtterance","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","toFixed","getStoplossFromOrderbook","forEach","stopLoss","buyavgprice","maxLossAmount","parseInt","netqty","getPositionData","_callee2","totalMaxPnL","_context3","getPosition","positionList","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","parseFloat","sellavgprice","pnl","buyqty","slData","totalsellavgprice","totalbuyavgprice","stopLossAmount","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","autoCompleteSearch","found","filter","exch_seg","orderWithFlatstoploss","getLTP","ltpPrice","ltp","stopLossPrice","TradeConfig","perTradeStopLossPer","getMinPriceAllowTick","perTradeExposureAmt","totalCapital","perTradeExposurePer","floor","orderOption","buyPrice","placeOrderMethod","catch","autoSearchList","LtpData","BankLtpltp","getStopLossPrice","_ref3","_callee3","_context4","slPrice","stoploss","_x","_x2","apply","squareoff","placeOrder","placeSLMOrder","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","beginningTime","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","onSelectItem","values","autoSearchTemp","fdata","list","updateSocketWatch","getAveragePrice","orderId","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","getElementById","click","updateOrderList","slmOption","modifyOrderMethod","minPrice","wholenumber","decimal","getPercentage","avgPrice","percentChange","lastTriggerprice","sqrOffbeginningTime","sqrOffendTime","isBetween","symbolname","InstrumentLTP","endTime","currentTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","setInterval","getMinutes","getTime","_this3","totalDayLoss","dailyLossPer","abs","getNSETopStock","scandata","result","_loop2","isFound","j","symbolName","searchRes","_this4","selectedStockInteval","getSelectedStockFromDb","_loop3","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","toLocaleString","overflow","fontWeight","paddingLeft","background","rel","Orderbook","MuiTabsScroller","wsClint","w3cwebsocket","onChangePattern","fromDate","startDate","endDate","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","feedToken","firstTime_req","send","channel","symbolList","sbin","task","user","acctid","backTestAnyPattern","runningTest","patternType","abrupt","backTestNR4","backTestResult","backTestFlag","index2","next10Candle","backtestTweezerTop","backtestTweezerBottom","stockTesting","sumPercentage","last4Candle","rangeArr","firstElement","rgrangeCount","next5thCandle","perChng","foundStock","foundAt","sellEntyPrice","buyExitPrice","brokerageCharges","perChange","squareOffAt","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","slmOrderType","LoadSymbolDetails","getHistory","histCandles","InstrumentHistroy","search","deleteItemWatchlist","findIndex","splice","getNetTotalValue","ifNotBought","onmessage","decoded","atob","pako","inflate","liveData","foundLive","tk","cng","nc","foundTweezerTop","entryBelow","onerror","_req","dateParam","firstLavel","secondLavel","sumPerChange","sumBrokeragePer","netSumPerChange","sumPnlValue","sumSellEntyPrice","Autocomplete","freeSolo","disableClearable","paddingRight","option","renderInput","params","assign","InputProps","overflowY","height","Delete_default","sbinLtp","FormControl","selectStyle","htmlFor","Select","MenuItem","MaterialUIDateTimePicker","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","DialogTitle","withStyles","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","disableTypography","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","handleClose","indexSymbol","Dialog","aria-labelledby","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","dividers","stickyHeader","indexSymbolData","idata","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","resdata","speckIt","toLocaleLowerCase","innerHTML","percent","stopnview","indexTimeStamp","products","loadPackList","todayTime","getHours","getAllIndices","softedData","calendar","last","encodeURIComponent","advances","declines","unchanged","connect","App","diffData","putData","callData","timeDate","totPEOI","totCEOI","diff","dateTime","chartData","labels","datasets","fill","borderColor","index_modern","maintainAspectRatio","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","onopen","heartbeatReq","exchtime","readCsv","addtowatchlist","parsedList","SYMBOL","watchlist","watchlistCount","resMessage","counter","resetCsv","reload","multiline","rows","fullwidth","AppRouter","react_router","path","exact","MySectorTop","Chart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","RouterComponent","react_toastify","ReactDOM","render","es","src_App","querySelector"],"mappings":"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","file":"static/js/main.caa02667.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks'\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks'\t\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock'\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n             // var data = resolveResponse(res);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          //let data = resolveResponse(res);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            window.location.replace('/#/position')\n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \n\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n    <ListItem button component='a' href={\"#/livefeed\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Live Feed\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n  \n    <ListItem button component='a' href={\"#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem>\n  \n\n\n    <ListItem button component='a' href={\"#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Add to watchlist\" />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\n\nimport Button from '@material-ui/core/Button';\nimport  InvertColor from '../utils/InvertColor';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values] = React.useState({\n        acquisitionCount: '',\n        resubmitCount:''\n    });\n    \n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    // function handleClick(e) {\n    //     console.log(e.target.innerText)\n    //     //this.props.history.push('/login');\n    // }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n    \n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                        <Grid\n                                justify=\"space-between\"\n                                container\n                            >\n                        <Grid item >\n                        {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                           <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n                        </Grid>\n\n                        <Grid item >\n                        <Typography variant=\"h6\" noWrap>\n                        {localStorage.getItem('BankLtpltp')}\n                         </Typography>\n                         \n                        </Grid>\n\n                        <Grid item >\n\n                                <Grid\n                                    container\n                                    spacing={1}\n                                    direction=\"row\"\n                                    style={{ color: \"white\" }}\n                                >\n\n                    \n                             <Grid item>\n                                    <Button  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WatchLit({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n\n\n\n                            <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/livefeed\"}  color=\"secondary\">\n                                        Home\n                                    </Button>\n                              </Grid>\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/position\"}  color=\"primary\">\n                                      Position\n                                    </Button>\n                              </Grid>\n\n\n                              {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n                              \n\n\n                                <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid>\n\n                            <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid>\n\n\n                        </Grid>\n\n\n\n                        </Grid>\n\n                        </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n        \n                    <InvertColor />\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n            \n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n                \n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n // console.log(\"startDatestartDate,\",props ); \n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n          format='dd-MM-yyyy HH:mm:ss'\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n         format='dd-MM-yyyy HH:mm:ss'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        this.getTodayOrder();\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n            <Paper style={{padding:\"10px\"}} >\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Oders Details ({this.state.oderbookData.length}) \n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                            </Grid>\n                            \n                </Grid>\n            \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity}\n                    \n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                \n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                        : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                </Grid>\n                            \n               </Grid>    \n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            autoSearchList :[],\n            InstrumentLTP : {},\n            autoSearchTemp : [],\n            foundPatternList: [], \n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n        //   this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 2002)}) \n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \n        }else{\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval); \n            clearInterval(this.state.bankNiftyInterval); \n        }\n    \n        var scanendTime = moment('3:30pm', 'h:mma');\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n            \n\n            \n            var tostartInteral =   setInterval(() => {\n\n                console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n                var time = new Date(); \n                if(time.getMinutes() % 15 === 0){\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n                    \n                    setTimeout(() => {\n                        console.log(\"set timout at 70sec \", new Date());\n                        this.getCandleHistoryAndStore(); \n                    }, 70000);\n\n                    setInterval(() => {\n                        console.log(\"2st interval every 5min 10Sec\", new Date());\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n                            this.getCandleHistoryAndStore(); \n                        }\n                     }, 60000 * 15 + 70000 );  \n\n                     clearInterval(tostartInteral); \n                } \n            }, 1000);\n            \n          \n        } \n\n    this.getCandleHistoryAndStore(); \n\n    // this.getPositionData();\n    // this.getNSETopStock();\n     \n\n    //  this.getMySelectedStock();\n\n    \n\n    // setInterval(() => {\n        \n    //     var timediff = moment.duration(\"00:50:00\");\n    //     var startdate = moment(new Date()).subtract(timediff);\n    \n\n    //     var enddiff = moment.duration(\"00:01:00\");\n    //     var enddate = moment(new Date()).add(enddiff);\n\n\n    //     var data  = {\n    //         \"exchange\": \"NSE\",\n    //         \"symboltoken\": 212,\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n    //     }\n    \n    //     AdminService.getHistoryData(data).then(res => { \n    //         let histdata = resolveResponse(res,'noPop' );\n    //         var candleData = histdata.data; \n    //         candleData.reverse(); \n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n    //     }); \n\n    // }, 1000);\n\n   \n\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.state.positionInterval);\n        clearInterval(this.state.scaninterval);\n        clearInterval(this.state.bankNiftyInterval); \n    }\n\n  \n\n    getCandleHistoryAndStore = async()=> {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \n       var watchList =   localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n       const today = moment().isoWeekday();\n        var timediff = '';\n\n        \n\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\n            timediff = moment.duration(\"66:00:00\");\n        }else{\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";       \n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1) , \n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var candleData = histdata.data; \n                    candleData.reverse(); \n\n                    if(candleData && candleData.length >= 10){\n                        var last10Candle = candleData.slice(0, 10); \n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n                \n                }else{\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 350));  \n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist,symbol) => {\n\n     //   console.log(\"TweezerTop finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var lastTrendCandleLow = candleHist[9][3]; \n            var firstTrendCandleHigh = candleHist[2][2]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n           \n            //\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \n        \n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser Top', \n                            time: new Date( candleHist[0][0]).toLocaleTimeString(), \n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\n       // console.log(\"TweezerBottom finding\", symbol); \n        if(candleHist && candleHist.length > 0){\n            //candleHist = candleHist.reverse(); \n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n            var last8candleHigh = candleHist[9][2]; \n            var last8candleLow = candleHist[2][3]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n        \n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n           \n            //  \n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\n\n              \n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                      \n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \n                        var foundData = {\n                            symbol : symbol, \n                            pattenName: 'Twisser bottom', \n                            time: new Date( candleHist[0][0]).toLocaleTimeString(), \n                        }\n                     \n                        this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \n                        foundPatternList.push(foundData); \n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n                        \n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\",candleHist); \n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n                        \n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \n                        window.speechSynthesis.speak( msg);\n                    }\n                }\n            }\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n       var oderbookData = localStorage.getItem('oderbookData'); \n       oderbookData =  JSON.parse(oderbookData);\n       var stopLoss = 0; \n       var data = {}; \n       oderbookData.forEach(element => {\n        if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\n            data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \n            data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \n        }\n       });\n       return data; \n    }\n    getPositionData = async() => {\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0; \n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var positionList = data && data.data;\n             if (positionList && positionList.length>0){\n                this.setState({ positionList : positionList}); \n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\n                  positionList.forEach(element => {\n                    var percentPnL =((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \n                    todayProfitPnL+= parseFloat( element.pnl); \n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \n                    totalQtyTraded+=parseInt( element.buyqty); \n                    allbuyavgprice+=parseFloat(element.buyavgprice); \n                    allsellavgprice+=parseFloat(element.sellavgprice); \n                    element.percentPnL=percentPnL;\n                    totalPercentage+= parseFloat( percentPnL); \n                    var slData  = this.getStoplossFromOrderbook(element) ; \n                    element.stopLoss = element.totalsellavgprice === \"0.00\" ? slData.stopLoss : element.totalsellavgprice + \"(\"+ ((element.totalsellavgprice-element.totalbuyavgprice)*100/element.totalbuyavgprice).toFixed(2) + \"%)\"; \n                    element.stopLossAmount = slData.maxLossAmount; \n                    totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;                     \n                }); \n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \n                this.setState({ totalBrokerCharges: ((totalbuyvalue + totalsellvalue) * 0.25/100).toFixed(2)});                \n\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \n            }\n       })\n    }\n   \n    getNSETopStock(){\n\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n               AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                   // console.log(\"scandata\",scandata); \n            \n                    for (let index = 0; index < scandata.length; index++) {\n                            var isFound = false; \n                            for (let j = 0; j < this.state.positionList.length; j++) {\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\n                                    isFound  = true; \n                                 }\n                            }\n                           \n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                               \n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                    let searchResdata =  searchRes.data; \n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                   \n                                    if(found.length){\n                                        console.log(found[0].symbol, \"found\",found);      \n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\n                                    }\n                               })\n                             \n                            }\n                    }\n                }\n            })  \n        }\n\n    }\n\n\n    getMySelectedStock(){\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \n \n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n         totalDayLoss = -Math.abs(totalDayLoss); \n         if(this.state.todayProfitPnL < totalDayLoss) {\n             console.log(\"daily loss crossed\",totalDayLoss); \n             clearInterval(this.state.scaninterval);\n         }else{\n                AdminService.getSelectedStockFromDb().then(res => {\n                 let data = resolveResponse(res, \"noPop\");\n                 if(data.status  && data.message === 'SUCCESS'){ \n                     var scandata =  data.result;   \n                    // console.log(\"scandata\",scandata); \n             \n                     for (let index = 0; index < scandata.length; index++) {\n                             var isFound = false; \n                             for (let j = 0; j < this.state.positionList.length; j++) {\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\n                                     isFound  = true; \n                                  }\n                             }\n                            \n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\n                                \n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n \n                                     let searchResdata =  searchRes.data; \n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \n                                    \n                                     if(found.length){\n\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \n                                        selectedStockwatchList.push(found[0]); \n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                     }\n                                })\n                              \n                             }\n                     }\n                 }\n             })  \n         }\n \n     }\n\n\n    checkAndPlaceSingleOrder = (stock)=>{\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data =  res.data; \n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\n             console.log(\"stockfound\",found);  \n            if(found && found.length){\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \n            }\n       })\n    }\n\n\n    getStockOnebyOne(){\n\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \n        totalDayLoss = -Math.abs(totalDayLoss); \n        if(this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\",totalDayLoss); \n            clearInterval(this.state.scaninterval);\n        }else{\n            console.log(\"still ok\"); \n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if(data.status  && data.message === 'SUCCESS'){ \n                    var scandata =  data.result;   \n                    if(scandata && scandata.length>0){\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \n                        var isFound = false; \n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\n                                isFound  = true; \n                             }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, '+lastSeachStock; \n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \n                        }\n                    }\n                    \n                }\n            })  \n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n             var LtpData = data && data.data; \n             var ltpPrice  = LtpData.ltp\n             if(ltpPrice){ \n              \n            //  var stopLossPrice = ltp - (ltp*0.7/100);\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \n              var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken:token,\n                    buyPrice : 0,\n                    quantity: quantity, \n                    stopLossPrice: stopLossPrice\n                }\n\n              if(quantity && stopLossPrice){\n                this.placeOrderMethod(orderOption);   \n              }\n               \n            }         \n\n       }).catch((error)=>{\n            console.log(symbol, \"not found\", 'error', error);\n        })  \n    }\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n        //    console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n    }\n\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\":\"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             //console.log(LtpData);\n             if(LtpData && LtpData.ltp){\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\n             }\n            \n       })\n    }\n\n\n    getStopLossPrice = async(token, symbol) => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n      \n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             if(LtpData &&  LtpData.ltp){\n                var ltp = parseFloat(LtpData.ltp); \n                ltp  = ltp - (ltp*0.7/100);\n                var slPrice = this.getMinPriceAllowTick(ltp); \n\n                this.setState({ stoploss : slPrice});\n                return slPrice; \n             }\n           \n       })\n    }\n  \n    placeOrderMethod = (orderOption) => { \n       \n        var data = {\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\":orderOption.symboltoken,\n            \"quantity\":orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"exchange\":\"NSE\",\n            \"variety\":\"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                if(orderOption.stopLossPrice){\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n                var LtpData = ltpres && ltpres.data; \n                console.log(symbol, \" ltd data \", LtpData);\n                let quantity =0; \n                if(LtpData && LtpData.ltp){\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \n                }\n\n                \n                quantity = quantity>0 ? 1 : 0; \n                console.log(symbol, \"  quantity can be order \", quantity);\n                if(quantity){\n                    const format1 = \"YYYY-MM-DD HH:mm\";\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                    console.log(\"beginningTime\", beginningTime); \n\n                    var time = moment.duration(\"21:10:00\");\n                    var startdate = moment(new Date()).subtract(time);\n                    var data  = {\n                        \"exchange\": \"NSE\",\n                        \"symboltoken\": token ,\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                        \"fromdate\": moment(startdate).format(format1) , \n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                    }\n                \n                    AdminService.getHistoryData(data).then(res => {\n                        let histdata = resolveResponse(res,'noPop' );\n                       // console.log(\"candle history\", histdata); \n                        if(histdata && histdata.data && histdata.data.length){\n                           \n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \n                            candleData.reverse(); \n\n                            if(candleData && candleData.length>0){\n                                for (let index = 0; index < 20; index++) {\n                                    if(candleData[index]){\n                                        clossest += candleData[index][4]; //close  \n                                        lowerest += candleData[index][3];  //low\n                                        if(candleData[index][4] > highestHigh ){\n                                            highestHigh = candleData[index][4];  \n                                        }\n                                        if(lowestLow < candleData[index][3]){\n                                            lowestLow = candleData[index][3];  \n                                        }\n                                    }\n                                    \n                                }\n\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \n    \n                                var bbmiddleValue = clossest/devideLen; \n                                var bblowerValue = lowerest/devideLen; \n                                \n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \n                                stoploss = this.getMinPriceAllowTick(stoploss); \n    \n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \n                                \n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\n                            \n                                var orderOption = {\n                                    transactiontype: 'BUY',\n                                    tradingsymbol: symbol,\n                                    symboltoken:token,\n                                    buyPrice : 0,\n                                    quantity: quantity, \n                                    stopLossPrice: stoploss\n                                }\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \n                                   this.placeOrderMethod(orderOption);\n                                }else{\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                    console.log(symbol + \" its not fullfilled\"); \n                                }\n                            }\n\n                           \n                        }else{\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\n                            console.log(symbol + \" candle data emply\"); \n                        }\n                    })\n\n                }\n        })\n       // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n    onSelectItem = (event, values) =>{\n    \n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n    cancelOrderOfSame = (row) =>  {\n       \n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \n        var data = {\n            \"variety\":orderData.variety,\n            \"orderid\":orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n    squareOff = (row) =>  {\n       \n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\":row.symboltoken,\n            \"transactiontype\":row.buyqty > 0 ? 'SELL' : \"BUY\", \n            \"exchange\": row.exchange, \n            \"ordertype\": \"MARKET\", \n            \"producttype\": row.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": row.buyqty,\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n            \n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n                this.cancelOrderOfSame(row); \n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n\n            }\n        })\n       \n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res);\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \n            }\n        });\n    }\n    \n    placeSLMOrder = (slmOption) => {\n        \n        var data = {\n            \"triggerprice\":slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \n            \"exchange\": 'NSE', \n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\" : \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data); \n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n          //  console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                this.setState({ orderid : data.data && data.data.orderid });\n               // this.updateOrderList(); \n               var msg = new SpeechSynthesisUtterance();\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \n               window.speechSynthesis.speak(msg);\n\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n            }\n        })\n    }\n\n    getOpenPeningOrderId =(symboltoken) => {\n\n        var oderbookData = JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {}; \n         for (let index = 0; index < oderbookData.length; index++) {\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\n                data.orderId = oderbookData[index].orderid  \n                data.variety = oderbookData[index].variety  \n                break;\n            }\n         } \n         return data;\n     }\n    modifyOrderMethod = (row, minPrice) => {\n        //console.log(this.state.triggerprice);\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \n        console.log(\"orderid\", this.state.orderData);\n\n        var data = {\n            \"variety\" : \"STOPLOSS\",\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\":  0,\n            \"triggerprice\": parseFloat( minPrice ),\n            \"quantity\":row.buyqty,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n          \n          \n            if(data.status  && data.message ===  'SUCCESS'){\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\n              msg.text = row.tradingsymbol +' modified '+data.message\n              window.speechSynthesis.speak(msg);\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice =  minPrice.toFixed(2); \n       // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt( minPrice.split('.')[0]);\n      //  console.log(\"wholenumber\",wholenumber); \n        var decimal =  parseFloat( minPrice.split('.')[1]);\n       // console.log(\"decimal\",decimal); \n        var tickedecimal =  decimal-decimal%5; \n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \n     //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice; \n    }\n\n    getPercentage = (avgPrice,  ltp , row) =>  {\n\n        avgPrice =  parseFloat(avgPrice); \n        var percentChange = ((ltp - avgPrice)*100/avgPrice).toFixed(2); \n\n      //  console.log(row.symbolname,  'chng %',percentChange);\n         if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange > 0.7){\n                var minPrice =  avgPrice + (avgPrice * 0.1/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n         }else{\n           //var lastTriggerprice =  this.state['lastTriggerprice_'+row.symboltoken]; \n           var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \n           var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \n        //   console.log(row.symbolname, 'chng form Trigger Price',perchngfromTriggerPrice);\n           if(perchngfromTriggerPrice > 0.7){\n                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\n                minPrice = this.getMinPriceAllowTick(minPrice); \n                this.modifyOrderMethod(row, minPrice);\n           }\n\n         }\n\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\n\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\n                this.squareOff(row); \n                console.log(\"Sqr off called for\",row.symbolname);  \n            }\n            \n\n        }\n\n        return percentChange;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                     <br />\n                \n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\n                        <Grid item >\n                            <Typography variant=\"h6\" >\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={3} >\n                          <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                            </Typography> \n                        </Grid>\n\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\">\n                            <b>Total Turnover {this.state.totalTornOver} </b>\n                            </Typography> \n                        </Grid>\n                        \n                       \n                        <Grid item >\n                          <Typography component=\"h3\"  >\n                            <b> Charges</b> <b style={{color:\"#00cbcb\"}}>-{this.state.totalBrokerCharges} </b>\n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                          <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.todayProfitPnL} </b>\n                            </Typography> \n                        </Grid>\n\n                        <Grid item>\n                          <Typography component=\"h3\" >\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\n                            </Typography> \n                        </Grid>\n                        \n                        <Grid item  >\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \n                        </Grid>\n                </Grid>\n               \n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                \n\n                    <Grid item xs={12} sm={12}> \n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\n                                 \n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Trading symbol</TableCell>\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n  \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Buy Price</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Sell Price</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Bought Qty</TableCell>\n                                \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max Locked P/L</TableCell>\n\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n        \n    \n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n                           \n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {this.state.positionList ? this.state.positionList.map(row => (\n                                <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\n\n                                    <TableCell style={{paddingLeft:\"3px\"}} align=\"left\">&nbsp; <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://chartink.com/stocks/\"+row.tradingsymbol.split('-')[0]+\".html\"}>{row.tradingsymbol.split('-')[0]}</a> </TableCell>\n                                    {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                    {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n                                 \n                                    <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                    {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                    <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                    <TableCell align=\"left\">{row.buyqty}</TableCell>\n                                    <TableCell align=\"left\">{row.netqty}</TableCell>\n                                    {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                    <TableCell align=\"left\"> {row.stopLoss}</TableCell> \n                                    <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \n\n                                    \n                                    {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\n                                    <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'darkmagenta' : '#00cbcb'}}><b>{row.pnl}</b></TableCell>\n                                    <TableCell align=\"left\">\n                                        { row.netqty !== '0' ? this.getPercentage(row.totalbuyavgprice, row.ltp, row) : \"\"} \n                                        {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\n                                      </TableCell> \n                                    <TableCell align=\"left\">{row.ltp}</TableCell>\n                                  \n                                    <TableCell align=\"left\">\n                                        {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \n                                    </TableCell>\n\n                                </TableRow>\n                            )):''}\n\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"lightgray\"}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\n          \n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'darkmagenta' : '#00cbcb'}}>{this.state.todayProfitPnL} </TableCell>\n \n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\n                                    \n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) : \"\"}\n                    \n                                </TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                </TableRow>\n\n\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n\n\n                    </Grid>\n\n                  \n\n                        <Grid item xs={12} sm={12} >\n                             <OrderBook/>\n                        </Grid>\n\n\n                        <Grid item xs={12} sm={12} >\n                        <Paper style={{overflow:\"auto\", padding:'5px'}} >\n                                 \n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\n                                     <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n             \n                                              \n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol Found </TableCell>\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Time</TableCell>\n                                                             \n                                         </TableRow>\n                                     </TableHead>\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n             \n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                             <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\n             \n                                                 <TableCell align=\"left\">{row.symbol}</TableCell>\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                                 <TableCell align=\"left\">{row.time}</TableCell>\n                                                \n                                             </TableRow>\n                                         )):''}\n                                     </TableBody>\n                                 </Table>\n             \n                                 </Paper>\n                        </Grid>\n\n                               \n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 'auto',\n  },\n  MuiTabsScroller : {\n    overflow: 'auto'\n  }\n \n\n}));\n\nexport default function FullWidthTabs(props) {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n      <TabPanel value={value} index={0} dir={theme.direction}>\n         \n        {props.data && props.data.symbolList ? props.data.symbolList.map(row => (\n            <>\n        <ListItem button style={{ fontSize: '12px'}} >\n            <ListItemText onClick={() => props.data.LoadSymbolDetails(row.symbol)} primary={row.name} /><DeleteIcon  onClick={() => props.data.deleteItemWatchlist(row.symbol)} />\n        </ListItem>\n        \n        </>\n        )):''}\n                                      \n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        Nifty 100\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          Midcap\n        </TabPanel>\n      </SwipeableViews>\n\n        <Tabs\n          className={classes.MuiTabsScroller}\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n     \n          style={{ overflow: 'auto'}}\n        >\n          <Tab label=\"Nifty 50\" {...a11yProps(0)} />\n          <Tab label=\"Midcap\" {...a11yProps(1)} />\n          <Tab label=\"Smallcap\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\n\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Position from './Position'; \n\nimport Tab from './Tab'\n\nconst wsClint =  new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage:0,\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            backTestResult : [],\n            backTestFlag : true,\n            patternType :\"NR4\",\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n        \n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n       var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n     //  console.log(\"1st Request :- \" + firstTime_req);\n       wsClint.send(firstTime_req);\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n       channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n       wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n     \n     \n      //  this.backTestAnyPattern(); \n\n     //  this.setState({backTestResult: localStorage.getItem('backTestResult') && JSON.parse(localStorage.getItem('backTestResult'))})\n        \n            \n    //    wsClint.onopen  = (res) => {\n\n    //          this.makeConnection();\n    //          this.updateSocketWatch(feedToken ,clientcode);\n                \n    //         //  setTimeout(function(){\n    //         //    this.updateSocketWatch(feedToken ,clientcode);\n    //         //  }, 800);\n    //    }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n            var liveData =  JSON.parse(data); \n\n            this.state.symbolList &&  this.state.symbolList.forEach(element => {\n\n                var foundLive = liveData.filter(row => row.tk  == element.token);\n\n\n                if(foundLive.length>0 &&  foundLive[0].ltp)\n                    this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n                if(foundLive.length>0 &&  foundLive[0].cng)\n                    this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n                \n                var foundTweezerTop =  localStorage.getItem('foundTweezerTop_'+element.token) && JSON.parse(localStorage.getItem('foundTweezerTop'+element.token) ); \n\n                if(foundTweezerTop && foundTweezerTop.symboltoken == element.token){\n\n                  if(foundTweezerTop.entryBelow < foundLive[0].ltp){\n                        console.log('TweezerTop ',  foundTweezerTop.tradingsymbol,  \"entry found at \", foundLive[0].ltp); \n                        this.setState({ tradingsymbol : foundTweezerTop.tradingsymbol, symboltoken : foundTweezerTop.symboltoken,buyPrice : 0,producttype: 'INTRADAY', quantity : foundTweezerTop.quantity })\n                    //    this.placeOrder('SELL', \"BUY\"); \n\n                   }\n\n                }\n                 \n                });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n           // console.log(\"Request :- \" + _req);\n            wsClint.send(_req);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n\n        // setInterval(() => {\n        //     AdminService.getAutoScanStock().then(res => {\n        //         let data = resolveResponse(res);\n        //         console.log(data);  \n        //         if(data.status  && data.message == 'SUCCESS'){ \n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \n        //         }\n        //     })    \n        // }, 2000);\n      \n    }\n\n    backTestAnyPattern = async() =>{\n\n\n\n        if(!this.state.patternType){\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if(this.state.patternType === 'NR4'){\n            this.backTestNR4(); \n            return; \n        }\n\n        this.setState({backTestResult : [], backTestFlag : false}); \n\n        \n        console.log(\"pattername\", this.state.patternType); \n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1; \n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\":  moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var candleData = histdata.data; \n                    for (let index2 = 0; index2 < candleData.length-35; index2++) {\n                       // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2+10);    \n                        var next10Candle = candleData.slice(index2+10 , index2+35 );    \n                       \n                       // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                      \n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if(last10Candle.length >= 10  && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"){\n                          //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);       \n                                    break;\n                                default:\n                                    break;\n                            }\n                            \n                        }\n                        runningTest=runningTest+candleData.length-35; \n                    }\n                }else{\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 300));  \n            this.setState({stockTesting:  index+1 + \". \" + element.symbol , runningTest: runningTest})\n        }\n\n    }\n\n\n    backTestNR4 = async() =>{\n\n        this.setState({backTestResult : [], backTestFlag : false}); \n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage =0 ; \n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data  = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\":  moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res,'noPop' );\n                //console.log(\"candle history\", histdata); \n                if(histdata && histdata.data && histdata.data.length){\n                   \n                    var candleData = histdata.data; \n                  //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length-4; index2++) {\n                       // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2+4);    \n                       // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                       \n                       // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                      \n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if(last4Candle.length >= 4  && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"){\n                         \n                            last4Candle.reverse(); \n                         \n                            var rangeArr=[]; \n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]); \n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0; \n                            rangeArr.forEach(element => {\n                                if(firstElement <= element){\n                                    firstElement = element; \n                                    rgrangeCount+=1; \n                                }\n                            });\n\n                          //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if(rgrangeCount == 4){\n                                var firstCandle =  last4Candle[0]; \n                                var next5thCandle = candleData[index2+4]; \n                                \n                                if(next5thCandle[2] > firstCandle[2]){\n                                    var perChng =  (next5thCandle[4] - firstCandle[2])*100/firstCandle[2];  \n                                    sumPercentage += perChng; \n                                    console.log(element.symbol,firstCandle[0],\"upside\", \"same day high\" , firstCandle[2],\"same day low\" , firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4],  perChng + '%'); \n                               \n                                    var foundStock = {\n                                        foundAt: new Date( firstCandle[0]).toLocaleString(), \n                                        symbol : element.symbol, \n                                        sellEntyPrice : next5thCandle[4], \n                                        stopLoss : firstCandle[3], \n                                        buyExitPrice : firstCandle[2],\n                                        brokerageCharges: 0.06,\n                                        perChange : perChng.toFixed(2),\n                                        squareOffAt : new Date( next5thCandle[0] ).toLocaleString(), \n                                        quantity : Math.floor(10000/firstCandle[2]),\n                                    }\n                               \n                                    this.setState({backTestResult : [...this.state.backTestResult, foundStock]}); \n                                    \n                                }\n\n                            }\n                            \n                        }\n                        runningTest=runningTest+candleData.length-35; \n                    }\n                }else{\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\"); \n                }\n            })\n            await new Promise(r => setTimeout(r, 300));  \n            this.setState({stockTesting:  index+1 + \". \" + element.symbol , runningTest: runningTest})\n        }\n        this.setState({backTestFlag : true});\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backtestTweezerTop = (candleHist,symbol, next10Candle) => {\n\n        if(candleHist && candleHist.length > 0){\n\n            candleHist = candleHist.reverse(); \n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n\n            var lastTrendCandleLow = candleHist[9][3]; \n            var firstTrendCandleHigh = candleHist[2][2]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n            \n           \n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n        //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n            \n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\n                //1st candle green & 2nd candle is red check\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \n               // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) && Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                        console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(\"last10Candle\",candleHist); \n                        console.log(symbol, 'perfect twisser top done close=open || open=close', );\n                        console.log(\"next10Candle\",next10Candle); \n                        \n                        if(next10Candle && next10Candle.length){\n                           // next10Candle = next10Candle.reverse(); \n                        \n                           var higherStopLoss =  (highestOfBoth + (highestOfBoth/100/10)).toFixed(2); \n                           var sellEntyPrice = (lowestOfBoth - (lowestOfBoth/100/10)).toFixed(2); \n\n                           //flat 3:15 or SL hit squired off \n                           var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n                                \n                                if(next10Candle[indexTarget][2] > higherStopLoss){\n                                    squiredOffAt315 = higherStopLoss;  \n                                    squareOffAt315Time = next10Candle[indexTarget][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget][0]).toLocaleTimeString()  == \"15:15:00\"){\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0]; \n                                    break; \n                                }\n                            } \n                             //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = ''; \n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {     \n                                if(next10Candle[indexTarget2][4] < lowestOf315){\n                                    lowestOf315 = next10Candle[indexTarget2][4];  \n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];  \n                                }\n                                if(new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    break;  \n                                }\n                            } \n\n                             //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = ''; \n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if(trailingSL > next10Candle[indexTarget3][2]){\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2]/100/4)).toFixed(2);  \n                                    trailingSLAT = next10Candle[indexTarget3][0];  \n                                }\n                                else{\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);  \n                                    trailingSLAT = next10Candle[indexTarget3][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    break;  \n                                }\n                            } \n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = ''; \n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n                                \n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice)*100/sellEntyPrice; \n\n                                if(priceDiff < -0.70){\n                                    flatSellingPrice = next10Candle[indexTarget4][3];  \n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];  \n                                    break; \n                                }\n                                if(next10Candle[indexTarget4][2] > higherStopLoss){\n                                    flatSellingPrice = higherStopLoss;  \n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    flatSellingPrice = next10Candle[indexTarget4][3];  \n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];  \n                                    break;  \n                                }\n                            } \n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = ''; \n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n                                \n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice)*100/sellEntyPrice; \n\n                                if(rangePriceDiff <= -1.5){\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];  \n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];  \n                                    break; \n                                }\n                                if(next10Candle[indexTarget5][2] > higherStopLoss){\n                                    rangeSellingPrice = higherStopLoss;  \n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];  \n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];  \n                                    break;  \n                                }\n                            } \n    \n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : []; \n                            \n\n                            if(next10Candle[0][3]  < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth){\n                                var foundStock = {\n                                    foundAt: new Date( candleHist[0][0]).toLocaleString(), \n                                    symbol : symbol, \n                                    sellEntyPrice : sellEntyPrice, \n                                    stopLoss : higherStopLoss, \n                                    orderActivated: false, \n                                    buyExitPrice : 0,\n                                    brokerageCharges: 0.06,\n                                    quantity : Math.floor(10000/sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                            //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                            //   foundStock.buyExitPrice = squiredOffAt315; \n\n                             //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                  //range based target range*1.5%\n                            //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                            //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice)*100/foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock); \n\n                                this.setState({backTestResult : [...this.state.backTestResult, foundStock]}); \n    \n                              //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n    \n                          \n\n                           \n                        }\n            \n                    }\n                }\n            }\n\n        }\n\n        this.setState({backTestFlag : true});\n    }\n\n    backtestTweezerBottom = (candleHist,symbol, next10Candle) => {\n        if(candleHist && candleHist.length > 0){\n\n            candleHist = candleHist.reverse(); \n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \n            for (let index = 3; index < candleHist.length; index++) {\n                if(maxHigh < candleHist[index][2])\n                maxHigh = candleHist[index][2];\n                if(candleHist[index][3] < maxLow)\n                maxLow = candleHist[index][3];  \n            } \n            \n\n            var lastTrendCandleLow = candleHist[9][3]; \n            var firstTrendCandleHigh = candleHist[2][2]; \n\n            var firstCandle = {\n                time : candleHist[0]  && candleHist[0][0],\n                open: candleHist[0]  && candleHist[0][1],\n                high: candleHist[0]  && candleHist[0][2],\n                low: candleHist[0]  && candleHist[0][3],\n                close: candleHist[0]  && candleHist[0][4]\n            }\n            var secondCandle = {\n                time:candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n            \n           \n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n        //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n            \n        if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\n            //1st candle green & 2nd candle is red check\n            if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \n                // console.log(symbol, \"candleHist\",candleHist); \n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\n\n                        console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(\"last10Candle\",candleHist); \n                        console.log(symbol, 'perfect twisser top done close=open || open=close', );\n                        console.log(\"next10Candle\",next10Candle); \n                        \n                        if(next10Candle && next10Candle.length){\n                           // next10Candle = next10Candle.reverse(); \n                        \n                           var buyEntyPrice =  (highestOfBoth + (highestOfBoth/100/10)).toFixed(2); \n                           var LowerStopLoss = (lowestOfBoth - (lowestOfBoth/100/10)).toFixed(2); \n\n                           //flat 3:15 or SL hit squired off \n                           var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n                                \n                                if(next10Candle[indexTarget][2] < LowerStopLoss){\n                                    squiredOffAt315 = LowerStopLoss;  \n                                    squareOffAt315Time = next10Candle[indexTarget][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget][0]).toLocaleTimeString()  == \"15:15:00\"){\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0]; \n                                    break; \n                                }\n                            } \n                             //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = ''; \n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {     \n                                if(highestOf315 < next10Candle[indexTarget2][4]){\n                                    highestOf315 = next10Candle[indexTarget2][4];  \n                                    highestSquareOffAt = next10Candle[indexTarget2][0];  \n                                }\n                                if(new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    break;  \n                                }\n                            } \n\n                             //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = ''; \n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if(trailingSL > next10Candle[indexTarget3][2]){\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2]/100/4)).toFixed(2);  \n                                    trailingSLAT = next10Candle[indexTarget3][0];  \n                                }\n                                else{\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);  \n                                    trailingSLAT = next10Candle[indexTarget3][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    break;  \n                                }\n                            } \n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = ''; \n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n                                \n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice)*100/buyEntyPrice; \n\n                                if(priceDiff > 0.70){\n                                    flatSellingPrice = next10Candle[indexTarget4][3];  \n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];  \n                                    break; \n                                }\n                                if(next10Candle[indexTarget4][2] > LowerStopLoss){\n                                    flatSellingPrice = LowerStopLoss;  \n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    flatSellingPrice = next10Candle[indexTarget4][3];  \n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];  \n                                    break;  \n                                }\n                            } \n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = ''; \n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n                                \n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice)*100/buyEntyPrice; \n\n                                if(rangePriceDiff >= -1.5){\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];  \n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];  \n                                    break; \n                                }\n                                if(next10Candle[indexTarget5][2] > LowerStopLoss){\n                                    rangeSellingPrice = LowerStopLoss;  \n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];  \n                                    break; \n                                }\n                                if(new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\"){\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];  \n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];  \n                                    break;  \n                                }\n                            } \n    \n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : []; \n                            \n\n                            if(next10Candle[0][3]  < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth){\n                                var foundStock = {\n                                    foundAt: new Date( candleHist[0][0]).toLocaleString(), \n                                    symbol : symbol, \n                                    sellEntyPrice : 0, \n                                    stopLoss : LowerStopLoss, \n                                    orderActivated: false, \n                                    buyExitPrice : buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity : Math.floor(10000/buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                              foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                              foundStock.sellEntyPrice = squiredOffAt315; \n\n                             //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                  //range based target range*1.5%\n                            //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                            //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice)*100/foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock); \n\n                                this.setState({backTestResult : [...this.state.backTestResult, foundStock]}); \n    \n                              //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n    \n                          \n\n                           \n                        }\n            \n                    }\n                }\n            }\n\n        }\n        this.setState({backTestFlag : true});\n       \n    }\n\n    placeOrder = (transactiontype, slmOrderType) => {\n   \n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n         //   console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":slmOrderType ? slmOrderType :  \"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n       //     console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n          //    console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n      //  console.log(\"values\", values); \n     //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                 list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n    getNetTotalValue = () => {\n\n\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate:'', \n            firstLavel : \"Start Date and Time\", \n            secondLavel : \"End Date and Time\"\n          }\n\n        var sumPerChange = 0, sumBrokeragePer =0,netSumPerChange =0, sumPnlValue=0, sumSellEntyPrice=0;\n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n                <Grid direction=\"row\" container>\n               \n                     <Grid item xs={3} sm={3}  > \n                   \n\n                         <Autocomplete\n                            freeSolo\n                            id=\"free-solo-2-demo\"\n                            disableClearable\n                            style={{paddingLeft: \"10px\",paddingRight: \"10px\"}}\n                            onChange={this.onSelectItem}\n                            //+ ' '+  option.exch_seg\n                            options={this.state.autoSearchList.length> 0 ?  this.state.autoSearchList.map((option) => \n                            option.symbol\n                            ) : [] }\n                            renderInput={(params) => (\n                            <TextField\n                                onChange={this.onChange}\n                                {...params}\n                                label= {\"Search Symbol \"} \n                                margin=\"normal\"\n                                variant=\"standard\"\n                            \n                                name=\"search\"\n                                value={this.state.search}\n                                InputProps={{ ...params.InputProps, type: 'search' }}\n                            />\n                            )}\n                        />\n            \n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}> \n\n                            {this.state.symbolList && this.state.symbolList ? this.state.symbolList.map(row => (\n                               <>\n                            <ListItem button style={{ fontSize: '12px'}} >\n                                <ListItemText style={{color:this.state[row.symbol+'nc'] > 0 ? 'green' : \"red\" }}  onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {this.state[row.symbol+'ltp']} ({this.state[row.symbol+'nc']}%) <DeleteIcon  onClick={() => this.deleteItemWatchlist(row.symbol)} />\n                            </ListItem>\n                           \n                            </>\n                            )):''}\n                        </div>\n\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n                                                    \n                </Grid>\n\n               \n\n\n                <Grid item xs={9} sm={9}> \n           \n\n                    <Grid  direction=\"row\" alignItems=\"center\" container>\n\n                        <Grid item xs={10} sm={5}> \n                            <Typography variant=\"h5\"  >\n                            {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\" }   {this.state.sbinLtp}\n                            </Typography>    \n                            Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\" } &nbsp;\n                            High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\" } &nbsp;\n                            Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\" }&nbsp;\n                            Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\" } &nbsp;\n\n                        </Grid>\n                        <Grid item xs={12} sm={2}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel  htmlFor=\"gender\">Order Type</InputLabel>\n                                    <Select value={this.state.producttype}  name=\"producttype\" onChange={this.onChange}>\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        <Grid item xs={10} sm={1}> \n                            <TextField  id=\"buyPrice\"  label=\"Buy Price\"  value={this.state.buyPrice}   name=\"buyPrice\" onChange={this.onChange}/>\n                        </Grid>\n                        <Grid item xs={10} sm={1}> \n                            <TextField  id=\"quantity\"  label=\"Qty\"  value={this.state.quantity}   name=\"quantity\" onChange={this.onChange}/>\n                        </Grid>\n                        <Grid item xs={10} sm={1}> \n                            <TextField  id=\"stoploss\"  label=\"SL\"  value={this.state.stoploss}   name=\"stoploss\" onChange={this.onChange}/>\n                        </Grid>\n                    \n                    \n                        <Grid item xs={1} sm={2}  > \n                        \n                            <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px'}} onClick={() => this.placeOrder('BUY')}>Buy</Button> \n                            <Button variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.placeOrder('SELL')}>Sell</Button>    \n                        </Grid>\n\n\n                        <Grid item xs={10} sm={12}> \n                        <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                        <Table  size=\"small\"   aria-label=\"sticky table\" >\n                            <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                    {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                    <TableCell  className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                    <TableCell  className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                    <TableCell  className=\"TableHeadFormat\"   align=\"center\">Volume</TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n\n                                {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                    <TableRow key={i} >\n\n                                        <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                        <TableCell align=\"center\">{row[1]}</TableCell>\n                                        <TableCell align=\"center\">{row[2]}</TableCell>\n                                        <TableCell align=\"center\">{row[3]}</TableCell>\n                                        <TableCell align=\"center\">{row[4]}</TableCell>\n                                        <TableCell align=\"center\">{row[5]}</TableCell>\n                                    \n                                    </TableRow>\n                                )):''}\n                            </TableBody>\n                        </Table>\n\n                        </Paper>\n\n\n\n                        <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n                        <Grid direction=\"row\" container>\n                            \n                            <Grid item xs={12} sm={4} style={{marginTop: '15px'}}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                    <Select value={this.state.patternType}  name=\"patternType\" onChange={this.onChangePattern}>\n                                        <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                        <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                        <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={6}>\n                                <MaterialUIDateTimePicker callbackFromParent={dateParam}/>\n                            </Grid>\n                            \n                            <Grid item xs={12} sm={2} style={{marginTop: '28px'}}> \n                              {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Back Test</Button> : <Spinner/>} \n                                <br />  \n                              Stock: {this.state.stockTesting}  Total Test Count: {this.state.runningTest}\n                            </Grid>\n\n                        </Grid>\n\n                       \n                        <Table  size=\"small\"   aria-label=\"sticky table\" >\n                            <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                  <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell>\n                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                    <TableCell className=\"TableHeadFormat\" align=\"center\">FoundAt</TableCell>\n                                    <TableCell  className=\"TableHeadFormat\"   align=\"center\">Buy</TableCell>\n                                    <TableCell  className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                 \n                                    <TableCell  className=\"TableHeadFormat\"   align=\"center\">SquiredOff</TableCell>\n                                    <TableCell  className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n\n                                    <TableCell  className=\"TableHeadFormat\"   align=\"center\">PnL %</TableCell>\n\n                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Brokerage</TableCell>\n\n                                    <TableCell  className=\"TableHeadFormat\"   align=\"center\">Net PnL %</TableCell>\n\n                                    <TableCell  className=\"TableHeadFormat\"  title=\"Qty of 100\"  align=\"center\">Net PnL</TableCell>\n\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n\n                                { this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n                                   \n                                 \n\n                                //    style={{display: row.orderActivated ? 'visible' : 'none'}}\n                                 <TableRow key={i} >\n                                      \n                                        <TableCell align=\"left\">{i+1}</TableCell>\n                                        <TableCell align=\"center\">{row.symbol}</TableCell>\n                                        <TableCell align=\"center\">{row.foundAt}</TableCell>\n                                        <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                        <TableCell align=\"center\" {...sumSellEntyPrice = sumSellEntyPrice + parseFloat(row.sellEntyPrice * row.quantity) }>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                        <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n                                        <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                        <TableCell style={{color: row.perChange > 0 ? \"darkmagenta\" : \"#00cbcb\"}} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0) }> <b>{row.perChange}%</b></TableCell>\n                                        <TableCell  style={{color: \"#00cbcb\"}} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges) }>{row.brokerageCharges}%</TableCell>\n\n                                        <TableCell style={{color: (row.perChange - row.brokerageCharges) > 0 ? \"darkmagenta\" : \"#00cbcb\"}} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges) }> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                    \n                                        <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges)/100) * row.quantity)} style={{color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges)/100) * row.quantity) > 0 ? \"darkmagenta\" : \"#00cbcb\"}} align=\"center\" > <b>{((row.sellEntyPrice * (row.perChange - row.brokerageCharges)/100) * row.quantity).toFixed(2)}</b></TableCell>\n\n                                    </TableRow>\n\n\n\n                                )):''}\n\n\n                                <TableRow >\n\n                                <TableCell align=\"center\">Total</TableCell>\n                                <TableCell align=\"left\"> </TableCell>\n                                <TableCell align=\"left\"> </TableCell>\n\n                                <TableCell align=\"center\"><b>{sumSellEntyPrice.toFixed(2)}</b></TableCell>\n                                <TableCell align=\"left\"> </TableCell>\n                                <TableCell align=\"left\"> </TableCell>\n\n                                <TableCell align=\"left\"> </TableCell>\n\n\n                                <TableCell style={{color: sumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\"}} align=\"center\"><b>{sumPerChange.toFixed(2)}%</b></TableCell>\n                               <TableCell style={{color: \"#00cbcb\"}} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b></TableCell>\n                                <TableCell style={{color: netSumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\"}} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b></TableCell>\n\n                                <TableCell style={{color: sumPnlValue > 0 ? \"darkmagenta\" : \"#00cbcb\"}} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b></TableCell>\n\n                                \n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n\n                        <b> Average gross/trade PnL: </b> <b style={{color: netSumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\"}} >{(sumPerChange/this.state.backTestResult.length).toFixed(2)}%</b>\n\n\n\n\n\n                        </Paper>\n\n\n                        \n\n                        {/* <Position /> */}\n                        </Grid>\n\n                        \n\n                        \n                        </Grid>\n                    </Grid>\n\n\n                            \n\n\n                \n                \n                </Grid>\n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle:{\n        display:'flex'\n    }, \n\n    selectStyle:{\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField:{\n        overflowY: 'scroll',\n        fontSize:\"12px\", \n        maxHeight:\"50px\",\n        \n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n // data.reverse();\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n               \n                this.setState({  fundData :fundsResData.data })\n               }\n           })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.feedToken ,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n\n            \n        wsClint.onopen  = (res) => {\n\n             this.makeConnection();\n             console.log('connected');\n         //    this.updateSocketWatch();\n                \n            //  setTimeout(function(){\n            //    this.updateSocketWatch(feedToken ,clientcode);\n            //  }, 800);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = () => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n         \n         // && element.LTP >= 200\n          if(found.length){\n\n            \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n             \n            \n              var foundInWatchlist = watchlist.filter(row => row.token  === found[0].token);                                \n              // var isFound = true; \n              // for(var newList=0; newList < watchlist.length; newList++ ){\n              //     if( watchlist[newList].token == found[0].token){\n              //       isFound = false; \n              //       break;\n              //     }\n              // }\n              if(!foundInWatchlist.length){\n                \n                 \n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n         \n\n          \n       })\n        \n\n\n\n      }\n\n\n\n\n\n\n\n\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added: {this.state.counter}</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\n// import NiftyView from \"./MyTrade/NiftyView\";\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}