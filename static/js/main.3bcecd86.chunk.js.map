{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/MyTrade/LineChart.js","components/MyTrade/ChartDialog.js","components/MyTrade/FoundPatternDialog.js","utils/CommonMethods.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/CandleChart.js","components/MyTrade/Funds.js","components/MyTrade/Orderbook.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/OrderWatchlist.js","components/MyTrade/ChartMultiple.js","components/MyTrade/Position.js","components/MyTrade/Test.js","components/MyTrade/AddToWatchlist.js","components/MyTrade/SectorHeatMap.js","components/MyTrade/SectorHeatMap2.js","components/MyTrade/FindFastMovement.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","sessionId","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","index","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","getStaticData","res","totalWatchlist","keys","staticData","watchlist","forEach","element","element2","filter","row","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","ShowChart_default","ListItemText","primary","EmojiEmotions_default","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","App","candleChartData","vwapDataChart","closeData","timeDate","Date","getHours","getMinutes","chartData","labels","datasets","fill","borderColor","percentChange","index_modern","maintainAspectRatio","legend","DialogTitle","withStyles","padding","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","_React$useState3","candledata","_React$useState4","handleClose","Dialog","aria-labelledby","ChartDialog_DialogTitle","fontSize","foundAt","buyExitPrice","sellEntyPrice","perChange","squareOffAt","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","chart","height","text","align","xaxis","yaxis","tooltip","enabled","series","ChartDialog_DialogActions","foundPatternList","reverse","FoundPatternDialog_DialogTitle","FoundPatternDialog_DialogContent","Table","stickyHeader","size","TableRow","TableCell","TableBody","map","idata","hover","key","marginLeft","candleData","symbol","getElementById","click","Equalizer_default","pattenName","time","BuyAt","SellAt","FoundPatternDialog_DialogActions","CommonMethods","speckIt","SpeechSynthesisUtterance","toString","speechSynthesis","speak","getMinPriceAllowTick","minPrice","toFixed","wholenumber","parseInt","decimal","parseFloat","placeSLMOrder","slmOption","triggerprice","stopLossPrice","tradingsymbol","symboltoken","quantity","transactiontype","exchange","producttype","duration","price","squareoff","stoploss","ordertype","variety","console","log","placeOrder","getStockTokenDetails","SYMBOL","historyWiseOrderPlace","sectorItem","orderType","isAutomatic","callback","ltpdata","getLTP","ltpres","LtpData","ltp","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","Math","floor","format1","beginningTime","moment","format","startdate","subtract","interval","fromdate","todate","getHistoryData","histdata","clossest","lowerest","highestHigh","lowestLow","highestsum","vwapdata","closeingData","highData","lowData","openData","valumeData","bbdata","inputRSI","values","period","lastRsiValue","RSI","calculate","input","stdDev","bb","BollingerBands","vwap","bbLastValue","devideLen","bbmiddleValue","bblowerValue","bbhigerValue","stoplossPer","lower","upper","orderOption","buyPrice","placeOrderMethod","catch","callData","endMenu","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","concat","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PostLoginNavBar","buyFlag","sellFlag","searchSymbol","setValues","useTheme","callbackAfterOrderDone","order","handleClick","symbolInfo","CommonOrderMethod","clsx","edge","Menu_default","item","autoCompleteSearch","searchRes","searchResdata","_objectSpread3","uppercaseName","toUpperCase","found","exch_seg","lotsize","lib_default","direction","FoundPatternDialog_CustomizedDialogs","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","MuiPickersUtilsProvider","utils","DateFnsUtils","containers","DateTimePicker","date","callbackFromParent","myCallback","KeyboardButtonProps","wsClint","w3cwebsocket","Home","autoSearchList","onChangePattern","backTestResultDateRange","dateAndTypeKeys","onChangeWatchlist","symbolList","updateSocketWatch","checkOpenEqualToLow","asyncToGenerator","regenerator_default","mark","_callee","_loop","wrap","_context2","prev","next","openEqualHighList","openEqualLowList","_context","close","low","toConsumableArray","high","nc","sort","b","r","setTimeout","stop","delegateYield","fromDate","startDate","endDate","InstrumentLTP","InstrumentPerChange","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","firstTime_req","feedToken","send","channel","updateSocket","task","user","acctid","selectedWatchlist","stopBacktesting","stopScaningFlag","backTestAnyPattern","_callee2","enddate","currentMoment","endMoment","watchList","runningTest","_loop2","_context4","backTestResult","backTestFlag","patternType","abrupt","backTestNR4","NR4ForNextDay","backTestNR4SameDay","isSameOrBefore","backTestNR4DatewiseRange","add","_context3","index2","last10Candle","slice","next10Candle","toLocaleTimeString","backtestTweezerTop","backtestTweezerBottom","stockTesting","_callee3","_loop3","_context6","FoundPatternList","_context5","last4Candle","rangeArr","firstElement","rgrangeCount","firstCandle","next5thCandle","buyentry","sellenty","foundStock","nr4CheckPastPerfommance","t0","findShortTraadeOnNextDay","histdataInside","buyentrySL","resultCandle","buyEntryFlag","longTradeFound","elementInside","buyHighest","candle5min","getTime","insideIndex","toLocaleString","stopLoss","brokerageCharges","exitStatus","perChng","perChngOnHigh","highAndLow","perChngOnHighLow","candleChartDataInside","findLongsTraadeOnNextDay","firstTimeTrail","trailCount","lastTriggerprice","perchngfromTriggerPrice","buyExitPricePer","buyExitPriceMinRange","_callee4","sumPercentage","_loop4","_context8","searchFailed","_context7","unshift","start5thdate","set","hour","minute","end5thdate","insideCandleRes","_ref5","_callee5","_loop5","_context10","_context9","dateWithWlType","datewisetrades","perChngOnLow","_x","apply","_callee6","_loop6","_context12","_context11","longExitPriceType","shortExitPriceType","totalLongs","totalShort","totalLongPer","totalShortPer","totalLongHighPer","totalShortLowPer","longCandles","shortCandles","longData","shortData","pastPerferm","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","secondCandle","diffPer","lowestOfBoth","highestOfBoth","round","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","orderid","LoadSymbolDetails","getHistory","slmOrderType","downMoveCount","upsideMoveCount","InstrumentHistroy","histCandles","per","onSelectItem","autoSearchTemp","fdata","getPercentageColor","percent","deleteItemWatchlist","list","findIndex","splice","getAveragePrice","orderId","oderbookData","averageprice","showCandleChart","insiderow","showCandleBothChart","ifNotBought","_this2","endTime","currentTime","isoWeekday","isBetween","onopen","onmessage","decoded","atob","pako","inflate","liveData","symbolListArray","foundLive","tk","onerror","setInterval","_req","_this3","dateParam","firstLavel","secondLavel","sumPerChange","sumPerChangeHighLow","sumPnlValue","sumPnlValueOnHighLow","totalInvestedValue","totalLongTrade","tradetotal","totalWin","totalLoss","Paper","Autocomplete","freeSolo","disableClearable","paddingLeft","paddingRight","option","renderInput","params","search","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","textAlign","background","TableHead","whiteSpace","fontWeight","MaterialUIDateTimePicker","colSpan","gutterBottom","cursor","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","indexSymbolData","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","resdata","toLocaleLowerCase","innerHTML","substring","stopnview","indexTimeStamp","products","loadPackList","todayTime","getAllIndices","softedData","calendar","_this4","overflow","MyDialog_CustomizedDialogs","last","encodeURIComponent","rel","advances","declines","unchanged","connect","diffData","putData","totPEOI","totCEOI","diff","dateTime","x","y","colors","upward","downward","ApexCharts","querySelector","render","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","updatetime","cancelOrderOfSame","cancelOrder","modifyOrder","trailingstoploss","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","hash","float","orderstatus","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","sbin","positionList","heartbeatReq","exchtime","searchSymbolPendingOrder","searchSymbolPending","searchTokenPending","updateInput","addInOrderPenidngList","buyAtPending","sellAtPending","lastTradedData","createdAt","buyAt","sellAt","pattenNamePending","orderPenidngList","deleteInOrderPenidngList","callBackUpdate","updateLTP","getTradePrice","refreshCandleChartManually","_ref3","failedCount","onChange2","openNewPage","backToPositionPage","intervaltime","findlast5minMovementInterval","OpenInNew_default","Delete_default","multipleChartData","longs","shorts","ChartMultiple_DialogTitle","ChartMultiple_DialogContent","ChartMultiple_DialogActions","getCandleHistoryAndStore","today","timediff","clearInterval","candleHistoryInterval","findTweezerTopPatternLive","findTweezerBottomPatternLive","ttophistCandle","foundData","toLowerCase","last8candleHigh","last8candleLow","tBophistCandle","findNR4PatternLive","timediffend","last5Candle","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","findNR7PatternLive","showtestdata","last7Candle","last9Candle","_ref4","symbolname","showMultipleCandleChart","refreshLtpOnFoundPattern","foundPatternsFromStored","totalBrokerChargesNR4","totalNetProfit","pnlAmountTotal","perHighLowTotal","netPnLAmountOnHighlowTotal","perChangeOnHighLow","netPnLAmountOnHighlow","todayChange","builtupCandle","symbolUpdated","OnHighLowActivated","foundlist","getStoplossFromOrderbook","netqty","buyavgprice","maxLossAmount","sellavgprice","getStoplossForSELLFromOrderbook","getHighLowPercentage","_ret","v","tagPatternWhichTaken","orderTagToPosition","pattern","getPositionData","_callee7","totalMaxPnL","getPosition","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","pnl","buyqty","slData","stopLossAmount","brokerageOnlyCharges","allCharges","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","orderWithFlatstoploss","ltpPrice","perTradeStopLossPer","BankLtpltp","getStopLossPrice","_ref8","_callee8","_context13","slPrice","_x2","_x3","LockedSymbolName","orderData","getOpenPeningOrderId","squareOff","abs","updateOrderList","modifyOrderMethod","getPercentage","trailPerChange","sqrOffbeginningTime","sqrOffendTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","totalDayLoss","dailyLossPer","getNSETopStock","scandata","result","isFound","j","symbolName","selectedStockInteval","getSelectedStockFromDb","_loop7","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","ChartMultiple_CustomizedDialogs","Refresh_default","totalbuyavgprice","totalsellavgprice","sellqty","Orderbook","OrderWatchlist","frameborder","allowtransparency","scrolling","allowfullscreen","readCsv","parsedList","newJsonList","addtowatchlist","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","wsClintSectorUpdate","spinnerIndex","updateLTPMannually","sectorStocks","refreshSectorLtp","sectorUpdate","_index","stockUpdate","refreshFlag","sectorStockList","indexData","cng","ltt","sectorList","stockList","isStocksLtpUpdted","checkLast5MinMovement","_ref2","_index2","refreshFlagCandle","stockCandleUpdate","refreshSectorCandleManually","_index3","inputVWAP","volume","vwapValue","VWAP","_x4","refreshSectorCandle","outerEelement","stockIndex","updateWatch","get2DecimalNumber","number","topGLCount","loadIndexesList","allIndicesDirectJSON","sleep","ms","resolve","percChange","ref","middleSector","indexName","_x5","_x6","updateLtpOnInterval","autoTradeTopList","indexdata","LineChart_App","sluglist","NIFTY 50","NIFTY AUTO","NIFTY BANK","NIFTY ENERGY","NIFTY FIN SERVICE","NIFTY FMCG","NIFTY IT","NIFTY MEDIA","NIFTY METAL","NIFTY PHARMA","NIFTY PSU BANK","NIFTY REALTY","NIFTY PVT BANK","NIFTY CONSUMPTION","NIFTY CPSE","NIFTY INFRA","NIFTY MNC","NIFTY PSE","timeVal","slugName","checkSectorApiOther","iislPercChange","ltP","stopSearching","stop10bbSearch","find10MinBBBlast","startSearching","totalStockToWatch","findlast5minMovement","getTimeFrameValue","timeFrame","findlast5minMovementUpdate","timeDuration","loopindex","sma","SMA","bbvlastvalue","middle","RSIValue","BB","updateMsg","percentChangeList","changePer","tostartInteral","AppRouter","react_router","path","exact","MySectorTop","Chart","CandleChart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","SectorHeatMap","SectorHeatMap2","FindFastMovement","Test","RouterComponent","react_toastify","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.3bcecd86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var jwtToken =   tokens &&  tokens.jwtToken;\n\n        return { 'headers': {\n            'Authorization': 'Bearer ' + jwtToken,\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n\n    loginHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json', \n            'X-UserType':'USER',\n            'X-SourceID':'WEB',\n            'X-ClientLocalIP':'192.168.1.128',\n            'X-ClientPublicIP':'91.0.4472.114',\n            'X-MACAddress':'f0:18:98:26:c4:cc',\n            'X-PrivateKey':'I4O6PJAn'\n        } }\n    }\n    getImageHeader() {\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\n    }\n\n    getScannerHeader() {\n        return { 'headers': {\n            'Content-Type':'application/json', \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n    getNSESessionHeader(sessionId) {\n        return { 'headers': {\n            'sessionId': sessionId, \n            'Accept':'application/json',\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \n            // 'sec-fetch-mode': 'cors',\n            // 'origin': 'localhost',\n\n            \n        } }\n    }\n\n}\n\nexport default new AuthService();","//my app api\nexport const API_KEY  = 'I4O6PJAn'; \nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \n\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\n\t\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks';\t\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks';\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock';\t\n\nexport const allIndices =  'https://www.nseindia.com/api/allIndices';\t\nexport const allIndices2Json =  'https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json';\n\nexport const getIndiceStockApi =  'https://www.nseindia.com/api/equity-stockIndices?index=';\t\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    login(credentials) {\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\n    } \n\n    logout(credentials) {\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\n     } \n\n    getUserData(formData){\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\n    }\n\n    getFunds(formData){\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\n    }\n\n    retrieveOrderBook(formData){\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\n    }\n    retrieveTradeBook(formData){\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\n    }\n    \n    retrieveallTradableInstruments(formData){\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\n    }\n\n    placeOrder(credentials) {\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\n    } \n    modifyOrder(credentials) {\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\n    } \n    cancelOrder(credentials) {\n\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\n    } \n\n    getLTP(credentials) {\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\n    } \n\n    getHistoryData(credentials) {\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\n    } \n\n    scanStocks(credentials) {\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\n     } \n\n     autoCompleteSearch(query) {\n        return axios.get('http://localhost:8081/search/'+query, '');\n     } \n     saveWatchList(data) {\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\n     } \n     addIntoStaticData(data) {\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\n     }\n     saveWatchListJSON(data) {\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\n     }\n     getWatchListJSON() {\n        return axios.get('/myJsonWatchList.json', '');\n     } \n     getStaticData() {\n        if(window.location.hostname == \"vijaykumarsaurav.github.io\")\n        return axios.get('/mtrade/staticData.json', '');\n        else\n        return axios.get('/staticData.json', '');\n     } \n     saveCandleHistory(data) {\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\n     } \n\n     getPosition(data){\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\n     }\n\n     getAutoScanStock(){\n        return axios.get(apiConstant.getScannedStocks, '');\n     }\n\n     getNSETopStock(){\n        return axios.get(apiConstant.getNseTopStocks, '');\n     }\n\n     getSelectedStockFromDb(){\n        return axios.get(apiConstant.getSelectedStock, '');\n     }\n\n    //  getBNcpdata(){\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\n    //  }\n\n    getIndiceStock(index){\n        return axios.get(apiConstant.getIndiceStockApi+index, '');\n    }\n\n    checkOtherApi(index){\n      //  return axios.get('http://localhost:8081/nse/get_indices', '');\n     //  return axios.get('http://localhost:3000/nse/get_index_stocks?symbol=bankNifty', '');\n        return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n    }\n\n    checkSectorApiOther(index){\n        //  return axios.get('http://localhost:3000/nse/get_indices', '');\n         return axios.get('http://localhost:8081/nse/get_index_stocks?symbol='+index, '');\n       //return axios.get(\"https://www1.nseindia.com/live_market/dynaContent/live_watch/stock_watch/liveIndexWatchData.json\", '');\n      }\n\n    \n\n    getAllIndices(){\n        return axios.get(apiConstant.allIndices);\n    }\n\n    allIndicesDirectJSON(){\n        return axios.get('http://localhost:8081/nse/get_indices', '');\n        // return axios.get(apiConstant.allIndices2Json);\n     }\n \n}\n\n\n\nexport default new AdminService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MyLogo from './mylogo.png';\n\nconst LoginNavBar = (props) => {\n    \n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\n\n                    {/* <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  M-Trade\n                        </Typography>\n                    </div>               */}\n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Bharti Airtel Ltd\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"User Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          //  position: \"buttom-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n    }\n\n}\n\nexport default new Notify();","import Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   //console.log('response',response);\n    let data = {};\n        if (response.status === 200) {\n            data = response.data;\n            if(data.status) {\n                if(data.message){\n\n                    if(msg !== 'noPop')\n                    Notify.showSuccess(data.message);\n                }\n                return data;\n            }else{\n               \n                Notify.showError(data.message);\n                if(data.message === \"Invalid Token\"){\n                    window.location.replace(\"#/login\");\n                    localStorage.setItem('userTokens', '');\n                    localStorage.setItem('userProfile', '');\n                }\n                return Promise.reject(data.message);\n            }\n        }\n        else if(response && !response.status){\n            Notify.showError(data.message);\n        }   \n}","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LoginNewUI from './LoginNewUI';\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"V193588\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                \n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n\n\n        )\n\n    }\n\n    componentDidMount() {\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \n      if(userTokens){\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('home');\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n\n        if(!this.state.userName && !this.state.password){\n            this.setState({ isError: \"Olms Id and Password are required.\" });\n            return;\n        }\n\n        if(!this.state.userName){\n            this.setState({ isError: \"Olms Id is required.\" });\n            return;\n        }\n        if(!this.state.password){\n            this.setState({ isError: \"Password is required.\" });\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n \n\n        const loginPayload = {\n            clientcode:  this.state.userName,\n            password: this.state.password \n\n        };\n        AdminService.login(loginPayload)\n            .then(loginRes => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n         //   console.log(\"res\",loginRes); \n\n              var data = resolveResponse(loginRes);\n              loginRes  = loginRes && loginRes.data; \n            //  console.log(\"resdata\",loginRes); \n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\n                this.setState({ isError: loginRes.message });\n              }\n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(loginRes.data){\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\n                  \n\n                    AdminService.getUserData().then(profileRes => {\n                       // console.log('profiledata', profileRes); \n                          let data = resolveResponse(profileRes);\n                          profileRes =  profileRes && profileRes.data; \n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\n                        //    this.props.history.push('/position');\n\n                            AdminService.getStaticData().then(res => {\n                                var data = res.data;\n                                //data = JSON.parse(data);   \n                                localStorage.setItem('staticData', JSON.stringify(data));\n\n                                var totalWatchlist = Object.keys(data);\n                                this.setState({ totalWatchlist: totalWatchlist });\n                                localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n                                this.setState({ staticData: data });\n                    \n                                var watchlist = [];\n                                totalWatchlist.forEach(element => {\n                    \n                                    var mylist = data[element];\n                                    mylist.forEach(element2 => {\n                                        var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                                        if (!foundInWatchlist.length) {\n                                            watchlist.push(element2);\n                                        }\n                                    });\n                                });\n                    \n                                localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n                                window.location.replace('#/home')\n\n                            });\n\n                            \n                            \n                          }\n                      })\n\n                  \n\n                }\n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Link } from \"react-router-dom\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport AdminService from \"./service/AdminService\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nexport const AdminMenuList = (\n\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map2\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map2\" />\n    </ListItem>\n\n\n    \n\n   \n    <ListItem button component='a' target={'_blank'} href={\"/mtrade/#/find-fast-movement\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Fast Movement\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Positions\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order-watchlist\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Watchlist\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Funds\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Order Book\" />\n    </ListItem>\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Trade Book\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/sector-heat-map\"} >  \n      <ListItemIcon>\n        <ShowChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Heat Map\" />\n    </ListItem>\n  \n    {/* <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"NiftyBank View\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Nifty View\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sector Top\" />\n    </ListItem> */}\n\n    {/* <ListItem button component='a' href={\"/mtrade/#/test\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Exprement - Research\" />\n    </ListItem> */}\n  \n\n\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary={\"Watchlist (\" + (localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length) + \")\"} />\n    </ListItem>\n  \n\n\n  </div>\n);\n\nfunction deleteAllCookies() {\n  var cookies = document.cookie.split(\";\");\n  for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n      var eqPos = cookie.indexOf(\"=\");\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n  }\n}\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  if(window.confirm(\"Are you sure to logout?\")){\n\n  var userProfile = localStorage.getItem(\"userProfile\")\n  userProfile = userProfile && JSON.parse(userProfile);\n\n  var data = {\n    clientcode : userProfile && userProfile.clientcode\n    }\n\n    AdminService.logout(data)\n    .then(res => {\n    \n    localStorage.clear();\n    //localStorage.setItem('userTokens', '');\n    //localStorage.setItem('userProfile', '');\n    deleteAllCookies();\n    \n    window.location.replace(\"#/login\");\n    return;\n\n    });\n\n  }\n}\n\n\nexport const LogoutMenu = (\n  <div>\n\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n\n\n  </div>\n);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  //const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    localStorage.setItem('invertColorFlag', event.target.checked);\n    setAuth(event.target.checked);\n   \n  };\n\n  // const handleMenu = (event) => {\n\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Black & White'  : 'Colorfull'}\n        />\n      </FormGroup>\n     \n      {/* <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar> */}\n    </div>\n  );\n}\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n\n  var candleChartData =  props.candleChartData; \n  var vwapDataChart =  props.vwapDataChart; \n\n  var closeData = [], timeDate = []; \n\n  if(candleChartData){\n    for (let index = 0; index < candleChartData.length; index++) {\n      if(candleChartData[index]){\n        closeData.push(candleChartData[index][4]); \n        timeDate.push(new Date(candleChartData[index][0]).getHours() + \":\" +new Date(candleChartData[index][0]).getMinutes() ); \n      }\n    \n    }\n  }\n\n\n  const chartData = {\n    \n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Close\",\n        data: closeData,\n        fill: true,\n        borderColor:  props.percentChange > 0 ? \"green\" : \"red\",\n       // backgroundColor: \"rgba(75,192,192,0.2)\",\n        //borderColor: \"\"\n      },\n      {\n        label: \"Vwap\",\n        data: vwapDataChart,\n        fill: true,\n      //  backgroundColor:  \"blue\",\n        borderColor: \"blue\",\n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n      \n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\n\nimport LineChart from \"./LineChart\";\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {localStorage.getItem('cadleChartSymbol')}   {localStorage.getItem('candlePriceShow')}  ({localStorage.getItem('candleChangeShow')}%)\n        <br />\n\n        {localStorage.getItem('chartInfoDetails') ? <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> : \"\"}\n        \n      \n        </DialogTitle>\n        <DialogContent dividers id=\"chart\">\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n          {localStorage.getItem('candleChartData') ?   <ReactApexChart \n            options={{\n                      chart: {\n                        type: 'candlestick',\n                        height: 350\n                      },\n                      title: {\n                          text: '',\n                          align: 'left'\n                      },\n                      xaxis: {\n                          type: 'datetime',\n                      },\n                      yaxis: {\n                          tooltip: {\n                          enabled: true\n                          }\n                      }\n                  }}\n                  series={[{\n                    data:  localStorage.getItem('candleChartData') && JSON.parse(localStorage.getItem('candleChartData'))\n                      \n                  }]} \n                  type=\"candlestick\" \n                  width={500}\n                  height={350} \n          /> : \"\"}\n\n\n            { localStorage.getItem('candleChartDataInside') ? <ReactApexChart \n              options={{\n                        chart: {\n                          type: 'candlestick',\n                          height: 350\n                        },\n                        title: {\n                            text: '',\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                        },\n                        yaxis: {\n                            tooltip: {\n                            enabled: true\n                            }\n                        }\n                    }}\n                    series={[{\n                      data:  localStorage.getItem('candleChartDataInside') && JSON.parse(localStorage.getItem('candleChartDataInside'))\n                        \n                    }]} \n            type=\"candlestick\" \n            width={500}\n            height={350} \n          />: \"\"}\n          \n          {/* below line chart \n          {localStorage.getItem('candleChartData') && localStorage.getItem('vwapDataChart') ? <LineChart candleChartData={JSON.parse(localStorage.getItem('candleChartData'))} percentChange={localStorage.getItem('candleChangeShow')} vwapDataChart={JSON.parse(localStorage.getItem('vwapDataChart'))}/>: \"\"}\n           */}\n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ChartDialog from './ChartDialog'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n  \n  const showCandleChart = (candleData, symbol) => {\n    candleData  = candleData && candleData.reverse();\n    localStorage.setItem('candleChartData', JSON.stringify(candleData))\n    localStorage.setItem('cadleChartSymbol', symbol)\n    document.getElementById('showCandleChart').click();\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Patterns {foundPatternList && foundPatternList.length}\n      </Button>\n      <ChartDialog />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Found Patterns\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Pattern Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Time</b></TableCell> \n                    <TableCell align=\"left\"><b>BuyAt</b></TableCell>\n                    <TableCell align=\"left\"><b>SellAt</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {foundPatternList ? foundPatternList.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                                    <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => showCandleChart(idata.candleChartData, idata.symbol)}>{idata.symbol} <EqualizerIcon /> </Button></TableCell>\n                                    <TableCell align=\"left\" >{idata.pattenName}</TableCell> \n                                    <TableCell align=\"left\" >{idata.time}</TableCell> \n                                    \n                                     <TableCell align=\"left\">{idata.BuyAt} </TableCell>\n                                     <TableCell align=\"left\">{idata.SellAt}</TableCell>\n                                   \n                            </TableRow>\n\n                        )):  \"\"  }\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { resolveResponse } from \"./ResponseHandler\";\nimport AdminService from \"../components/service/AdminService\";\nimport TradeConfig from '../components/MyTrade/TradeConfig';\nimport * as moment from 'moment';\nimport Notify from './Notify';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\n\n\nclass CommonOrderMethod {\n\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n              //  this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n              //  this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n\n    getStockTokenDetails = (SYMBOL) => {\n        // AdminService.autoCompleteSearch(e.target.value).then(searchRes => {   \n        //     let searchResdata =  searchRes.data; \n        //     if(e.target.value){\n        //         var uppercaseName =  e.target.value.toUpperCase() + \"-EQ\"; \n        //         var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.symbol === uppercaseName);      \n        //       //  console.log(\"found\", found[0] && found[0].symbol); \n        //         if(found.length){ \n        //             setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token'] : found[0].token });    \n        //         }\n        //     }\n\n        //  })\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, callback) => {\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        // if (isAutomatic != \"Automatic\") {\n        //     if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n        //         return;\n        //     }\n        // }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"75:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                    \n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n\n\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                            histdata.data.forEach((element, index) => {\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                                vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                                closeingData.push(element[4]);\n                                highData.push(element[2]);\n                                lowData.push(element[3]);\n                                openData.push(element[3]);\n                                valumeData.push(element[5]);\n                                bbdata.push((element[2] + element[3] + element[4]) / 3);\n                            });\n\n                            var inputRSI = { values: closeingData, period: 14 };\n                            var lastRsiValue = RSI.calculate(inputRSI)\n                            console.log(symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n        \n                            var inputVWAP = {\n                                open: openData,\n                                high: highData,\n                                low: lowData,\n                                close: closeingData,\n                                volume: valumeData\n                            };\n        \n                            var input = {\n                            period : 20, \n                            values : bbdata,\n                            stdDev : 2\n                            }\n        \n                            var bb = BollingerBands.calculate(input); \n                            console.log(symbol , \"BB\",input, bb, bb[bb.length-1]);\n                            console.log(symbol , \"VWAP\", vwapdata, vwap(vwapdata));\n\n                            var bbLastValue = bb[bb.length-1]; \n\n                            \n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                \n                                console.log(symbol, \"My stoploss\", orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                       \n\n                                //bb stop loss\n                                if(bbLastValue){\n                                    stoploss = bbLastValue.lower - (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                    stoploss = this.getMinPriceAllowTick(stoploss);\n                                    stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n                                    console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                    console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                }\n                               \n                    \n                            }\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n                          \n                                // //bb stop loss\n                                // if(bbLastValue){\n                                //     stoploss = bbLastValue.upper + (bbLastValue.upper - bbLastValue.lower) * 3 / 100;\n                                //     stoploss = this.getMinPriceAllowTick(stoploss);\n                                //     stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n                                //     console.log(symbol, orderType, \"BB stoploss value\", bbLastValue, \" LTP \", LtpData.ltp);\n                                //     console.log(symbol, stoploss, \"stoploss%\", stoplossPer);\n                                // }\n                               \n                            }\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption, callback);\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        var callData = {\n                            \"transactiontype\": orderType,//BUY OR SELL\n                            \"tradingsymbol\": symbol,\n                            \"symboltoken\": token,\n                            \"status\": false\n                        }\n                        callback(callData);\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n            }\n        }).catch(function (error) {\n\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n    placeOrderMethod = (orderOption, callback) => {\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n\n       \n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n                this.speckIt('hey Vijay, ' + orderOption.tradingsymbol + \" \" +orderOption.transactiontype +\" order placed\");\n             \n                var callData = {\n                    \"token\": orderOption.symboltoken,\n                    \"status\": true\n                }\n                callback(callData);\n                return;  \n            }\n\n        })\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n             //   this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" stop loss order placed\");\n            //    this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n}\n\nexport default new CommonOrderMethod();\n\n   ","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport * as Menu from './LeftMenuBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MyLogo from './mylogo.png';\n\nimport Button from '@material-ui/core/Button';\nimport InvertColor from '../utils/InvertColor';\nimport FoundPatternDialog from '../components/MyTrade/FoundPatternDialog'\nimport AdminService from \"./service/AdminService\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CommonOrderMethod from \"../utils/CommonMethods\";\nimport Spinner from \"react-spinner-material\";\nimport Notify from '../utils/Notify';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        buyFlag: true,\n        sellFlag: true, \n        searchSymbol : \"\",\n        \n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const autoSearchList = [];\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n\n    function handleInput(e){\n        setValues({ ...values, ['searchSymbol']: e.target.value });    \n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {   \n            let searchResdata =  searchRes.data; \n            if(e.target.value){\n                var uppercaseName =  e.target.value.toUpperCase() + \"-EQ\"; \n                var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.symbol === uppercaseName);      \n              //  console.log(\"found\", found[0] && found[0].symbol); \n                if(found.length){ \n             \n                    setValues({ ...values, ['searchSymbol']: found[0].symbol, ['token'] : found[0].token });    \n                }\n            }\n         })\n    }\n\n    function callbackAfterOrderDone( order ){\n        setValues({ ...values, ['buyFlag']: order.status });\n        setValues({ ...values, ['sellFlag']:  order.status  });\n        setValues({ ...values, ['searchSymbol']: '' });\n    }\n\n    function handleClick(type) {\n\n        if(values.token && values.searchSymbol){ \n            if (type == 'BUY') {\n                setValues({ ...values, ['buyFlag']: false });\n                var symbolInfo = { \n                    token: values.token, \n                    symbol: values.searchSymbol\n                }\n               CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", callbackAfterOrderDone);\n            }\n\n            if (type == 'SELL') {\n                setValues({ ...values, ['sellFlag']: false });\n                var symbolInfo = { \n                    token: values.token, \n                    symbol: values.searchSymbol\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", callbackAfterOrderDone);\n            }\n        }else{\n            Notify.showError(\"Type Symbol!!!\");\n        }\n    }\n\n    var userProfile = localStorage.getItem(\"userProfile\")\n    userProfile = userProfile && JSON.parse(userProfile);\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Grid\n                        justify=\"space-between\"\n                        container\n                    >\n                        <Grid item >\n                            {/* <Typography variant=\"h6\" noWrap>\n                          M-Trade\n                         </Typography> */}\n                            <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\n                        </Grid>\n\n\n                        <Grid item  >\n\n                            <Grid\n                                justify=\"space-between\"\n                                container\n                                spacing={2}\n                            >\n\n                                <Grid item  >\n                                    <TextField label=\"Type full Symbol\" name=\"searchSymbol\" value={values.searchSymbol} onChange={handleInput}  />\n                                </Grid>\n                                <Grid item  >\n                                    {values.buyFlag ? <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"BUY\")}>Buy</Button> : <Spinner />}\n                                </Grid>\n\n                                <Grid item  >\n                                    {values.sellFlag ? <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '10px', marginTop: '10px' }} onClick={() => handleClick(\"SELL\")}>SELL</Button> : <Spinner />}\n                                </Grid>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                        <Grid item >\n\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                                style={{ color: \"white\" }}\n                            >\n\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" href={\"/mtrade/#/sector-heat-map\"}>\n                                        Sector Hit Map\n                                    </Button>\n                                </Grid>\n\n\n                                <Grid item>\n                                    <FoundPatternDialog />\n                                </Grid>\n\n\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\"  autoFocus href={\"#/addtowatchlist\"}  >\n                                       WList({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\n                                    </Button>\n                              </Grid>\n */}\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/home\"} color=\"primary\">\n                                        Home\n                                    </Button>\n                                </Grid>\n\n                                <Grid item>\n                                    <Button variant=\"contained\" autoFocus href={\"/mtrade/#/position\"} color=\"primary\">\n                                        Position\n                                    </Button>\n                                </Grid>\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\n                                        Order Status Live\n                                    </Button>\n                              </Grid> */}\n\n\n\n                                {/* <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\n                                        Order\n                                    </Button>\n                              </Grid>\n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\n                                        Trade\n                                    </Button>\n                              </Grid>\n\n                            \n\n                              <Grid item>\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\n                                        Funds\n                                    </Button>\n                              </Grid> */}\n\n                                {/* <Grid item>\n                                <Typography  noWrap>\n\n                                <Button color=\"primary\">\n                                  <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\n                                </Button>\n\n                                </Typography> \n\n                        \n\n\n                            </Grid> */}\n\n\n                            </Grid>\n\n\n\n                        </Grid>\n\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\n\n                    <InvertColor />\n\n                    {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : ''}\n                    ({userProfile && userProfile.clientcode ? userProfile.clientcode : ''})\n\n\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                <List>{Menu.AdminMenuList}</List>\n\n                {/* <Divider />\n                <List>  <InvertColor /></List> */}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"./Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker\n} from '@material-ui/pickers';\n\nfunction MaterialUIPickers(props) {\n\n // console.log(\"startDatestartDate,\",props ); \n  //var d = new Date(); \n  //d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var startd = new Date(); \n  startd.setHours(9,0,0,0);\n  startd.setMinutes(15,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var endd = new Date(); \n  endd.setHours(15,0,0,0);\n  endd.setMinutes(30,0,0,0);\n\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  //  var startDateMili = new Date(date).getTime(); \n//    document.getElementById(\"startDateMili\").value = startDateMili; \n//    var endDateMili = document.getElementById(\"endDateMili\").value; \n    // if(startDateMili > endDateMili  ){\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\n    // }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  //  var endDateMili = new Date(date).getTime(); \n  //  document.getElementById(\"endDateMili\").value = endDateMili; \n\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \n  //  if(endDateMili  < startDateMili){\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\n  //   }\n   \n  };\n\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  // }\n\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  // //endDateMili ==''\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  // }\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid containers>\n     \n        <KeyboardDateTimePicker\n         // disableFuture=\"true\"\n          margin=\"normal\"\n          style={{width:\"140px\"}}\n         // required={true}\n          id=\"date-picker-dialog\"\n          label={'Start Date'}\n         // format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardDateTimePicker\n           style={{width:\"140px\"}}\n        // disableFuture=\"true\"\n         margin=\"normal\"\n       //  required={true}\n         id=\"date-picker-dialog\"\n         label={'End Date'}\n       //  format='dd-MM-yyyy HH:mm:ss'\n         format='dd-MM-yyyy'\n         value={selectedEndDate}\n         onChange={handleEndDateChange}\n         KeyboardButtonProps={{\n           'aria-label': 'change date',\n         }}\n        />\n        \n       \n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport default  MaterialUIPickers; \n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as moment from 'moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Spinner from \"react-spinner-material\";\n\nimport { w3cwebsocket } from 'websocket';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ChartDialog from './ChartDialog';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport pako from 'pako';\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumPercentage: 0,\n            InstrumentPerChange: \"\",\n            autoSearchList: [],\n            isDasable: false,\n            isError: false,\n            InstrumentLTP: {},\n            ifNotBought: true,\n            autoSearchTemp: [],\n            backTestResult: [],\n            backTestFlag: true,\n            patternType: \"\",  //NR4ForNextDay  NR4_SameDay\n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"INTRADAY\",\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            selectedWatchlist: 'NIFTY BANK',\n            longExitPriceType: 4,\n            shortExitPriceType: 4,\n            candleChartData: [],\n            stopScaningFlag: false,\n            backTestResultDateRange: [],\n            searchFailed: 0,\n            openEqualHighList: [],\n            openEqualLowList : [], \n            FoundPatternList: localStorage.getItem('FoundPatternList') && JSON.parse(localStorage.getItem('FoundPatternList')) || []\n\n        };\n        this.myCallback = this.myCallback.bind(this);\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\n\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n\n    }\n    onChangePattern = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value == 'NR4_Daywide_daterage') {\n\n            var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange'));\n\n            this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange || {}), backTestResultDateRange: backTestResultDateRange });\n\n        }\n    }\n    onChangeWatchlist = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var staticData = this.state.staticData;\n        this.setState({ symbolList: staticData[e.target.value] }, function () {\n            this.updateSocketWatch();\n            this.checkOpenEqualToLow(); \n\n        });\n\n        if (e.target.value == \"selectall\") {\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) }, function () {\n                this.updateSocketWatch();\n                this.checkOpenEqualToLow(); \n            });\n        }\n\n    }\n    checkOpenEqualToLow =async()=> {\n         \n        this.setState({openEqualHighList : [], openEqualLowList : [] });\n\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            const element = this.state.symbolList[index];\n         \n            var data = {\n                \"exchange\": element.exch_seg,\n                \"tradingsymbol\": element.symbol,\n                \"symboltoken\":  element.token,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                if(LtpData){\n\n                    LtpData.perChange =((LtpData.ltp - LtpData.close)*100/ LtpData.close).toFixed(2); \n\n                    if(LtpData && LtpData.open ==  LtpData.low){ \n                        console.log(\"o=l\", LtpData);\n                        this.setState({openEqualHighList : [...this.state.openEqualHighList , LtpData] });\n                    }\n\n                    if(LtpData && LtpData.open ==  LtpData.high){ \n                        console.log(\"o=h\", LtpData);\n                        this.setState({openEqualLowList : [...this.state.openEqualLowList , LtpData] });\n                    }\n\n                    this.state.symbolList[index].ltp = LtpData.ltp; \n                    this.state.symbolList[index].nc = LtpData.perChange; \n\n                    \n\n                    this.state.symbolList  && this.state.symbolList .sort(function (a, b) {\n                        return b.nc - a.nc;\n                    });\n                    this.setState({symbolList : this.state.symbolList });\n                }\n            })\n            await new Promise(r => setTimeout(r, 310));\n        }\n\n    }\n\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            this.setState({ startDate: date });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: date });\n        }\n    };\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            this.setState({ InstrumentLTP: LtpData });\n\n            if (LtpData && LtpData.ltp)\n                this.setState({ InstrumentPerChange: ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) });\n\n\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n        })\n    }\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        //  console.log(\"1st Request :- \" + firstTime_req);\n        wsClint.send(firstTime_req);\n\n        this.updateSocketWatch();\n\n    }\n\n    updateSocketWatch = () => {\n\n\n        var channel = this.state.symbolList.map(element => {\n            return 'nse_cm|' + element.token;\n        });\n\n        channel = channel.join('&');\n        var updateSocket = {\n            \"task\": \"mw\",\n            \"channel\": channel,\n            \"token\": this.state.feedToken,\n            \"user\": this.state.clientcode,\n            \"acctid\": this.state.clientcode\n        }\n\n        console.log(\"updated ws watchlisht\", this.state.selectedWatchlist, updateSocket);\n        wsClint.send(JSON.stringify(updateSocket));\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Home\"; \n        this.setState({ symbolList: this.state.staticData[this.state.selectedWatchlist] });\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        this.checkOpenEqualToLow(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClint.onopen = (res) => {\n                this.makeConnection();\n                this.updateSocketWatch();\n            }\n\n            wsClint.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n                var symbolListArray = this.state.symbolList;\n                this.state.symbolList && this.state.symbolList.forEach((element, index) => {\n                    var foundLive = liveData.filter(row => row.tk == element.token);\n                    if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                        symbolListArray[index].ltp = foundLive[0].ltp;\n                        symbolListArray[index].nc = foundLive[0].nc;\n                        console.log(\"ws onmessage: \", foundLive);\n                    }\n                });\n                symbolListArray && symbolListArray.sort(function (a, b) {\n                    return b.nc - a.nc;\n                });\n                this.setState({ symbolList: symbolListArray });\n            }\n\n            wsClint.onerror = (e) => {\n                console.log(\"socket error\", e);\n            }\n\n            setInterval(() => {\n                this.makeConnection();\n                var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n                // console.log(\"Request :- \" + _req);\n                wsClint.send(_req);\n            }, 59000);\n\n\n            setInterval(() => {\n\n                if (this.state.tradingsymbol) {\n                    this.getLTP();\n                }\n\n            }, 1000);\n        }\n\n\n        var list = localStorage.getItem('watchList');\n        if (!list) {\n            localStorage.setItem('watchList', []);\n        }\n\n        // setInterval(() => {\n        //     AdminService.getAutoScanStock().then(res => {\n        //         let data = resolveResponse(res);\n        //         console.log(data);  \n        //         if(data.status  && data.message == 'SUCCESS'){ \n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \n        //         }\n        //     })    \n        // }, 2000);\n\n    }\n\n    stopBacktesting = () => {\n        this.setState({ stopScaningFlag: true });\n    }\n\n    backTestAnyPattern = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log('this.state.patternType', this.state.patternType)\n\n        if (!this.state.patternType) {\n            Notify.showError(\"Select pattern type\");\n            return;\n        }\n\n        if (this.state.patternType === 'NR4') {\n            this.backTestNR4();\n            return;\n        }\n        if (this.state.patternType === 'NR4ForNextDay') {\n            this.NR4ForNextDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_SameDay') {\n            this.backTestNR4SameDay();\n            return;\n        }\n\n\n        if (this.state.patternType === 'NR4_Daywide_daterage') {\n\n            var startdate = moment(this.state.startDate);\n            var enddate = moment(this.state.endDate);\n\n            const currentMoment = startdate;\n            const endMoment = enddate;\n\n\n            while (currentMoment.isSameOrBefore(endMoment, 'day')) {\n\n                console.log(`Loop at ${currentMoment.format('DD-MM-YYYY')}`);\n\n                this.backTestNR4DatewiseRange(currentMoment);\n\n                if (this.state.stopScaningFlag) {\n                    break;\n                }\n\n                await new Promise(r => setTimeout(r, this.state.symbolList.length * 310));\n\n\n                currentMoment.add(1, 'days');\n            }\n            this.setState({ backTestFlag: true, stopScaningFlag: false });\n\n\n            return;\n        }\n\n\n\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n\n        console.log(\"pattername\", this.state.patternType);\n\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\n                        // var startindex = index2 * 10; \n                        var last10Candle = candleData.slice(index2, index2 + 10);\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \n\n                            switch (this.state.patternType) {\n                                case 'TweezerTop':\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                case 'TweezerBottom':\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\n                                    break;\n                                default:\n                                    break;\n                            }\n\n                        }\n                        runningTest += candleData.length;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n\n    }\n\n\n    NR4ForNextDay = async () => {\n\n        this.setState({ FoundPatternList: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol })\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(0, 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var foundStock = {\n                                foundAt: new Date(firstCandle[0]).toString().substr(0, 25),\n                                symbol: element.symbol,\n                                token: element.token,\n                                pattenName: \"NR4\",\n                                SellAt: sellenty,\n                                high: firstCandle[2],\n                                low: firstCandle[3],\n                                BuyAt: buyentry,\n                                candleChartData: candleChartData,\n                                close: firstCandle[4]\n                            }\n\n                            this.nr4CheckPastPerfommance(element.token, foundStock);\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" Candle data not found!\");\n            })\n            await new Promise(r => setTimeout(r, 350));\n\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n    }\n\n\n    findShortTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        // var buyentrySL = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        var buyentrySL = (buyentry + (buyentry * 1 / 100));   //1% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][3];\n\n        console.log(element.symbol, \"result candle\", histdataInside);\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (candle5min[2] < buyHighest) {\n                    buyHighest = candle5min[3];\n                }\n\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[3] < buyentry) {\n                    console.log(element.symbol, \"taken short enty\", elementInside[3]);\n                    longTradeFound = {\n                        foundAt: \"Short-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        sellEntyPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (buyentry - elementInside[3]) * 100 / buyentry;\n                console.log(element.symbol, \"perChange\", perChange);\n\n                //trailing sl  \n                // if(elementInside[3] > buyentry && plPerChng >= 0.5){            \n                // }\n\n                //flat 1% profit booking\n                if (!buyEntryFlag && perChange >= 1) {\n\n                    var sellEntyPrice = buyentry - buyentry * 1 / 100;\n                    longTradeFound.buyExitPrice = sellEntyPrice;\n                    longTradeFound.perChange = perChange;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"Flat_1%_Booked\";\n                    break;\n                }\n                console.log(element.symbol, \"high\", elementInside[2]);\n\n                if (!buyEntryFlag && elementInside[2] >= buyentrySL) {\n                    var perChng = (buyentry - buyentrySL) * 100 / buyentry;\n                    longTradeFound.buyExitPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            }\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyentry - buyHighest) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n\n    findLongsTraadeOnNextDay = (element, firstCandle, candleChartData, histdataInside) => {\n        var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10));\n        //        var buyentrySL = (firstCandle[3] - (firstCandle[3] / 100 / 10));\n        //    var buyentrySL = (buyentry - (buyentry*1/100));   //1% SL\n        var buyentrySL = (buyentry - (buyentry * 0.3 / 100));   //0.3% SL\n\n\n        var resultCandle = [], buyEntryFlag = true, firstTimeTrail = true, trailCount = 0, longTradeFound = {}, elementInside = '', buyHighest = histdataInside[0][2];\n\n\n        if (histdataInside && histdataInside.length) {\n\n            for (let index = 0; index < histdataInside.length; index++) {\n                const candle5min = histdataInside[index];\n                resultCandle.push([new Date(candle5min[0]).getTime(), candle5min[1], candle5min[2], candle5min[3], candle5min[4]]);\n                if (buyHighest < histdataInside[index][2]) {\n                    buyHighest = histdataInside[index][2];\n                }\n            }\n\n            for (let insideIndex = 0; insideIndex < histdataInside.length; insideIndex++) {\n                elementInside = histdataInside[insideIndex];\n\n                if (buyEntryFlag && elementInside[2] > buyentry) {\n                    longTradeFound = {\n                        foundAt: \"Long-\" + new Date(elementInside[0]).toLocaleString(),\n                        symbol: element.symbol,\n                        buyExitPrice: buyentry,\n                        stopLoss: buyentrySL,\n                        brokerageCharges: 0.06,\n                        quantity: Math.floor(100000 / buyentry),\n                        candleChartData: candleChartData,\n                    }\n                    buyEntryFlag = false;\n                }\n\n\n\n                var perChange = (elementInside[2] - buyentry) * 100 / buyentry;\n\n\n                //flat 1% profit booking\n                // if(!buyEntryFlag && perChange >= 1){\n                //     var sellEntyPrice = buyentry + buyentry * 1/100; \n                //     longTradeFound.sellEntyPrice = sellEntyPrice;\n                //     longTradeFound.perChange = perChange;\n                //     longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                //     longTradeFound.exitStatus  = \"Flat_1%_Booked\"; \n                //     break;\n                // }\n\n                if (!buyEntryFlag) {\n\n                    if (firstTimeTrail && perChange >= 0.7) {\n                        trailCount += 1;\n                        var minPrice = buyentry + (buyentry * 0.1 / 100);\n                        longTradeFound.sellEntyPrice = minPrice;\n                        longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                        longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                        longTradeFound.exitStatus = \"Trail by 0.1% \" + trailCount + \"time\";\n                        firstTimeTrail = false;\n                    } else {\n                        var lastTriggerprice = longTradeFound.sellEntyPrice;\n                        var perchngfromTriggerPrice = ((elementInside[2] - lastTriggerprice) * 100 / lastTriggerprice).toFixed(2);\n\n                        var buyExitPricePer = longTradeFound.buyExitPrice;\n                        var buyExitPriceMinRange = ((elementInside[2] - buyExitPricePer) * 100 / buyExitPricePer).toFixed(2);\n\n                        if (perchngfromTriggerPrice > 0.7) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Trail by 0.25% \" + trailCount + \"time\";\n\n                        } else if (buyExitPriceMinRange >= 0.3 && buyExitPriceMinRange <= 0.4) {\n                            trailCount += 1;\n                            minPrice = lastTriggerprice + (lastTriggerprice * 0.25 / 100);\n                            longTradeFound.sellEntyPrice = minPrice;\n                            longTradeFound.perChange = (minPrice - buyentry) * 100 / buyentry;\n                            longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                            longTradeFound.exitStatus = \"Min range 0.3 -0.4% \" + trailCount + \"time\";\n                            break;\n                        }\n\n                    }\n\n\n\n\n\n\n                    if (elementInside[3] <= longTradeFound.sellEntyPrice) {\n                        console.log(element.symbol, \"trail hit elementInside[3] <= sellEntyPrice\", elementInside[3], longTradeFound.sellEntyPrice, new Date(elementInside[0]).toLocaleString());\n                        break;\n                    }\n\n                }\n\n\n                if (!buyEntryFlag && elementInside[3] <= buyentrySL) {\n                    console.log(element.symbol, \"SL hit elementInside[3] <= buyentrySL\", elementInside[3], buyentrySL, new Date(elementInside[0]).toLocaleString());\n\n                    var perChng = (buyentrySL - buyentry) * 100 / buyentry;\n                    longTradeFound.sellEntyPrice = buyentrySL;\n                    longTradeFound.perChange = perChng;\n                    longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                    longTradeFound.exitStatus = \"SL_Hit\";\n                    break;\n                }\n\n            } //candle loop end\n\n            if (!buyEntryFlag && !longTradeFound.sellEntyPrice) {\n                var perChng = (elementInside[4] - buyentry) * 100 / buyentry;\n                longTradeFound.buyExitPrice = elementInside[4];\n                longTradeFound.perChange = perChng;\n                longTradeFound.squareOffAt = new Date(elementInside[0]).toLocaleString();\n                longTradeFound.exitStatus = \"Market_End\";\n            }\n\n            if (!buyEntryFlag && Math.floor(100000 / buyentry) && longTradeFound.buyExitPrice) {\n                var perChngOnHigh = (buyHighest - buyentry) * 100 / buyentry;\n                longTradeFound.highAndLow = buyHighest;\n                longTradeFound.perChngOnHighLow = perChngOnHigh;\n                longTradeFound.candleChartDataInside = resultCandle;\n                console.log(element.symbol, \"longTradeFound\", longTradeFound);\n\n                this.setState({ backTestResult: [...this.state.backTestResult, longTradeFound] });\n            }\n\n        }\n\n    }\n\n\n    backTestNR4SameDay = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false, searchFailed: 0 });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(this.state.endDate).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            var start5thdate = moment(next5thCandle[0]).set({ \"hour\": 9, \"minute\": 15 });\n                            var end5thdate = moment(next5thCandle[0]).set({ \"hour\": 15, \"minute\": 30 });\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": element.token,\n                                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                                \"fromdate\": moment(start5thdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                                \"todate\": moment(end5thdate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n                            }\n\n                            AdminService.getHistoryData(data).then(insideCandleRes => {\n                                let histdataInside = resolveResponse(insideCandleRes, 'noPop');\n                                histdataInside = histdataInside && histdataInside.data;\n\n                                this.findLongsTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside);\n                                // this.findShortTraadeOnNextDay(element, firstCandle, candleChartData, histdataInside); \n\n\n                            }).catch(error => {\n                                Notify.showError(element.symbol + \" FIVE_MINUTE Candle data not found!\");\n                                this.setState({ searchFailed: this.state.searchFailed + 1 })\n                            });\n\n\n\n                            // var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[2] > buyentry) {\n                            //     var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                            //     var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                            //     sumPercentage += perChng;\n\n                            //     console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[2],\n                            //         stopLoss: firstCandle[3],\n                            //         buyExitPrice: buyentry,\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnHigh.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[2]),\n                            //         candleChartData : candleChartData,\n                            //     }\n                            //     if (Math.floor(10000 / firstCandle[2])){ \n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n                            // }\n                            // var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n                            // if (next5thCandle[3] < sellenty) {\n                            //     var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                            //     var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                            //     sumPercentage += perChng;\n                            //     console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                            //     var foundStock = {\n                            //         foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                            //         symbol: element.symbol,\n                            //         sellEntyPrice: sellenty,\n                            //         stopLoss: firstCandle[2],\n                            //         buyExitPrice: next5thCandle[4],\n                            //         highAndLow: next5thCandle[3],\n                            //         brokerageCharges: 0.06,\n                            //         perChange: perChng.toFixed(2),\n                            //         perChngOnHighLow: perChngOnLow.toFixed(2),\n                            //         squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                            //         quantity: Math.floor(10000 / firstCandle[3]),\n                            //         candleChartData : candleChartData\n                            //     }\n                            //     if(Math.floor(10000 / firstCandle[3])){\n                            //         this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                            //     }\n\n\n                            // }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                    Notify.showError(element.symbol + \" FIVE_MINUTE candle data emply!\");\n                    this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n                }\n            }).catch(error => {\n                Notify.showError(element.symbol + \" 1 day Candle data not found!\");\n                this.setState({ searchFailed: this.state.searchFailed + 1 })\n\n            });\n            await new Promise(r => setTimeout(r, 305));\n            //   this.setState({ backTestResult:  this.state.backTestResult.reverse()}); \n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true, stopScaningFlag: false });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    backTestNR4DatewiseRange = async (date) => {\n\n        this.setState({ backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n\n            if (this.state.stopScaningFlag) {\n                break;\n            }\n\n\n\n            var time = moment.duration(\"240:00:00\");\n            var startdate = moment(date).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(date).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4) {\n\n                        //last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[0];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            var currentDate = date.format('DD-MM-YYYY');\n\n                            var dateWithWlType = currentDate + ' ' + this.state.selectedWatchlist;\n\n                            var backTestResultDateRange = localStorage.getItem(\"backTestResultDateRange\") ? JSON.parse(localStorage.getItem(\"backTestResultDateRange\")) : {};\n                            var datewisetrades = backTestResultDateRange[dateWithWlType] ? backTestResultDateRange[dateWithWlType] : [];\n\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount, next5thCandle);\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                sumPercentage += perChng;\n\n                                console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[2],\n                                    stopLoss: firstCandle[3],\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[2])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n\n                                }\n\n                            }\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                sumPercentage += perChng;\n                                console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                var foundStock = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    symbol: element.symbol,\n                                    sellEntyPrice: sellenty,\n                                    stopLoss: firstCandle[2],\n                                    buyExitPrice: next5thCandle[4],\n                                    highAndLow: next5thCandle[3],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                if (Math.floor(10000 / firstCandle[3])) {\n                                    this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                    datewisetrades.push(foundStock);\n                                    backTestResultDateRange[dateWithWlType] = datewisetrades;\n\n                                    console.log('backTestResultDateRange', backTestResultDateRange);\n                                    localStorage.setItem('backTestResultDateRange', JSON.stringify(backTestResultDateRange));\n\n                                    //  var backTestResultDateRange = localStorage.getItem('backTestResultDateRange') && JSON.parse(localStorage.getItem('backTestResultDateRange')) ; \n\n                                    this.setState({ dateAndTypeKeys: Object.keys(backTestResultDateRange), backTestResultDateRange: backTestResultDateRange });\n\n                                }\n\n\n                            }\n\n                        }\n\n                    }\n                    runningTest = runningTest + candleData.length - 35;\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: date.format('YYYY-MM-DD') + ' ' + index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n    }\n\n    backTestNR4 = async () => {\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    //  candleData.reverse(); \n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                        // var startindex = index2 * 10; \n                        var last4Candle = candleData.slice(index2, index2 + 4);\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                            last4Candle.reverse();\n\n                            var rangeArr = [], candleChartData = [];\n                            last4Candle.forEach(element => {\n                                rangeArr.push(element[2] - element[3]);\n                                candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                            });\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\n                            rangeArr.forEach(element => {\n                                if (firstElement <= element) {\n                                    firstElement = element;\n                                    rgrangeCount += 1;\n                                }\n                            });\n\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \n                            if (rgrangeCount == 4) {\n                                var firstCandle = last4Candle[0];\n                                var next5thCandle = candleData[index2 + 4];\n                                candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[2] > buyentry) {\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\n                                    var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\n                                        stopLoss: firstCandle[3],\n                                        highAndLow: next5thCandle[2],\n                                        perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                        buyExitPrice: buyentry,\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[2]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[2])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                        this.setState({ backTestResult: this.state.backTestResult.reverse() });\n                                    }\n\n                                }\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                                if (next5thCandle[3] < sellenty) {\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\n                                    var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                    sumPercentage += perChng;\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\n\n                                    var foundStock = {\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                        symbol: element.symbol,\n                                        sellEntyPrice: sellenty,\n                                        perChngOnHighLow: perChngOnLow.toFixed(2),\n                                        stopLoss: firstCandle[2],\n                                        highAndLow: next5thCandle[3],\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\n                                        brokerageCharges: 0.06,\n                                        perChange: perChng.toFixed(2),\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                        quantity: Math.floor(10000 / firstCandle[3]),\n                                        candleChartData: candleChartData\n                                    }\n                                    if (Math.floor(10000 / firstCandle[3])) {\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n                                    }\n\n\n                                }\n\n                            }\n\n                        }\n                        runningTest = runningTest + candleData.length - 35;\n                    }\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 300));\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    nr4CheckPastPerfommance = (token, foundStock) => {\n        var time = moment.duration(\"4320:00:00\");\n        var startdate = moment(this.state.endDate).subtract(time);\n        var totalLongs = 0, totalShort = 0, totalLongPer = 0, totalShortPer = 0, totalLongHighPer = 0, totalShortLowPer = 0;\n        var longCandles = [], shortCandles = [];\n\n        console.log('starting function foundStock', foundStock)\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            console.log(\"candle history\", histdata);\n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleData = histdata.data;\n                //  candleData.reverse(); \n                for (let index2 = 0; index2 < candleData.length - 4; index2++) {\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(index2, index2 + 4);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\n                    if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\n\n                        last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        if (rgrangeCount == 4) {\n\n                            var firstCandle = last4Candle[0];\n                            var next5thCandle = candleData[index2 + 4];\n                            candleChartData.unshift([next5thCandle[0], next5thCandle[1], next5thCandle[2], next5thCandle[3], next5thCandle[4]]);\n\n                            console.log(token, last4Candle, rangeArr, rgrangeCount, firstCandle[0].toString().substr(0, 25));\n\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[2] > buyentry) {\n\n                                var perChng = (next5thCandle[4] - buyentry) * 100 / buyentry;\n                                var perChngOnHigh = (next5thCandle[2] - buyentry) * 100 / buyentry;\n\n                                var longData = {\n                                    foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: next5thCandle[4],\n                                    stopLoss: firstCandle[3],\n                                    highAndLow: next5thCandle[2],\n                                    perChngOnHighLow: perChngOnHigh.toFixed(2),\n                                    buyExitPrice: buyentry,\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[2]),\n                                    candleChartData: candleChartData\n                                }\n                                longCandles.push(longData);\n\n                                totalLongs += 1;\n                                totalLongPer += perChng;\n                                totalLongHighPer += perChngOnHigh;\n\n                            }\n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n                            if (next5thCandle[3] < sellenty) {\n                                var perChng = (sellenty - next5thCandle[4]) * 100 / firstCandle[3];\n                                var perChngOnLow = (sellenty - next5thCandle[3]) * 100 / firstCandle[3];\n\n                                var shortData = {\n                                    foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\n                                    sellEntyPrice: sellenty,\n                                    perChngOnHighLow: perChngOnLow.toFixed(2),\n                                    stopLoss: firstCandle[2],\n                                    highAndLow: next5thCandle[3],\n                                    buyExitPrice: next5thCandle[4],\n                                    brokerageCharges: 0.06,\n                                    perChange: perChng.toFixed(2),\n                                    squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\n                                    quantity: Math.floor(10000 / firstCandle[3]),\n                                    candleChartData: candleChartData\n                                }\n                                shortCandles.push(shortData);\n\n                                totalShort += 1;\n                                totalShortPer += perChng;\n                                totalShortLowPer += perChngOnLow;\n\n                            }\n\n\n                        }\n\n                    }\n                }\n\n\n                var pastPerferm = {\n                    totalLongs: totalLongs,\n                    totalShort: totalShort,\n                    totalLongPer: totalLongPer.toFixed(2),\n                    totalShortPer: totalShortPer.toFixed(2),\n                    totalLongHighPer: totalLongHighPer.toFixed(2),\n                    totalShortLowPer: totalShortLowPer.toFixed(2),\n                }\n                if (foundStock)\n                    foundStock.pastPerferm = pastPerferm;\n                foundStock.longCandles = longCandles;\n                foundStock.shortCandles = shortCandles;\n\n\n                console.log(\"foundStock\", foundStock);\n                if (Math.floor(10000 / firstCandle[4])) {\n                    this.setState({ FoundPatternList: [...this.state.FoundPatternList, foundStock] });\n\n                    localStorage.setItem('FoundPatternList', JSON.stringify(this.state.FoundPatternList));\n                }\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(token, \" candle data emply\");\n            }\n        });\n\n\n\n\n    }\n\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\n\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\n                                    squiredOffAt315 = higherStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //lowest of 3:15 profit booking\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\n                                    lowestOf315 = next10Candle[indexTarget2][4];\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = higherStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (priceDiff < -0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\n                                    flatSellingPrice = higherStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\n\n                                if (rangePriceDiff <= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\n                                    rangeSellingPrice = higherStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: sellEntyPrice,\n                                    stopLoss: higherStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: 0,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / sellEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\n                                //   foundStock.buyExitPrice = squiredOffAt315; \n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.buyExitPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.buyExitPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\n                                foundStock.buyExitPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n\n        this.setState({ backTestFlag: true });\n    }\n\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\n        if (candleHist && candleHist.length > 0) {\n\n            candleHist = candleHist.reverse();\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n                //1st candle #20d020 & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st #20d020 & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: #20d020');\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\n\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\n                        console.log(\"last10Candle\", candleHist);\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\n                        console.log(\"next10Candle\", next10Candle);\n\n                        if (next10Candle && next10Candle.length) {\n                            // next10Candle = next10Candle.reverse(); \n\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\n\n                            //flat 3:15 or SL hit squired off \n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\n\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\n                                    squiredOffAt315 = LowerStopLoss;\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\n                                    break;\n                                }\n                            }\n                            //highest of 3:15 profit booking\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\n                                    highestOf315 = next10Candle[indexTarget2][4];\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\n                                }\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n\n                            //trailing profit till of 3:15 \n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                }\n                                else {\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\n                                    trailingSLAT = next10Candle[indexTarget3][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    break;\n                                }\n                            }\n                            //flat 0.75% or SL hit profit booking\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\n\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (priceDiff > 0.70) {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\n                                    flatSellingPrice = LowerStopLoss;\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\n                                    break;\n                                }\n                            }\n\n                            //range based target range*1.5% or SL hit profit booking\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\n\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\n\n                                if (rangePriceDiff >= -1.5) {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\n                                    rangeSellingPrice = LowerStopLoss;\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\n                                    break;\n                                }\n                            }\n\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\n\n\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\n                                var foundStock = {\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\n                                    symbol: symbol,\n                                    sellEntyPrice: 0,\n                                    stopLoss: LowerStopLoss,\n                                    orderActivated: false,\n                                    buyExitPrice: buyEntyPrice,\n                                    brokerageCharges: 0.06,\n                                    quantity: Math.floor(10000 / buyEntyPrice),\n                                }\n                                foundStock.orderActivated = true;\n                                //sqr off at 3:15\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\n                                foundStock.sellEntyPrice = squiredOffAt315;\n\n                                //  lowest of 3:15\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = lowestOf315 \n\n                                //trailing till 3:15\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\n                                // foundStock.sellEntyPrice = trailingSL;\n\n                                //flat profit booking at 0.70%\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\n                                // foundStock.sellEntyPrice = flatSellingPrice;\n\n\n                                //range based target range*1.5%\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\n\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\n                                backTestResult.push(foundStock);\n\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\n\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\n                            }\n\n\n\n\n                        }\n\n                    }\n                }\n            }\n\n        }\n        this.setState({ backTestFlag: true });\n\n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": transactiontype, //BUY OR SELL\n            \"exchange\": \"NSE\",\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //   console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n\n                if (this.state.stoploss) {\n\n                    if (transactiontype == \"BUY\") {\n                        this.placeSLMOrder(\"SELL\");\n                    }\n\n                    if (transactiontype == \"SELL\") {\n                        this.placeSLMOrder(\"BUY\");\n                    }\n\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails = (name) => {\n\n        console.log(\"name\", name);\n\n        var token = '';\n        for (let index = 0; index < this.state.symbolList.length; index++) {\n            if (this.state.symbolList[index].symbol === name) {\n                token = this.state.symbolList[index].token;\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\n                break;\n            }\n        }\n        this.getHistory(token);\n    }\n\n    placeSLMOrder = (slmOrderType) => {\n\n        var data = {\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\": this.state.symboltoken,\n            \"transactiontype\": slmOrderType,\n            \"exchange\": \"NSE\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": this.state.quantity,\n            \"triggerprice\": this.state.stoploss,\n            \"variety\": \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //     console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                localStorage.setItem('ifNotBought', 'false')\n                this.setState({ orderid: data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n\n        this.setState({ downMoveCount: 0, upsideMoveCount: 0 });\n        this.setState({ InstrumentHistroy: [] });\n        this.getLTP();\n\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n        // var startdate = moment(this.state.startDate).subtract(time);\n        var beginningTime = moment('9:15am', 'h:mma');\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token,\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1),\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n        }\n\n        AdminService.getHistoryData(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            //    console.log(data); \n            if (data && data.data) {\n\n                var histCandles = data.data;\n                histCandles && histCandles.sort(function (a, b) {\n                    return new Date(b[0]) - new Date(a[0]);\n                });\n                if (histCandles.length > 0) {\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy: histCandles });\n\n\n                    var upsideMoveCount = 0, downMoveCount = 0;\n                    histCandles.forEach(element => {\n\n                        var per = (element[4] - element[1]) * 100 / element[1];\n                        if (per >= 0.3) {\n                            upsideMoveCount += 1;\n                        }\n                        if (per <= -0.3) {\n                            downMoveCount += 1;\n                        }\n\n                    });\n\n                    this.setState({ downMoveCount: downMoveCount, upsideMoveCount: upsideMoveCount });\n\n                }\n\n            }\n        })\n    }\n\n    onSelectItem = (event, values) => {\n\n\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n\n\n            var watchlist = []; //localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\n\n            if (!foundInWatchlist.length) {\n\n                watchlist.push(fdata);\n                this.setState({ tradingsymbol: fdata.symbol, symboltoken: fdata.token }, function () {\n                    this.LoadSymbolDetails(fdata.symbol);\n                });\n\n                this.setState({ symbolList: watchlist }, function () {\n                    this.updateSocketWatch();\n                });\n\n            }\n        }\n\n    }\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n\n    deleteItemWatchlist = (symbol) => {\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index, 1);\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList: list });\n    }\n\n    getAveragePrice = (orderId) => {\n\n        var oderbookData = localStorage.getItem('oderbookData');\n        var averageprice = 0;\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].orderid === 'orderId') {\n                averageprice = oderbookData[index].averageprice\n                this.setState({ averageprice: averageprice });\n                break;\n            }\n        }\n        return averageprice;\n    }\n    showCandleChart = (candleData, symbol, insiderow) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        if (insiderow)\n            localStorage.setItem('chartInfoDetails', JSON.stringify(insiderow));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showCandleBothChart = (row) => {\n        var candleChartData = row.candleChartData && row.candleChartData.reverse();\n        localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n        localStorage.setItem('cadleChartSymbol', row.symbol)\n\n        var candleChartDataInside = row.candleChartDataInside;\n\n        if (candleChartDataInside)\n            localStorage.setItem('candleChartDataInside', JSON.stringify(candleChartDataInside));\n\n\n        document.getElementById('showCandleChart').click();\n    }\n\n\n    render() {\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '',\n            firstLavel: \"Start Date and Time\",\n            secondLavel: \"End Date and Time\"\n        }\n\n\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0;\n        var tradetotal = 0, totalWin = 0, totalLoss = 0;\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <ChartDialog />\n                <Grid direction=\"row\" container spacing={1} style={{ padding: \"5px\" }} >\n\n                    <Grid item xs={12} sm={2}  >\n                        <Paper>\n                            <Autocomplete\n                                freeSolo\n                                id=\"free-solo-2-demo\"\n                                disableClearable\n                                style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n                                onChange={this.onSelectItem}\n                                //+ ' '+  option.exch_seg\n                                options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                    option.symbol\n                                ) : []}\n                                renderInput={(params) => (\n                                    <TextField\n                                        onChange={this.onChange}\n                                        {...params}\n                                        label={\"Search Symbol\"}\n                                        margin=\"normal\"\n                                        variant=\"standard\"\n\n                                        name=\"search\"\n                                        value={this.state.search}\n                                        InputProps={{ ...params.InputProps, type: 'search' }}\n                                    />\n                                )}\n                            />\n\n                            <div style={{ marginLeft: '10px' }}>\n                                <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\n                                    <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                                    <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                        <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n\n                                        {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                            <MenuItem value={element}>{element}</MenuItem>\n                                        ))\n                                        }\n\n                                    </Select>\n                                </FormControl>\n\n                            </div>\n\n\n\n                            <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\n\n                                {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\n                                    <>\n                                        <ListItem button style={{ fontSize: '12px', padding:'0px', paddingLeft: '5px' , paddingRight: '5px' }} >\n                                        {/* <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />  */}\n                                        <ListItemText style={{ color: !row.nc || row.nc == 0 ? \"\" : row.nc > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {row.ltp} ({row.nc}%) \n                                        </ListItem>\n\n                                    </>\n                                )) : ''}\n                            </div>\n\n                            {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={8}>\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Place Order</Typography>\n\n                            <Grid style={{ display: \"visible\" }} direction=\"row\" alignItems=\"center\" container>\n\n                                <Grid item xs={10} sm={5}>\n                                    {this.state.tradingsymbol ? <Typography variant=\"h5\" style={{ color: this.state.InstrumentPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} >\n                                        {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"} ({this.state.InstrumentPerChange + \"%\"})\n                                    </Typography> : <Typography variant=\"h5\" >Select Symbol </Typography>}\n                                    Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\n                                    High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\n                                    Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\n                                    P.Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\n                                        <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\n                                            <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\n                                            <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\n                                </Grid>\n                                <Grid item xs={10} sm={1}>\n                                    <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\n                                </Grid>\n\n\n                                <Grid item xs={1} sm={2}  >\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\n                                    <Button variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\n                                </Grid>\n\n                                \n                                <Grid item xs={12} sm={12} style={{ overflowY: 'scroll', height: \"50vh\" }} >\n                                <Table size=\"small\" aria-label=\"sticky table\" >\n                                    <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                        <TableRow variant=\"head\" style={{ fontWeight: 'bold' }} >\n\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Chng% <b style={{ color: '#20d020' }}> UP({this.state.upsideMoveCount})</b> | <b style={{ color: 'red' }}> Down({this.state.downMoveCount})</b> </TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\n                                            <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\n\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n                                        {/* this.getPercentageColor((row[4] - row[1])*100/row[1] >= 0.3)  */}\n                                        {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\n                                            <TableRow key={i} style={{ background: (row[4] - row[1]) * 100 / row[1] >= 0.3 ? \"#20d020\" : (row[4] - row[1]) * 100 / row[1] <= -0.3 ? \"#e66e6e\" : \"none\" }} >\n\n                                                <TableCell align=\"center\">{this.state.tradingsymbol}</TableCell>\n                                                <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\n                                                <TableCell align=\"center\"> <b>{(row[4] - row[1]) * 100 / row[1] && ((row[4] - row[1]) * 100 / row[1]).toFixed(2)}%</b></TableCell>\n                                                <TableCell align=\"center\">{row[1]}</TableCell>\n                                                <TableCell align=\"center\">{row[2]}</TableCell>\n                                                <TableCell align=\"center\">{row[3]}</TableCell>\n                                                <TableCell align=\"center\">{row[4]}</TableCell>\n                                                <TableCell align=\"center\">{row[5]}</TableCell>\n\n                                            </TableRow>\n                                        )) : ''}\n                                    \n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                               \n                               \n                            </Grid>\n                        </Paper>\n                        <br />  \n\n                        {/* <Paper > \n                            <iframe style={{width: \"100%\", height: \"550px\"}} src={\"http://localhost:3001/TradingViewChart.html?symbol=\"+this.state.tradingsymbol.split('-')[0]} > </iframe>\n                        </Paper> */}\n                        \n                        {/* <Paper > \n                            <iframe style={{width: \"100%\", height: \"550px\"}} src=\"http://localhost:3001/TradingViewTL.html\"> </iframe>\n                        </Paper>\n                       */}\n\n                        <Paper style={{ padding: \"10px\" }}>\n                            <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Backtest</Typography>\n\n                            <Grid direction=\"row\" container spacing={2}>\n\n                                <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\n                                        <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\n                                            <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\n                                            <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\n                                            <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\n                                            <MenuItem value={\"NR4ForNextDay\"}>NR4 For Next Day</MenuItem>\n\n\n                                            <MenuItem value={\"NR4_SameDay\"}>NR4 ByDate</MenuItem>\n                                            <MenuItem value={\"NR4_Daywide_daterage\"}>NR4 Daywise Range</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12} sm={4}>\n                                    <MaterialUIDateTimePicker callbackFromParent={dateParam} />\n                                </Grid>\n\n\n\n                                <Grid item xs={12} sm={6} style={{ marginTop: '28px' }}>\n                                    {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Search</Button> : <> <Button> <Spinner /> &nbsp; &nbsp; Scaning: {this.state.stockTesting}  {this.state.runningTest}  </Button>  <Button variant=\"contained\" onClick={() => this.stopBacktesting()}>Stop</Button> </>}\n                                    SearchFailed:{this.state.searchFailed}\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={12}>\n\n\n                                    {this.state.patternType == 'NR4' || this.state.patternType == 'TweezerTop' || this.state.patternType == 'TweezerBottom' || this.state.patternType == 'NR4_SameDay' ? <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n                                            <TableRow style={{ background: \"lightgray\" }}>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\n        <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell> */}\n\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\n\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChangeHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPerChangeHighLow')}%</b></TableCell>\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValueOnHighLow') > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValueOnHighLow')}</b></TableCell>\n\n\n\n\n                                                <TableCell align=\"left\" >Total Trades: {this.state.backTestResult && this.state.backTestResult.length} Win: {localStorage.getItem('totalWin')} Loss: {localStorage.getItem('totalLoss')}</TableCell>\n\n\n                                                <TableCell align=\"center\">Long: {localStorage.getItem('totalLongTrade')} Short:  {this.state.backTestResult && this.state.backTestResult.length - localStorage.getItem('totalLongTrade')}</TableCell>\n                                                <TableCell align=\"left\" colSpan={2}> Total Invested  {localStorage.getItem('totalInvestedValue')}</TableCell>\n\n                                                <TableCell align=\"center\" colSpan={4}> Average gross/trade PnL:  <b style={{ color: (localStorage.getItem('sumPerChange') / this.state.backTestResult.length) > 0 ? \"#20d020\" : \"#e66e6e\" }} >{(localStorage.getItem('sumPerChange') / this.state.backTestResult.length).toFixed(2)}%</b></TableCell>\n\n\n                                            </TableRow>\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CPnl% </TableCell>\n\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"left\">EntryTaken</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">ExitStatus</TableCell>\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\n\n\n\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                <TableRow hover key={i}  >\n\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                    {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n        <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n        */}\n                                                    <TableCell {...tradetotal = ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} {...sumPnlValue = sumPnlValue + tradetotal} {...totalWin += (((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? 1 : 0)} {...totalLoss += ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) < 0 ? 1 : 0} style={{ color: tradetotal > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {tradetotal.toFixed(2)}</TableCell>\n\n                                                    <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                    <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                    <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleBothChart(row)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                    <TableCell align=\"left\" style={{ color: row.foundAt && row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.exitStatus}</TableCell>\n\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                    <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt && row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                    <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                    {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                </TableRow>\n\n\n\n                                            )) : ''}\n\n\n                                            <TableRow style={{ background: \"lightgray\" }} >\n\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n<TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                <TableCell align=\"left\">{localStorage.setItem('totalWin', totalWin)}{localStorage.setItem('totalLoss', totalLoss)}</TableCell>\n\n\n                                                <TableCell align=\"left\" > </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n                                                <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                        : \"\"}\n\n\n\n                                    {this.state.patternType == 'NR4_Daywide_daterage' ? <>\n\n                                        {this.state.dateAndTypeKeys ? this.state.dateAndTypeKeys.map(key => (\n\n                                            <Table size=\"small\" aria-label=\"sticky table\" style={{ padding: \"5px\" }}>\n                                                <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                    <TableRow style={{ background: \"lightgray\" }} key={key}>\n                                                        <TableCell colSpan={11} className=\"TableHeadFormat\" align=\"center\"> {key}  {sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPerChangeHighLow = 0, sumPnlValue = 0, sumPnlValueOnHighLow = 0, totalInvestedValue = 0, totalLongTrade = 0, totalShortTrade = 0}</TableCell>\n                                                    </TableRow>\n\n                                                    <TableRow key={key + 1} variant=\"head\" style={{ fontWeight: 'bold', background: \"lightgray\" }}>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\"> CPnL% </TableCell>\n\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Charges</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell> */}\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">CNetPnL </TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLPnL% </TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">HLNet PnL</TableCell>\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" title=\"High on long side | Low in short side\" align=\"center\">High/Low</TableCell>\n\n\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOffAt</TableCell>\n                                                        <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\n                                                        {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell> */}\n\n\n                                                    </TableRow>\n\n                                                </TableHead>\n                                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                    {this.state.backTestResultDateRange[key].map((row, i) => (\n\n\n                                                        //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n\n                                                        <TableRow hover key={i}  >\n\n                                                            <TableCell style={{ color: row.perChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}>{row.perChange}%</TableCell>\n                                                            {/* <TableCell style={{ color: \"gray\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\n                            <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\n                        */}\n                                                            <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" > {((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n                                                            <TableCell style={{ color: row.perChngOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" {...sumPerChangeHighLow = sumPerChangeHighLow + parseFloat(row.perChngOnHighLow || 0)}> <b>{row.perChngOnHighLow}%</b></TableCell>\n                                                            <TableCell {...sumPnlValueOnHighLow = sumPnlValueOnHighLow + ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\" >{((row.sellEntyPrice * (row.perChngOnHighLow - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</TableCell>\n\n\n\n                                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                            <TableCell align=\"left\" style={{ color: row.foundAt.indexOf('Long') == 0 ? \"#20d020\" : \"#e66e6e\" }} {...totalLongTrade = totalLongTrade + (row.foundAt.indexOf('Long') == 0 ? 1 : 0)}>{row.foundAt}</TableCell>\n                                                            <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\n\n                                                            <TableCell align=\"center\" {...totalInvestedValue = totalInvestedValue + (row.foundAt.indexOf('Long') == 0 ? parseFloat(row.buyExitPrice * row.quantity) : parseFloat(row.sellEntyPrice * row.quantity))}>{row.sellEntyPrice}({row.quantity})</TableCell>\n                                                            <TableCell title=\"High on long side | Low in short side\" align=\"center\">{row.highAndLow}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.squareOffAt}</TableCell>\n\n                                                            <TableCell align=\"center\">{row.stopLoss}</TableCell>\n                                                            {/* <TableCell align=\"center\">{i + 1}</TableCell> */}\n\n                                                        </TableRow>\n\n\n                                                    ))}\n\n\n\n                                                    <TableRow style={{ background: \"lightgray\" }} >\n\n                                                        <TableCell style={{ color: sumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\n\n                                                        {/* <TableCell style={{ color: \"#e66e6e\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\n            <TableCell style={{ color: netSumPerChange > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell> */}\n\n                                                        <TableCell style={{ color: sumPnlValue > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\n\n                                                        <TableCell style={{ color: sumPerChangeHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))}{sumPerChangeHighLow.toFixed(2)}%</b></TableCell>\n                                                        <TableCell style={{ color: sumPnlValueOnHighLow > 0 ? \"#20d020\" : \"#e66e6e\" }} align=\"center\"><b>{(sumPnlValueOnHighLow).toFixed(2)}</b>{localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n\n                                                        <TableCell align=\"left\" > {localStorage.setItem('totalLongTrade', totalLongTrade)} {localStorage.setItem('totalInvestedValue', totalInvestedValue.toFixed(2))} </TableCell>\n\n                                                        <TableCell align=\"left\">{localStorage.setItem('sumPerChangeHighLow', sumPerChangeHighLow.toFixed(2))} {localStorage.setItem('sumPnlValueOnHighLow', sumPnlValueOnHighLow.toFixed(2))}</TableCell>\n\n                                                        <TableCell align=\"left\"></TableCell>\n\n\n                                                        <TableCell align=\"left\" > </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n                                                        <TableCell align=\"left\"> </TableCell>\n                                                        <TableCell align=\"left\"> </TableCell>\n\n\n\n\n                                                    </TableRow>\n\n                                                </TableBody>\n                                            </Table>\n\n\n\n                                        )) : ''}\n\n                                    </>\n\n                                        : \"\"}\n\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n\n                                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                            NR4 For Next Day  ({this.state.FoundPatternList.length})  at {this.state.endDate && this.state.endDate ? this.state.endDate.toString().substr(0, 16) : new Date().toString().substr(0, 16)}\n                                        </Typography>\n                                        : \"\"}\n\n                                    {this.state.patternType == 'NR4ForNextDay' ?\n                                        <Table size=\"small\" aria-label=\"sticky table\" >\n\n                                            <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\n\n                                                <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"center\">Sr </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt </TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Past Performance </TableCell>\n\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">High</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Low</TableCell>\n                                                    <TableCell className=\"TableHeadFormat\" align=\"left\">Close</TableCell>\n\n\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n\n\n                                                {this.state.FoundPatternList ? this.state.FoundPatternList.map((row, i) => (\n\n\n\n                                                    //    style={{display: row.orderActivated ? 'visible' : 'none'}} \"darkmagenta\" : \"#00cbcb\"\n                                                    <TableRow hover key={i}  >\n                                                        <TableCell align=\"center\">{i + 1}</TableCell>\n                                                        <TableCell align=\"left\"> <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\n\n                                                        <TableCell align=\"left\">{row.foundAt.substr(0, 16)}</TableCell>\n                                                        <TableCell align=\"left\" title=\"based on last one 6 month\">\n\n                                                            <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}><b>{row.pastPerferm.totalLongs}</b>  Longs:  {row.pastPerferm.totalLongPer}% ({(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)  </span> <br />\n                                                            Longs on High%: {row.pastPerferm.totalLongHighPer}%  ({(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}% per trade)<br />\n                                                            {row.longCandles && row.longCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    {/* <Button size=\"small\"  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> <EqualizerIcon /></Button> */}\n\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)} </a>  &nbsp;\n                                                                </>\n                                                            ))}\n\n                                                            <br />\n\n                                                            <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}><b>{row.pastPerferm.totalShort}</b> Short: {row.pastPerferm.totalShortPer}% ({(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}% per trade) </span> <br />\n                                                            Short on Low%: {row.pastPerferm.totalShortLowPer}% ({(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}% per trade)<br />\n                                                            {row.shortCandles && row.shortCandles.map((insiderow, i) => (\n                                                                <>\n                                                                    <a style={{ textDecoration: 'underline', background: 'lightgray', cursor: 'pointer' }} onClick={() => this.showCandleChart(insiderow.candleChartData, row.symbol, insiderow)}> {insiderow.foundAt.substr(7, 10)}  </a> &nbsp;\n\n\n                                                                </>\n                                                            ))}\n\n                                                        </TableCell>\n\n\n                                                        <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.SellAt}</TableCell>\n                                                        <TableCell align=\"left\">{row.high}</TableCell>\n                                                        <TableCell align=\"left\">{row.low}</TableCell>\n                                                        <TableCell align=\"left\">{row.close}</TableCell>\n\n\n                                                    </TableRow>\n\n\n\n                                                )) : ''}\n\n                                            </TableBody>\n\n                                        </Table>\n\n                                        : \"\"}\n                                </Grid>\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} sm={2}  >\n\n\n                        <Grid style={{ display: \"visible\" }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={12}>\n                                <Paper>\n                                    <Typography style={{ textAlign: \"center\", background: \"#20d020\" }}>{this.state.openEqualHighList.length} Open = Low : BUY </Typography>\n                                    <div style={{ overflowY: 'scroll', height: \"25vh\" }}>\n                                        {this.state.openEqualHighList && this.state.openEqualHighList.length ? this.state.openEqualHighList.map(row => (\n                                            <>                                            \n                                                <ListItem button  style={{ fontSize: '12px', padding:'0px',  paddingLeft: '5px' , paddingRight: '5px' }}  >\n                                                    <ListItemText style={{ color: !row.perChange || row.perChange == 0 ? \"\" : row.perChange > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.tradingsymbol)} primary={row.tradingsymbol} /> {row.ltp} ({row.perChange}%)\n                                                </ListItem> \n                                            </>\n                                        )) : ''}\n                                    </div>\n                                </Paper>\n                            </Grid>\n                         \n                         \n                            <Grid item xs={12} sm={12}>\n                                <Paper >\n                                    <Typography style={{ textAlign: \"center\", background: \"#e66e6e\" }}>{this.state.openEqualLowList.length} Open = High : Sell </Typography>\n                                    <div style={{ overflowY: 'scroll', height: \"25vh\" }}>\n                                        {this.state.openEqualLowList && this.state.openEqualLowList.length ? this.state.openEqualLowList.map(row => (\n                                            <>\n                                                <ListItem button  style={{ fontSize: '12px', padding:'0px',  paddingLeft: '5px' , paddingRight: '5px' }}  >\n                                                    <ListItemText style={{ color: !row.perChange || row.perChange == 0 ? \"\" : row.perChange > 0 ? '#20d020' : \"#e66e6e\" }} onClick={() => this.LoadSymbolDetails(row.tradingsymbol)} primary={row.tradingsymbol} /> {row.ltp} ({row.perChange}%)\n                                                </ListItem>\n                                            </>\n                                        )) : ''}\n                                    </div>\n                                </Paper>\n                            </Grid>\n\n\n                           \n\n\n                            <Grid item xs={12} sm={12}>\n                                <Paper>\n                                    <Typography style={{ textAlign: \"center\", background: \"lightgray\" }}>Weekly, Daily, Hourly Bullish = Buy</Typography>\n                                    <div style={{ overflowY: 'scroll', height: \"25vh\" }}>\n                                        \n                                    </div>\n                                </Paper>\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n                    </Grid>\n\n\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import axios from \"axios\";\nconst performServerAction = axios.create({\n    baseURL: ''\n  });\nexport default performServerAction;","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        {props.data.indexSymbol}\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.data.indexSymbol}  At {props.data.timestamp}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\n        <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\n\n                </TableRow>\n                <TableBody>\n                    \n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\n                            <TableRow hover key={index}>\n\n                            {index !== 0 ? <>\n                                   <TableCell align=\"left\">{index} </TableCell>\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\n                                 \n                                </>\n                           : \"\" } \n                                   \n                            </TableRow>\n\n                        )):      \n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\n                            Refresh\n                        </Button> </>}\n\n                    </TableBody>\n\n\n                </Table>    \n\n\n\n         \n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           // products: [],\n            stopnview:'', \n            indexTimeStamp:'', \n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\n        }\n            \n    }\n\n    componentDidMount() {\n        \n         this.loadPackList();\n  \n         var todayTime =  new Date(); \n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\n              setInterval(() => {\n                  this.loadPackList();\n              }, 60001 * 2);\n          }\n      }\n\n\n      loadPackList() {\n        \n    \n        AdminService.getAllIndices()\n            .then((res) => {\n                if(res.data){\n\n\n                    this.setState({indexTimeStamp : res.data.timestamp})\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\n                    this.setState({products :   softedData});\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \n\n\n                    // for (let i = 0; i < softedData.length; i++) {\n                    //     // var cancel = setInterval(() => {\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n                    //     // }, 1000);\n                    //     // if(i == softedData.length-1 ){\n                    //     //     clearInterval(cancel)\n                    //     // }\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\n\n                    // }\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\n                  \n                   \n                }\n\n            })\n            .catch((reject) => {\n\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \n                this.speckIt(\"All Indices API Failed\");     \n               \n\n            })\n    }\n\n\n    getIndicesStocks = (indexSymbol, index) =>{\n\n\n\n        AdminService.getIndiceStock(indexSymbol)\n        .then((res) => {\n            console.log(res.data)\n\n            var resdata = res.data; \n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \n\n\n            if(resdata){\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \n                \n                \n\n                if(document.getElementById('topDate_'+index)){\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \n                }\n                var percent = 0;\n\n                if(document.getElementById('top1_'+index)){\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \n                }\n                if(document.getElementById('top2_'+index)){\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top3_'+index)){\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \n                }\n                if(document.getElementById('top4_'+index)){\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \n                }\n                if(document.getElementById('top5_'+index)){\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \n                }   \n            }\n\n        })\n        .catch((reject) => {\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \n            this.speckIt(indexSymbol + \" API Failed \"  ); \n        })\n\n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n    }\n   \n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString(); \n      //  window.speechSynthesis.speak(msg);\n    }\n\n    dateFormat(date){ \n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\n    }\n    timeFormat(date){ \n        return moment().calendar();   \n        //return moment(date).format('hh:mm:ss');\n\n        \n    }\n  \n    render(){\n     \n\n      return(\n        <React.Fragment>\n                <PostLoginNavBar />\n            \n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\n\n                 <Grid item xs={7} sm={7}>\n                   \n                </Grid>\n\n        \n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\n\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\n                        Market - Indices at { this.state.indexTimeStamp }\n                    </Typography> \n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\n\n                <TableRow variant=\"head\" >\n                    \n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \n                    \n\n\n                </TableRow>\n                    \n                    <TableBody>\n                    \n                        { this.state.products ? this.state.products.map((idata, index) => (\n                            <TableRow hover key={index}>\n                              \n                              {/* 'SECTORAL INDICES' */}\n                                { idata.key !== 'vijay' ? <>\n\n                                   <TableCell align=\"left\">{index+1} </TableCell>\n\n                                     <TableCell align=\"left\">   \n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\n                                    </TableCell>\n\n                                   \n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\n                                    \n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\n                                \n                                    <TableCell align=\"left\"  >\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\n                                            Refresh\n                                        </Button>\n\n                                    </TableCell> \n\n\n                                    \n\n                                     \n                                     \n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \n                                    \n                                     </> : \"\"\n                                }\n                               \n\n                            </TableRow>\n\n                        )):<Spinner/>}\n\n\n\n\n\n                    </TableBody>\n\n\n                </Table>\n                </Grid>\n\n                </Grid>\n                   \n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\n//import \"./styles.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n\n\nexport default function App( props ) {\n\n \n\n  // dateTime: \"23-06-2021 4:43:02 PM\"\n  // diff: -298523\n  // isDuplicate: true\n  // totCEOI: 902038\n  // totCEOIChange: \"0.000\"\n  // totCEVol: 15312564\n  // totChangeINOICall: 127897\n  // totChangeINOIDiff: -107353\n  // totChangeINOIPut: 20544\n  // totDiffChange: \"0.000\"\n  // totPEOI: 603515\n  // totPEOIChange: \"0.000\"\n  // totPEVol: 15418605\n  var data =  props.diffData && props.diffData.data;\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \n\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \n\n  // var startpage = 0  \n  // if(scpage * 10 <  data.length) {\n  //   startpage =  scpage * 10;  \n  // }   \n  // else if (props.diffData.scrollcount > data.length){\n  //   startpage =  0; \n  // }\n\n // data.reverse();\n\n\n  // console.log('scrollcount', props.diffData.scrollcount); \n  // console.log('startpage', startpage);\n\n  // console.log('charrt data', data);\n\n  //for (let index = startpage; index <  startpage + 10; index++) {\n  \n\n\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\n    if(data[index]){\n      putData.push(data[index].totPEOI); \n      callData.push(data[index].totCEOI); \n      diffData.push(data[index].diff); \n      timeDate.push( data[index].dateTime.substring(19,11)); \n    }\n  \n  }\n\n\n\n\n  const chartData = {\n    labels: timeDate,\n    datasets: [\n      {\n        label: \"Put\",\n        data: putData,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"green\"\n      },\n      {\n        label: \"Call\",\n        data: callData,\n        fill: true,\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\n        borderColor: \"red\",\n        \n      },\n      // {\n      //   label: \"Diff\",\n      //   data: diffData,\n      //   fill: true,\n      //   onoffline : true,\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\n      //   borderColor: \"blue\",\n        \n      // }\n     \n    ]\n  };\n  const options = {\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\n  } \n\n  return (\n    <div className=\"App\">\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ApexCharts from 'apexcharts'\n\n\nexport default function App( props ) {\n\n  var options = {\n    series: [{\n    data: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }],\n    chart: {\n    type: 'candlestick',\n    height: 350\n  },\n  title: {\n    text: 'CandleStick Chart',\n    align: 'left'\n  },\n  colors: {\n    upward: 'darkmagenta',\n    downward: '#00cbcb'\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    }\n  }\n  };\n\n  var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n  chart.render();\n\n\n\n  return \"\"; \n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        AdminService.getFunds().then(fundsRes => {\n            // console.log('profiledata', profileRes); \n               let fundsResData = resolveResponse(fundsRes);\n             //  var fundsResData =  fundsRes && fundsRes.data; \n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\n               \n                this.setState({  fundData :fundsResData.data })\n               }\n           })\n\n    }\n   \n  \n   toFixedAmount =(value) => {\n\n    if(value){\n      return  parseFloat(value).toFixed(2);\n    }\n   }\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n            \n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n                <Paper style={{padding:\"25px\" }}>   \n\n                <Typography variant=\"h6\">\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\n                </Typography>\n                <Typography variant=\"h6\">\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\n                </Typography>\n                <Typography variant=\"h6\">\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\n                </Typography>\n              \n\n                <Typography variant=\"h6\">\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\n                </Typography>\n             \n                <Typography variant=\"h6\">\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\n                </Typography>\n                <Typography variant=\"h6\">\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\n                </Typography>\n\n\n                <Typography variant=\"h6\">\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\n                </Typography>\n                </Paper>\n                </Grid>\n               \n\n\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\n                <Paper style={{padding:\"25px\" }}>   \n               \n                <Typography variant=\"h6\">\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\n                    </Typography>\n                    \n                    \n                    <Typography variant=\"h6\">\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\n                    </Typography>\n\n                  \n                    </Paper>\n\n                </Grid>\n\n               \n              \n                </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n  \n// }\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            triggerprice :0,\n            price:0,\n            lotsize:0,\n            firstTimeFlag: true\n\n        }\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n        .then((res) => {\n            let data = resolveResponse(res, \"noPop\");\n            if(data && data.data){\n                var orderlist = data.data; \n                  orderlist.sort(function(a,b){\n                    return new Date(b.updatetime) - new Date(a.updatetime);\n                  });\n\n                this.setState({oderbookData: orderlist});\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\n\n                // var pendingOrder = orderlist.filter(function(row){\n                //     return row.status == \"trigger pending\";\n                // }); \n                // this.setState({pendingOrder: pendingOrder});\n                                    \n            }\n        });\n    }\n\n    componentDidMount() {\n        \n        this.getTodayOrder();\n       \n    }\n\n   \n    cancelOrderOfSame = (orderId,variety) =>  {\n       \n        var data = {\n            \"variety\":variety,\n            \"orderid\":orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if(data.status  && data.message === 'SUCCESS'){\n                console.log(\"cancel order\", data);   \n                this.getTodayOrder();\n               // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n       \n    }\n\n\n\n\n    modifyOrder = (row, trailingstoploss) => {\n\n        console.log(this.state.triggerprice);\n\n        var data = {\n            \"variety\" :row.variety,  // \"STOPLOSS\",\n            \"orderid\": row.orderid,\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\n            \"producttype\":  row.producttype, //\"DELIVERY\",\n            \"duration\": row.duration,\n            \"price\":  this.state.price,\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\n            \"quantity\":row.lotsize,\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n            }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n               // localStorage.setItem('ifNotBought' ,  'false')\n            }\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash !== \"#/position\" ?    <PostLoginNavBar/> : \"\"}\n            \n         \n\n\n                <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                                <Grid item xs={12} sm={6} >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                         Oders Placed ({this.state.oderbookData.length}) \n                                    </Typography> \n                                </Grid>\n                                <Grid item xs={12} sm={6} >\n                                    <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \n                                </Grid>\n                                \n                </Grid>\n                \n            <Grid direction=\"row\" alignItems=\"center\" container>\n            <Grid item xs={12} sm={12} >\n\n                     <Paper style={{padding:\"10px\"}} >\n\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\n               \n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow variant=\"head\" >\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\n\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\n\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\n                                <TableCell align=\"center\"><b>Variety</b></TableCell>\n\n                                \n\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\n                        \n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\n                                \n                                <TableCell align=\"center\"><b>Price</b></TableCell>\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\n\n                                <TableCell align=\"center\">Action</TableCell>\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\n                \n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        \n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\n                                <TableRow hover key={i} >\n\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\n\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\n\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    <TableCell align=\"center\">{row.variety}</TableCell>\n\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n\n                                    \n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\n                                        : row.quantity}\n                    \n\n                                    </TableCell>\n\n                                \n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' ? \n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\n                                        : row.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\n                                        : row.triggerprice}\n                                    </TableCell>\n\n\n                                    <TableCell align=\"left\">\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \n                                       </>\n                                     : ''}\n                                    </TableCell>\n                                    \n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">\n                                        {row.orderstatus}\n                                        <br />\n\n                                    {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? <>\n                                    <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"\" style={{marginLeft: '20px'}} onClick={() => this.cancelOrderOfSame(row.orderid, row.variety)}>Cancel</Button>    \n                                       </>\n                                     : ''}\n\n                                    </TableCell>\n\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\n\n                                    \n                                </TableRow>\n                            )):<Spinner/>}\n                        </TableBody>\n                    </Table>\n                    </Paper>    \n                </Grid>\n                 \n               </Grid>    \n           \n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport \"./ViewStyle.css\";\n\n\nclass TradeBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        \n\n        this.state = {\n            oderbookData:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n    getTodayTrade = () => {\n        AdminService.retrieveTradeBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log('datamy', data);\n\n                if(data && data.data){\n                    this.setState({oderbookData: data.data});\n                }\n            });\n    }\n\n    componentDidMount() {\n   \n   \n        this.getTodayTrade(); \n        \n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n   \n\n   \n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n    \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                  Today Trades ({this.state.oderbookData.length})\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\n                        \n\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\n\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n            \n\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\n                        <TableRow key={row.productId} >\n\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                            \n                            <TableCell align=\"center\">{row.producttype}</TableCell>\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default TradeBook;","import React from 'react';\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport  {API_KEY} from \"../../utils/config\";\nimport * as moment from 'moment';\nimport { w3cwebsocket } from 'websocket'; \nimport pako from 'pako';\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList : [],\n            userName: \"\",\n            password: \"\",\n            autoSearchList :[],\n            isDasable:false,\n            isError:false,\n            InstrumentLTP : {},\n            ifNotBought : true,\n            autoSearchTemp : [],\n            symboltoken: \"\", \n            tradingsymbol : \"\" ,\n            buyPrice : 0,\n            quantity : 1,\n            producttype : \"INTRADAY\",\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\n        \n        };\n        this.myCallback = this.myCallback.bind(this);\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n        var data  = e.target.value; \n        AdminService.autoCompleteSearch(data).then(res => {\n            let data =  res.data; \n            console.log(data);       \n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \n            this.setState({ autoSearchList : data });\n       })\n\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n          this.setState({ startDate: date  });\n        } else if (fromDate === \"END_DATE\") {\n          this.setState({ endDate: date  });\n        }\n      };\n    getLTP =() => {\n        var data  = {\n            \"exchange\":\"NSE\",\n            \"tradingsymbol\":  this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n             var LtpData = data && data.data; \n             this.setState({ InstrumentLTP : LtpData});\n\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\n            //    this.placeOrder(this.state.buyPrice); \n            //  }\n\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\n            //    this.placeSLMOrder(LtpData.ltp); \n            //  }\n       })\n    }\n    decodeWebsocketData =(array)  => {\n\n        console.log('atoms'); \n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n    \n        return newarray.join('');\n    }\n\n    makeConnection = (feedToken ,clientcode ) => {\n\n\n        var firstTime_req =  {\n            \"actiontype\": \"subscribe\",\n            \"feedtype\": \"order_feed\",\n            \"jwttoken\": this.state.feedToken ,\n            \"clientcode\": this.state.clientcode ,\n            \"apikey\": API_KEY\n       }\n       \n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\n        wsClint.send(JSON.stringify( firstTime_req));\n    }\n\n    updateSocketWatch = (feedToken,clientcode ) => {\n      \n        var channel = this.state.symbolList.map(element => {\n             return 'nse_cm|'+ element.token; \n        });\n\n        channel = channel.join('&'); \n        var sbin =  {\n            \"task\":\"mw\",\n            \"channel\": channel,\n            \"token\":this.state.feedToken,\n            \"user\":this.state.clientcode,\n            \"acctid\":this.state.clientcode\n        }\n        wsClint.send( JSON.stringify( sbin)); \n    }\n\n    \n    componentDidMount() {\n\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \n        var feedToken =   tokens &&  tokens.feedToken;\n\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \n        var clientcode =   userProfile &&  userProfile.clientcode;\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\n\n            \n        wsClint.onopen  = (res) => {\n\n             this.makeConnection();\n             console.log('connected');\n         //    this.updateSocketWatch();\n                \n            //  setTimeout(function(){\n            //    this.updateSocketWatch(feedToken ,clientcode);\n            //  }, 800);\n        }\n\n        wsClint.onmessage = (message) => {\n            \n            \n            var decoded = window.atob(message.data);\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\n\n            this.setState({ positionList : JSON.parse(data) });\n\n        //    this.state.symbolList.forEach(element => {\n\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\n        //     // console.log(\"foundLive\", foundLive);\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\n               \n               \n        //      });\n        \n        }\n\n        wsClint.onerror = (e) => {\n            console.log(\"socket error\", e); \n        }\n\n        setInterval(() => {\n\n            var heartbeatReq =  {\n                \"actiontype\": \"heartbeat\",\n                \"feedtype\": \"order_feed\",\n                \"jwttoken\": this.state.feedToken ,\n                \"clientcode\": this.state.clientcode ,\n                \"apikey\": API_KEY\n            }\n    \n            console.log(\"heartbeatReq : \" + heartbeatReq);\n            wsClint.send(heartbeatReq);\n          //  this.makeConnection(feedToken ,clientcode );\n        }, 59000);\n\n\n        var list = localStorage.getItem('watchList');\n        if(!list){\n            localStorage.setItem('watchList', []);\n        }\n      \n    }\n\n    placeOrder = (transactiontype) => {\n\n        var data = {\n            \"variety\":\"NORMAL\",\n            \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":transactiontype, //BUY OR SELL\n            \"exchange\":\"NSE\",\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": this.state.buyPrice,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\":this.state.quantity,\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n\n                if(this.state.stoploss){\n                    this.placeSLMOrder(this.state.stoploss);\n                }\n            }\n        })\n    }\n\n    LoadSymbolDetails =(name) => {\n       \n        var token= ''; \n        for (let index = 0; index <  this.state.symbolList.length; index++) {\n            if(this.state.symbolList[index].symbol === name){\n                    token =  this.state.symbolList[index].token; \n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\n                    break; \n            }\n        }  \n        this.getHistory(token); \n    }\n\n    placeSLMOrder = () => {\n\n        var data = {\n                \"tradingsymbol\": this.state.tradingsymbol,\n            \"symboltoken\":this.state.symboltoken,\n            \"transactiontype\":\"SELL\",\n            \"exchange\":\"NSE\",\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\n            \"duration\":\"DAY\",\n            \"price\": 0,\n            \"squareoff\":\"0\",\n            \"stoploss\":\"0\",\n            \"quantity\": this.state.quantity, \n            \"triggerprice\" : this.state.stoploss,\n            \"variety\" : \"STOPLOSS\"\n        }\n\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(data);   \n            if(data.status  && data.message === 'SUCCESS'){\n                localStorage.setItem('ifNotBought' ,  'false')\n                this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n\n    }\n\n    getHistory = (token) => {\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n\n        var time = moment.duration(\"00:50:00\");\n        var startdate = moment(new Date()).subtract(time);\n     // var startdate = moment(this.state.startDate).subtract(time);\n\n        var data  = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": token ,\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \n            \"fromdate\": moment(startdate).format(format1) , \n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n       }\n       \n        AdminService.getHistoryData(data).then(res => {\n             let data = resolveResponse(res,'noPop' );\n              console.log(data); \n              if(data && data.data){\n                 \n                var histCandles = data.data; \n                histCandles &&  histCandles.sort(function(a,b){\n                  return new Date(b[0]) - new Date(a[0]);\n                });\n                if(histCandles.length > 0){\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\n                }\n                this.getLTP();\n              }\n        })\n    }\n\n    onSelectItem = (event, values) =>{\n        \n\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \n        console.log(\"values\", values); \n        console.log(\"autoSearchTemp\", autoSearchTemp); \n        if(autoSearchTemp.length> 0){\n            var fdata = '';       \n             for (let index = 0; index < autoSearchTemp.length; index++) {\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \n                if( autoSearchTemp[index].symbol === values){\n                 fdata = autoSearchTemp[index];\n                 break;\n                }  \n             }\n           \n\n             var list = localStorage.getItem('watchList');\n             if(!list){\n                var data = []; \n                data.push(fdata); \n                localStorage.setItem('watchList',  JSON.stringify(data)); \n             }else{\n                list = JSON.parse( localStorage.getItem('watchList'));\n                var found = list.filter(row => row.symbol  === values);\n                if(found.length === 0){\n                    list.push(fdata); \n                    localStorage.setItem('watchList',  JSON.stringify(list)); \n                }\n               \n             }\n          \n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\n            setTimeout(() => {\n                this.updateSocketWatch();\n            }, 100);\n            \n        }\n     \n    }\n\n    deleteItemWatchlist = (symbol) => {\n        var list = JSON.parse( localStorage.getItem('watchList'));\n        var index = list.findIndex(data => data.symbol === symbol)\n        list.splice(index,1);\n        localStorage.setItem('watchList',  JSON.stringify(list)); \n        this.setState({ symbolList : list });\n    }\n\n    getAveragePrice =(orderId) => {\n\n       var  oderbookData = localStorage.getItem('oderbookData');\n       var averageprice = 0; \n        for (let index = 0; index < oderbookData.length; index++) {\n           if(oderbookData[index].orderid ===  'orderId'){\n            averageprice =oderbookData[index].averageprice \n            this.setState({ averageprice : averageprice });\n            break;\n           }\n        } \n        return averageprice;\n    }\n\n\n    render() {\n      \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                \n               \n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\n\n                    <Grid item xs={10} sm={12}> \n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\n\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\n                                \n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\n                              \n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n\n                            {/* {\n                                \"variety\": null,\n                                \"ordertype\": \"LIMIT\",\n                                \"producttype\": \"INTRADAY\",\n                                \"duration\": \"DAY\",\n                                \"price\": \"194\",\n                                \"triggerprice\": \"0\",\n                                \"quantity\": \"1\",\n                                \"disclosedquantity\": \"0\",\n                                \"squareoff\": \"0\",\n                                \"stoploss\": \"0\",\n                                \"trailingstoploss\": \"0\",\n                                \"tradingsymbol\": \"SBIN-EQ\",\n                                \"transactiontype\": \"BUY\",\n                                \"exchange\": \"NSE\",\n                                \"symboltoken\": null,\n                                \"instrumenttype\": \"\",\n                                \"strikeprice\": \"-1\",\n                                \"optiontype\": \"\",\n                                \"expirydate\": \"\",\n                                \"lotsize\": \"1\",\n                                \"cancelsize\": \"1\",\n                                \"averageprice\": \"0\",\n                                \"filledshares\": \"0\",\n                                \"unfilledshares\": \"1\",\n                                \"orderid\": \"201020000000080\",\n                                \"text\": \"\",\n                                \"status\": \"cancelled\",\n                                \"orderstatus\": \"cancelled\",\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\n                                \"fillid\": null,\n                                \"filltime\": null\n                            } */}\n\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\n                                <TableRow key={i} >\n\n\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\n                                    \n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\n                                    <TableCell align=\"center\">{row.status}</TableCell>\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\n                                \n                                </TableRow>\n                            )):''}\n                        </TableBody>\n                    </Table>\n\n                    </Paper>\n                    </Grid>\n\n\n\n\n                    </Grid>\n            \n               \n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     formContainer : {\n//         display: 'flex',\n//         flexFlow: 'row wrap'\n//     },\n\n    \n\n// };\n\nexport default Home;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Spinner from \"react-spinner-material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\nimport * as moment from 'moment';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nclass OrderBook extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            orderPenidngList: localStorage.getItem('orderPenidngList') && JSON.parse(localStorage.getItem('orderPenidngList')) || [], \n            buyAtPending: \"\", \n            sellAtPending: \"\", \n            pattenNamePending: \"\",\n            searchSymbolPending : \"\",\n            autoSearchList: [], \n            lastTradedData : {}\n        }\n    }\n\n    searchSymbolPendingOrder = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n\n        AdminService.autoCompleteSearch(e.target.value).then(searchRes => {\n            let searchResdata = searchRes.data;\n            if (e.target.value) {\n                var uppercaseName = e.target.value.toUpperCase() + \"-EQ\";\n                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.symbol === uppercaseName);\n                //  console.log(\"found\", found[0] && found[0].symbol); \n                if (found.length) {\n                    this.setState({searchSymbolPending : found[0].symbol,searchTokenPending :found[0].token, exch_seg: found[0].exch_seg})\n                }\n            }\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value });      \n    }\n\n    addInOrderPenidngList =  async() => {\n\n        console.log(this.state.searchSymbolPending, this.state.searchTokenPending, this.state.buyAtPending, this.state.sellAtPending);\n      \n        if(parseFloat(this.state.sellAtPending ) > this.state.lastTradedData.low){\n            if(!window.confirm(\"Be carefull Selling at high price \"+ this.state.sellAtPending +\", today \" +this.state.searchSymbolPending+ \" low is \" +  this.state.lastTradedData.low)){\n                return; \n            }\n        }\n        if(parseFloat(this.state.buyAtPending)  < this.state.lastTradedData.high){\n           if(!window.confirm(\"Be carefull Buying at low price \"+ this.state.buyAtPending +\", today \" +this.state.searchSymbolPending+ \" high is \" +  this.state.lastTradedData.high)){\n            return; \n           }\n        }\n            \n        if(this.state.searchSymbolPending && this.state.buyAtPending || this.state.sellAtPending){\n        \n            var data = {\n                createdAt : new Date().toLocaleTimeString(), \n                token: this.state.searchTokenPending, \n                symbol: this.state.searchSymbolPending, \n                buyAt: this.state.buyAtPending,\n                sellAt: this.state.sellAtPending,  \n                pattenName: this.state.pattenNamePending,\n                exch_seg:  this.state.exch_seg,\n            }\n\n            this.setState({orderPenidngList : [...this.state.orderPenidngList, data]}, function(){\n                this.setState({searchSymbolPending: '' ,searchTokenPending:'',buyAtPending: \"\", sellAtPending: \"\",pattenNamePending:\"\"  })\n                localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList));\n                localStorage.setItem('orderTagToPosition', JSON.stringify(this.state.orderPenidngList));\n            })\n            \n        }\n        \n\n    }\n\n    deleteInOrderPenidngList =(row)=> {\n\n        console.log(\"callback\", row); \n\n       var orderPenidngList =  localStorage.getItem('orderPenidngList') && JSON.parse( localStorage.getItem('orderPenidngList')); \n\n       for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n           const element = orderPenidngList[index];\n\n           if(row.token == element.token){\n            orderPenidngList.splice(index, 1);\n            localStorage.setItem('orderPenidngList', JSON.stringify(orderPenidngList)); \n            this.setState({orderPenidngList : orderPenidngList}); \n            break; \n           }\n       }\n        \n    }\n\n    callBackUpdate =(row) => {\n\n      this.deleteInOrderPenidngList(row); \n    }\n\n    updateLTP = async()=> {\n\n        for (let index = 0; index < this.state.orderPenidngList.length; index++) {\n            const element = this.state.orderPenidngList[index];\n            var data = { \"exchange\":element.exch_seg, \"tradingsymbol\":element.symbol , \"symboltoken\": element.token}; \n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if(LtpData && LtpData.ltp) {\n                    element.ltp = LtpData.ltp; \n                    element.perChange = ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2); \n                    localStorage.setItem('orderPenidngList', JSON.stringify(this.state.orderPenidngList)); \n                    this.setState({orderPenidngList : this.state.orderPenidngList}); \n                    console.log(\"ltp update\",element.symbol,element)\n\n                    if(element.buyAt && LtpData.ltp >= parseFloat(element.buyAt)){\n                        CommonOrderMethod.historyWiseOrderPlace(element, 'BUY', \"isAutomatic\", this.callBackUpdate);\n                    }else if(element.sellAt && LtpData.ltp <= parseFloat(element.sellAt)){\n                        CommonOrderMethod.historyWiseOrderPlace(element, 'SELL', \"isAutomatic\", this.callBackUpdate);\n                    }\n\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 100)); \n        }\n    }\n\n    getTradePrice =()=> {\n\n        var data = { \"exchange\":this.state.exch_seg, \"tradingsymbol\":this.state.searchSymbolPending , \"symboltoken\": this.state.searchTokenPending}; \n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if(LtpData && LtpData.ltp) {\n        \n\n                var lastTradedData = {\n                    symbol: LtpData.tradingsymbol,\n                    ltp : LtpData.ltp,\n                    perChange : ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2), \n                    open : LtpData.open, \n                    high : LtpData.high, \n                    close : LtpData.close, \n                    low : LtpData.low, \n                }\n                this.setState({lastTradedData : lastTradedData}); \n            \n            }\n        })\n    }\n\n\n    componentDidMount() {\n\n         this.updateLTP(); \n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 2000; \n            if(this.state.orderPenidngList.length > 10){\n                intervaltime = this.state.orderPenidngList.length * 110; \n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.updateLTP(); }, intervaltime ) });\n        }\n        \n    }\n\n  \n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.token,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n                localStorage.setItem('candleChangeShow', row.perChange);\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbol);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n  \n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    onChange2 = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n\n        this.setState({lastTradedData : {}, buyAtPending: \"\", sellAtPending: \"\", pattenNamePending: \"\",searchSymbolPending : \"\"}); \n\n        \n\n\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            console.log(data);\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n\n          \n        })\n\n    }\n\n    openNewPage = (e) => {\n        window.open(\"/mtrade/#/order-watchlist\");\n     //   window.location.replace('/mtrade/#/order-watchlist'); \n        localStorage.setItem('isOpenInNewPage', 'yes');\n    }\n\n    backToPositionPage = (e) => {\n        window.location.replace('/mtrade/#/position'); \n        localStorage.setItem('isOpenInNewPage', 'no');\n    }\n    \n\n    onSelectItem = (event, values) => {\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\n        //  console.log(\"values\", values); \n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \n        if (autoSearchTemp.length > 0) {\n            var fdata = '';\n            for (let index = 0; index < autoSearchTemp.length; index++) {\n                if (autoSearchTemp[index].symbol === values) {\n                    fdata = autoSearchTemp[index];\n                    break;\n                }\n            }\n            this.setState({searchSymbolPending : fdata.symbol,searchTokenPending :fdata.token, exch_seg: fdata.exch_seg }, function(){\n                this.getTradePrice(); \n            }); \n\n        }\n\n    }\n\n\n    render(){\n        \n      return(\n        <React.Fragment>\n\n\n            {window.location.hash == \"#/order-watchlist\" ? <PostLoginNavBar/> : \"\"}\n\n             <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                <Grid justify=\"space-between\"\n                    container>\n                    <Grid item  >\n                     \n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Orders Watchlist ({this.state.orderPenidngList && this.state.orderPenidngList.length}) \n                      {window.location.hash != \"#/order-watchlist\" ? <Button onClick={() => this.openNewPage()}> New Page <OpenInNewIcon/> </Button> : \"\"}\n                      {window.location.hash != \"#/position\" ?<Button onClick={() => this.backToPositionPage()}> Back to Position </Button> : \"\"}\n                    </Typography> \n\n\n                       \n\n                    </Grid>\n                    <Grid item  >\n\n                        <Grid justify=\"space-between\" container spacing={2}>\n\n\n                            <Grid item  >\n                                {/* <TextField label=\"Type full Symbol\" name=\"searchSymbolPending\" value={this.state.searchSymbolPending} onChange={this.searchSymbolPendingOrder} /> */}\n                                <Autocomplete\n                                        freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        disableClearable\n                                        onChange={this.onSelectItem}\n                                        value={this.state.searchSymbolPending}\n                                        //+ ' '+  option.exch_seg\n                                        options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\n                                            option.symbol\n                                        ) : []}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                onChange={this.onChange2}\n                                                {...params}\n                                                label={\"Search Symbol\"}\n                                                margin=\"normal\"\n                                                style={{  width:\"200px\",marginTop: 'inherit' }}\n                                                name=\"searchSymbolPending\"\n                                                variant=\"standard\"\n                                                InputProps={{ ...params.InputProps, type: 'search' }}\n                                            /> \n                                        )}\n                                    />\n                              {this.state.lastTradedData.symbol}  Ltp: <b style={{ color:this.state.lastTradedData.perChange == 0 ? \"none\" : this.state.lastTradedData.perChange > 0 ? \"green\" : \"red\"}}> {this.state.lastTradedData.ltp} {this.state.lastTradedData.ltp ? \"(\"+this.state.lastTradedData.perChange+\"%)\"  : \"\"}</b> \n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"BuyAt(limit)\" type=\"number\" name=\"buyAtPending\" value={this.state.buyAtPending} onChange={this.updateInput} />\n                              <br /> High: {this.state.lastTradedData.high}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"SellAt(limit)\" type=\"number\" name=\"sellAtPending\" value={this.state.sellAtPending} onChange={this.updateInput} />\n                                <br /> Low: {this.state.lastTradedData.low}\n                            </Grid>\n                            <Grid item  >\n                                <TextField label=\"Which Pattern\" name=\"pattenNamePending\" value={this.state.pattenNamePending} onChange={this.updateInput} />\n                                <br /> Open: {this.state.lastTradedData.open}\n                            </Grid>\n                            <Grid item  >\n                                <Button variant=\"contained\" style={{ marginLeft: '20px', marginTop: '10px' }} onClick={() => this.addInOrderPenidngList()}> Add </Button>\n                                <br /> P.Close: {this.state.lastTradedData.close}\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Table size=\"small\" aria-label=\"sticky table\" >\n                        <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                            <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">CreatetAt</TableCell>\n\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Exch_seg</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Token</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Delete</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody id=\"tableAdd\" style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                            {this.state.orderPenidngList ? this.state.orderPenidngList.map(row => (\n                                 <TableRow hover >\n\n                                   \n\n\n                                    <TableCell align=\"left\">\n                                        <Button style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                            {row.symbol} {row.ltp} ({row.perChange}) <ShowChartIcon />\n                                        </Button>\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">{row.createdAt}</TableCell>\n\n\n                                    <TableCell align=\"left\">{row.exch_seg}</TableCell>\n                                    <TableCell align=\"left\">{row.token}</TableCell>\n\n                                    <TableCell align=\"left\">{row.pattenName}</TableCell>\n                                    <TableCell align=\"left\">{row.buyAt}</TableCell>\n                                    <TableCell align=\"left\">{row.sellAt}</TableCell>\n                                    <TableCell align=\"left\" style={{color: row.perChange == 0.00 ? \"none\" :  row.perChange > 0 ? \"green\" :\"red\"}}><b>{row.ltp} ({row.perChange}%) </b></TableCell>\n\n                                    <TableCell align=\"left\">\n                                     <DeleteIcon style={{cursor:\"pointer\"}} onClick={() => this.deleteInOrderPenidngList(row)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )) : ''}\n                        </TableBody>\n                    </Table>\n\n\n                </Grid>\n\n\n                </Paper>\n\n\n         \n\n            </React.Fragment> \n        )\n    }\n  \n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     },\n//     selectStyle:{\n//         // minWidth: '100%',\n//          marginBottom: '0px',\n//           minWidth: 300,\n//           maxWidth: 300,\n//     }\n// }\n\n// const mapStateToProps=(state)=>{\n//     return {packs:state.packs.packs.data};\n// }\n\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\nexport default OrderBook;","import React, {useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { data } from 'jquery';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n\n\n \n  const [open, setOpen] = React.useState(false);\n \n  var [values, setValues] = React.useState({\n    data : [],\n    candledata: {}\n})\n\n\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  \n  var multipleChartData = localStorage.getItem(\"multipleChartData\") && JSON.parse(localStorage.getItem(\"multipleChartData\")); \n  \n  var longs = multipleChartData && multipleChartData.longCandles; \n  var shorts = multipleChartData && multipleChartData.shortCandles; \n\n   \n  \n  return (\n    <div>\n      <Button variant=\"outlined\" id=\"showMultipleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\n        Chart \n      </Button>\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {multipleChartData && multipleChartData.symbol} \n      {/*   <br />\n\n        <span style={{fontSize:'12px'}}>  \n        <b>FoundAt:</b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).foundAt.substr(0, 16)} &nbsp;&nbsp;\n        <b>Buy: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).buyExitPrice} &nbsp;&nbsp;\n        <b>Sell: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).sellEntyPrice} &nbsp;&nbsp;\n        <b>Change %: </b>  {localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;    <br />\n        <b>Change on High/Low %: </b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).perChange} &nbsp;&nbsp;\n        <b>SquareOffAt:</b>{localStorage.getItem('chartInfoDetails') && JSON.parse(localStorage.getItem('chartInfoDetails')).squareOffAt}\n        </span> */}\n      \n        </DialogTitle>\n        <DialogContent dividers>\n\n        {/* body data\n        <ReactApexChart\n              options={props.data && props.data.options}\n              series={props.data && props.data.series}\n              type=\"bar\"\n              width=\"500\"\n            /> */}\n\n              <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Longs ({longs && longs.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {longs ? longs.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n\n                <Typography component=\"h3\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Shorts ({shorts && shorts.length}) \n              </Typography> \n\n              <Grid justify=\"space-between\" container direction=\"row\">\n\n                {shorts ? shorts.map((row, i) => (\n                        <Grid item  >\n                        <ReactApexChart \n                              options={{\n                                        chart: {\n                                          type: 'candlestick',\n                                          height: 250\n                                        },\n                                        title: {\n                                            text: row.foundAt.substr(6, 10),\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                            enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                      data:  row.candleChartData.reverse()\n                                        \n                                    }]} \n                                    type=\"candlestick\" \n                                    width={250}\n                                    height={250} \n                            />\n\n                        </Grid>\n\n                )) : \"\"}\n                             \n                              \n                              \n                </Grid>\n\n       \n          \n\n    \n         \n         \n        </DialogContent>\n        <DialogActions>\n\n\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport OrderWatchlist from './OrderWatchlist';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionList: [],\n            autoSearchList: [],\n            InstrumentLTP: {},\n            autoSearchTemp: [],\n            foundPatternList: [], //localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')) || [], \n            symboltoken: \"\",\n            tradingsymbol: \"\",\n            buyPrice: 0,\n            quantity: 1,\n            producttype: \"DELIVERY\",\n            nr4TotalPer: 0,\n            pnlAmountTotal: 0,\n            totalBrokerCharges: '',\n            totalNetProfit: 0,\n            totelActivatedCount: 0,\n            totalBrokerChargesNR4: 0,\n            stockTesting: \"\",\n            perHighLowTotal: 0,\n            netPnLAmountOnHighlowTotal: 0,\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n\n\n        };\n    }\n    componentDidMount() {\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            this.setState({ positionInterval: setInterval(() => { this.getPositionData(); }, 1001) })\n            //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \n        } else {\n            clearInterval(this.state.positionInterval);\n            clearInterval(this.state.scaninterval);\n            clearInterval(this.state.bankNiftyInterval);\n        }\n\n        var scanendTime = moment('3:30pm', 'h:mma');\n        if (today <= friday && currentTime.isBetween(beginningTime, scanendTime)) {\n            //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \n\n\n\n            // var tostartInteral =   setInterval(() => {\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 15 === 0){\n            //         setTimeout(() => {\n            //             this.getCandleHistoryAndStore(); \n            //         }, 70000);\n            //         setInterval(() => {\n            //                 if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\n            //                 this.getCandleHistoryAndStore(); \n            //             }\n            //          }, 60000 * 15 + 70000 );  \n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n            var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n            setInterval(() => {\n                this.refreshLtpOnFoundPattern();\n            }, foundPatternsFromStored.length * 100 + 300000);\n\n\n\n        }\n\n        //this.getCandleHistoryAndStore(); \n\n        // this.findNR4PatternLive();\n        //this.findNR7PatternLive();\n\n\n\n        // this.getPositionData();\n        // this.getNSETopStock();\n\n\n        //  this.getMySelectedStock();\n\n\n\n        // setInterval(() => {\n\n        //     var timediff = moment.duration(\"00:50:00\");\n        //     var startdate = moment(new Date()).subtract(timediff);\n\n\n        //     var enddiff = moment.duration(\"00:01:00\");\n        //     var enddate = moment(new Date()).add(enddiff);\n\n\n        //     var data  = {\n        //         \"exchange\": \"NSE\",\n        //         \"symboltoken\": 212,\n        //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\n        //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \n        //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\n        //     }\n\n        //     AdminService.getHistoryData(data).then(res => { \n        //         let histdata = resolveResponse(res,'noPop' );\n        //         var candleData = histdata.data; \n        //         candleData.reverse(); \n        //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\n        //     }); \n\n        // }, 1000);\n\n        var backTestResult = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        this.setState({ foundPatternList: backTestResult })\n\n\n\n    }\n\n\n    componentWillUnmount() {\n        //clearInterval(this.state.positionInterval);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n\n    getCandleHistoryAndStore = async () => {\n\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString());\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.candleHistoryInterval) : \"\";\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\n        const today = moment().isoWeekday();\n        var timediff = '';\n\n\n\n        if (new Date().toLocaleTimeString() > \"10:05:00\") {\n            timediff = moment.duration(\"00:50:00\");\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\") {\n            timediff = moment.duration(\"66:00:00\");\n        } else {\n            timediff = moment.duration(\"19:00:00\");\n        }\n        timediff = moment.duration(\"21:00:00\");\n\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                \"fromdate\": moment(startdate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    if (candleData && candleData.length >= 10) {\n                        var last10Candle = candleData.slice(0, 10);\n                        console.log('', index + 1, element.symbol, 'Time', new Date().toLocaleTimeString());\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\n\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \n                    }\n\n                    // var data = {\n                    //     data : candleData, \n                    //     token: element.token,\n                    //     symbol: element.symbol\n                    // }\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \n                    // }); \n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(\" candle data emply\");\n                }\n            })\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n    }\n\n    findTweezerTopPatternLive = (candleHist, symbol) => {\n\n        //   console.log(\"TweezerTop finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var lastTrendCandleLow = candleHist[9][3];\n            var firstTrendCandleHigh = candleHist[2][2];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5% \n            //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\n\n            //\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n                        // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\n\n                        console.log('%c' + symbol + ' perfect twisser top  upside movement' + diffPer + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55');\n\n                        var ttophistCandle = [];\n                        candleHist.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser Top',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: ttophistCandle\n                        }\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n                        //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \n                        //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser top in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n    findTweezerBottomPatternLive = (candleHist, symbol) => {\n        // console.log(\"TweezerBottom finding\", symbol); \n        if (candleHist && candleHist.length > 0) {\n            //candleHist = candleHist.reverse(); \n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \n\n\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\n            for (let index = 3; index < candleHist.length; index++) {\n                if (maxHigh < candleHist[index][2])\n                    maxHigh = candleHist[index][2];\n                if (candleHist[index][3] < maxLow)\n                    maxLow = candleHist[index][3];\n            }\n\n            var last8candleHigh = candleHist[9][2];\n            var last8candleLow = candleHist[2][3];\n\n            var firstCandle = {\n                time: candleHist[0] && candleHist[0][0],\n                open: candleHist[0] && candleHist[0][1],\n                high: candleHist[0] && candleHist[0][2],\n                low: candleHist[0] && candleHist[0][3],\n                close: candleHist[0] && candleHist[0][4]\n            }\n            var secondCandle = {\n                time: candleHist[1] && candleHist[1][0],\n                open: candleHist[1] && candleHist[1][1],\n                high: candleHist[1] && candleHist[1][2],\n                low: candleHist[1] && candleHist[1][3],\n                close: candleHist[1] && candleHist[1][4]\n            }\n\n            var diffPer = ((last8candleLow - last8candleHigh) * 100 / last8candleHigh).toFixed(2);\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\n            //uptrend movement 1.5%  \n\n            //  \n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\n\n\n                //1st candle green & 2nd candle is red check\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\n                    // console.log(symbol, \"candleHist\",candleHist); \n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\n\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\n\n\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\n\n                        var tBophistCandle = [];\n                        candleHist.forEach(element => {\n                            tBophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n                        console.log('%c' + symbol + ' perfect twisser bottom downside movement diff ' + diffPer + \"% \" + new Date(candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55');\n                        var foundData = {\n                            symbol: symbol,\n                            pattenName: 'Twisser bottom',\n                            time: new Date(candleHist[0][0]).toLocaleString(),\n                            candleChartData: tBophistCandle\n                        }\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                        //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \n                        console.log(symbol, \"last10Candle\", candleHist);\n                        //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\n\n                        var msg = new SpeechSynthesisUtterance();\n                        msg.text = 'twisser bottom in ' + symbol.toLowerCase();\n                        window.speechSynthesis.speak(msg);\n                    }\n                }\n            }\n        }\n    }\n\n    findNR4PatternLive = async () => {\n\n        console.log('nr4 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"240:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data; var rgrangeCount = 0;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last4Candle = candleData.slice(1, 5);\n                    var last5Candle = candleData.slice(0, 5);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last4Candle.length >= 4) {\n\n                        // last4Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last4Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last5Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0];\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n                        console.log(index + 1, element.symbol, rgrangeCount);\n                        //  this.setState({stockTesting :index +\" \"+ element.symbol })\n\n\n\n                        if (rgrangeCount == 4) {\n                            console.log(index + 1, element.symbol, last4Candle, rangeArr, rgrangeCount);\n\n\n                            var firstCandle = last4Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR4',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr4 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 300));\n\n            // var showtestdata = (index + 1);\n\n            //   console.log(\"beforawait\", showtestdata, element.symbol);\n\n            //     this.setState({ stockTesting: showtestdata});\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    findNR7PatternLive = async () => {\n\n        console.log('nr7 scaning starting');\n\n        this.setState({ backTestResult: [], backTestFlag: false });\n\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [];\n        var runningTest = 1, sumPercentage = 0;\n        for (let index = 0; index < watchList.length; index++) {\n            const element = watchList[index];\n\n            var startdate = '';\n\n            var timediff = moment.duration(\"288:00:00\");\n            startdate = moment(new Date()).subtract(timediff);\n\n            var timediffend = moment.duration(\"24:00:00\");\n            var enddateLastday = moment(new Date()).subtract(timediffend);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": element.token,\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    candleData.reverse();\n\n                    // var startindex = index2 * 10; \n                    var last7Candle = candleData.slice(1, 8);\n                    var last9Candle = candleData.slice(0, 9);\n                    // var next10Candle = candleData.slice(index2+5 , index2+35 );    \n\n                    // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\n\n                    if (last7Candle.length >= 7) {\n\n                        // last7Candle.reverse();\n\n                        var rangeArr = [], candleChartData = [];\n                        last7Candle.forEach(element => {\n                            rangeArr.push(element[2] - element[3]);\n                        });\n\n                        last9Candle.forEach(element => {\n                            candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n                        var firstElement = rangeArr[0], rgrangeCount = 0;\n                        rangeArr.forEach(element => {\n                            if (firstElement <= element) {\n                                firstElement = element;\n                                rgrangeCount += 1;\n                            }\n                        });\n\n\n                        console.log(element.symbol, last7Candle, rangeArr, rgrangeCount);\n\n\n                        if (rgrangeCount == 7) {\n\n\n                            var firstCandle = last7Candle[0];\n\n                            //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\n                            var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\n\n                            //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \n                            var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\n\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": element.symbol,\n                                \"symboltoken\": element.token,\n                            }\n\n                            console.log('nr4 ltp', data);\n\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                console.log(LtpData, data);\n                                if (LtpData && LtpData.ltp) {\n\n\n                                    var orderActivated = <span> {LtpData.ltp} </span>;\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, perChange, brokerageCharges = 0.06;\n                                    if (LtpData.ltp > buyentry) {\n                                        orderActivated = <span style={{ color: 'green' }}> Long: {LtpData.ltp} ({((LtpData.ltp - buyentry) * 100 / buyentry).toFixed(2)}%) </span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((LtpData.ltp - buyentry) * 100 / buyentry) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / buyentry);\n                                        perChange = (LtpData.ltp - buyentry) * 100 / buyentry;\n                                        pnlAmount = ((LtpData.ltp - buyentry) * quantity).toFixed(2);\n                                        netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n\n                                    }\n                                    if (LtpData.ltp < sellenty) {\n                                        orderActivated = <span style={{ color: 'red' }}> Short: {LtpData.ltp} ({((LtpData.ltp - sellenty) * 100 / sellenty).toFixed(2)}%)</span>;\n                                        this.setState({ nr4TotalPer: this.state.nr4TotalPer + ((sellenty - LtpData.ltp) * 100 / sellenty) })\n                                        this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1 });\n                                        let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                                        quantity = Math.floor(perTradeExposureAmt / sellenty);\n                                        pnlAmount = ((sellenty - LtpData.ltp) * quantity).toFixed(2);\n                                        perChange = (sellenty - LtpData.ltp) * 100 / sellenty;\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\n\n                                    }\n\n                                    var foundData = {\n                                        symbol: element.symbol,\n                                        token: element.token,\n                                        pattenName: 'NR7',\n                                        time: new Date(firstCandle[0]).toLocaleString(),\n                                        BuyAt: buyentry,\n                                        SellAt: sellenty,\n                                        orderActivated: orderActivated,\n                                        candleChartData: candleChartData,\n                                        quantity: quantity,\n                                        brokerageCharges: brokerageCharges,\n                                        pnlAmount: pnlAmount,\n                                        netPnLAmount: netPnLAmount,\n                                        perChange: perChange\n                                    }\n\n                                    console.log('nr7 scaned', foundData);\n                                    this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] })\n\n\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                                    foundPatternList.push(foundData);\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                                }\n\n                            })\n\n\n\n\n\n                        }\n\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(element.symbol, \" candle data emply\");\n                }\n            })\n            var showtestdata = (index + 1) + \". \" + element.symbol;\n            this.setState({ stockTesting: showtestdata });\n            await new Promise(r => setTimeout(r, 300));\n        }\n        this.setState({ backTestFlag: true });\n        console.log(\"sumPercentage\", sumPercentage)\n    }\n\n    refreshCandleChartManually = async (row) => {\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var time = moment.duration(\"12:00:00\");\n        var startdate = moment(new Date()).subtract(time);\n\n        var data = {\n            \"exchange\": \"NSE\",\n            \"symboltoken\": row.symboltoken,\n            \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n            \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n            \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n        }\n        AdminService.getHistoryData(data).then(res => {\n            let histdata = resolveResponse(res, 'noPop');\n            //console.log(\"candle history\", histdata); \n            if (histdata && histdata.data && histdata.data.length) {\n\n                var candleChartData = [];\n                histdata.data.forEach(element => {\n                    candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                });\n\n\n                localStorage.setItem('candleChangeShow', ((row.ltp - row.close) * 100 / row.close).toFixed(2));\n\n\n                localStorage.setItem('candleChartData', JSON.stringify(candleChartData))\n                localStorage.setItem('cadleChartSymbol', row.symbolname);\n                document.getElementById('showCandleChart').click();\n\n            } else {\n                //localStorage.setItem('NseStock_' + symbol, \"\");\n                console.log(row.symboltoken, \"  emply candle found\");\n            }\n        }).catch(error => {\n            this.setState({ failedCount: this.state.failedCount + 1 });\n            Notify.showError(row.symboltoken + \" candle failed!\");\n        })\n\n    }\n\n    showCandleChart = (candleData, symbol) => {\n\n\n        candleData = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n\n        document.getElementById('showCandleChart').click();\n    }\n\n    showMultipleCandleChart = (row) => {\n        localStorage.setItem('multipleChartData', JSON.stringify(row))\n        document.getElementById('showMultipleChart').click();\n    }\n\n\n\n    refreshLtpOnFoundPattern = async () => {\n\n        this.setState({ nr4TotalPer: 0, totalBrokerChargesNR4: 0, totalNetProfit: 0, totelActivatedCount: 0, pnlAmountTotal: 0, perHighLowTotal: 0, netPnLAmountOnHighlowTotal: 0 });\n\n\n        var foundPatternList = this.state.foundPatternList;\n\n        this.setState({ foundPatternList: [] });\n\n        var foundPatternsFromStored = localStorage.getItem(\"FoundPatternList\") ? JSON.parse(localStorage.getItem(\"FoundPatternList\")) : [];\n\n\n        //       foundPatternList.forEach(element => {\n        for (let index = 0; index < foundPatternsFromStored.length; index++) {\n            const element = foundPatternList[index];\n\n            if (element && element.pattenName == 'NR4') {\n\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"tradingsymbol\": element.symbol,\n                    \"symboltoken\": element.token,\n                }\n\n                AdminService.getLTP(data).then(res => {\n                    let data = resolveResponse(res, 'noPop');\n                    var LtpData = data && data.data;\n                    //console.log(LtpData);\n                    var quantity = 0, pnlAmount = 0, netPnLAmount = 0, brokerageCharges = 0.06, perChange = 0, perChangeOnHighLow = 0, netPnLAmountOnHighlow = 0;\n                    if (LtpData && LtpData.ltp) {\n\n                        var orderActivated = <span> {LtpData.ltp} </span>;\n\n                        if (LtpData.ltp > element.BuyAt) {\n                            perChange = ((LtpData.ltp - element.BuyAt) * 100 / element.BuyAt);\n                            orderActivated = <span style={{ color: 'green' }}> Long: {perChange.toFixed(2)}% </span>;\n                            quantity = Math.floor(10000 / element.BuyAt);\n                            pnlAmount = ((LtpData.ltp - element.BuyAt) * quantity);\n                            brokerageCharges = (((element.BuyAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n\n                            perChangeOnHighLow = ((LtpData.high - element.BuyAt) * 100 / element.BuyAt);\n                            var pnlAmountOnhigh = ((LtpData.high - element.BuyAt) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnhigh - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n\n                        }\n                        if (LtpData.ltp < element.SellAt) {\n                            perChange = ((element.SellAt - LtpData.ltp) * 100 / element.SellAt);\n                            orderActivated = <span style={{ color: 'red' }}> Short: {perChange.toFixed(2)}%</span>;\n                            quantity = Math.floor(10000 / element.SellAt);\n                            pnlAmount = ((element.SellAt - LtpData.ltp) * quantity);\n                            brokerageCharges = (((element.SellAt * quantity) * brokerageCharges / 100) * 2);\n                            netPnLAmount = (pnlAmount - brokerageCharges);\n                            this.setState({ nr4TotalPer: this.state.nr4TotalPer + perChange });\n                            this.setState({ totelActivatedCount: this.state.totelActivatedCount + 1, pnlAmountTotal: this.state.pnlAmountTotal + pnlAmount });\n                            this.setState({ totalBrokerChargesNR4: this.state.totalBrokerChargesNR4 + brokerageCharges, totalNetProfit: this.state.totalNetProfit + netPnLAmount });\n\n                            perChangeOnHighLow = ((element.SellAt - LtpData.low) * 100 / element.SellAt);\n                            var pnlAmountOnLow = ((element.SellAt - LtpData.low) * quantity);\n                            netPnLAmountOnHighlow = (pnlAmountOnLow - brokerageCharges);\n                            this.setState({ perHighLowTotal: this.state.perHighLowTotal + perChangeOnHighLow, netPnLAmountOnHighlowTotal: this.state.netPnLAmountOnHighlowTotal + netPnLAmountOnHighlow });\n\n                        }\n\n                        var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n\n\n                        var builtupCandle = [new Date(), LtpData.open, LtpData.high, LtpData.low, LtpData.ltp];\n                        element.candleChartData.push(builtupCandle);\n\n                        var foundData = {\n                            symbol: element.symbol,\n                            symbolUpdated: LtpData.ltp + \"(\" + (todayChange).toFixed(2) + \"%)\",\n                            token: element.token,\n                            pattenName: 'NR4',\n                            OnHighLowActivated: quantity ? perChangeOnHighLow.toFixed(2) + \"% | \" + netPnLAmountOnHighlow.toFixed(2) : \"\",\n                            time: new Date().toLocaleTimeString(),\n                            BuyAt: element.BuyAt,\n                            SellAt: element.SellAt,\n                            foundAt: element.foundAt,\n                            orderActivated: orderActivated,\n                            candleChartData: element.candleChartData,\n                            quantity: quantity ? quantity : \"\",\n                            brokerageCharges: quantity ? brokerageCharges.toFixed(2) : \"\",\n                            pnlAmount: pnlAmount ? pnlAmount.toFixed(2) : \"\",\n                            netPnLAmount: netPnLAmount ? netPnLAmount.toFixed(2) : \"\",\n                            perChange: perChange,\n                            todayChange: todayChange,\n                            pastPerferm: element.pastPerferm\n                        }\n\n                        console.log('nr4 updated', foundData);\n\n                        this.setState({ foundPatternList: [...this.state.foundPatternList, foundData] });\n\n                        var foundlist = this.state.foundPatternList;\n\n                        foundlist.sort(function (a, b) {\n                            return b.perChange - a.perChange;\n                        });\n\n                        this.setState({ foundPatternList: foundlist });\n\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : [];\n                        foundPatternList.push(foundData);\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\n\n                    }\n\n                }).catch(error => {\n                    Notify.showError(element.symbol + \" ltd data not found!\");\n                })\n\n            }\n            await new Promise(r => setTimeout(r, 101));\n        }\n    }\n\n\n    getStoplossFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            const element = oderbookData[index];\n\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                if (row.netqty > 0) {\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.buyavgprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n                } else if (row.netqty < 0) {\n                    console.log(row.tradingsymbol, \"sellage\", row.sellavgprice, \"trigger\", element.triggerprice);\n                    data.stopLoss = element.triggerprice + \"(\" + ((element.triggerprice - row.sellavgprice) * 100 / row.sellavgprice).toFixed(2) + \"%)\";\n                    data.maxLossAmount = ((row.sellavgprice - element.triggerprice) * parseInt(row.netqty)).toFixed(2);\n                }\n                break;\n            }\n        }\n\n        return data;\n    }\n    getStoplossForSELLFromOrderbook = (row) => {\n        var oderbookData = localStorage.getItem('oderbookData');\n        oderbookData = JSON.parse(oderbookData);\n        var stopLoss = 0;\n        var data = {};\n        oderbookData.forEach(element => {\n            if (element.status === \"trigger pending\" && element.symboltoken === row.symboltoken) {\n                data.stopLoss = element.triggerprice + \"(\" + ((row.buyavgprice - element.triggerprice) * 100 / row.buyavgprice).toFixed(2) + \"%)\";\n                data.maxLossAmount = ((element.triggerprice - row.buyavgprice) * parseInt(row.netqty)).toFixed(2);\n            }\n        });\n        return data;\n    }\n    getHighLowPercentage = async () => {\n\n        if (!this.state.positionList.length) {\n            Notify.showError(\"First Refresh Position\")\n        }\n\n        for (let index = 0; index < this.state.positionList.length; index++) {\n            const element = this.state.positionList[index];\n\n            if (element.producttype == \"DELIVERY\") {\n                return \"\";\n            }\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": element.tradingsymbol,\n                \"symboltoken\": element.symboltoken,\n            }\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n                //console.log(LtpData);\n                if (LtpData && LtpData.ltp) {\n                    this.state.positionList[index].high = LtpData.high;\n                    this.state.positionList[index].low = LtpData.low;\n                }\n\n            })\n            await new Promise(r => setTimeout(r, 100));\n            this.setState({ positionList: this.state.positionList });\n\n        }\n\n    }\n    tagPatternWhichTaken =(token)=> {\n       var orderTagToPosition = localStorage.getItem('orderTagToPosition') && JSON.parse(localStorage.getItem('orderTagToPosition')) || []; \n       \n       var pattern = ''; \n       for (let index = 0; index < orderTagToPosition.length; index++) {\n           const element = orderTagToPosition[index];\n           if(token == element.token){\n            pattern = element.pattenName; \n            break;\n           }\n        }\n        return pattern\n    //    console.log(\"findpatter\", token, orderTagToPosition);\n    //    orderTagToPosition.forEach(element => {\n    //         if(token == element.token){\n    //             return element.pattenName; \n    //         }\n    //    });\n\n    }\n    getPositionData = async () => {\n        //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \n        var maxPnL = 0, totalMaxPnL = 0;\n        AdminService.getPosition().then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var positionList = data && data.data;\n            if (positionList && positionList.length > 0) {\n\n\n                var todayProfitPnL = 0, totalbuyvalue = 0, totalsellvalue = 0, totalQtyTraded = 0, allbuyavgprice = 0, allsellavgprice = 0, totalPercentage = 0;\n                positionList.forEach(element => {\n\n                    if (element.producttype == \"DELIVERY\") {\n                        return \"\";\n                    }\n\n                    var percentPnL = ((parseFloat(element.sellavgprice) - parseFloat(element.buyavgprice)) * 100 / parseFloat(element.buyavgprice)).toFixed(2);\n                    todayProfitPnL += parseFloat(element.pnl);\n                    totalbuyvalue += parseFloat(element.totalbuyvalue);\n                    totalsellvalue += parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue);\n                    totalQtyTraded += parseInt(element.buyqty);\n                    allbuyavgprice += parseFloat(element.buyavgprice);\n                    allsellavgprice += parseFloat(element.sellavgprice);\n                    element.percentPnL = percentPnL;\n                    totalPercentage += parseFloat(percentPnL);\n                    element.pattenName = this.tagPatternWhichTaken(element.symboltoken); \n\n                    var slData = this.getStoplossFromOrderbook(element);\n                    if (slData) {\n                        element.stopLoss = slData.stopLoss;\n                        element.stopLossAmount = slData.maxLossAmount;\n                        totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;\n                    }\n\n                });\n                this.setState({ todayProfitPnL: todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue: totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded });\n                this.setState({ allbuyavgprice: (allbuyavgprice / positionList.length).toFixed(2), allsellavgprice: (allsellavgprice / positionList.length).toFixed(2), totalPercentage: totalPercentage });\n\n                var brokerageOnlyCharges = ((totalbuyvalue + totalsellvalue) * 0.25 / 100);\n                var allCharges = brokerageOnlyCharges + brokerageOnlyCharges * 25 / 100;\n                this.setState({ totalBrokerCharges: allCharges.toFixed(2) });\n\n                this.setState({ totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL: totalMaxPnL.toFixed(2) });\n\n\n                positionList.sort(function (a, b) {\n                    return (b.netqty - a.netqty);\n\n                    //return b.netqty && (b.ltp - b.totalbuyvalue)*100/b.totalbuyvalue -  b.netqty && (a.ltp - a.totalbuyvalue)*100/a.totalbuyvalue;\n                });\n\n                this.setState({ positionList: positionList });\n\n            }\n        })\n\n    }\n\n    getNSETopStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getNSETopStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbolName) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n                                    console.log(found[0].symbol, \"found\", found);\n                                    localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\n                                    this.historyWiseOrderPlace(found[0].token, found[0].symbol, scandata[index].symbolName);\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    getMySelectedStock() {\n\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\";\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            AdminService.getSelectedStockFromDb().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    // console.log(\"scandata\",scandata); \n\n                    for (let index = 0; index < scandata.length; index++) {\n                        var isFound = false;\n                        for (let j = 0; j < this.state.positionList.length; j++) {\n                            if (this.state.positionList[j].symbolname === scandata[index].symbol) {\n                                isFound = true;\n                            }\n                        }\n\n                        //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \n                        if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)) {\n\n                            AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\n\n                                let searchResdata = searchRes.data;\n                                var found = searchResdata.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\" && row.name === scandata[index].symbolName);\n\n                                if (found.length) {\n\n                                    var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : [];\n                                    selectedStockwatchList.push(found[0]);\n                                    localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\n\n                                }\n                            })\n\n                        }\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    checkAndPlaceSingleOrder = (stock) => {\n        AdminService.autoCompleteSearch(stock).then(res => {\n            let data = res.data;\n            var found = data.filter(row => row.exch_seg === \"NSE\" && row.lotsize === \"1\");\n            console.log(\"stockfound\", found);\n            if (found && found.length) {\n                this.orderWithFlatstoploss(found[0].token, found[0].symbol);\n            }\n        })\n    }\n\n\n    getStockOnebyOne() {\n\n        var totalDayLoss = TradeConfig.totalCapital * TradeConfig.dailyLossPer / 100;\n        totalDayLoss = -Math.abs(totalDayLoss);\n        if (this.state.todayProfitPnL < totalDayLoss) {\n            console.log(\"daily loss crossed\", totalDayLoss);\n            clearInterval(this.state.scaninterval);\n        } else {\n            console.log(\"still ok\");\n            AdminService.getAutoScanStock().then(res => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data.status && data.message === 'SUCCESS') {\n                    var scandata = data.result;\n                    if (scandata && scandata.length > 0) {\n                        var lastSeachStock = scandata[scandata.length - 1].symbolName;\n                        localStorage.setItem('scannedStocks', JSON.stringify(scandata));\n                        var isFound = false;\n                        for (let index = 0; index < this.state.positionList.length; index++) {\n                            if (this.state.positionList[index].symbolname === lastSeachStock) {\n                                isFound = true;\n                            }\n                        }\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)) {\n                            console.log(\"found new\", lastSeachStock)\n                            var msg = new SpeechSynthesisUtterance();\n                            msg.text = 'hey Vijay, ' + lastSeachStock;\n                            window.speechSynthesis.speak(msg);\n                            localStorage.setItem('scannedstock_' + lastSeachStock, \"orderdone\");\n                            this.checkAndPlaceSingleOrder(lastSeachStock);\n                        }\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    orderWithFlatstoploss = (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n\n            var LtpData = data && data.data;\n            var ltpPrice = LtpData.ltp\n            if (ltpPrice) {\n\n                //  var stopLossPrice = ltp - (ltp*0.7/100);\n                var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer / 100);\n                stopLossPrice = this.getMinPriceAllowTick(stopLossPrice);\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                let quantity = Math.floor(perTradeExposureAmt / ltpPrice);\n                console.log(symbol + 'ltp ' + ltpPrice, \"quantity\", quantity, \"stopLossPrice\", stopLossPrice, \"perTradeExposureAmt\", perTradeExposureAmt);\n                var orderOption = {\n                    transactiontype: 'BUY',\n                    tradingsymbol: symbol,\n                    symboltoken: token,\n                    buyPrice: 0,\n                    quantity: quantity,\n                    stopLossPrice: stopLossPrice\n                }\n\n                if (quantity && stopLossPrice) {\n                    this.placeOrderMethod(orderOption);\n                }\n\n            }\n\n        }).catch((error) => {\n            console.log(symbol, \"not found\", 'error', error);\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        var data = e.target.value;\n        AdminService.autoCompleteSearch(data).then(res => {\n            let data = res.data;\n            //    console.log(data);       \n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\n            this.setState({ autoSearchList: data });\n        })\n    }\n\n\n    getLTP = () => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": \"BANKNIFTY\",\n            \"symboltoken\": \"26009\",\n        }\n        AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            //console.log(LtpData);\n            if (LtpData && LtpData.ltp) {\n                localStorage.setItem({ 'BankLtpltp': LtpData.ltp + '  ' + ((LtpData.ltp - LtpData.close) * 100 / LtpData.close).toFixed(2) + '%' });\n                //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\n            }\n\n        })\n    }\n\n\n    getStopLossPrice = async (token, symbol) => {\n        var data = {\n            \"exchange\": \"NSE\",\n            \"tradingsymbol\": symbol,\n            \"symboltoken\": token,\n        }\n\n        await AdminService.getLTP(data).then(res => {\n            let data = resolveResponse(res, 'noPop');\n            var LtpData = data && data.data;\n            if (LtpData && LtpData.ltp) {\n                var ltp = parseFloat(LtpData.ltp);\n                ltp = ltp - (ltp * 0.7 / 100);\n                var slPrice = this.getMinPriceAllowTick(ltp);\n\n                this.setState({ stoploss: slPrice });\n                return slPrice;\n            }\n\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"21:10:00\");\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n\n                            var stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                            stoploss = this.getMinPriceAllowTick(stoploss);\n\n                            var stoplossPer = (highestHigh - stoploss) * 100 / highestHigh;\n\n                            console.log(symbol, \" LTP \", LtpData.ltp);\n                            console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                            console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue);\n\n                            var orderOption = {\n                                transactiontype: 'BUY',\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5) {\n                                this.placeOrderMethod(orderOption);\n                            } else {\n                                localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\n                                console.log(symbol + \" its not fullfilled\");\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        console.log(symbol + \" candle data emply\");\n                    }\n                })\n\n            }\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    cancelOrderOfSame = (row) => {\n\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n        }\n        AdminService.cancelOrder(data).then(res => {\n            let data = resolveResponse(res);\n            if (data.status && data.message === 'SUCCESS') {\n                console.log(\"cancel order\", data);\n                // this.setState({ orderid : data.data && data.data.orderid });\n            }\n        })\n\n    }\n\n    squareOff = (row) => {\n\n        var data = {\n            \"variety\": \"NORMAL\",\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"transactiontype\": row.netqty > 0 ? 'SELL' : \"BUY\",\n            \"exchange\": row.exchange,\n            \"ordertype\": \"MARKET\",\n            \"producttype\": row.producttype, //\"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"quantity\": Math.abs(row.netqty),\n        }\n\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\n\n        // }\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            console.log(\"squireoff\", data);\n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                this.cancelOrderOfSame(row);\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n\n    }\n    updateOrderList = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"DELIVERY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                var msg = new SpeechSynthesisUtterance();\n                msg.text = 'hey Vijay, ' + slmOption.tradingsymbol;\n                window.speechSynthesis.speak(msg);\n\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    getOpenPeningOrderId = (symboltoken) => {\n\n        var oderbookData = localStorage.getItem('oderbookData') && JSON.parse(localStorage.getItem('oderbookData'));\n        var data = {};\n        for (let index = 0; index < oderbookData.length; index++) {\n            if (oderbookData[index].symboltoken === symboltoken && oderbookData[index].variety === \"STOPLOSS\") {\n                data.orderId = oderbookData[index].orderid\n                data.variety = oderbookData[index].variety\n                break;\n            }\n        }\n        return data;\n    }\n    modifyOrderMethod = (row, minPrice) => {\n        var orderData = this.getOpenPeningOrderId(row.symboltoken);\n\n        var data = {\n            \"variety\": orderData.variety,\n            \"orderid\": orderData.orderId,\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\n            \"producttype\": row.producttype, //\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"triggerprice\": parseFloat(minPrice),\n            \"quantity\": Math.abs(row.netqty),\n            \"tradingsymbol\": row.tradingsymbol,\n            \"symboltoken\": row.symboltoken,\n            \"exchange\": row.exchange\n        }\n        AdminService.modifyOrder(data).then(res => {\n            let data = resolveResponse(res, \"noPop\");\n\n            var msg = new SpeechSynthesisUtterance();\n\n\n            if (data.status && data.message === 'SUCCESS') {\n                //  this.setState({ ['lastTriggerprice_' + row.tradingsymbol]:  parseFloat(minPrice)})\n                msg.text = row.tradingsymbol + ' modified ' + data.message;\n                window.speechSynthesis.speak(msg);\n                localStorage.setItem('firstTimeModify' + row.tradingsymbol, 'No');\n                localStorage.setItem('lastTriggerprice_' + row.tradingsymbol, parseFloat(minPrice));\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n\n            }\n        })\n    }\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    getPercentage = (row) => {\n\n        var percentChange = 0, trailPerChange = 0; \n\n        if (row.netqty > 0) {\n            row.buyavgprice = parseFloat(row.buyavgprice);\n            percentChange = ((row.ltp - row.buyavgprice) * 100 / row.buyavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange >= 0.3) {\n                var minPrice = row.buyavgprice + (row.buyavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                this.modifyOrderMethod(row, minPrice);\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                if (perchngfromTriggerPrice >= 0.5) {\n                    minPrice = lastTriggerprice + (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            }\n        }\n\n\n        if (row.netqty < 0) {\n\n            row.sellavgprice = parseFloat(row.sellavgprice);\n            percentChange = ((row.ltp - row.sellavgprice) * 100 / row.sellavgprice);\n            if (!localStorage.getItem('firstTimeModify' + row.tradingsymbol) && percentChange <= -0.3) {\n                var minPrice = row.sellavgprice - (row.sellavgprice * 0.15 / 100);\n                minPrice = this.getMinPriceAllowTick(minPrice);\n                this.modifyOrderMethod(row, minPrice, (row.sellavgprice * 0.25 / 100));\n            } else {\n                var lastTriggerprice = parseFloat(localStorage.getItem('lastTriggerprice_' + row.tradingsymbol));\n                var perchngfromTriggerPrice = ((row.ltp - lastTriggerprice) * 100 / lastTriggerprice);\n                trailPerChange = perchngfromTriggerPrice; \n                console.log(\"perchngfromTriggerPrice\", perchngfromTriggerPrice);\n                if (perchngfromTriggerPrice <= -0.5) {\n                    minPrice = lastTriggerprice - (lastTriggerprice * 0.15 / 100);\n                    minPrice = this.getMinPriceAllowTick(minPrice);\n                    this.modifyOrderMethod(row, minPrice);\n                }\n            }\n        }\n\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n\n            if (!localStorage.getItem('squiredOff' + row.symboltoken)) {\n                localStorage.setItem('squiredOff' + row.symboltoken, 'yes');\n                this.squareOff(row);\n                console.log(\"Sqr off called for\", row.symbolname);\n            }\n        }\n\n        if(!trailPerChange){\n            return percentChange.toFixed(2) + \"%\"; \n        }else{\n            return percentChange.toFixed(2) + \"% | Trailing \"+ trailPerChange.toFixed(2) + \"%\"; \n        }\n    }\n\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n                <Grid style={{ padding: '5px' }} justify=\"space-between\" direction=\"row\" container>\n                    <Grid item >\n                       <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Positions ({this.state.positionList && this.state.positionList.length}) \n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={3} >\n                        <Typography component=\"h3\">\n                            <b>Date:: {new Date().toLocaleString()} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item  >\n                        <Typography component=\"h3\">\n                            <b>Total Turnover {this.state.totalTornOver} </b>\n                        </Typography>\n                    </Grid>\n\n\n                    <Grid item >\n                        <Typography component=\"h3\"  >\n                            <b> Charges</b> <b style={{ color: \"red\" }}>-{this.state.totalBrokerCharges} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Typography component=\"h3\"   >\n                            <b>  P/L </b> <b style={{ color: this.state.todayProfitPnL > 0 ? \"green\" : \"red\" }}>{this.state.todayProfitPnL} </b>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography component=\"h3\"  {...window.document.title = \"PnL:\" + (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2)}>\n                            <b> Net P/L </b> <b style={{ color: (this.state.todayProfitPnL - this.state.totalBrokerCharges) > 0 ? \"green\" : \"red\" }}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\n\n                        </Typography>\n                    </Grid>\n\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getPositionData()}>Refresh</Button>\n                    </Grid>\n                    <Grid item  >\n                        <Button type=\"number\" variant=\"contained\" style={{ float: \"right\" }} onClick={() => this.getHighLowPercentage()}><RefreshIcon /> H/L</Button>\n                    </Grid>\n                </Grid>\n\n                <Grid style={{ padding: '5px' }} spacing={1} direction=\"row\" alignItems=\"center\" container>\n\n\n                    <Grid item xs={12} sm={12}>\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", backgroundColor: \"\" }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        <TableCell style={{ paddingLeft: \"3px\" }} className=\"TableHeadFormat\" align=\"left\">&nbsp;Symbol</TableCell>\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Pattern Name</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Buy</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Avg Sell </TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty Taken</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Max P/L</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\n\n\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Closing%</TableCell>\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">HighLow%</TableCell> */}\n\n\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.positionList ? this.state.positionList.map(row => (\n\n\n                                        row.producttype !== 'DELIVERY1' ? <TableRow hover key={row.symboltoken} style={{ background: row.netqty !== '0' ? 'lightgray' : \"\" }} >\n\n                                            <TableCell align=\"left\">\n                                                <Button style={{ color: (row.ltp - row.close) * 100 / row.close > 0 ? \"green\" : \"red\" }} size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshCandleChartManually(row)} >\n                                                    {row.symbolname} {row.ltp} ({((row.ltp - row.close) * 100 / row.close).toFixed(2)}%) <ShowChartIcon />\n                                                </Button>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\n                                            {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\n\n                                            <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\n                                            <TableCell align=\"left\">{row.buyqty || row.sellqty}</TableCell>\n                                            <TableCell align=\"left\">{row.netqty}</TableCell>\n                                            {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\n                                            <TableCell align=\"left\"> {row.stopLoss}</TableCell>\n                                            <TableCell align=\"left\"> {row.stopLossAmount}</TableCell>\n\n\n                                            {/* {(localStorage.getItem('lastTriggerprice_'+row.tradingsymbol))} */}\n                                            <TableCell align=\"left\" style={{ color: parseFloat(row.pnl) > 0 ? 'green' : 'red' }}><b>{row.pnl}</b></TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== '0' ? this.getPercentage(row) : \"\"}\n                                                {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.ltp}</TableCell>\n\n\n                                            {/* {row.netqty > 0 ? \n                                <TableCell align=\"left\">{((row.ltp - row.totalbuyavgprice)*100/row.totalbuyavgprice).toFixed(2)}%</TableCell>\n                                : \n                                <TableCell align=\"left\">{((row.totalsellavgprice - row.ltp)*100/row.totalsellavgprice).toFixed(2)}%</TableCell>\n                               }\n\n                                {row.netqty > 0 ? \n                                <TableCell title=\"Buy Side  High\" align=\"left\">{row.high}({row.high ? ((row.high - row.totalbuyavgprice)*100/row.totalbuyavgprice).toFixed(2) +\"%\" : \"Refresh H/L\"}) </TableCell>\n                                    : \n                                <TableCell title=\"Sell Side Low\" align=\"left\">{row.low}({row.low ? ((row.totalsellavgprice - row.low)*100/row.totalsellavgprice).toFixed(2) +\"%\"  : \"Refresh H/L\"}) </TableCell>\n                                } */}\n\n\n                                            <TableCell align=\"left\">\n                                                {row.netqty !== \"0\" ? <Button size={'small'} type=\"number\" variant=\"contained\" color=\"Secondary\" onClick={() => this.squareOff(row)}>Square Off</Button> : \"\"}\n                                            </TableCell>\n\n                                        </TableRow> : \"\"\n\n                                    )) : ''}\n\n                                    <TableRow variant=\"head\" style={{ fontWeight: 'bold', backgroundColor: \"\" }}>\n\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.allsellavgprice}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\" style={{ color: parseFloat(this.state.todayProfitPnL) > 0 ? 'green' : 'red' }}>{this.state.todayProfitPnL} </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">\n\n                                            {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) + \"%\" : \"\"}\n\n                                        </TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell>\n\n\n                                    </TableRow>\n\n\n                                </TableBody>\n                            </Table>\n\n                        </Paper>\n\n\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '250px', overflow: \"auto\" }}>\n                        <OrderBook />\n                    </Grid>\n\n\n\n                    <Grid item xs={12} sm={12} style={{ height: '300px', overflow: \"auto\" }}>\n                         {localStorage.getItem('isOpenInNewPage') == \"no\" ?  <OrderWatchlist /> : \"\"}\n                    </Grid>\n\n\n                    {this.state.foundPatternList && this.state.foundPatternList.length ? \n                    <Grid item xs={12} sm={12} >\n                        <Paper style={{ overflow: \"auto\", padding: '5px' }} >\n\n\n\n                            <Grid justify=\"space-between\"\n                                container>\n                                <Grid item  >\n                                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                        Patterns Founds ({this.state.foundPatternList && this.state.foundPatternList.length})\n\n                                        <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.stockTesting} </span>\n                                    </Typography>\n                                </Grid>\n                                <Grid item >\n                                    <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpOnFoundPattern()}>Live Refresh</Button>\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Table size=\"small\" aria-label=\"sticky table\" >\n                                <TableHead style={{ whiteSpace: \"nowrap\", }} variant=\"head\">\n                                    <TableRow key=\"1\" variant=\"head\" style={{ fontWeight: 'bold' }}>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol | Activated({this.state.totelActivatedCount})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Performance 6M</TableCell>\n\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnLtp ({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">PnL({this.state.pnlAmountTotal.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Fee({this.state.totalBrokerChargesNR4.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">NetPnL({this.state.totalNetProfit.toFixed(2)})</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">OnH/L({this.state.perHighLowTotal.toFixed(2)}% | {this.state.netPnLAmountOnHighlowTotal.toFixed(2)})  </TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">Patten</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">FoundAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\n\n                                        <TableCell className=\"TableHeadFormat\" align=\"left\">UpdatedAt</TableCell>\n\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\n\n                                    {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\n                                        <TableRow hover key={row.symboltoken}>\n\n\n                                            <TableCell align=\"left\"> <Button variant=\"contained\" style={{ color: !row.todayChange ? '' : row.todayChange > 0 ? 'green' : 'red' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} {row.symbolUpdated} <EqualizerIcon /> </Button></TableCell>\n                                            <TableCell title={row.symbol + \" : Open all chart\"} align=\"left\" style={{ fontSize: '9px', cursor: 'pointer' }} onClick={() => this.showMultipleCandleChart(row)}>\n                                                {row.pastPerferm ? <>\n                                                    <span style={{ background: row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs >= 1 ? \"#92f192\" : \"\" }}>{row.pastPerferm.totalLongs}L({row.pastPerferm.totalLongPer}%) | Avg:{(row.pastPerferm.totalLongPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalLongs}LH({row.pastPerferm.totalLongHighPer}%) | Avg: {(row.pastPerferm.totalLongHighPer / row.pastPerferm.totalLongs).toFixed(2)}%</span> <br />\n                                                    <span style={{ background: row.pastPerferm.totalShortPer / row.pastPerferm.totalShort >= 1 ? \"#e87b7b\" : \"\" }}>{row.pastPerferm.totalShort}S:{row.pastPerferm.totalShortPer}% | Avg:{(row.pastPerferm.totalShortPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                    <span>{row.pastPerferm.totalShort}SL:{row.pastPerferm.totalShortLowPer}% | Avg:{(row.pastPerferm.totalShortLowPer / row.pastPerferm.totalShort).toFixed(2)}%</span> <br />\n                                                </> : \"\"}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\n\n\n                                            <TableCell align=\"left\">{row.quantity}</TableCell>\n                                            <TableCell align=\"left\">{row.pnlAmount}</TableCell>\n                                            <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\n                                            <TableCell align=\"left\"><b>{row.netPnLAmount} </b></TableCell>\n                                            <TableCell align=\"left\"><b>{row.OnHighLowActivated} </b></TableCell>\n\n                                            <TableCell align=\"left\">{row.pattenName}</TableCell>\n\n                                            <TableCell align=\"left\">{row.foundAt && row.foundAt.substr(0, 15)}</TableCell>\n\n                                            <TableCell align=\"left\">{row.BuyAt}</TableCell>\n                                            <TableCell align=\"left\">{row.SellAt}</TableCell>\n\n                                            <TableCell align=\"left\">{row.time}</TableCell>\n\n                                        </TableRow>\n                                    )) : ''}\n                                </TableBody>\n                            </Table>\n\n\n\n                        </Paper>\n                    </Grid> \n                    : \"\"}\n\n\n\n                </Grid>\n\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\n\n// const styles ={\n//     footerButton: {\n//         position: 'fixed',\n//     }\n// };\n\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport Chart from \"./Chart\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n      this.filterOptionChain(e.target.name,  e.target.value); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n  //     const xhr = new XMLHttpRequest();\n  //     xhr.open('HEAD', 'https://chartink.com/');\n  //     xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-csrf-token');\n   \n  //  //   xhr.setRequestHeader('x-csrf-token', 'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB');\n  // //    xhr.setRequestHeader('Content-Type', 'application/xml');\n  //     xhr.onreadystatechange = function(err , res){\n  //       console.log(err)\n  //     };\n  //     xhr.send('<person><name>Arun</name></person>');\n\n  //      var data = {\n  //       scan_clause: \"( {33489} ( latest ema( close,20 ) > 20 and latest sma( volume,20 ) >= 100000 and latest ichimoku conversion line( 3,7,14 ) >= latest ichimoku base line( 3,7,14 ) and latest ichimoku span a( 3,7,14 ) >= latest ichimoku span b( 3,7,14 ) and latest close >= latest ichimoku cloud bottom( 3,7,14 ) and( {33489} ( latest close >= latest parabolic sar( 0.02,0.02,0.2 ) and latest rsi( 10 ) >= 20 and latest stochrsi( 10 ) >= 20 and latest cci( 10 ) >= 0 and latest mfi( 10 ) >= 20 and latest williams %r( 10 ) >= -80 and latest close >= latest ema( close,14 ) and latest adx di positive( 10 ) >= latest adx di negative( 10 ) and latest aroon up( 10 ) >= latest aroon down( 10 ) and latest slow stochastic %k( 5,3 ) >= latest slow stochastic %d( 5,3 ) and latest fast stochastic %k( 5,3 ) >= latest fast stochastic %d( 5,3 ) and latest close >= latest sma( close,10 ) ) ) and( {33489} ( latest macd line( 14,5,3 ) >= latest macd signal( 14,5,3 ) and latest macd histogram( 14,5,3 ) >= 0 ) ) and( {33489} ( latest rsi( 14 ) > 50 and latest stochrsi( 14 ) > 50 and latest rsi( 10 ) < 80 and latest close >= latest upper bollinger band( 20,2 ) and latest close >= latest ichimoku cloud bottom( 9,26,52 ) and latest close > latest open and latest volume > 100000 and latest ema( close,5 ) > latest ema( close,20 ) and latest ema( close,20 ) > latest ema( close,50 ) and latest close > latest ema( close,50 ) ) ) ) )\" \n  //      }\n  //       AdminService.scanStocks().then(fundsRes => {\n  //           // console.log('profiledata', profileRes); \n  //              let fundsResData = resolveResponse(fundsRes);\n  //            //  var fundsResData =  fundsRes && fundsRes.data; \n  //              if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n  //               this.setState({  fundData :fundsResData.data })\n  //              }\n  //          })\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n       \n            <br/><br/><br/>\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n              \n\n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\n\n\n                 {/* <iframe id=\"tradingview_bb48c\" src=\"https://s.tradingview.com/widgetembed/?frameElementId=tradingview_bb48c&amp;symbol=BTCUSD&amp;interval=5&amp;hidesidetoolbar=0&amp;symboledit=1&amp;saveimage=1&amp;toolbarbg=f1f3f6&amp;details=1&amp;hotlist=1&amp;studies=%5B%5D&amp;hideideas=1&amp;theme=White&amp;style=1&amp;timezone=Etc%2FUTC&amp;withdateranges=1&amp;studies_overrides=%7B%7D&amp;overrides=%7B%7D&amp;enabled_features=%5B%5D&amp;disabled_features=%5B%5D&amp;locale=en&amp;referral_id=12553&amp;utm_source=www.daytrading.com&amp;utm_medium=widget&amp;utm_campaign=chart&amp;utm_term=BTCUSD\" style={{width: '100%', height: '500px', margin: '0 !important', padding: '0 !important'}} frameborder=\"0\" allowtransparency=\"true\" scrolling=\"no\" allowfullscreen=\"\"></iframe> */}\n\n                 <iframe id=\"tradingview_bb48c\" src=\"https://s.tradingview.com/widgetembed/?frameElementId=tradingview_bb48c&amp;symbol=SBIN&amp;interval=D&amp;hidesidetoolbar=0&amp;saveimage=1&amp;toolbarbg=f1f3f6&amp;details=1&amp;hotlist=1&amp;studies=%5B%5D&amp;hideideas=1&amp;theme=White&amp;style=1&amp;timezone=Etc%2FUTC&amp;withdateranges=1&amp;studies_overrides=%7B%7D&amp;overrides=%7B%7D&amp;enabled_features=%5B%5D&amp;disabled_features=%5B%5D&amp;locale=en&amp;referral_id=12553&amp;utm_source=www.daytrading.com&amp;utm_medium=widget&amp;utm_campaign=chart&amp;utm_term=SBIN\" style={{width: '50%', height: '200px', margin: '0 !important', padding: '0 !important'}} frameborder=\"0\" allowtransparency=\"true\" scrolling=\"no\" allowfullscreen=\"\"></iframe>\n\n\n               \n              \n                </Grid>\n            </Grid>\n                   \n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport \"./ViewStyle.css\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AdminService from \"../service/AdminService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chart from \"./Chart\";\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MyView extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            stopnview:'', \n            curnewdata:'', \n            underlyingValue : '', \n            timestamp:'',\n            totalCOI : 0,\n            expiry: '', \n            strike:'',\n            FilteredBY: '',\n            AllspTotalOI:[],\n            PEoi:0,\n            CEoi:0,\n            scrollcount : 0,\n            resMessage: [],\n            counter:0,\n            listCount:0\n            \n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\n\n\n\n        }\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\n            \n    }\n\n    onChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value}); \n\n    }\n   \n  \n  \n    componentDidMount() {\n\n        // AdminService.scanStocks().then(fundsRes => {\n        //     // console.log('profiledata', profileRes); \n        //      //  let fundsResData = resolveResponse(fundsRes);\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\n               \n        //         this.setState({  fundData :fundsResData.data })\n        //        }\n        //    })\n\n        AdminService.getStaticData().then(res => {\n          var data = res.data;\n          //data = JSON.parse(data);   \n          localStorage.setItem('staticData', JSON.stringify(data));\n\n          var totalWatchlist = Object.keys(data);\n          this.setState({ totalWatchlist: totalWatchlist });\n          localStorage.setItem('totalWatchlist', JSON.stringify(totalWatchlist));\n\n          this.setState({ staticData: data });\n\n          var watchlist = [];\n          totalWatchlist.forEach(element => {\n\n              var mylist = data[element];\n              mylist.forEach(element2 => {\n                  var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\n                  if (!foundInWatchlist.length) {\n                      watchlist.push(element2);\n                  }\n              });\n          });\n\n          localStorage.setItem('watchList', JSON.stringify(watchlist));\n\n      });\n\n\n\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n        this.setState({watchlistCount : list.length})\n\n    }\n\n    readCsv = async() => {\n\n      var list = this.state.addtowatchlist; \n\n      var parsedList =JSON.parse(list) \n      console.log(parsedList.length);\n      \n      var newJsonList = []; \n\n      for (let index = 0; index < parsedList.length; index++) {\n        const element = parsedList[index];\n        console.log(element);\n\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\n\n          let searchResdata =  searchRes.data; \n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \n        \n         // && element.LTP >= 200\n          if(found.length){ \n            newJsonList.push(found[0]); \n         \n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \n              if(!foundInWatchlist.length){\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\n\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\n                watchlist.push(found[0]); \n                localStorage.setItem('watchList', JSON.stringify(watchlist));\n                console.log(\"fdaata\");\n               \n              }else{\n                this.setState({watchlistCount : watchlist.length,})\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\n\n              }\n            //  console.log(found[0].symbol, \"found\",found);      \n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\n          }\n          if(this.state.resMessage && this.state.resMessage.length){\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\n\n          }\n        \n       })\n\n       await new Promise(r => setTimeout(r, 500));  \n      }\n\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\n      \n      var data = {\n        listName : parsedList[0].SYMBOL, \n        listItem : newJsonList \n      }\n      console.log(\"newjosnlist:\", data);\n      AdminService.addIntoStaticData(data).then(res => {\n        let resdata = resolveResponse(res,'noPop' );\n       // console.log(resdata);\n        this.setState({listName: resdata.listName,listCount: resdata.count})\n      });\n      \n    }\n    resetCsv=()=>{\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\n\n    }\n   \n  \n\n\n    render(){\n\n      return(\n        <React.Fragment>\n            \n            <PostLoginNavBar />\n\n          \n            <Paper style={{padding:\"25px\" }}>   \n\n            \n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\n              \n              \n           \n              \n\n\n              \n\n                <Grid item xs={12} sm={8}> \n                <Typography variant=\"h6\">\n                   Current Watchlist Count   {this.state.watchlistCount} \n\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \n\n                   <br />\n                  </Typography>\n                         \n\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\n              \n\n                </Grid>\n\n            \n                  \n                <Grid  item xs={8} sm={8}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\n\n\n\n                   \n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\n                     */}\n                       \n                </Grid>\n\n                <Grid  item xs={8} sm={8}>\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\n                         <>  <span> {data} </span>  <br /> </>\n                           \n                        )) : ''}\n   \n                </Grid>\n\n               \n              \n                </Grid>\n                   \n                </Paper>\n\n                \n           \n          \n\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }, \n    selectStyle:{\n        marginBottom: '0px',\n        minWidth: 240,\n        maxWidth: 240\n\n    }\n  \n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0, \n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        //  this.loadIndexesList();\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        \n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxRealty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"niftyPvtBank\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxCommodities\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxit\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMedia\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMetal\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPharma\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxPSU\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxMNC\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cnxInfra\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"cpse\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            }else{\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function(error){\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n//     loadIndexesList() {\n//         this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n//         AdminService.getAllIndices()\n//             .then((res) => {\n//                 if (res.data) {\n//                     var data = res.data, sectorStockList = [];\n//                     this.setState({ indexTimeStamp: data.timestamp })\n//                     var foundSectors = data.data.filter(row => row.key === \"SECTORAL INDICES\");\n//                     var softedData = foundSectors.sort(function (a, b) { return b.percentChange - a.percentChange });\n//                   //  this.setState({sectorList :  softedData});\n                  \n// //                    this.setState({ sectorList: []});\n//                     function sleep(ms) {\n//                         return new Promise(resolve => setTimeout(resolve, ms));\n//                     }\n//                     var updateLtpOnInterval = async (ref, softedData) => {\n\n//                             var middleSector = []; \n//                             for (let i = 0; i < softedData.length; i++) {\n\n//                                 var length = 1;                                     \n//                                 var sectorStocks = this.state.staticData[softedData[i].index];\n//                                 this.setState({stockUpdate : i+1 + \". \" + softedData[i].index});\n//                                 console.log(softedData[i].index,softedData[i].percentChange,  softedData[i]); \n//                                 if (softedData[i].percentChange >= 0.75 || softedData[i].percentChange <= -0.75) {\n//                                     softedData[i].stockList = sectorStocks;\n//                                     length = sectorStocks.length; \n//                                     if (sectorStocks && sectorStocks.length) {\n//                                         ref.refreshSectorLtp(sectorStocks,softedData[i].index );\n//                                     }\n//                                     this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n//                                 }else{\n//                                     softedData[i].stockList = sectorStocks;\n//                                     middleSector.push(softedData[i]); \n//                                 }\n\n                                \n                            \n//                                 await sleep(length / 10 * 1500);\n//                             }\n\n\n//                             middleSector.forEach(element => {\n//                                 this.setState({ sectorList: [...this.state.sectorList, element] });\n//                             });\n//                         }\n//                         updateLtpOnInterval(this, softedData);\n//                 }\n//             })\n//             .catch((reject) => {\n//                 Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n//                 this.speckIt(\"All Indices API Failed\");\n\n//             })\n\n//         this.setState({ refreshFlag: true });\n\n//     }\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount : 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n\n        \n\n                    var data = res.data && res.data.data, sectorStockList = [];\n                   // this.setState({ indexTimeStamp: data.timestamp })\n                   // var foundSectors = data.filter(row => row.key === \"SECTORAL INDICES\");\n                    var softedData = data.sort(function (a, b) { return b.percChange - a.percChange });\n                  //  this.setState({sectorList :  softedData});\n\n                  console.log(softedData); \n\n                    this.setState({ sectorList: []});  \n                    function sleep(ms) {\n                        return new Promise(resolve => setTimeout(resolve, ms));\n                    }\n                    var updateLtpOnInterval = async (ref, softedData) => {\n\n                            var middleSector = []; \n                            for (let i = 0; i < softedData.length; i++) {\n\n                                var length = 1;                                     \n                                var sectorStocks = this.state.staticData[softedData[i].indexName];\n                                this.setState({stockUpdate : i+1 + \". \" + softedData[i].indexName});\n                                console.log(softedData[i].index,softedData[i].percChange,  softedData[i]); \n                                if (softedData[i].percChange >= 0.75 || softedData[i].percChange <= -0.75) {\n\n                                    if(sectorStocks && sectorStocks.length){\n                                        softedData[i].stockList = sectorStocks;\n                                        length = sectorStocks.length; \n                                        if (sectorStocks && sectorStocks.length) {\n                                            ref.refreshSectorLtp(sectorStocks, softedData[i].indexName );\n                                        }\n                                       this.setState({ sectorList: [...this.state.sectorList, softedData[i]], topGLCount: this.state.topGLCount+1 });\n                                    }\n                                }else{\n                                    if(sectorStocks && sectorStocks.length>=1){\n                                        softedData[i].stockList = sectorStocks;\n                                        middleSector.push(softedData[i]); \n                                    }\n                                  \n                                }\n\n                                await sleep(length / 10 * 150);\n                            }\n\n\n                            middleSector.forEach(element => {\n                                this.setState({ sectorList: [...this.state.sectorList, element] });\n                            });\n                        }\n                        updateLtpOnInterval(this, softedData);\n                }\n            })\n            .catch((reject) => {\n          //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n          //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({stockUpdate : index});\n\n    // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n       // this.refreshSectorCandleManually(index); \n      //  this.checkLast5MinMovement(index); \n\n      \n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol , \"candle history\", histdata.data); \n\n                    \n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n     //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n           \n           \n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata=[];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                    period : 20, \n                    values : bbdata,\n                    stdDev : 2\n                        \n                    }\n\n                    var bb = BollingerBands.calculate(input); \n                    console.log(sectorStocks[index].symbol , \"BB\",input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber =(number)=>{\n\n        if(number){\n            return number.toFixed(2); \n        }else{\n            return number;  \n        }\n    }\n\n    render() {\n\n        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n            outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n                return b.nc - a.nc;\n            });\n        });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Top Gainer/Looser Sectors({this.state.topGLCount}) at {this.state.indexTimeStamp}\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Live Ltp</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n\n                        <Grid item xs={12} sm={this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3}>\n\n                            <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                                <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                    <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%) </b>\n\n                                </Button>\n                                &nbsp;\n\n                                <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                    <ShowChartIcon />\n                                </Button>\n\n\n                                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n\n                                    {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                        <Grid item xs={12} sm={6} >\n                                            <Paper style={{ textAlign: \"center\" }} >\n\n                                                {/* {sectorItem.cng} */}\n                                                <Typography style={{ background: this.getPercentageColor(sectorItem.cng), fontSize: '14px' }}>\n                                                    {i + 1}. {sectorItem.name} {sectorItem.ltp} ({ this.get2DecimalNumber(sectorItem.nc)}%)\n                                                </Typography>\n\n                                          \n                                            \n\n                                                {sectorItem.candleChartData ?  <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                   <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} /> \n                                                </span> : \"\"}\n\n                                                {sectorItem.vwapValue ? \n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span  style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                               : \"\"}\n\n\n                                                {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                    options={{\n                                                        chart: {\n                                                            type: 'candlestick',\n                                                            //  height: 40\n\n                                                        },\n                                                        title: {\n                                                            text: '',\n                                                            align: 'left'\n                                                        },\n                                                        xaxis: {\n                                                            type: 'datetime',\n                                                        },\n                                                        yaxis: {\n                                                            tooltip: {\n                                                                enabled: true\n                                                            }\n                                                        }\n                                                    }}\n                                                    series={[{\n                                                        data: sectorItem.candleChartData\n\n                                                    }]}\n                                                    type=\"candlestick\"\n                                        \n                                                /> : \"\"} */}\n\n\n                                            <Grid direction=\"row\" style={{padding:'5px'}} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\"  onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button>: <Spinner />}\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            </Paper>\n\n                                            \n                                        </Grid>\n\n                                    ))\n                                    }\n\n                                </Grid>\n\n                            </Paper>\n                        </Grid>\n\n\n\n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { setPackLoaded } from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport \"./ViewStyle.css\";\nimport MyDialog from './MyDialog'\nimport Notify from \"../../utils/Notify\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport pako from 'pako';\nimport { w3cwebsocket } from 'websocket';\nimport ChartDialog from './ChartDialog';\nimport LineChart from \"./LineChart\";\nimport ReactApexChart from \"react-apexcharts\";\nimport TradeConfig from './TradeConfig.json';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport vwap from 'vwap';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\n\n\n\n\nconst wsClintSectorUpdate = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\n\nclass MyView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // sectorList: [],\n            sluglist : {\n                'NIFTY 50': 'nifty',\n                'NIFTY AUTO': 'cnxAuto',\n                'NIFTY BANK': 'bankNifty',\n                'NIFTY ENERGY': 'cnxEnergy',\n                'NIFTY FIN SERVICE': 'cnxFinance',\n                'NIFTY FMCG': 'cnxFMCG',\n                'NIFTY IT': 'cnxit',\n                'NIFTY MEDIA': 'cnxMedia',\n                'NIFTY METAL': 'cnxMetal',\n                'NIFTY PHARMA': 'cnxPharma',\n                'NIFTY PSU BANK': 'cnxPSU',\n                'NIFTY REALTY': 'cnxRealty',\n                'NIFTY PVT BANK': 'niftyPvtBank',\n                'NIFTY CONSUMPTION': 'cnxConsumption',\n                'NIFTY CPSE': 'cpse',\n                'NIFTY INFRA': 'cnxInfra',\n                'NIFTY MNC': 'cnxMNC',\n                'NIFTY PSE': 'cnxPSE',\n\n                // 'NIFTY GROWSECT 15': 'ni15',H\n                // 'NIFTY COMMODITIES': 'cnxCommodities',\n                // 'NIFTY SERV SECTOR': 'cnxService',\n                // 'NIFTY100 LIQ 15': 'nseliquid',\n                // 'NIFTY MID LIQ 15': 'niftyMidcapLiq15',\n                // 'NIFTY DIV OPPS 50': 'cnxDividendOppt',\n                // 'NIFTY50 VALUE 20': 'nv20',\n                // 'NIFTY QUALITY 30': 'niftyQuality30',\n                // 'NIFTY50 EQL WGT': 'nifty50EqualWeight',\n                // 'NIFTY100 EQL WGT': 'nifty100EqualWeight',\n                // 'NIFTY ALPHA 50': 'niftyAlpha50',\n                // 'NIFTY NEXT 50': 'juniorNifty',\n                // 'NIFTY MIDCAP 50': 'niftyMidcap50',\n            },\n            stopnview: '',\n            indexTimeStamp: '',\n            refreshFlag: true,\n            topGLCount: 0,\n            refreshFlagCandle: true,\n            sectorStockList: localStorage.getItem('sectorStockList') && JSON.parse(localStorage.getItem('sectorStockList')) || [],\n            sectorList: localStorage.getItem('sectorList') && JSON.parse(localStorage.getItem('sectorList')) || [],\n            watchList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n        }\n        this.refreshSectorCandle = this.refreshSectorCandle.bind(this);\n    }\n\n    componentDidMount() {\n        // window.location.reload(); \n\n        window.document.title = \"Hit Map2\"; \n\n\n       this.loadIndexesList();\n\n       \n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\n        var feedToken = tokens && tokens.feedToken;\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        var clientcode = userProfile && userProfile.clientcode;\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 30000);\n    \n\n            wsClintSectorUpdate.onopen = (res) => {\n                // this.makeConnection();\n                // this.updateSocketWatch();\n            }\n\n\n            wsClintSectorUpdate.onmessage = (message) => {\n                var decoded = window.atob(message.data);\n                var data = this.decodeWebsocketData(pako.inflate(decoded));\n                var liveData = JSON.parse(data);\n\n                //  console.log(\"sector live data\", liveData);\n                window.document.title = \"Sector Live WS: \" + liveData.length;\n\n                this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                        var foundLive = liveData.filter(row => row.tk == element.token);\n                        if (foundLive.length > 0 && foundLive[0].ltp && foundLive[0].nc) {\n                            this.state.sectorList[index].stockList[stockIndex].ltp = foundLive[0].ltp;\n                            this.state.sectorList[index].stockList[stockIndex].nc = foundLive[0].nc;\n                            this.state.sectorList[index].stockList[stockIndex].cng = foundLive[0].cng;\n                            this.state.sectorList[index].stockList[stockIndex].ltt = foundLive[0].ltt;\n\n                            this.state.sectorList[index].isStocksLtpUpdted = true;\n                        }\n                    });\n                });\n\n                this.setState({ sectorList: this.state.sectorList });\n                // this.setState({ sectorList: sectorList });\n                // localStorage.setItem('sectorList', JSON.stringify(sectorList));\n\n                // if(index){\n                //     this.state.sectorList.forEach((element, i) => {\n                //         if(element.index == index){\n                //             this.state.sectorList[i].stockList = sectorUpdate; \n                //             this.state.sectorList[i].isStocksLtpUpdted = true; \n                //             this.setState({ sectorList: this.state.sectorList  });\n                //             return; \n                //         }\n                //     });\n                // }\n            }\n\n            wsClintSectorUpdate.onerror = (e) => {\n                console.log(\"socket error\", e);\n                window.location.reload();\n            }\n\n            // setInterval(() => {\n            //     this.makeConnection();\n            //     var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\n            //     // console.log(\"Connection sectior top hb Request :- \" + _req);\n            //     wsClintSectorUpdate.send(_req);\n            // }, 59000);\n\n            setInterval(() => {\n                this.loadIndexesList();\n            }, 120000);\n\n\n\n            // var tostartInteral =  setInterval(() => {\n\n            //     console.log(\"1st interval every second\", new Date().toLocaleTimeString());\n            //     var time = new Date(); \n            //     if(time.getMinutes() % 5 === 0){\n            //         console.log(\"5th min completed at\", new Date().toLocaleTimeString());\n            //         console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\n\n            //         setTimeout(() => {\n            //             console.log(\"set timout at 70sec \", new Date());\n            //            this.refreshSectorCandle(); \n            //         }, 70000);\n\n            //         setInterval(() => {\n            //            this.refreshSectorCandle(); \n            //          }, 60000 * 5 + 70000 );  \n\n            //          clearInterval(tostartInteral); \n            //     } \n            // }, 1000);\n\n\n\n        } else {\n            // wsClintSectorUpdate.close();\n        }\n\n\n        // setInterval(() => {\n        //     AdminService.checkOtherApi().then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty100EqualWeight\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n        // setInterval(() => {\n        //     AdminService.checkSectorApiOther(\"nifty\").then(res => {\n        //         //let data = resolveResponse(res, 'noPop');\n        //         console.log(res); \n\n        //     }).catch(error => {\n\n        //     })\n        // }, 1000);\n\n\n\n\n    }\n\n    getTodayOrder = () => {\n        AdminService.retrieveOrderBook()\n            .then((res) => {\n                let data = resolveResponse(res, \"noPop\");\n                if (data && data.data) {\n                    var orderlist = data.data;\n                    orderlist.sort(function (a, b) {\n                        return new Date(b.updatetime) - new Date(a.updatetime);\n                    });\n                    localStorage.setItem('oderbookData', JSON.stringify(orderlist));\n                }\n            });\n    }\n\n\n    placeSLMOrder = (slmOption) => {\n\n        var data = {\n            \"triggerprice\": slmOption.stopLossPrice,\n            \"tradingsymbol\": slmOption.tradingsymbol,\n            \"symboltoken\": slmOption.symboltoken,\n            \"quantity\": slmOption.quantity,\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\",\n            \"exchange\": 'NSE',\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"price\": 0,\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\n            \"variety\": \"STOPLOSS\"\n        }\n        console.log(\"SLM option data\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.setState({ orderid: data.data && data.data.orderid });\n                // this.updateOrderList(); \n                this.speckIt('hey Vijay, ' + slmOption.tradingsymbol + \" buy order placed\");\n                this.getTodayOrder();\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click();\n            }\n        })\n    }\n\n    placeOrderMethod = (orderOption) => {\n\n        var data = {\n            \"transactiontype\": orderOption.transactiontype,//BUY OR SELL\n            \"tradingsymbol\": orderOption.tradingsymbol,\n            \"symboltoken\": orderOption.symboltoken,\n            \"quantity\": orderOption.quantity,\n            \"ordertype\": orderOption.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\n            \"price\": orderOption.buyPrice,\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\n            \"duration\": \"DAY\",\n            \"squareoff\": \"0\",\n            \"stoploss\": \"0\",\n            \"exchange\": \"NSE\",\n            \"variety\": \"NORMAL\"\n        }\n        console.log(\"place order option\", data);\n        AdminService.placeOrder(data).then(res => {\n            let data = resolveResponse(res);\n            //  console.log(data);   \n            if (data.status && data.message === 'SUCCESS') {\n                this.speckIt(orderOption.tradingsymbol + \" Added\");\n                this.setState({ orderid: data.data && data.data.orderid });\n                if (orderOption.stopLossPrice) {\n                    this.placeSLMOrder(orderOption);\n                }\n            }\n        })\n    }\n\n    getMinPriceAllowTick = (minPrice) => {\n        minPrice = minPrice.toFixed(2);\n        // console.log(\"minPrice\",minPrice); \n        var wholenumber = parseInt(minPrice.split('.')[0]);\n        //  console.log(\"wholenumber\",wholenumber); \n        var decimal = parseFloat(minPrice.split('.')[1]);\n        // console.log(\"decimal\",decimal); \n        var tickedecimal = decimal - decimal % 5;\n        minPrice = parseFloat(wholenumber + '.' + tickedecimal);\n        //   console.log(\"minPricexxxx\",minPrice); \n        return minPrice;\n    }\n\n\n    historyWiseOrderPlace = (sectorItem, orderType, isAutomatic, spinnerIndex) => {\n\n\n        this.setState({ [spinnerIndex]: true })\n\n        var token = sectorItem.token;\n        var symbol = sectorItem.symbol;\n\n        if (isAutomatic != \"Automatic\") {\n            if (!window.confirm(orderType + \" \" + symbol + \" Are you sure ? \")) {\n                return;\n            }\n        }\n\n        var ltpdata = { \"exchange\": \"NSE\", \"tradingsymbol\": symbol, \"symboltoken\": token, }\n        AdminService.getLTP(ltpdata).then(res => {\n            let ltpres = resolveResponse(res, 'noPop');\n            var LtpData = ltpres && ltpres.data;\n            console.log(symbol, \" ltd data \", LtpData);\n            let quantity = 0;\n            if (LtpData && LtpData.ltp) {\n                let perTradeExposureAmt = TradeConfig.totalCapital * TradeConfig.perTradeExposurePer / 100;\n                quantity = Math.floor(perTradeExposureAmt / LtpData.ltp);\n            }\n\n\n            quantity = quantity > 0 ? 1 : 0;\n            console.log(symbol, \"  quantity can be order \", quantity);\n\n            if (quantity) {\n                const format1 = \"YYYY-MM-DD HH:mm\";\n                var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n                console.log(\"beginningTime\", beginningTime);\n\n                var time = moment.duration(\"54:10:00\");  //21:10:00\"\n                var startdate = moment(new Date()).subtract(time);\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": token,\n                    \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    // console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var candleData = histdata.data, clossest = 0, lowerest = 0, highestHigh = 0, lowestLow = 0, highestsum = 0;\n                        candleData.reverse();\n                        lowestLow = candleData[0][3];\n                        highestHigh = candleData[0][2];\n                        if (candleData && candleData.length > 0) {\n                            for (let index = 0; index < 20; index++) {\n                                if (candleData[index]) {\n                                    clossest += candleData[index][4]; //close  \n                                    lowerest += candleData[index][3];  //low\n                                    highestsum += candleData[index][2];  //low\n                                    if (candleData[index][2] > highestHigh) {\n                                        console.log(index, highestHigh, candleData[index][2]);\n                                        highestHigh = candleData[index][2];\n                                    }\n                                    if (candleData[index][3] <= lowestLow) {\n                                        lowestLow = candleData[index][3];\n                                    }\n                                }\n                            }\n\n                            let devideLen = candleData.length > 20 ? 20 : candleData.length;\n\n                            var bbmiddleValue = clossest / devideLen;\n                            var bblowerValue = lowerest / devideLen;\n                            var bbhigerValue = highestsum / devideLen;\n\n                            var stoploss = 0, stoplossPer = 0;\n\n                            if (orderType == \"BUY\") {\n                                stoploss = bblowerValue - (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (LtpData.ltp - stoploss) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n                            if (orderType == \"SELL\") {\n                                stoploss = bbhigerValue + (highestHigh - lowestLow) * 3 / 100;\n                                stoploss = this.getMinPriceAllowTick(stoploss);\n                                stoplossPer = (stoploss - LtpData.ltp) * 100 / LtpData.ltp;\n\n                                console.log(symbol, orderType, \" LTP \", LtpData.ltp);\n                                console.log(symbol + \"highestHigh:\", highestHigh, \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss, \"stoploss%\", stoplossPer);\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue, \"lowerest avg\", bblowerValue, \"bbhigerValue\", bbhigerValue);\n\n                            }\n\n\n\n                            var orderOption = {\n                                transactiontype: orderType,\n                                tradingsymbol: symbol,\n                                symboltoken: token,\n                                buyPrice: 0,\n                                quantity: quantity,\n                                stopLossPrice: stoploss\n                            }\n                            if (quantity) {\n\n                                this.placeOrderMethod(orderOption);\n                                this.setState({ [spinnerIndex]: false })\n\n                            } else {\n                                Notify.showError(symbol + \" stoploss is > 1.5% Rejected\");\n                                console.log(symbol + \" its not fullfilled\");\n\n                            }\n                        }\n\n\n                    } else {\n                        //localStorage.setItem('NseStock_' + symbol, \"\");\n                        Notify.showError(symbol + \" candle data emply\");\n                        console.log(symbol + \" candle data emply\");\n                        this.setState({ [spinnerIndex]: true })\n                    }\n                })\n\n            } else {\n                Notify.showError(quantity + \"  quantity |  \" + symbol + \" \" + orderType + \" Rejected\");\n                this.setState({ [spinnerIndex]: false })\n            }\n        }).catch(function (error) {\n            this.setState({ [spinnerIndex]: true })\n        })\n        // await new Promise(r => setTimeout(r, 2000)); \n    }\n\n\n\n    loadIndexesList() {\n        this.setState({ indexTimeStamp: '', refreshFlag: false, failedCount: 0, topGLCount: 0 });\n\n        AdminService.allIndicesDirectJSON()\n            .then((res) => {\n\n\n                if (res.data) {\n                \n                   var softedData = res.data && res.data.data; \n                   softedData.sort(function (a, b) {\n                    return b.percChange - a.percChange;\n                   });\n\n                   \n                   this.setState({ indexTimeStamp: softedData[0].timeVal });\n\n\n                    for (let index = 0; index < softedData.length; index++) {\n                        const element = softedData[index];\n                        var slugName =  this.state.sluglist[element.indexName]; \n\n                        if(slugName){\n                            console.log(\"secName\", element.indexName, slugName);\n                            AdminService.checkSectorApiOther(slugName).then(res => {\n                                console.log(element.indexName, res.data.data);\n                                softedData[index].stockList = res.data && res.data.data; \n                                softedData[index].time = res.data && res.data.time; \n                                this.setState({ sectorList: softedData });\n                            }).catch(error => {\n                               // Notify.showError(element.indexName + \"fail to get stockdata\"); \n                               console.log(\"list fetch error\", error)\n                            })\n                        }\n                    }\n\n             \n\n\n                    // this.state.sectorList.forEach(element => {\n                    //     if(element.stockList && element.stockList.length){\n                    //         document.title = \"Top1: \" + element.indexName; \n                    //         return;\n                    //     }\n                    // });\n\n\n                    \n                }\n            })\n            .catch((reject) => {\n                //      Notify.showError(\"All Indices API Failed\" + <br /> + reject);\n                //      this.speckIt(\"All Indices API Failed\");\n\n            })\n\n        this.setState({ refreshFlag: true });\n\n    }\n\n\n    updateLTPMannually = (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        this.refreshSectorLtp(sectorStocks, index);\n    }\n\n\n    refreshSectorLtp = async (sectorStocks, index) => {\n\n        this.setState({ stockUpdate: index });\n\n        // console.log(index, \"sectorStocks\",sectorStocks,  new Date())\n        this.setState({ refreshFlag: false, failedCount: 0 });\n        var sectorUpdate = [];\n        var sectorStockList = this.state.sectorStockList;\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"tradingsymbol\": sectorStocks[index].symbol,\n                \"symboltoken\": sectorStocks[index].token,\n            }\n\n            //   this.setState({ stockUpdate: index + 1 + \". \" + sectorStocks[index].symbol });\n\n            AdminService.getLTP(data).then(res => {\n                let data = resolveResponse(res, 'noPop');\n                var LtpData = data && data.data;\n\n\n                if (LtpData.symboltoken == sectorStocks[index].token) {\n\n                    //  console.log(index + 1 , sectorStocks[index].symbol , LtpData);\n\n                    var todayChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;   //close\n                    var indexData = sectorStocks[index];\n                    indexData.ltp = LtpData.ltp;\n                    indexData.nc = todayChange;\n                    indexData.cng = (LtpData.ltp - LtpData.close);\n                    indexData.ltt = new Date().toLocaleString();\n\n\n                    sectorUpdate.push(indexData);\n                }\n\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                console.log(sectorStocks[index].symbol, error);\n\n                //  Notify.showError(sectorStocks[index].symbol + \" ltd data not found!\");\n            })\n\n\n\n            await new Promise(r => setTimeout(r, 101));\n\n\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorUpdate;\n                    this.state.sectorList[i].isStocksLtpUpdted = true;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n        this.setState({ refreshFlag: true });\n        // this.refreshSectorCandleManually(index); \n        //  this.checkLast5MinMovement(index); \n\n\n    }\n\n\n\n\n    checkLast5MinMovement = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"00:06:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                if (histdata && histdata.data && histdata.data.length) {\n                    console.log(sectorStocks[index].symbol, \"candle history\", histdata.data);\n\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    // var inputRSI = { values: closeingData, period: 14 };\n                    // var lastRsiValue = RSI.calculate(inputRSI)\n                    // console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    // var inputVWAP = {\n                    //     open: openData,\n                    //     high: highData,\n                    //     low: lowData,\n                    //     close: closeingData,\n                    //     volume: valumeData\n                    // };\n\n\n                    // if (candleData.length > 0) {\n                    //     sectorStocks[index].candleChartData = candleChartData;\n                    //     sectorStocks[index].vwapValue = vwap(vwapdata);\n                    //     sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                    //     sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    // }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n    refreshSectorCandleManually = async (index) => {\n\n        var sectorStocks = this.state.staticData[index];\n        //   this.refreshSectorLtp(sectorStocks, index);\n\n\n        this.setState({ refreshFlagCandle: false });\n        console.log(\"sectorStockList\", index);\n\n\n        for (let index = 0; index < sectorStocks.length; index++) {\n\n\n            var beginningTime = moment('9:15am', 'h:mma');\n\n            var time = moment.duration(\"22:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": sectorStocks[index].token,\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + sectorStocks && sectorStocks[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                    candleData.forEach((element, index) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    // var sma = SMA.calculate({period : 10, values : closeingData});\n                    // console.log(sectorStocks[index].symbol,\"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI)\n                    console.log(sectorStocks[index].symbol, \"lastRsiValue\", lastRsiValue[lastRsiValue.length - 1]);\n\n\n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(sectorStocks[index].symbol, \"BB\", input, bb);\n\n\n                    if (candleData.length > 0) {\n                        sectorStocks[index].candleChartData = candleChartData;\n                        sectorStocks[index].vwapValue = vwap(vwapdata);\n                        sectorStocks[index].vwapDataChart = VWAP.calculate(inputVWAP);\n                        sectorStocks[index].lastRsiValue = lastRsiValue[lastRsiValue.length - 1];\n                    }\n\n                    console.log(sectorStocks[index].symbol, sectorStocks[index]);\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(sectorStocks[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n                Notify.showError(sectorStocks[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n\n        if (index) {\n            this.state.sectorList.forEach((element, i) => {\n                if (element.index == index) {\n                    this.state.sectorList[i].stockList = sectorStocks;\n                    this.setState({ sectorList: this.state.sectorList });\n                    return;\n                }\n            });\n        }\n\n\n        this.setState({ refreshFlagCandle: true });\n\n\n\n\n        console.log(\"sectorStockswithcandle\", sectorStocks);\n    }\n\n\n    refreshSectorCandle = async () => {\n\n        this.setState({ refreshFlagCandle: false });\n\n        var sectorStockList = this.state.sectorStockList;\n\n        console.log(\"sectorStockList\", this.state.sectorStockList.length);\n\n\n        for (let index = 0; index < this.state.sectorStockList.length; index++) {\n            var beginningTime = moment('9:15am', 'h:mma');\n            var time = moment.duration(\"61:00:00\");\n            var startdate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": this.state.sectorStockList[index].token,\n                \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(beginningTime).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \n            }\n\n            this.setState({ stockCandleUpdate: index + 1 + \". \" + this.state.sectorStockList && this.state.sectorStockList[index].symbol });\n\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                //console.log(\"candle history\", histdata); \n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [];\n                    candleData.forEach(element => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                    });\n\n\n                    if (candleData.length > 0) {\n\n                        sectorStockList[index].candleChartData = candleChartData;\n                        var sectorList = this.state.sectorList;\n                        this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                            outerEelement.stockList && outerEelement.stockList.forEach((element, stockIndex) => {\n                                var foundLive = sectorStockList.filter(row => row.token == element.token);\n\n                                if (foundLive.length) {\n                                    sectorList[index].stockList[stockIndex].candleChartData = foundLive[0].candleChartData;\n                                }\n                            });\n                        });\n                        this.setState({ sectorList: sectorList });\n                        localStorage.setItem('sectorList', JSON.stringify(sectorList));\n                    }\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(this.state.sectorStockList[index].symbol, \"  emply candle found\");\n                }\n            }).catch(error => {\n                this.setState({ failedCount: this.state.failedCount + 1 });\n\n                Notify.showError(this.state.sectorStockList[index].symbol + \" candle failed!\");\n            })\n\n            await new Promise(r => setTimeout(r, 350));\n        }\n\n        this.setState({ refreshFlagCandle: true });\n    }\n\n    decodeWebsocketData = (array) => {\n        var newarray = [];\n        try {\n            for (var i = 0; i < array.length; i++) {\n                newarray.push(String.fromCharCode(array[i]));\n            }\n        } catch (e) { }\n\n        return newarray.join('');\n    }\n\n    makeConnection = () => {\n\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\n        console.log(\"Connection sectior top firstTime_req :- \" + firstTime_req);\n\n        if (!wsClintSectorUpdate) return;\n        wsClintSectorUpdate.send(firstTime_req);\n\n        this.updateSocketWatch();\n    }\n\n    showCandleChart = (candleData, symbol, price, change, vwapDataChart) => {\n\n        //  candleData  = candleData && candleData.reverse();\n\n        localStorage.setItem('candleChartData', JSON.stringify(candleData));\n        localStorage.setItem('cadleChartSymbol', symbol);\n        localStorage.setItem('candlePriceShow', price);\n        localStorage.setItem('candleChangeShow', change);\n        localStorage.setItem('vwapDataChart', vwapDataChart);\n\n\n\n        if (candleData && candleData.length > 0) {\n            document.getElementById('showCandleChart').click();\n        }\n    }\n\n    updateSocketWatch = () => {\n\n\n\n        var channel = [];\n        this.state.sectorList.forEach(element => {\n            if (element.percentChange >= 0.75) {\n                element.stockList && element.stockList.forEach(stock => {\n                    channel.push('nse_cm|' + stock.token);\n                });\n            }\n        });\n\n\n        if (channel && channel.length) {\n            var updateWatch = {\n                \"task\": \"mw\",\n                \"channel\": channel.join('&'),\n                \"token\": this.state.feedToken,\n                \"user\": this.state.clientcode,\n                \"acctid\": this.state.clientcode\n            }\n\n            console.log(\"update watch channel\", updateWatch);\n            wsClintSectorUpdate.send(JSON.stringify(updateWatch));\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n\n    getPercentageColor = (percent) => {\n        percent = percent * 100;\n        var r = percent < 50 ? 255 : Math.floor(255 - (percent * 2 - 100) * 255 / 100);\n        var g = percent > 50 ? 255 : Math.floor((percent * 2) * 255 / 100);\n        return 'rgb(' + r + ',' + g + ',0)';\n    }\n\n    get2DecimalNumber = (number) => {\n\n        if (number) {\n            return number.toFixed(2);\n        } else {\n            return number;\n        }\n    }\n\n    render() {\n\n        // this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n        //     outerEelement.stockList && outerEelement.stockList.sort(function (a, b) {\n        //         return b.nc - a.nc;\n        //     });\n        // });\n\n\n        let sqrOffbeginningTime = moment('9:15am', 'h:mma');\n        let sqrOffendTime = moment('03:30pm', 'h:mma');\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\n        if (sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)) {\n            this.state.sectorList && this.state.sectorList.forEach((outerEelement, index) => {\n                if (outerEelement.percentChange > 0.75 && outerEelement.isStocksLtpUpdted) {\n                    outerEelement.stockList && outerEelement.stockList.forEach((element, index2) => {\n                        if (index2 < 2) {\n                            var autoTradeTopList = localStorage.getItem('autoTradeTopList') && JSON.parse(localStorage.getItem('autoTradeTopList')) || [];\n                            var isThere = autoTradeTopList.filter(row => row.token === element.token);\n                            if (!isThere.length) {\n                                element.foundAt = new Date().toLocaleString();\n                                autoTradeTopList.push(element);\n                                localStorage.setItem('autoTradeTopList', JSON.stringify(autoTradeTopList));\n                                console.log(element.name + \" is on top  \" + (index2 + 1) + new Date().toLocaleString());\n                                this.speckIt(element.name + \" is on top  \" + (index2 + 1));\n                                //  this.historyWiseOrderPlace(element , 'BUY', \"Automatic\"); \n                            }\n                        }\n\n                    });\n                }\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <ChartDialog />\n\n                <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                    <Grid item xs={12} sm={12} >\n                        <Typography component=\"h3\" variant=\"h6\" color=\"primary\" >\n                            Sectors HitMap ({Object.keys(this.state.sluglist).length}) at {this.state.indexTimeStamp}\n                            &nbsp;\n                            {this.state.refreshFlag ? <Button variant=\"contained\" onClick={() => this.loadIndexesList()}>Refresh</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockUpdate}  </Button> </>}\n                            {this.state.failedCount ? this.state.failedCount + \"Failed\" : \"\"}\n\n                            &nbsp;\n\n                            {/* {this.state.refreshFlagCandle ? <Button variant=\"contained\" onClick={() => this.refreshSectorCandle()}>Refresh Candle</Button> : <> <Button> <Spinner /> &nbsp; {this.state.stockCandleUpdate}  </Button> </>}\n                            &nbsp; */}\n\n                            {/* <Button variant=\"contained\" onClick={() => this.makeConnection()}> WS Refresh</Button> */}\n\n\n\n\n                        </Typography>\n\n                        {/* {localStorage.getItem('autoTradeTopList')} */}\n\n                    </Grid>\n\n\n\n                    {this.state.sectorList ? this.state.sectorList.map((indexdata, index) => (\n\n                        //this.state.topGLCount <= 2 ? 6 : this.state.topGLCount == 3 ? 4 : 3\n                        indexdata.stockList ?  <Grid item xs={12} sm={3}>\n                        <Paper style={{ padding: '10px', background: \"lightgray\", textAlign: \"center\" }}>\n\n\n                            {/* <Button size=\"small\" variant=\"contained\" title=\"update ltp\" onClick={() => this.updateLTPMannually(indexdata.index)}>\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Button>\n                            &nbsp;\n\n                            <Button size=\"small\" variant=\"contained\" title=\"Candle refresh\" onClick={() => this.refreshSectorCandleManually(indexdata.index)}>\n                                <ShowChartIcon />\n                            </Button> */}\n\n                            <Typography variant=\"body1\" >\n                                <b> {index + 1}. {indexdata.index || indexdata.indexName + \" \" + indexdata.last}({indexdata.percentChange || indexdata.percChange}%)</b> &nbsp; {indexdata.time.substr(13,8)}\n                            </Typography>\n\n                            <Grid direction=\"row\" container className=\"flexGrow\" spacing={1} >\n\n                                {indexdata.stockList && indexdata.stockList.map((sectorItem, i) => (\n\n                                    <Grid item xs={12} sm={6} >\n                                        <Paper style={{ textAlign: \"center\" }} >\n\n                                            {/* {sectorItem.cng} */}\n                                            <Typography style={{ background: this.getPercentageColor(sectorItem.iislPercChange), fontSize: '14px' }}>\n                                                {i + 1}. {sectorItem.symbol} {sectorItem.ltP} ({sectorItem.iislPercChange}%)\n                                            </Typography>\n\n\n\n\n                                            {sectorItem.candleChartData ? <span style={{ cursor: 'pointer' }} onClick={() => this.showCandleChart(sectorItem.candleChartData, sectorItem.name, sectorItem.ltp, sectorItem.nc, sectorItem.vwapDataChart)} >\n                                                <LineChart candleChartData={sectorItem.candleChartData} percentChange={sectorItem.nc} vwapDataChart={sectorItem.vwapDataChart} />\n                                            </span> : \"\"}\n\n                                            {sectorItem.vwapValue ?\n                                                <Typography >\n                                                    {sectorItem.vwapValue ? <span style={{ background: sectorItem.ltp > sectorItem.vwapValue ? \"#00ff00\" : \"red\", fontSize: '14px' }}>VWAP:<b>{sectorItem.vwapValue && sectorItem.vwapValue.toFixed(2)}</b> </span> : \"\"}\n                                                    &nbsp;\n                                                    {sectorItem.lastRsiValue ? <span title=\"OB means 'Overbought'\" style={{ background: sectorItem.lastRsiValue >= 60 ? \"#00ff00\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"lightgray\" : \"red\", fontSize: '14px' }}>RSI:<b>{sectorItem.lastRsiValue}</b> {sectorItem.lastRsiValue > 80 ? \"OB\" : sectorItem.lastRsiValue >= 60 && sectorItem.lastRsiValue <= 80 ? \"Buy\" : sectorItem.lastRsiValue >= 40 && sectorItem.lastRsiValue < 60 ? \"NoTrade\" : \"Sell\"} </span> : \"\"}\n                                                </Typography>\n                                                : \"\"}\n\n\n                                            {/* {sectorItem.candleChartData ? <ReactApexChart\n                                                options={{\n                                                    chart: {\n                                                        type: 'candlestick',\n                                                        //  height: 40\n\n                                                    },\n                                                    title: {\n                                                        text: '',\n                                                        align: 'left'\n                                                    },\n                                                    xaxis: {\n                                                        type: 'datetime',\n                                                    },\n                                                    yaxis: {\n                                                        tooltip: {\n                                                            enabled: true\n                                                        }\n                                                    }\n                                                }}\n                                                series={[{\n                                                    data: sectorItem.candleChartData\n\n                                                }]}\n                                                type=\"candlestick\"\n                                    \n                                            /> : \"\"} */}\n\n\n                                            {/* <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                                <Grid item>\n                                                    {!this.state['buyButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'BUY', \"\", 'buyButtonClicked' + indexdata.index + i)}>Buy</Button> : <Spinner />}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {sectorItem.ltt && new Date(sectorItem.ltt).toLocaleTimeString()}\n                                                </Grid>\n\n                                                <Grid item >\n                                                    {!this.state['sellButtonClicked' + indexdata.index + i] ? <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.historyWiseOrderPlace(sectorItem, 'SELL', \"\", 'sellButtonClicked' + indexdata.index + i)}>Sell</Button> : <Spinner />}\n                                                </Grid>\n                                            </Grid>\n*/}\n\n\n                                        </Paper>\n\n\n                                    </Grid>\n\n                                ))\n                                }\n\n                            </Grid>\n\n                        </Paper>\n                    </Grid> : \"\" \n                  \n                    )) : <Spinner />}\n\n\n                </Grid>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n// const styles = {\n//     tableStyle : {\n//         display: 'flex',\n//         justifyContent: 'center'\n//     }, \n//     selectStyle:{\n//         marginBottom: '0px',\n//         minWidth: 240,\n//         maxWidth: 240\n\n//     }\n\n// }\n\nconst mapStateToProps = (state) => {\n    return { packs: state.packs.packs.data };\n}\nexport default connect(mapStateToProps, { setPackLoaded })(MyView);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminService from \"../service/AdminService\";\nimport Grid from '@material-ui/core/Grid';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport * as moment from 'moment';\nimport OrderBook from './Orderbook';\nimport TradeConfig from './TradeConfig.json';\nimport ChartDialog from './ChartDialog';\nimport ChartMultiple from './ChartMultiple';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Notify from \"../../utils/Notify\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Parser from 'html-react-parser';\nimport Spinner from \"react-spinner-material\";\n\nimport ReactApexChart from \"react-apexcharts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SMA, RSI, VWAP, BollingerBands } from 'technicalindicators';\nimport vwap from 'vwap';\nimport CommonOrderMethod from \"../../utils/CommonMethods\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staticData: localStorage.getItem('staticData') && JSON.parse(localStorage.getItem('staticData')) || {},\n            totalWatchlist: localStorage.getItem('totalWatchlist') && JSON.parse(localStorage.getItem('totalWatchlist')) || [],\n            selectedWatchlist: \"NIFTY BANK\",\n            totalStockToWatch: 0, \n            timeFrame : \"TEN_MINUTE\"\n\n        };\n        this.findlast5minMovement = this.findlast5minMovement.bind(this);\n        this.startSearching = this.startSearching.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        window.document.title = \"Fast Movement\";\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        this.setState({ totalStockToWatch: watchList.length });\n\n        // this.findlast5minMovement(); //one time only\n     //   this.startSearching();\n\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n\n        var tostartInteral =  setInterval(() => {\n            var time = new Date();\n            console.log(\"set interval 1sec min/10==0 \", time.toLocaleTimeString());  \n            if(time.getMinutes() % 5 === 0){\n                console.log(\"search method call in with setTimeout 70sec\", time.toLocaleTimeString());  \n\n                setTimeout(() => {\n                    this.find10MinBBBlast();\n                }, 70000);\n                this.setState({ stop10bbSearch: \n                    setInterval(() => {\n                    console.log(\"search method call in with setInterval in 10min\", time.toLocaleTimeString());  \n                    if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\n                        this.find10MinBBBlast();\n                    }\n                }, 60000 * 5 + 70000 ) });\n                \n                clearInterval(tostartInteral); \n            } \n        }, 1000);\n\n\n\n    }\n\n\n    stopSearching = () => {\n        console.log(\"stop the search\")\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        \n    }\n\n\n    showCandleChart = (candleData, symbol, ltp, perChange) => {\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\n        localStorage.setItem('cadleChartSymbol', symbol)\n        localStorage.setItem('candlePriceShow', ltp);\n        localStorage.setItem('candleChangeShow', perChange.toFixed(2));\n        document.getElementById('showCandleChart').click();\n    }\n\n    speckIt = (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text.toString();\n        window.speechSynthesis.speak(msg);\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.findlast5minMovementInterval);\n        clearInterval(this.state.stop10bbSearch);\n        // clearInterval(this.state.scaninterval);\n        //  clearInterval(this.state.bankNiftyInterval); \n    }\n\n    onChangeWatchlist = (e) => {\n        clearInterval(this.state.findlast5minMovementInterval);\n        this.setState({ [e.target.name]: e.target.value }, function () {\n            // this.findlast5minMovement(); //one time only\n            //this.startSearching();\n            this.find10MinBBBlast();\n\n        });\n    }\n\n    startSearching = () => {\n\n        console.log(\"Starting the search\");\n\n        var beginningTime = moment('9:15am', 'h:mma');\n        var endTime = moment('3:30pm', 'h:mma');\n        const friday = 5; // for friday\n        var currentTime = moment(new Date(), \"h:mma\");\n        const today = moment().isoWeekday();\n        //market hours\n\n        if (today <= friday && currentTime.isBetween(beginningTime, endTime)) {\n            var intervaltime = 60000;\n            if (this.state.totalStockToWatch > 180) {\n                intervaltime = this.state.totalStockToWatch * 333;\n            }\n            this.setState({ findlast5minMovementInterval: setInterval(() => { this.findlast5minMovement(); }, intervaltime) });\n        }\n    }\n\n    getTimeFrameValue=(timeFrame)=> {\n    \n        //18 HOURS FOR BACK 1 DATE BACK MARKET OFF\n\n        switch (timeFrame) {\n            case 'ONE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"10:05:00\") \n                return \"18:21:00\"; \n                else\n                return \"00:21:00\"; \n                break;\n            case 'FIVE_MINUTE':\n                if (new Date().toLocaleTimeString() < \"11:00:00\") \n                return \"19:41:00\"; \n                else                \n                return \"01:41:00\"; \n                break;\n            case 'TEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"12:35:00\") \n                return \"21:21:00\"; \n                else                \n                return \"03:21:00\"; \n                break;\n            case 'FIFTEEN_MINUTE':\n                if (new Date().toLocaleTimeString() < \"14:15:00\") \n                return \"23:01:00\"; \n                else                \n                return \"05:01:00\"; \n                break;\n            case 'THIRTY_MINUTE':                    \n                return \"84:01:00\"; \n                break;\n            case 'ONE_HOUR':\n                return \"168:01:00\"; \n                break;\n            case 'ONE_DAY':\n                return \"744:01:00\"; \n                break;\n            default:\n                break;\n        }\n    }\n\n    find10MinBBBlast = async () => {\n        \n        this.setState({ findlast5minMovementUpdate: '' , findlast5minMovement: []});\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n        var foundData = [];\n\n        for (let index = 0; index < watchList.length; index++) {\n\n            this.setState({ findlast5minMovementUpdate: index+1 + \". \" + watchList[index].symbol + \" At \" + new Date().toLocaleTimeString() });\n\n            const format1 = \"YYYY-MM-DD HH:mm\";\n            var beginningTime = moment('9:15am', 'h:mma').format(format1);\n\n            let timeDuration = this.getTimeFrameValue(this.state.timeFrame);\n            var time = moment.duration(timeDuration);  //22:00:00\" for last day  2hours \n            var startDate = moment(new Date()).subtract(time);\n\n            var data = {\n                \"exchange\": \"NSE\",\n                \"symboltoken\": watchList[index].token,\n                \"interval\": this.state.timeFrame, //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\n                \"fromdate\": moment(startDate).format(format1),\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n            }\n\n            AdminService.getHistoryData(data).then(res => {\n                let histdata = resolveResponse(res, 'noPop');\n                // console.log(\"candle history\", histdata);\n\n                if (histdata && histdata.data && histdata.data.length) {\n\n                    var candleData = histdata.data;\n                    var candleChartData = [], vwapdata = [], closeingData = [], highData = [], lowData = [], openData = [], valumeData = [], bbdata = [];\n                        candleData.forEach((element, loopindex) => {\n                        candleChartData.push([element[0], element[1], element[2], element[3], element[4]]);\n                        vwapdata.push([element[5], (element[2] + element[3] + element[4]) / 3]);\n                        closeingData.push(element[4]);\n                        highData.push(element[2]);\n                        lowData.push(element[3]);\n                        openData.push(element[3]);\n                        valumeData.push(element[5]);\n                        bbdata.push((element[2] + element[3] + element[4]) / 3);\n\n                    });\n\n                    var sma = SMA.calculate({ period: 10, values: closeingData });\n                    console.log(watchList[index].symbol, \"SMA\", sma);\n\n\n                    var inputRSI = { values: closeingData, period: 14 };\n                    var lastRsiValue = RSI.calculate(inputRSI); \n\n                    console.log(watchList[index].symbol, \"Rsi\",inputRSI , lastRsiValue);\n                    console.log(watchList[index].symbol, \"vwap\",vwapdata , vwap(vwapdata));\n\n            \n                    var inputVWAP = {\n                        open: openData,\n                        high: highData,\n                        low: lowData,\n                        close: closeingData,\n                        volume: valumeData\n                    };\n\n                    var input = {\n                        period: 20,\n                        values: bbdata,\n                        stdDev: 2\n\n                    }\n\n                    var bb = BollingerBands.calculate(input);\n                    console.log(watchList[index].symbol, \"Bolinger band\", input, bb);\n\n                    var bbvlastvalue = bb[bb.length - 1];\n\n                    if(bbvlastvalue){\n                        bbvlastvalue.upper = bbvlastvalue.upper.toFixed(2); \n                        bbvlastvalue.middle = bbvlastvalue.middle.toFixed(2); \n                        bbvlastvalue.lower = bbvlastvalue.lower.toFixed(2); \n                    \n                    }\n                  \n\n                    var data = {\n                        \"exchange\": \"NSE\",\n                        \"tradingsymbol\": watchList[index].symbol,\n                        \"symboltoken\": watchList[index].token,\n                    }\n                    AdminService.getLTP(data).then(res => {\n                        let data = resolveResponse(res, 'noPop');\n                        var LtpData = data && data.data;\n                        //console.log(LtpData);\n                        if (LtpData && LtpData.ltp) {\n\n\n                           lastRsiValue = lastRsiValue.slice((lastRsiValue.length - 6), lastRsiValue.length); \n\n\n                            if (bbvlastvalue && LtpData.ltp >= bbvlastvalue.upper) {\n                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                foundData.push({\n                                    symbol: watchList[index].symbol,\n                                    token: watchList[index].token,\n                                    ltp: LtpData.ltp,\n                                    perChange: perChange,\n                                 //   percentChangeList: \"RSI: <span style='color:green;font-weight:bold'>\"+lastRsiValue[lastRsiValue.length - 1] + \"</span>  VWAP: \"+vwap(vwapdata) + \" BB:\"+ JSON.stringify( bbvlastvalue ),\n//                                    percentChangeList: \"RSI:\"+lastRsiValue + \" <br />VWAP: \"+vwap(vwapdata) + \"<br /> BB:\"+ JSON.stringify( bbvlastvalue ),\n                                    RSIValue: lastRsiValue[lastRsiValue.length-1], \n                                    RSI: lastRsiValue, \n                                    VWAP: vwap(vwapdata), \n                                    BB: bbvlastvalue, \n                                    candleChartData: candleChartData,\n                                })\n                                this.setState({ findlast5minMovement: foundData });\n                                this.speckIt(watchList[index].symbol + ' BB Blast for buy'); \n                                window.document.title = \"FM: Buy \"+watchList[index].symbol;\n\n                            }\n                            if (bbvlastvalue && LtpData.ltp <= bbvlastvalue.lower) {\n                                var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                foundData.push({\n                                    symbol: watchList[index].symbol,\n                                    token: watchList[index].token,\n                                    ltp: LtpData.ltp,\n                                    perChange: perChange,\n                                 //   percentChangeList: \"RSI: <span style='color:green;font-weight:bold'>\"+lastRsiValue[lastRsiValue.length - 1] + \"</span>  VWAP: \"+vwap(vwapdata) + \" BB:\"+ JSON.stringify( bbvlastvalue ),\n//                                    percentChangeList: \"RSI:\"+lastRsiValue + \" <br />VWAP: \"+vwap(vwapdata) + \"<br /> BB:\"+ JSON.stringify( bbvlastvalue ),\n                                    RSIValue: lastRsiValue[lastRsiValue.length-1], \n                                    RSI: lastRsiValue, \n                                    VWAP: vwap(vwapdata), \n                                    BB: bbvlastvalue, \n                                    candleChartData: candleChartData,\n                                })\n                                this.setState({ findlast5minMovement: foundData });\n                                this.speckIt(watchList[index].symbol + ' BB Blast for sell'); \n                                window.document.title = \"FM: Sell \"+watchList[index].symbol;\n                            }\n\n                        }\n\n                    })\n\n\n                } else {\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\n                    console.log(watchList[index].symbol, \"  emply candle found\");\n                }\n            })\n\n            await new Promise(r => setTimeout(r, 333));\n        }\n\n\n\n    }\n\n\n    findlast5minMovement = async () => {\n\n        this.setState({ findlast5minMovementUpdate: '' });\n\n        var timediff = moment.duration(\"00:05:00\");\n        const format1 = \"YYYY-MM-DD HH:mm\";\n        var startdate = moment(new Date()).subtract(timediff);\n\n        var watchList = this.state.staticData[this.state.selectedWatchlist];\n\n        if (this.state.selectedWatchlist == \"selectall\") {\n            watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'));\n        }\n        console.log(\"watchList\", this.state.selectedWatchlist, watchList);\n\n        this.setState({ totalStockToWatch: watchList.length })\n\n\n        var foundData = [];\n\n        if (watchList && watchList.length) {\n            for (let index = 0; index < watchList.length; index++) {\n                const element = watchList[index];\n                var data = {\n                    \"exchange\": \"NSE\",\n                    \"symboltoken\": element.token,\n                    \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\n                    \"fromdate\": moment(startdate).format(format1),\n                    \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\n                }\n\n                var updateMsg = index + 1 + \". \" + element.symbol;\n                this.setState({ findlast5minMovementUpdate: updateMsg });\n\n                window.document.title = \"FM: \" + updateMsg;\n\n                AdminService.getHistoryData(data).then(res => {\n                    let histdata = resolveResponse(res, 'noPop');\n                    //console.log(\"candle history\", histdata); \n                    if (histdata && histdata.data && histdata.data.length) {\n\n                        var percentChangeList = []; var foundCount = 0;\n                        histdata.data.forEach(element => {\n                            var changePer = (element[4] - element[1]) * 100 / element[1];\n\n                            if (changePer >= 0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:green'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n                            if (changePer <= -0.3) {\n                                foundCount = foundCount + 1;\n                                percentChangeList.push(\"<span style='color:red'>\" + changePer.toFixed(2) + \"% At \" + new Date(element[0]).toLocaleTimeString().substr(0, 5) + \"</span>\")\n                            }\n\n                        });\n\n\n                        var ttophistCandle = [];\n                        histdata.data.forEach(element => {\n                            ttophistCandle.push([element[0], element[1], element[2], element[3], element[4]]);\n                        });\n\n\n                        if (percentChangeList.length) {\n\n                            var data = {\n                                \"exchange\": \"NSE\",\n                                \"tradingsymbol\": watchList[index].symbol,\n                                \"symboltoken\": watchList[index].token,\n                            }\n                            AdminService.getLTP(data).then(res => {\n                                let data = resolveResponse(res, 'noPop');\n                                var LtpData = data && data.data;\n                                //console.log(LtpData);\n                                if (LtpData && LtpData.ltp) {\n\n                                    var perChange = (LtpData.ltp - LtpData.close) * 100 / LtpData.close;\n                                    foundData.push({\n                                        symbol: watchList[index].symbol,\n                                        ltp: LtpData.ltp,\n                                        perChange: perChange,\n                                        percentChangeList: percentChangeList.join(\" | \"),\n                                        candleChartData: ttophistCandle,\n                                    })\n                                    console.log(\"foundData\", foundData);\n                                    this.setState({ findlast5minMovement: foundData })\n\n                                }\n\n                            })\n\n\n                        }\n\n\n                    } else {\n                        console.log(\" candle data emply\");\n                    }\n                })\n                await new Promise(r => setTimeout(r, 333));\n            }\n\n        }\n    }\n\n    callbackAfterOrderDone =( order ) => {\n        // setValues({ ...values, ['buyFlag']: order.status });\n        // setValues({ ...values, ['sellFlag']:  order.status  });\n      //  this.setState({ [spineerId]: order.status}); \n\n\n      console.log(\"order executed\", order); \n\n    }\n\n\n\n    handleClick =(row,  type, spinnerIndex) => {\n\n\n        console.log(row);\n        if(row.token && row.symbol){ \n            if (type == 'BUY') {\n                this.setState({ [spinnerIndex]: true}); \n                var symbolInfo = { \n                    token: row.token, \n                    symbol: row.symbol\n                }\n               CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'BUY', \"no\", this.callbackAfterOrderDone);\n               this.setState({ [spinnerIndex]: false}); \n\n            }\n\n            if (type == 'SELL') {\n                this.setState({ [spinnerIndex]: true}); \n                var symbolInfo = { \n                    token: row.token, \n                    symbol: row.symbol\n                }\n                CommonOrderMethod.historyWiseOrderPlace(symbolInfo, 'SELL', \"no\", this.callbackAfterOrderDone);\n                this.setState({ [spinnerIndex]: false}); \n            }\n        }else{\n            Notify.showError(\" Symbol Not found!!!\");\n        }\n    }\n\n    render() {\n\n        //var foundPatternList = localStorage.getItem('foundPatternList') && JSON.parse(localStorage.getItem('foundPatternList')).reverse(); \n\n        return (\n            <React.Fragment>\n                <PostLoginNavBar />\n                <br />\n                <ChartDialog /> <ChartMultiple />\n\n                <Grid justify=\"space-between\"\n                    container spacing={1}>\n\n                    <Grid item xs={12} sm={4} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            10min BB Blast ({this.state.findlast5minMovement && this.state.findlast5minMovement.length}) \n                            <span id=\"stockTesting\" style={{ fontSize: \"18px\", color: 'gray' }}> {this.state.findlast5minMovementUpdate} </span>\n                        </Typography>\n\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\n                            <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\n                                {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\n                                    <MenuItem value={element}>{element}</MenuItem>\n                                ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={2} >\n                        <FormControl style={styles.selectStyle} >\n                            <InputLabel htmlFor=\"gender\">Select Time</InputLabel>\n                            <Select value={this.state.timeFrame} name=\"timeFrame\" onChange={this.onChangeWatchlist}>\n                                <MenuItem value={'ONE_MINUTE'}>{'1 Min'}</MenuItem>\n                                <MenuItem value={'FIVE_MINUTE'}>{'5 Min'}</MenuItem>\n                                <MenuItem value={'TEN_MINUTE'}>{'10 Min'}</MenuItem>\n                                <MenuItem value={'FIFTEEN_MINUTE'}>{'15 Min'}</MenuItem>\n                                <MenuItem value={'THIRTY_MINUTE'}>{'30 Min'}</MenuItem>\n                                <MenuItem value={'ONE_HOUR'}>{'1 Hour'}</MenuItem>\n                                <MenuItem value={'ONE_DAY'}>{'1 Day'}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={4} >\n                        <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.find10MinBBBlast()}>Start Searching</Button>\n                        <Button variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.stopSearching()}>Stop Searching</Button>\n                    </Grid>\n\n                </Grid>\n\n                {/* <Table  size=\"small\"   aria-label=\"sticky table\" >\n                    <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\n                        <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\n                            <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol</TableCell>        \n                            <TableCell className=\"TableHeadFormat\"  align=\"left\">Time/PerChnage</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                        {this.state.findlast5minMovement ? this.state.findlast5minMovement.map(row => (\n                            <TableRow hover key={row.symbol}>\n                                <TableCell align=\"left\"> <Button  style={{ color: row.perChange > 0 ? \"green\" : \"red\" }} variant=\"contained\"  onClick={() => this.showCandleChart(row.candleChartData, row.symbol, row.ltp, row.perChange )}>{row.symbol} {row.ltp} ({row.perChange.toFixed(2)}) <EqualizerIcon /> </Button></TableCell>\n                                <TableCell align=\"left\">{row.percentChangeList}\n                            </TableCell>\n                            </TableRow>\n                        )):''}\n                    </TableBody>\n                </Table> */}\n                <Grid container spacing={2} >\n\n\n                    {this.state.findlast5minMovement ? this.state.findlast5minMovement.map((row, i) => (\n\n                        <Grid item   xs={12} sm={3}>\n                            <Paper style={{ overflow: \"auto\", padding: '10px' }} >\n                                <Typography style={{ color: row.perChange > 0 ? \"green\" : \"red\" }}> {row.symbol} {row.ltp} <b>({row.perChange.toFixed(2)}) </b></Typography>\n\n                                {row.candleChartData.length > 0 ? <ReactApexChart\n                                    options={{\n                                        chart: {\n                                            type: 'candlestick',\n                                            height: 250\n                                        },\n                                        title: {\n                                            text: \"\",\n                                            align: 'left'\n                                        },\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            tooltip: {\n                                                enabled: true\n                                            }\n                                        }\n                                    }}\n                                    series={[{\n                                        data: row.candleChartData\n\n                                    }]}\n                                    type=\"candlestick\"\n                                    width={350}\n                                    height={250}\n                                /> : \"\"}\n\n                                {/* <div> {Parser(row.percentChangeList)}</div> */}\n                                \n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n\n                                    <Grid item xs={12} sm={12} style={{color: row.ltp> row.VWAP ? \"green\" : \"red\", fontWeight: \"bold\"}}>\n                                      VWAP:  {row.VWAP}\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                   \n                                     RSI: { row.RSI.map((item, j) => (\n                                        item >= 60 ? <span style={{color: 'green' ,fontWeight: \"bold\"}}> {item} &nbsp;</span> :  <span style={{color:  item <= 40 ? 'red' : \"\" ,fontWeight: \"bold\"}}> {item} &nbsp;</span>\n                                     ))} \n\n                                    \n                                    </Grid>\n                                    <Grid item xs={12} sm={12} >\n                                       BB \n                                       &nbsp; <span style={{color: row.ltp >= row.BB.upper ? \"green\" : \"\", fontWeight: \"bold\"}}>Upper: {row.BB.upper}</span> \n                                       &nbsp; Middle: {row.BB.middle} \n                                       &nbsp; <span style={{color: row.ltp <= row.BB.lower ? \"red\" : \"\", fontWeight: \"bold\"}}> Lower: {row.BB.lower}</span>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid direction=\"row\" style={{ padding: '5px' }} container className=\"flexGrow\" justify=\"space-between\" >\n                                    <Grid item>              \n                                        {!this.state['buyButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.handleClick(row, 'BUY', 'buyButtonClicked' + row.symbol + i)}>BUY</Button> : <Spinner />}\n                                    </Grid>\n\n                                    <Grid item >\n                                        {/* onClick={() => this.historyWiseOrderPlace(row, 'SELL', \"\", 'sellButtonClicked' + row.symbol + i)} */}\n                                        {!this.state['sellButtonClicked' + row.symbol + i] ? <Button size=\"small\" variant=\"contained\" color=\"Secondary\" onClick={() => this.handleClick(row, 'SELL', 'sellButtonClicked' + row.symbol + i)}>SELL</Button> : <Spinner />}\n                                    </Grid>\n                                </Grid>\n\n\n                            </Paper>\n\n                        </Grid>\n\n                    )) : ''}\n                </Grid>\n\n            </React.Fragment>\n        )\n\n\n    }\n\n\n}\n\nconst styles = {\n    formContainer: {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle: {\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle: {\n        display: 'flex'\n    },\n\n    selectStyle: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField: {\n        overflowY: 'scroll',\n        fontSize: \"12px\",\n        maxHeight: \"50px\",\n\n    },\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\nexport default Home;","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Home from './MyTrade/Home';\n\n// import NiftyView from \"./MyTrade/NiftyView\";\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\n\nimport MySectorTop from \"./MyTrade/MySectorTop\";\n\nimport Chart from \"./MyTrade/Chart\";\nimport CandleChart from \"./MyTrade/CandleChart\";\n\n\nimport Funds from \"./MyTrade/Funds\";\nimport Orderbook from \"./MyTrade/Orderbook\";\nimport Tradebook from \"./MyTrade/Tradebook\";\n// import LiveFeed from \"./MyTrade/LiveFeed\";\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\nimport Position from \"./MyTrade/Position\";\nimport Test from \"./MyTrade/Test\";\n\n\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\nimport SectorHeatMap from \"./MyTrade/SectorHeatMap\";\nimport SectorHeatMap2 from \"./MyTrade/SectorHeatMap2\";\n\nimport FindFastMovement from \"./MyTrade/FindFastMovement\";\nimport OrderWatchlist from \"./MyTrade/OrderWatchlist\";\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\n                    <Route path=\"/sector\" component={MySectorTop}/>\n                    <Route path=\"/chart\" component={Chart}/>\n                    <Route path=\"/candle-chart\" component={CandleChart}/>\n\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/funds\" component={Funds}/>\n                    <Route path=\"/order\" component={Orderbook}/>\n                    <Route path=\"/trade\" component={Tradebook}/>\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\n                    <Route path=\"/position\" component={Position}/>\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\n                    <Route path=\"/sector-heat-map\" component={SectorHeatMap}/>\n                    <Route path=\"/sector-heat-map2\" component={SectorHeatMap2}/>\n\n\n                    \n                    <Route path=\"/find-fast-movement\" component={FindFastMovement}/>\n                    <Route path=\"/order-watchlist\" component={OrderWatchlist}/>\n\n                    <Route path=\"/test\" component={Test}/>\n                    \n           \n                    <Route path=\"*\" component={LoginComponent} />\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}