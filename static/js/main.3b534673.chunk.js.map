{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/Orderbook.js","components/MyTrade/Position.js","components/MyTrade/Tab.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/Funds.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/AddToWatchlist.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","push","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","EmojiEmotions_default","ListItemText","primary","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","res","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","_React$useState3","_React$useState4","open","setOpen","clsx","IconButton","edge","Menu_default","item","noWrap","direction","AccountCircle_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","Date","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","useUtils_cfb96ac9","utils","DateFnsUtils","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","sort","b","updatetime","oderbookData","modifyOrder","row","trailingstoploss","console","log","triggerprice","variety","orderid","ordertype","price","producttype","quantity","lotsize","tradingsymbol","symboltoken","exchange","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","_this2","Paper","gutterBottom","float","Table","size","TableHead","whiteSpace","TableRow","TableCell","align","TableBody","map","hover","key","toString","substring","transactiontype","orderstatus","textAlign","averageprice","fontSize","text","lib_default","Home","getCandleHistoryAndStore","asyncToGenerator","regenerator_default","mark","_callee","watchList","today","timediff","startdate","_loop","index","wrap","_context2","prev","next","toLocaleTimeString","clearInterval","candleHistoryInterval","moment","isoWeekday","subtract","element","_context","interval","fromdate","todate","getHistoryData","histdata","candleData","reverse","last10Candle","slice","symbol","findTweezerTopPatternLive","findTweezerBottomPatternLive","r","setTimeout","stop","delegateYield","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","time","high","low","close","secondCandle","diffPer","Math","round","foundData","pattenName","foundPatternList","toConsumableArray","SpeechSynthesisUtterance","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","toFixed","getStoplossFromOrderbook","forEach","stopLoss","buyavgprice","maxLossAmount","parseInt","netqty","getPositionData","_callee2","totalMaxPnL","_context3","getPosition","positionList","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","parseFloat","sellavgprice","pnl","buyqty","slData","totalsellavgprice","totalbuyavgprice","stopLossAmount","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","autoCompleteSearch","found","filter","exch_seg","orderWithFlatstoploss","getLTP","ltpPrice","ltp","stopLossPrice","TradeConfig","perTradeStopLossPer","getMinPriceAllowTick","perTradeExposureAmt","totalCapital","perTradeExposurePer","floor","orderOption","buyPrice","placeOrderMethod","catch","autoSearchList","LtpData","BankLtpltp","getStopLossPrice","_ref3","_callee3","_context4","slPrice","stoploss","_x","_x2","apply","squareoff","placeOrder","placeSLMOrder","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","beginningTime","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","onSelectItem","values","autoSearchTemp","fdata","list","updateSocketWatch","getAveragePrice","orderId","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","getElementById","click","updateOrderList","slmOption","modifyOrderMethod","minPrice","wholenumber","decimal","getPercentage","avgPrice","percentChange","lastTriggerprice","sqrOffbeginningTime","sqrOffendTime","isBetween","symbolname","InstrumentLTP","endTime","currentTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","setInterval","getMinutes","getTime","_this3","totalDayLoss","dailyLossPer","abs","getNSETopStock","scandata","result","_loop2","isFound","j","symbolName","searchRes","_this4","selectedStockInteval","getSelectedStockFromDb","_loop3","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","toLocaleString","overflow","fontWeight","paddingLeft","background","rel","Orderbook","MuiTabsScroller","wsClint","w3cwebsocket","onChangePattern","onChangeWatchlist","staticData","symbolList","fromDate","startDate","endDate","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","feedToken","firstTime_req","send","channel","sbin","task","user","acctid","backTestAnyPattern","runningTest","patternType","abrupt","backTestNR4","backTestResult","backTestFlag","index2","next10Candle","backtestTweezerTop","backtestTweezerBottom","stockTesting","sumPercentage","last4Candle","rangeArr","firstElement","rgrangeCount","next5thCandle","buyentry","perChng","longExitPriceType","foundStock","foundAt","sellEntyPrice","buyExitPrice","brokerageCharges","perChange","squareOffAt","sellenty","shortExitPriceType","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","orderActivated","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","slmOrderType","LoadSymbolDetails","getHistory","histCandles","InstrumentHistroy","watchlist","saveWatchListJSON","resdata","search","deleteItemWatchlist","findIndex","splice","ifNotBought","selectedWatchlist","getStaticData","totalWatchlist","keys","element2","onmessage","decoded","atob","pako","inflate","liveData","foundLive","tk","cng","nc","foundTweezerTop","entryBelow","onerror","_req","dateParam","firstLavel","secondLavel","sumPerChange","sumBrokeragePer","netSumPerChange","sumPnlValue","sumSellEntyPrice","Autocomplete","freeSolo","disableClearable","paddingRight","option","renderInput","params","assign","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","height","Delete_default","sbinLtp","MaterialUIDateTimePicker","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","DialogTitle","withStyles","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","disableTypography","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","handleClose","indexSymbol","Dialog","aria-labelledby","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","dividers","stickyHeader","indexSymbolData","idata","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","speckIt","toLocaleLowerCase","innerHTML","percent","stopnview","indexTimeStamp","products","loadPackList","todayTime","getHours","getAllIndices","softedData","calendar","last","encodeURIComponent","advances","declines","unchanged","connect","App","diffData","putData","callData","timeDate","totPEOI","totCEOI","diff","dateTime","chartData","labels","datasets","fill","borderColor","index_modern","maintainAspectRatio","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","onopen","heartbeatReq","exchtime","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","AppRouter","react_router","path","exact","MySectorTop","Chart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","RouterComponent","react_toastify","ReactDOM","render","es","src_App","querySelector"],"mappings":"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","file":"static/js/main.3b534673.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\r\nconst INTIAL_STATE = {\r\n    packs: [],\r\n    pack:[],\r\n    updatedPack:null\r\n  };\r\n export default (state = INTIAL_STATE,action)=>{\r\n    switch (action.type) {\r\n        case actionTypes.SET_PACK_LOADED:\r\n          return { ...state, packs:action.payload };\r\n        case actionTypes.EDIT_PACK_INFO:\r\n          return {...state,updatedPack:action.payload}\r\n          case actionTypes.GET_PACK_INFO_BY_ID:\r\n              return {...state,pack:action.payload}    \r\n     default:\r\n          return state;\r\n      }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport getPackReducer from './packReducer';\r\n\r\nexport default combineReducers({\r\n    packs: getPackReducer,\r\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\r\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\r\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;","class AuthService {\r\n\r\n    getLoggedInUserInfo() {\r\n        localStorage.getItem(\"UserInfo\");\r\n    }\r\n\r\n    getHeader() {\r\n\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var jwtToken =   tokens &&  tokens.jwtToken;\r\n\r\n        return { 'headers': {\r\n            'Authorization': 'Bearer ' + jwtToken,\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n\r\n    loginHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n    getImageHeader() {\r\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\r\n    }\r\n\r\n    getScannerHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json',\r\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\r\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \r\n            // 'sec-fetch-mode': 'cors',\r\n            // 'origin': 'localhost',\r\n\r\n            \r\n        } }\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();","//my app api\r\nexport const API_KEY  = 'I4O6PJAn'; \r\nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\r\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\r\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\r\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\r\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \r\nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \r\nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \r\nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \r\nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \r\nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \r\n\r\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \r\nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \r\nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\r\n\t\r\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks'\t\r\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks'\t\r\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock'\t\r\n","import axios from 'axios';\r\nimport AuthService from \"./AuthService\";\r\nimport  * as apiConstant from \"../../utils/config\";\r\n\r\nclass AdminService {\r\n\r\n    login(credentials) {\r\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\r\n    } \r\n\r\n    logout(credentials) {\r\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\r\n     } \r\n\r\n    getUserData(formData){\r\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\r\n    }\r\n\r\n    getFunds(formData){\r\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\r\n    }\r\n\r\n    retrieveOrderBook(formData){\r\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\r\n    }\r\n    retrieveTradeBook(formData){\r\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\r\n    }\r\n    \r\n    retrieveallTradableInstruments(formData){\r\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\r\n    }\r\n\r\n    placeOrder(credentials) {\r\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    modifyOrder(credentials) {\r\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    cancelOrder(credentials) {\r\n\r\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getLTP(credentials) {\r\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getHistoryData(credentials) {\r\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    scanStocks(credentials) {\r\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\r\n     } \r\n\r\n     autoCompleteSearch(query) {\r\n        return axios.get('http://localhost:8081/search/'+query, '');\r\n     } \r\n     saveWatchList(data) {\r\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\r\n     } \r\n     addIntoStaticData(data) {\r\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\r\n     }\r\n     saveWatchListJSON(data) {\r\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\r\n     }\r\n     getWatchListJSON() {\r\n        return axios.get('/myJsonWatchList.json', '');\r\n     } \r\n     getStaticData() {\r\n         if(window.location.hostname== \"localhost\")\r\n        return axios.get('/staticData.json', '');\r\n        else\r\n        return axios.get('/mtrade/staticData.json', '');\r\n     } \r\n     saveCandleHistory(data) {\r\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\r\n     } \r\n\r\n     getPosition(data){\r\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\r\n     }\r\n\r\n     getAutoScanStock(){\r\n        return axios.get(apiConstant.getScannedStocks, '');\r\n     }\r\n\r\n     getNSETopStock(){\r\n        return axios.get(apiConstant.getNseTopStocks, '');\r\n     }\r\n\r\n     getSelectedStockFromDb(){\r\n        return axios.get(apiConstant.getSelectedStock, '');\r\n     }\r\n\r\n    //  getBNcpdata(){\r\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\r\n    //  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default new AdminService();\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport MyLogo from './mylogo.png';\r\n\r\nconst LoginNavBar = (props) => {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\r\n\r\n                    {/* <div style={{width:\"300px\"}}>\r\n                        <Typography variant=\"h6\" style={style}>\r\n                             &nbsp;&nbsp;  M-Trade\r\n                        </Typography>\r\n                    </div>               */}\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default LoginNavBar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Bharti Airtel Ltd\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleOnChange = e => {\r\n    props.loginProps.onChange(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <LoginNavBar/> */}\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PersonIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"User Id\"\r\n            name=\"userName\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.userName}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.password}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={props.loginProps.login}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n         \r\n          \r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// method calling\r\n\r\n// import React from \"react\";\r\n// import \"./styles.css\";\r\n\r\n// class Child extends React.Component {\r\n//   render() {\r\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\r\n//   }\r\n// }\r\n\r\n// class Parent extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       username : \"vijay\"\r\n//     }\r\n//     this.handler = this.handler.bind(this)\r\n//   }\r\n\r\n//   handler(e) {\r\n//     console.log(e.target.name ); \r\n//     this.setState({\r\n//       [e.target.name]: e.target.value \r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     return <>\r\n//     Hello:  {this.state.username} \r\n//      <Child handler = {this.handler} />\r\n     \r\n//      </>\r\n//   }\r\n// }\r\n\r\n// export default Parent;\r\n","import { toast } from 'react-toastify';\r\n\r\nclass Notify {\r\n\r\n    showError(msg) {\r\n        toast.error(msg, this.options());\r\n    }\r\n\r\n    showSuccess(msg) {\r\n        toast.success(msg , this.options());\r\n    }\r\n\r\n    showWarning(msg) {\r\n        toast.warn(msg , this.options());\r\n    }\r\n\r\n    options() {\r\n        return {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          //  position: \"buttom-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Notify();","import Notify from \"./Notify\";\r\n\r\nexport function resolveResponse(response, msg) {\r\n   //console.log('response',response);\r\n    let data = {};\r\n        if (response.status === 200) {\r\n            data = response.data;\r\n            if(data.status) {\r\n                if(data.message){\r\n\r\n                    if(msg !== 'noPop')\r\n                    Notify.showSuccess(data.message);\r\n                }\r\n                return data;\r\n            }else{\r\n               \r\n                Notify.showError(data.message);\r\n                if(data.message === \"Invalid Token\"){\r\n                    window.location.replace(\"#/login\");\r\n                    localStorage.setItem('userTokens', '');\r\n                    localStorage.setItem('userProfile', '');\r\n                }\r\n                return Promise.reject(data.message);\r\n            }\r\n        }\r\n        else if(response && !response.status){\r\n            Notify.showError(data.message);\r\n        }   \r\n}","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport LoginNavBar from \"../LoginNavbar\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LoginNewUI from './LoginNewUI';\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass LoginComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"V193588\",\r\n            password: \"\", \r\n            isDasable:false,\r\n            isError:false,\r\n            \r\n        };\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <LoginNavBar/>\r\n                \r\n                {/* <Container maxWidth=\"sm\">\r\n                     <br/><br/><br/> \r\n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\r\n                    <form style={styles.formStyle}>\r\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\r\n\r\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                        <Grid item  xs={12} sm={8}>\r\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\r\n                        </Grid>\r\n                        <Grid item  xs={12} sm={10}>\r\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                        </Grid>\r\n                    </form>\r\n                </Container> */}\r\n\r\n                {/* New Login UI */}\r\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\r\n                \r\n                <Grid container justify=\"space-around\">\r\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\r\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \r\n      if(userTokens){\r\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \r\n        this.props.history.push('home');\r\n      }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    login = (e) => {\r\n        \r\n        this.setState({ isError: \"\" });\r\n\r\n\r\n        e.preventDefault();\r\n\r\n        if(!this.state.userName && !this.state.password){\r\n            this.setState({ isError: \"Olms Id and Password are required.\" });\r\n            return;\r\n        }\r\n\r\n        if(!this.state.userName){\r\n            this.setState({ isError: \"Olms Id is required.\" });\r\n            return;\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({ isError: \"Password is required.\" });\r\n            return;\r\n        }\r\n         \r\n        this.setState({ isDasable: true });\r\n\r\n \r\n\r\n        const loginPayload = {\r\n            clientcode:  this.state.userName,\r\n            password: this.state.password \r\n\r\n        };\r\n        AdminService.login(loginPayload)\r\n            .then(loginRes => {\r\n              //  Notify.showError(\"Olms Id and password is required.\");\r\n            //  alert(JSON.stringify(res));\r\n         //   console.log(\"res\",loginRes); \r\n\r\n              var data = resolveResponse(loginRes);\r\n              loginRes  = loginRes && loginRes.data; \r\n            //  console.log(\"resdata\",loginRes); \r\n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\r\n                this.setState({ isError: loginRes.message });\r\n              }\r\n              \r\n               // data = res.data; \r\n                this.setState({ isDasable: false });\r\n\r\n                if(loginRes.data){\r\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\r\n                  \r\n\r\n                    AdminService.getUserData().then(profileRes => {\r\n                       // console.log('profiledata', profileRes); \r\n                          let data = resolveResponse(profileRes);\r\n                          profileRes =  profileRes && profileRes.data; \r\n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\r\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\r\n                        //    this.props.history.push('/position');\r\n\r\n                             window.location.replace('/#/home')\r\n                          }\r\n                      })\r\n\r\n                  \r\n\r\n                }\r\n            });\r\n          \r\n            // setTimeout(() => {\r\n            //     this.setState({ isError: \"\" });\r\n            // }, 3000);\r\n\r\n\r\n           \r\n    }\r\n\r\n}\r\n\r\nconst styles ={\r\n    formStyle :{\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    errorMessage:{\r\n        color:\"red\",\r\n        marginTop: '11px'\r\n    },\r\n    waitMessage:{\r\n        color:\"gray\",\r\n        marginTop: '11px'\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { Link } from \"react-router-dom\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AdminService from \"./service/AdminService\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n//import RouterComponent from '../RouterComponent'; \r\n\r\n\r\nexport const AdminMenuList = (\r\n\r\n  <div>\r\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\r\n   \r\n    <ListItem button component='a' href={\"#/livefeed\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Live Feed\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"#/position\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Positions\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"#/funds\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Funds\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"#/order\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Order Book\" />\r\n    </ListItem>\r\n    <ListItem button component='a' href={\"#/trade\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Trade Book\" />\r\n    </ListItem>\r\n  \r\n    <ListItem button component='a' href={\"#/bn-view\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"NiftyBank View\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"#/nifty-view\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Nifty View\" />\r\n    </ListItem>\r\n\r\n\r\n    <ListItem button component='a' href={\"#/sector\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Sector Top\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"#/test\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Exprement - Research\" />\r\n    </ListItem>\r\n  \r\n\r\n\r\n    <ListItem button component='a' href={\"#/addtowatchlist\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Add to watchlist\" />\r\n    </ListItem>\r\n  \r\n\r\n\r\n  </div>\r\n);\r\n\r\nfunction deleteAllCookies() {\r\n  var cookies = document.cookie.split(\";\");\r\n  for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i];\r\n      var eqPos = cookie.indexOf(\"=\");\r\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n  }\r\n}\r\n\r\nfunction logoutPortal(){\r\n  //console.log(\"yo_man\")\r\n\r\n  if(window.confirm(\"Are you sure to logout?\")){\r\n\r\n  var userProfile = localStorage.getItem(\"userProfile\")\r\n  userProfile = userProfile && JSON.parse(userProfile);\r\n\r\n  var data = {\r\n    clientcode : userProfile && userProfile.clientcode\r\n    }\r\n\r\n    AdminService.logout(data)\r\n    .then(res => {\r\n    \r\n    localStorage.clear();\r\n    //localStorage.setItem('userTokens', '');\r\n    //localStorage.setItem('userProfile', '');\r\n    deleteAllCookies();\r\n    \r\n    window.location.replace(\"#/login\");\r\n    return;\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const LogoutMenu = (\r\n  <div>\r\n\r\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\r\n      <ListItem button>\r\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\r\n      </ListItem>\r\n    </Link>\r\n\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  //const [anchorEl, setAnchorEl] = React.useState(null);\r\n  //const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    localStorage.setItem('invertColorFlag', event.target.checked);\r\n    setAuth(event.target.checked);\r\n   \r\n  };\r\n\r\n  // const handleMenu = (event) => {\r\n\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Black & White'  : 'Colorfull'}\r\n        />\r\n      </FormGroup>\r\n     \r\n      {/* <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport * as Menu from './LeftMenuBar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MyLogo from './mylogo.png';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport  InvertColor from '../utils/InvertColor';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    endMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'row reverse'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        //backgroundColor: '#f44336'\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function PostLoginNavBar(props) {\r\n\r\n    const [values] = React.useState({\r\n        acquisitionCount: '',\r\n        resubmitCount:''\r\n    });\r\n    \r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    // function handleClick(e) {\r\n    //     console.log(e.target.innerText)\r\n    //     //this.props.history.push('/login');\r\n    // }\r\n\r\n    var userProfile = localStorage.getItem(\"userProfile\")\r\n    userProfile = userProfile && JSON.parse(userProfile);\r\n    \r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n\r\n            >\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                        <Grid\r\n                                justify=\"space-between\"\r\n                                container\r\n                            >\r\n                        <Grid item >\r\n                        {/* <Typography variant=\"h6\" noWrap>\r\n                          M-Trade\r\n                         </Typography> */}\r\n                           <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n                        <Typography variant=\"h6\" noWrap>\r\n                        {localStorage.getItem('BankLtpltp')}\r\n                         </Typography>\r\n                         \r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"row\"\r\n                                    style={{ color: \"white\" }}\r\n                                >\r\n\r\n                    \r\n                             <Grid item>\r\n                                    <Button  autoFocus href={\"#/addtowatchlist\"}  >\r\n                                       WatchLit({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n\r\n\r\n                            <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/livefeed\"}  color=\"secondary\">\r\n                                        Home\r\n                                    </Button>\r\n                              </Grid>\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/position\"}  color=\"primary\">\r\n                                      Position\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n\r\n                              {/* <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\r\n                                        Order Status Live\r\n                                    </Button>\r\n                              </Grid> */}\r\n                              \r\n\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order\"}  color=\"primary\">\r\n                                        Order\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/trade\"}  color=\"primary\">\r\n                                        Trade\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                            \r\n\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/funds\"}  color=\"primary\">\r\n                                        Funds\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                            <Grid item>\r\n                                <Typography  noWrap>\r\n\r\n                                <Button color=\"primary\">\r\n                                <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\r\n                                </Button>\r\n\r\n                                </Typography> \r\n\r\n                        \r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                        </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\r\n        \r\n                    <InvertColor />\r\n                    <IconButton onClick={handleDrawerClose}  >\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n            \r\n\r\n                <Divider />\r\n                <List>{Menu.AdminMenuList}</List>\r\n\r\n                {/* <Divider />\r\n                <List>  <InvertColor /></List> */}\r\n\r\n                <Divider />\r\n                <List>{Menu.LogoutMenu}</List>\r\n\r\n                \r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// BO agent : BOA\r\n// Data Entry : DE\r\n// Admin : ADMIN\r\n// Distributor : DIST\r\n\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Notify from \"./Notify\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  KeyboardDateTimePicker\r\n} from '@material-ui/pickers';\r\n\r\nfunction MaterialUIPickers(props) {\r\n\r\n // console.log(\"startDatestartDate,\",props ); \r\n  //var d = new Date(); \r\n  //d.setHours(0,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var startd = new Date(); \r\n  startd.setHours(9,0,0,0);\r\n  startd.setMinutes(15,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\r\n  var endd = new Date(); \r\n  endd.setHours(15,0,0,0);\r\n  endd.setMinutes(30,0,0,0);\r\n\r\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\r\n\r\n  const handleStartDateChange = date => {\r\n    setSelectedStartDate(date);\r\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\r\n  //  var startDateMili = new Date(date).getTime(); \r\n//    document.getElementById(\"startDateMili\").value = startDateMili; \r\n//    var endDateMili = document.getElementById(\"endDateMili\").value; \r\n    // if(startDateMili > endDateMili  ){\r\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\r\n    // }\r\n  };\r\n\r\n\r\n\r\n  const handleEndDateChange = date => {\r\n    setSelectedEndDate(date);\r\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\r\n  //  var endDateMili = new Date(date).getTime(); \r\n  //  document.getElementById(\"endDateMili\").value = endDateMili; \r\n\r\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \r\n  //  if(endDateMili  < startDateMili){\r\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\r\n  //   }\r\n   \r\n  };\r\n\r\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \r\n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\r\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \r\n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\r\n  // }\r\n\r\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \r\n  // //endDateMili ==''\r\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\r\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \r\n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\r\n\r\n  // }\r\n\r\n return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container>\r\n     \r\n        <KeyboardDateTimePicker\r\n         // disableFuture=\"true\"\r\n          margin=\"normal\"\r\n          style={{width:\"140px\"}}\r\n         // required={true}\r\n          id=\"date-picker-dialog\"\r\n          label={'Start Date'}\r\n         // format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedStartDate}\r\n          onChange={handleStartDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n         <KeyboardDateTimePicker\r\n           style={{width:\"140px\"}}\r\n        // disableFuture=\"true\"\r\n         margin=\"normal\"\r\n       //  required={true}\r\n         id=\"date-picker-dialog\"\r\n         label={'End Date'}\r\n       //  format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedEndDate}\r\n         onChange={handleEndDateChange}\r\n         KeyboardButtonProps={{\r\n           'aria-label': 'change date',\r\n         }}\r\n        />\r\n        \r\n       \r\n        \r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default  MaterialUIPickers; \r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass OrderBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All',\r\n            triggerprice :0,\r\n            price:0,\r\n            lotsize:0,\r\n            firstTimeFlag: true\r\n\r\n        }\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n\r\n                this.setState({oderbookData: orderlist});\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\r\n\r\n                // var pendingOrder = orderlist.filter(function(row){\r\n                //     return row.status == \"trigger pending\";\r\n                // }); \r\n                // this.setState({pendingOrder: pendingOrder});\r\n                                    \r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.getTodayOrder();\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    modifyOrder = (row, trailingstoploss) => {\r\n\r\n        console.log(this.state.triggerprice);\r\n\r\n        var data = {\r\n            \"variety\" :row.variety,  // \"STOPLOSS\",\r\n            \"orderid\": row.orderid,\r\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": row.duration,\r\n            \"price\":  this.state.price,\r\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\r\n            \"quantity\":row.lotsize,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n            }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n               // localStorage.setItem('ifNotBought' ,  'false')\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n      return(\r\n        <React.Fragment>\r\n            <PostLoginNavBar/>\r\n            <Paper style={{padding:\"10px\"}} >\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                Oders Details ({this.state.oderbookData.length}) \r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \r\n                            </Grid>\r\n                            \r\n                </Grid>\r\n            \r\n            <Grid direction=\"row\" alignItems=\"center\" container>\r\n            <Grid item xs={12} sm={12} >\r\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\r\n               \r\n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow variant=\"head\" >\r\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\r\n\r\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\r\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\r\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\r\n                        \r\n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\r\n                                \r\n                                <TableCell align=\"center\"><b>Price</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\r\n\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\r\n                \r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        \r\n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\r\n                                <TableRow hover key={i} >\r\n\r\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\r\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\r\n\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\r\n                                        : row.quantity}\r\n                    \r\n\r\n                                    </TableCell>\r\n\r\n                                \r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n\r\n                                \r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\r\n                                        : row.price}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\r\n                                        : row.triggerprice}\r\n                                    </TableCell>\r\n\r\n\r\n                                    <TableCell align=\"left\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \r\n                                        : ''}\r\n                                    </TableCell>\r\n                                    \r\n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\r\n\r\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\r\n\r\n                                    \r\n                                </TableRow>\r\n                            )):<Spinner/>}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n                            \r\n               </Grid>    \r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            autoSearchList :[],\r\n            InstrumentLTP : {},\r\n            autoSearchTemp : [],\r\n            foundPatternList: [], \r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\r\n        //   this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 2002)}) \r\n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \r\n        }else{\r\n            clearInterval(this.state.positionInterval);\r\n            clearInterval(this.state.scaninterval); \r\n            clearInterval(this.state.bankNiftyInterval); \r\n        }\r\n    \r\n        var scanendTime = moment('3:30pm', 'h:mma');\r\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \r\n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \r\n            \r\n\r\n            \r\n            var tostartInteral =   setInterval(() => {\r\n\r\n                console.log(\"1st interval every second\", new Date().toLocaleTimeString());\r\n                var time = new Date(); \r\n                if(time.getMinutes() % 15 === 0){\r\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\r\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\r\n                    \r\n                    setTimeout(() => {\r\n                        console.log(\"set timout at 70sec \", new Date());\r\n                        this.getCandleHistoryAndStore(); \r\n                    }, 70000);\r\n\r\n                    setInterval(() => {\r\n                        console.log(\"2st interval every 5min 10Sec\", new Date());\r\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n                            this.getCandleHistoryAndStore(); \r\n                        }\r\n                     }, 60000 * 15 + 70000 );  \r\n\r\n                     clearInterval(tostartInteral); \r\n                } \r\n            }, 1000);\r\n            \r\n          \r\n        } \r\n\r\n  //  this.getCandleHistoryAndStore(); \r\n\r\n    // this.getPositionData();\r\n    // this.getNSETopStock();\r\n     \r\n\r\n    //  this.getMySelectedStock();\r\n\r\n    \r\n\r\n    // setInterval(() => {\r\n        \r\n    //     var timediff = moment.duration(\"00:50:00\");\r\n    //     var startdate = moment(new Date()).subtract(timediff);\r\n    \r\n\r\n    //     var enddiff = moment.duration(\"00:01:00\");\r\n    //     var enddate = moment(new Date()).add(enddiff);\r\n\r\n\r\n    //     var data  = {\r\n    //         \"exchange\": \"NSE\",\r\n    //         \"symboltoken\": 212,\r\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\r\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \r\n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\r\n    //     }\r\n    \r\n    //     AdminService.getHistoryData(data).then(res => { \r\n    //         let histdata = resolveResponse(res,'noPop' );\r\n    //         var candleData = histdata.data; \r\n    //         candleData.reverse(); \r\n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\r\n    //     }); \r\n\r\n    // }, 1000);\r\n\r\n   \r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.positionInterval);\r\n        clearInterval(this.state.scaninterval);\r\n        clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n  \r\n\r\n    getCandleHistoryAndStore = async()=> {\r\n\r\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \r\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \r\n       var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\r\n       const today = moment().isoWeekday();\r\n        var timediff = '';\r\n\r\n        \r\n\r\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\r\n            timediff = moment.duration(\"00:50:00\");\r\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\r\n            timediff = moment.duration(\"66:00:00\");\r\n        }else{\r\n            timediff = moment.duration(\"19:00:00\");\r\n        }\r\n        timediff = moment.duration(\"21:00:00\");\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";       \r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n            var data  = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                \"fromdate\": moment(startdate).format(format1) , \r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res,'noPop' );\r\n                //console.log(\"candle history\", histdata); \r\n                if(histdata && histdata.data && histdata.data.length){\r\n                   \r\n                    var candleData = histdata.data; \r\n                    candleData.reverse(); \r\n\r\n                    if(candleData && candleData.length >= 10){\r\n                        var last10Candle = candleData.slice(0, 10); \r\n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \r\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\r\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\r\n\r\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \r\n                    }\r\n\r\n                    // var data = {\r\n                    //     data : candleData, \r\n                    //     token: element.token,\r\n                    //     symbol: element.symbol\r\n                    // }\r\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\r\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \r\n                    // }); \r\n                \r\n                }else{\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\"); \r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 350));  \r\n        }\r\n\r\n\r\n    }\r\n\r\n    findTweezerTopPatternLive = (candleHist,symbol) => {\r\n\r\n     //   console.log(\"TweezerTop finding\", symbol); \r\n        if(candleHist && candleHist.length > 0){\r\n            //candleHist = candleHist.reverse(); \r\n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if(maxHigh < candleHist[index][2])\r\n                maxHigh = candleHist[index][2];\r\n                if(candleHist[index][3] < maxLow)\r\n                maxLow = candleHist[index][3];  \r\n            } \r\n            \r\n            var lastTrendCandleLow = candleHist[9][3]; \r\n            var firstTrendCandleHigh = candleHist[2][2]; \r\n\r\n            var firstCandle = {\r\n                time : candleHist[0]  && candleHist[0][0],\r\n                open: candleHist[0]  && candleHist[0][1],\r\n                high: candleHist[0]  && candleHist[0][2],\r\n                low: candleHist[0]  && candleHist[0][3],\r\n                close: candleHist[0]  && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time:candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n        \r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\r\n           \r\n            //\r\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\r\n                //1st candle green & 2nd candle is red check\r\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \r\n               // console.log(symbol, \"candleHist\",candleHist); \r\n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\r\n\r\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \r\n        \r\n                        var foundData = {\r\n                            symbol : symbol, \r\n                            pattenName: 'Twisser Top', \r\n                            time: new Date( candleHist[0][0]).toLocaleTimeString(), \r\n                        }\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                        this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\r\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \r\n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\",candleHist); \r\n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\r\n                        \r\n                        var msg = new SpeechSynthesisUtterance();\r\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \r\n                        window.speechSynthesis.speak(msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\r\n       // console.log(\"TweezerBottom finding\", symbol); \r\n        if(candleHist && candleHist.length > 0){\r\n            //candleHist = candleHist.reverse(); \r\n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if(maxHigh < candleHist[index][2])\r\n                maxHigh = candleHist[index][2];\r\n                if(candleHist[index][3] < maxLow)\r\n                maxLow = candleHist[index][3];  \r\n            } \r\n            \r\n            var last8candleHigh = candleHist[9][2]; \r\n            var last8candleLow = candleHist[2][3]; \r\n\r\n            var firstCandle = {\r\n                time : candleHist[0]  && candleHist[0][0],\r\n                open: candleHist[0]  && candleHist[0][1],\r\n                high: candleHist[0]  && candleHist[0][2],\r\n                low: candleHist[0]  && candleHist[0][3],\r\n                close: candleHist[0]  && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time:candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n        \r\n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5%  \r\n           \r\n            //  \r\n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\r\n\r\n              \r\n                //1st candle green & 2nd candle is red check\r\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \r\n               // console.log(symbol, \"candleHist\",candleHist); \r\n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\r\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\r\n\r\n                      \r\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\r\n\r\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \r\n                        var foundData = {\r\n                            symbol : symbol, \r\n                            pattenName: 'Twisser bottom', \r\n                            time: new Date( candleHist[0][0]).toLocaleTimeString(), \r\n                        }\r\n                     \r\n                        this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                        \r\n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\",candleHist); \r\n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\r\n                        \r\n                        var msg = new SpeechSynthesisUtterance();\r\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \r\n                        window.speechSynthesis.speak( msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getStoplossFromOrderbook = (row) => {\r\n       var oderbookData = localStorage.getItem('oderbookData'); \r\n       oderbookData =  JSON.parse(oderbookData);\r\n       var stopLoss = 0; \r\n       var data = {}; \r\n       oderbookData.forEach(element => {\r\n        if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\r\n            data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \r\n            data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \r\n        }\r\n       });\r\n       return data; \r\n    }\r\n    getPositionData = async() => {\r\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n        var maxPnL = 0, totalMaxPnL = 0; \r\n        AdminService.getPosition().then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var positionList = data && data.data;\r\n             if (positionList && positionList.length>0){\r\n                this.setState({ positionList : positionList}); \r\n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\r\n                  positionList.forEach(element => {\r\n                    var percentPnL =((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \r\n                    todayProfitPnL+= parseFloat( element.pnl); \r\n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \r\n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \r\n                    totalQtyTraded+=parseInt( element.buyqty); \r\n                    allbuyavgprice+=parseFloat(element.buyavgprice); \r\n                    allsellavgprice+=parseFloat(element.sellavgprice); \r\n                    element.percentPnL=percentPnL;\r\n                    totalPercentage+= parseFloat( percentPnL); \r\n                    var slData  = this.getStoplossFromOrderbook(element) ; \r\n                    element.stopLoss = element.totalsellavgprice === \"0.00\" ? slData.stopLoss : element.totalsellavgprice + \"(\"+ ((element.totalsellavgprice-element.totalbuyavgprice)*100/element.totalbuyavgprice).toFixed(2) + \"%)\"; \r\n                    element.stopLossAmount = slData.maxLossAmount; \r\n                    totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;                     \r\n                }); \r\n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \r\n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \r\n                this.setState({ totalBrokerCharges: ((totalbuyvalue + totalsellvalue) * 0.25/100).toFixed(2)});                \r\n\r\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \r\n            }\r\n       })\r\n    }\r\n   \r\n    getNSETopStock(){\r\n\r\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \r\n\r\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n        totalDayLoss = -Math.abs(totalDayLoss); \r\n        if(this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\",totalDayLoss); \r\n            clearInterval(this.state.scaninterval);\r\n        }else{\r\n               AdminService.getNSETopStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if(data.status  && data.message === 'SUCCESS'){ \r\n                    var scandata =  data.result;   \r\n                   // console.log(\"scandata\",scandata); \r\n            \r\n                    for (let index = 0; index < scandata.length; index++) {\r\n                            var isFound = false; \r\n                            for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\r\n                                    isFound  = true; \r\n                                 }\r\n                            }\r\n                           \r\n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\r\n                               \r\n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n\r\n                                    let searchResdata =  searchRes.data; \r\n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \r\n                                   \r\n                                    if(found.length){\r\n                                        console.log(found[0].symbol, \"found\",found);      \r\n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\r\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\r\n                                    }\r\n                               })\r\n                             \r\n                            }\r\n                    }\r\n                }\r\n            })  \r\n        }\r\n\r\n    }\r\n\r\n\r\n    getMySelectedStock(){\r\n\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \r\n \r\n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n         totalDayLoss = -Math.abs(totalDayLoss); \r\n         if(this.state.todayProfitPnL < totalDayLoss) {\r\n             console.log(\"daily loss crossed\",totalDayLoss); \r\n             clearInterval(this.state.scaninterval);\r\n         }else{\r\n                AdminService.getSelectedStockFromDb().then(res => {\r\n                 let data = resolveResponse(res, \"noPop\");\r\n                 if(data.status  && data.message === 'SUCCESS'){ \r\n                     var scandata =  data.result;   \r\n                    // console.log(\"scandata\",scandata); \r\n             \r\n                     for (let index = 0; index < scandata.length; index++) {\r\n                             var isFound = false; \r\n                             for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\r\n                                     isFound  = true; \r\n                                  }\r\n                             }\r\n                            \r\n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\r\n                                \r\n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n \r\n                                     let searchResdata =  searchRes.data; \r\n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \r\n                                    \r\n                                     if(found.length){\r\n\r\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \r\n                                        selectedStockwatchList.push(found[0]); \r\n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\r\n\r\n                                     }\r\n                                })\r\n                              \r\n                             }\r\n                     }\r\n                 }\r\n             })  \r\n         }\r\n \r\n     }\r\n\r\n\r\n    checkAndPlaceSingleOrder = (stock)=>{\r\n        AdminService.autoCompleteSearch(stock).then(res => {\r\n            let data =  res.data; \r\n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\r\n             console.log(\"stockfound\",found);  \r\n            if(found && found.length){\r\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \r\n            }\r\n       })\r\n    }\r\n\r\n\r\n    getStockOnebyOne(){\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n        totalDayLoss = -Math.abs(totalDayLoss); \r\n        if(this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\",totalDayLoss); \r\n            clearInterval(this.state.scaninterval);\r\n        }else{\r\n            console.log(\"still ok\"); \r\n            AdminService.getAutoScanStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if(data.status  && data.message === 'SUCCESS'){ \r\n                    var scandata =  data.result;   \r\n                    if(scandata && scandata.length>0){\r\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \r\n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \r\n                        var isFound = false; \r\n                        for (let index = 0; index < this.state.positionList.length; index++) {\r\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\r\n                                isFound  = true; \r\n                             }\r\n                        }\r\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\r\n                            console.log(\"found new\", lastSeachStock)\r\n                            var msg = new SpeechSynthesisUtterance();\r\n                            msg.text = 'hey Vijay, '+lastSeachStock; \r\n                            window.speechSynthesis.speak(msg);\r\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\r\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            })  \r\n        }\r\n    }\r\n\r\n\r\n    orderWithFlatstoploss = (token, symbol) => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n\r\n             var LtpData = data && data.data; \r\n             var ltpPrice  = LtpData.ltp\r\n             if(ltpPrice){ \r\n              \r\n            //  var stopLossPrice = ltp - (ltp*0.7/100);\r\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\r\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \r\n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \r\n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \r\n              var orderOption = {\r\n                    transactiontype: 'BUY',\r\n                    tradingsymbol: symbol,\r\n                    symboltoken:token,\r\n                    buyPrice : 0,\r\n                    quantity: quantity, \r\n                    stopLossPrice: stopLossPrice\r\n                }\r\n\r\n              if(quantity && stopLossPrice){\r\n                this.placeOrderMethod(orderOption);   \r\n              }\r\n               \r\n            }         \r\n\r\n       }).catch((error)=>{\r\n            console.log(symbol, \"not found\", 'error', error);\r\n        })  \r\n    }\r\n  \r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n        //    console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n    }\r\n\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": \"BANKNIFTY\",\r\n            \"symboltoken\":\"26009\",\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             //console.log(LtpData);\r\n             if(LtpData && LtpData.ltp){\r\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\r\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\r\n             }\r\n            \r\n       })\r\n    }\r\n\r\n\r\n    getStopLossPrice = async(token, symbol) => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n      \r\n        await AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             if(LtpData &&  LtpData.ltp){\r\n                var ltp = parseFloat(LtpData.ltp); \r\n                ltp  = ltp - (ltp*0.7/100);\r\n                var slPrice = this.getMinPriceAllowTick(ltp); \r\n\r\n                this.setState({ stoploss : slPrice});\r\n                return slPrice; \r\n             }\r\n           \r\n       })\r\n    }\r\n  \r\n    placeOrderMethod = (orderOption) => { \r\n       \r\n        var data = {\r\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\":orderOption.symboltoken,\r\n            \"quantity\":orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"exchange\":\"NSE\",\r\n            \"variety\":\"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n                if(orderOption.stopLossPrice){\r\n                    this.placeSLMOrder(orderOption);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\r\n\r\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\r\n        AdminService.getLTP(ltpdata).then(res => {\r\n            let ltpres = resolveResponse(res, 'noPop');\r\n                var LtpData = ltpres && ltpres.data; \r\n                console.log(symbol, \" ltd data \", LtpData);\r\n                let quantity =0; \r\n                if(LtpData && LtpData.ltp){\r\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \r\n                }\r\n\r\n                \r\n                quantity = quantity>0 ? 1 : 0; \r\n                console.log(symbol, \"  quantity can be order \", quantity);\r\n                if(quantity){\r\n                    const format1 = \"YYYY-MM-DD HH:mm\";\r\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                    console.log(\"beginningTime\", beginningTime); \r\n\r\n                    var time = moment.duration(\"21:10:00\");\r\n                    var startdate = moment(new Date()).subtract(time);\r\n                    var data  = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"symboltoken\": token ,\r\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n                        \"fromdate\": moment(startdate).format(format1) , \r\n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                    }\r\n                \r\n                    AdminService.getHistoryData(data).then(res => {\r\n                        let histdata = resolveResponse(res,'noPop' );\r\n                       // console.log(\"candle history\", histdata); \r\n                        if(histdata && histdata.data && histdata.data.length){\r\n                           \r\n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \r\n                            candleData.reverse(); \r\n\r\n                            if(candleData && candleData.length>0){\r\n                                for (let index = 0; index < 20; index++) {\r\n                                    if(candleData[index]){\r\n                                        clossest += candleData[index][4]; //close  \r\n                                        lowerest += candleData[index][3];  //low\r\n                                        if(candleData[index][4] > highestHigh ){\r\n                                            highestHigh = candleData[index][4];  \r\n                                        }\r\n                                        if(lowestLow < candleData[index][3]){\r\n                                            lowestLow = candleData[index][3];  \r\n                                        }\r\n                                    }\r\n                                    \r\n                                }\r\n\r\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \r\n    \r\n                                var bbmiddleValue = clossest/devideLen; \r\n                                var bblowerValue = lowerest/devideLen; \r\n                                \r\n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \r\n                                stoploss = this.getMinPriceAllowTick(stoploss); \r\n    \r\n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \r\n                                \r\n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \r\n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\r\n                            \r\n                                var orderOption = {\r\n                                    transactiontype: 'BUY',\r\n                                    tradingsymbol: symbol,\r\n                                    symboltoken:token,\r\n                                    buyPrice : 0,\r\n                                    quantity: quantity, \r\n                                    stopLossPrice: stoploss\r\n                                }\r\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \r\n                                   this.placeOrderMethod(orderOption);\r\n                                }else{\r\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\r\n                                    console.log(symbol + \" its not fullfilled\"); \r\n                                }\r\n                            }\r\n\r\n                           \r\n                        }else{\r\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                            console.log(symbol + \" candle data emply\"); \r\n                        }\r\n                    })\r\n\r\n                }\r\n        })\r\n       // await new Promise(r => setTimeout(r, 2000)); \r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n    \r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n    cancelOrderOfSame = (row) =>  {\r\n       \r\n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \r\n        var data = {\r\n            \"variety\":orderData.variety,\r\n            \"orderid\":orderData.orderId,\r\n        }\r\n        AdminService.cancelOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                console.log(\"cancel order\", data);   \r\n               // this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    squareOff = (row) =>  {\r\n       \r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\":row.symboltoken,\r\n            \"transactiontype\":row.buyqty > 0 ? 'SELL' : \"BUY\", \r\n            \"exchange\": row.exchange, \r\n            \"ordertype\": \"MARKET\", \r\n            \"producttype\": row.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": row.buyqty,\r\n        }\r\n\r\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\r\n            \r\n        // }\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(\"squireoff\", data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n                this.cancelOrderOfSame(row); \r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n\r\n            }\r\n        })\r\n       \r\n    }\r\n    updateOrderList = () => {\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res);\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \r\n            }\r\n        });\r\n    }\r\n    \r\n    placeSLMOrder = (slmOption) => {\r\n        \r\n        var data = {\r\n            \"triggerprice\":slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \r\n            \"exchange\": 'NSE', \r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data); \r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n               // this.updateOrderList(); \r\n               var msg = new SpeechSynthesisUtterance();\r\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \r\n               window.speechSynthesis.speak(msg);\r\n\r\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n            }\r\n        })\r\n    }\r\n\r\n    getOpenPeningOrderId =(symboltoken) => {\r\n\r\n        var oderbookData = JSON.parse(localStorage.getItem('oderbookData'));\r\n        var data = {}; \r\n         for (let index = 0; index < oderbookData.length; index++) {\r\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\r\n                data.orderId = oderbookData[index].orderid  \r\n                data.variety = oderbookData[index].variety  \r\n                break;\r\n            }\r\n         } \r\n         return data;\r\n     }\r\n    modifyOrderMethod = (row, minPrice) => {\r\n        //console.log(this.state.triggerprice);\r\n\r\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \r\n        console.log(\"orderid\", this.state.orderData);\r\n\r\n        var data = {\r\n            \"variety\" : \"STOPLOSS\",\r\n            \"orderid\": orderData.orderId,\r\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\":  0,\r\n            \"triggerprice\": parseFloat( minPrice ),\r\n            \"quantity\":row.buyqty,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n        }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n\r\n            var msg = new SpeechSynthesisUtterance();\r\n          \r\n          \r\n            if(data.status  && data.message ===  'SUCCESS'){\r\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\r\n              msg.text = row.tradingsymbol +' modified '+data.message\r\n              window.speechSynthesis.speak(msg);\r\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\r\n                localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\r\n            }\r\n        })\r\n    }\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice =  minPrice.toFixed(2); \r\n       // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt( minPrice.split('.')[0]);\r\n      //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal =  parseFloat( minPrice.split('.')[1]);\r\n       // console.log(\"decimal\",decimal); \r\n        var tickedecimal =  decimal-decimal%5; \r\n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \r\n     //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice; \r\n    }\r\n\r\n    getPercentage = (avgPrice,  ltp , row) =>  {\r\n\r\n        avgPrice =  parseFloat(avgPrice); \r\n        var percentChange = ((ltp - avgPrice)*100/avgPrice).toFixed(2); \r\n\r\n      //  console.log(row.symbolname,  'chng %',percentChange);\r\n         if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange > 0.7){\r\n                var minPrice =  avgPrice + (avgPrice * 0.1/100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice); \r\n                this.modifyOrderMethod(row, minPrice);\r\n         }else{\r\n           //var lastTriggerprice =  this.state['lastTriggerprice_'+row.symboltoken]; \r\n           var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \r\n           var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \r\n        //   console.log(row.symbolname, 'chng form Trigger Price',perchngfromTriggerPrice);\r\n           if(perchngfromTriggerPrice > 0.7){\r\n                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice); \r\n                this.modifyOrderMethod(row, minPrice);\r\n           }\r\n\r\n         }\r\n\r\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\r\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\r\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\r\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\r\n\r\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\r\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\r\n                this.squareOff(row); \r\n                console.log(\"Sqr off called for\",row.symbolname);  \r\n            }\r\n            \r\n\r\n        }\r\n\r\n        return percentChange;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                     <br />\r\n                \r\n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\r\n                        <Grid item >\r\n                            <Typography variant=\"h6\" >\r\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3} >\r\n                          <Typography component=\"h3\">\r\n                            <b>Date:: {new Date().toLocaleString()} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        \r\n                        <Grid item  >\r\n                          <Typography component=\"h3\">\r\n                            <b>Total Turnover {this.state.totalTornOver} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                       \r\n                        <Grid item >\r\n                          <Typography component=\"h3\"  >\r\n                            <b> Charges</b> <b style={{color:\"#00cbcb\"}}>-{this.state.totalBrokerCharges} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                        <Grid item  >\r\n                          <Typography component=\"h3\"   >\r\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.todayProfitPnL} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <Typography component=\"h3\" >\r\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                        <Grid item  >\r\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \r\n                        </Grid>\r\n                </Grid>\r\n               \r\n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                                \r\n\r\n                    <Grid item xs={12} sm={12}> \r\n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\r\n                                 \r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\r\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Trading symbol</TableCell>\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\r\n  \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Buy Price</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Sell Price</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Bought Qty</TableCell>\r\n                                \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max Locked P/L</TableCell>\r\n\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\r\n        \r\n    \r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\r\n                           \r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {this.state.positionList ? this.state.positionList.map(row => (\r\n                                <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\r\n\r\n                                    <TableCell style={{paddingLeft:\"3px\"}} align=\"left\">&nbsp; <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://chartink.com/stocks/\"+row.tradingsymbol.split('-')[0]+\".html\"}>{row.tradingsymbol.split('-')[0]}</a> </TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\r\n                                    {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\r\n                                 \r\n                                    <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\r\n\r\n                                    <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\r\n                                    <TableCell align=\"left\">{row.buyqty}</TableCell>\r\n                                    <TableCell align=\"left\">{row.netqty}</TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\r\n                                    <TableCell align=\"left\"> {row.stopLoss}</TableCell> \r\n                                    <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \r\n\r\n                                    \r\n                                    {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\r\n                                    <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'darkmagenta' : '#00cbcb'}}><b>{row.pnl}</b></TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        { row.netqty !== '0' ? this.getPercentage(row.totalbuyavgprice, row.ltp, row) : \"\"} \r\n                                        {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\r\n                                      </TableCell> \r\n                                    <TableCell align=\"left\">{row.ltp}</TableCell>\r\n                                  \r\n                                    <TableCell align=\"left\">\r\n                                        {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                            )):''}\r\n\r\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"lightgray\"}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\r\n\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\r\n          \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'darkmagenta' : '#00cbcb'}}>{this.state.todayProfitPnL} </TableCell>\r\n \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\r\n                                    \r\n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) : \"\"}\r\n                    \r\n                                </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                </TableRow>\r\n\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n\r\n\r\n                    </Grid>\r\n\r\n                  \r\n\r\n                        <Grid item xs={12} sm={12} >\r\n                             <OrderBook/>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} sm={12} >\r\n                        <Paper style={{overflow:\"auto\", padding:'5px'}} >\r\n                                 \r\n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                                     <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\r\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n             \r\n                                              \r\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol Found </TableCell>\r\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Time</TableCell>\r\n                                                             \r\n                                         </TableRow>\r\n                                     </TableHead>\r\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n             \r\n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\r\n                                             <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\r\n             \r\n                                                 <TableCell align=\"left\">{row.symbol}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.time}</TableCell>\r\n                                                \r\n                                             </TableRow>\r\n                                         )):''}\r\n                                     </TableBody>\r\n                                 </Table>\r\n             \r\n                                 </Paper>\r\n                        </Grid>\r\n\r\n                               \r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     footerButton: {\r\n//         position: 'fixed',\r\n//     }\r\n// };\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 'auto',\r\n  },\r\n  MuiTabsScroller : {\r\n    overflow: 'auto'\r\n  }\r\n \r\n\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n      <TabPanel value={value} index={0} dir={theme.direction}>\r\n         \r\n        {props.data && props.data.symbolList ? props.data.symbolList.map(row => (\r\n            <>\r\n        <ListItem button style={{ fontSize: '12px'}} >\r\n            <ListItemText onClick={() => props.data.LoadSymbolDetails(row.symbol)} primary={row.name} /><DeleteIcon  onClick={() => props.data.deleteItemWatchlist(row.symbol)} />\r\n        </ListItem>\r\n        \r\n        </>\r\n        )):''}\r\n                                      \r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n        Nifty 100\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          Midcap\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n\r\n        <Tabs\r\n          className={classes.MuiTabsScroller}\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n     \r\n          style={{ overflow: 'auto'}}\r\n        >\r\n          <Tab label=\"Nifty 50\" {...a11yProps(0)} />\r\n          <Tab label=\"Midcap\" {...a11yProps(1)} />\r\n          <Tab label=\"Smallcap\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport * as moment from 'moment';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Notify from \"../../utils/Notify\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport { w3cwebsocket } from 'websocket';\r\nimport pako from 'pako';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nimport Position from './Position';\r\n\r\nimport Tab from './Tab'\r\n\r\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sumPercentage: 0,\r\n            autoSearchList: [],\r\n            isDasable: false,\r\n            isError: false,\r\n            InstrumentLTP: {},\r\n            ifNotBought: true,\r\n            autoSearchTemp: [],\r\n            backTestResult: [],\r\n            backTestFlag: true,\r\n            patternType: \"NR4\",\r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"INTRADAY\",\r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            selectedWatchlist: 'NIFTY 50',\r\n            longExitPriceType: 4,\r\n            shortExitPriceType: 4\r\n\r\n\r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\r\n\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n    onChangePattern = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var staticData = this.state.staticData;\r\n        this.setState({ symbolList: staticData[e.target.value] });\r\n        if (e.target.value == \"selectall\") {\r\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n            this.setState({ startDate: date });\r\n        } else if (fromDate === \"END_DATE\") {\r\n            this.setState({ endDate: date });\r\n        }\r\n    };\r\n    getLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            this.setState({ InstrumentLTP: LtpData });\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n        })\r\n    }\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n\r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken, clientcode) => {\r\n\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        //  console.log(\"1st Request :- \" + firstTime_req);\r\n        wsClint.send(firstTime_req);\r\n    }\r\n\r\n    updateSocketWatch = (feedToken, clientcode) => {\r\n\r\n        var channel = this.state.symbolList.map(element => {\r\n            return 'nse_cm|' + element.token;\r\n        });\r\n\r\n        channel = channel.join('&');\r\n        var sbin = {\r\n            \"task\": \"mw\",\r\n            \"channel\": channel,\r\n            \"token\": this.state.feedToken,\r\n            \"user\": this.state.clientcode,\r\n            \"acctid\": this.state.clientcode\r\n        }\r\n        wsClint.send(JSON.stringify(sbin));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        AdminService.getStaticData().then(res => {\r\n            var data = res.data;\r\n            //data = JSON.parse(data);   \r\n            var totalWatchlist = Object.keys(data);\r\n            this.setState({ totalWatchlist: totalWatchlist });\r\n            this.setState({ staticData: data });\r\n\r\n            var watchlist = [];\r\n            totalWatchlist.forEach(element => {\r\n\r\n                var mylist = data[element];\r\n                mylist.forEach(element2 => {\r\n                    var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\r\n                    if (!foundInWatchlist.length) {\r\n                        watchlist.push(element2);\r\n                    }\r\n                });\r\n\r\n               \r\n            });\r\n\r\n            localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n            this.setState({ symbolList: data[this.state.selectedWatchlist] });\r\n        });\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\r\n\r\n\r\n        //    wsClint.onopen  = (res) => {\r\n\r\n        //          this.makeConnection();\r\n        //          this.updateSocketWatch(feedToken ,clientcode);\r\n\r\n        //         //  setTimeout(function(){\r\n        //         //    this.updateSocketWatch(feedToken ,clientcode);\r\n        //         //  }, 800);\r\n        //    }\r\n\r\n        wsClint.onmessage = (message) => {\r\n\r\n\r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n            var liveData = JSON.parse(data);\r\n\r\n            this.state.symbolList && this.state.symbolList.forEach(element => {\r\n\r\n                var foundLive = liveData.filter(row => row.tk == element.token);\r\n\r\n\r\n                if (foundLive.length > 0 && foundLive[0].ltp)\r\n                    this.setState({ [element.symbol + 'ltp']: foundLive.length > 0 && foundLive[0].ltp })\r\n                if (foundLive.length > 0 && foundLive[0].cng)\r\n                    this.setState({ [element.symbol + 'nc']: foundLive.length > 0 && foundLive[0].nc })\r\n\r\n                var foundTweezerTop = localStorage.getItem('foundTweezerTop_' + element.token) && JSON.parse(localStorage.getItem('foundTweezerTop' + element.token));\r\n\r\n                if (foundTweezerTop && foundTweezerTop.symboltoken == element.token) {\r\n\r\n                    if (foundTweezerTop.entryBelow < foundLive[0].ltp) {\r\n                        console.log('TweezerTop ', foundTweezerTop.tradingsymbol, \"entry found at \", foundLive[0].ltp);\r\n                        this.setState({ tradingsymbol: foundTweezerTop.tradingsymbol, symboltoken: foundTweezerTop.symboltoken, buyPrice: 0, producttype: 'INTRADAY', quantity: foundTweezerTop.quantity })\r\n                        //    this.placeOrder('SELL', \"BUY\"); \r\n\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e);\r\n        }\r\n\r\n        setInterval(() => {\r\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\r\n            // console.log(\"Request :- \" + _req);\r\n            wsClint.send(_req);\r\n            //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if (!list) {\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.getAutoScanStock().then(res => {\r\n        //         let data = resolveResponse(res);\r\n        //         console.log(data);  \r\n        //         if(data.status  && data.message == 'SUCCESS'){ \r\n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \r\n        //         }\r\n        //     })    \r\n        // }, 2000);\r\n\r\n    }\r\n\r\n    backTestAnyPattern = async () => {\r\n\r\n\r\n\r\n        if (!this.state.patternType) {\r\n            Notify.showError(\"Select pattern type\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'NR4') {\r\n            this.backTestNR4();\r\n            return;\r\n        }\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n\r\n        console.log(\"pattername\", this.state.patternType);\r\n\r\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last10Candle = candleData.slice(index2, index2 + 10);\r\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \r\n\r\n                            switch (this.state.patternType) {\r\n                                case 'TweezerTop':\r\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                case 'TweezerBottom':\r\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n\r\n                        }\r\n                        runningTest += candleData.length;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    backTestNR4 = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(index2, index2 + 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                            last4Candle.reverse();\r\n\r\n                            var rangeArr = [];\r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[index2 + 4];\r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\r\n                                        stopLoss: firstCandle[3],\r\n                                        buyExitPrice: buyentry,\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])){ \r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                        this.setState({ backTestResult:  this.state.backTestResult.reverse()});\r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: sellenty,\r\n                                        stopLoss: firstCandle[2],\r\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                    }\r\n                                    if(Math.floor(10000 / firstCandle[3])){\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\r\n\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\r\n                                    squiredOffAt315 = higherStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //lowest of 3:15 profit booking\r\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\r\n                                    lowestOf315 = next10Candle[indexTarget2][4];\r\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = higherStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (priceDiff < -0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\r\n                                    flatSellingPrice = higherStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (rangePriceDiff <= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\r\n                                    rangeSellingPrice = higherStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: sellEntyPrice,\r\n                                    stopLoss: higherStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: 0,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / sellEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\r\n                                //   foundStock.buyExitPrice = squiredOffAt315; \r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.buyExitPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.buyExitPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\r\n                                foundStock.buyExitPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({ backTestFlag: true });\r\n    }\r\n\r\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\r\n                                    squiredOffAt315 = LowerStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //highest of 3:15 profit booking\r\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\r\n                                    highestOf315 = next10Candle[indexTarget2][4];\r\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (priceDiff > 0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\r\n                                    flatSellingPrice = LowerStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (rangePriceDiff >= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\r\n                                    rangeSellingPrice = LowerStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: 0,\r\n                                    stopLoss: LowerStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: buyEntyPrice,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / buyEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\r\n                                foundStock.sellEntyPrice = squiredOffAt315;\r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n\r\n    }\r\n\r\n    placeOrder = (transactiontype, slmOrderType) => {\r\n\r\n        var data = {\r\n            \"variety\": \"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": transactiontype, //BUY OR SELL\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //   console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n\r\n                if (this.state.stoploss) {\r\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails = (name) => {\r\n\r\n        var token = '';\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            if (this.state.symbolList[index].symbol === name) {\r\n                token = this.state.symbolList[index].token;\r\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\r\n                break;\r\n            }\r\n        }\r\n        this.getHistory(token);\r\n    }\r\n\r\n    placeSLMOrder = (slmOrderType) => {\r\n\r\n        var data = {\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": slmOrderType ? slmOrderType : \"SELL\",\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n            \"triggerprice\": this.state.stoploss,\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //     console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n        // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (data && data.data) {\r\n\r\n                var histCandles = data.data;\r\n                histCandles && histCandles.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (histCandles.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy: histCandles, buyPrice: histCandles[0][2] });\r\n                }\r\n                this.getLTP();\r\n            }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) => {\r\n\r\n\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n        //  console.log(\"values\", values); \r\n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol);\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [];\r\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\r\n            if (!foundInWatchlist.length) {\r\n                watchlist.push(fdata);\r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n                AdminService.saveWatchListJSON({ stock: fdata }).then(res => {\r\n                    let resdata = resolveResponse(res, 'noPop');\r\n                    console.log(resdata);\r\n                });\r\n            }\r\n\r\n            this.setState({ symbolList: JSON.parse(localStorage.getItem('watchList')), search: \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index, 1);\r\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList: list });\r\n    }\r\n\r\n    getAveragePrice = (orderId) => {\r\n\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        var averageprice = 0;\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            if (oderbookData[index].orderid === 'orderId') {\r\n                averageprice = oderbookData[index].averageprice\r\n                this.setState({ averageprice: averageprice });\r\n                break;\r\n            }\r\n        }\r\n        return averageprice;\r\n    }\r\n\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n\r\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPnlValue = 0, sumSellEntyPrice = 0;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n\r\n                <Grid direction=\"row\" container>\r\n\r\n                    <Grid item xs={3} sm={3}  >\r\n\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            id=\"free-solo-2-demo\"\r\n                            disableClearable\r\n                            style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\r\n                            onChange={this.onSelectItem}\r\n                            //+ ' '+  option.exch_seg\r\n                            options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                option.symbol\r\n                            ) : []}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    onChange={this.onChange}\r\n                                    {...params}\r\n                                    label={\"Search Symbol (\" + this.state.symbolList.length + \")\"}\r\n                                    margin=\"normal\"\r\n                                    variant=\"standard\"\r\n\r\n                                    name=\"search\"\r\n                                    value={this.state.search}\r\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                />\r\n                            )}\r\n                        />\r\n\r\n                        <div style={{ marginLeft: '10px' }}>\r\n                            <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\r\n                                <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                    <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n\r\n                                    {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                        <MenuItem value={element}>{element}</MenuItem>\r\n                                    ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\r\n\r\n                            {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\r\n                                <>\r\n                                    <ListItem button style={{ fontSize: '12px' }} >\r\n                                        <ListItemText style={{ color: this.state[row.symbol + 'nc'] > 0 ? 'green' : \"red\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {this.state[row.symbol + 'ltp']} ({this.state[row.symbol + 'nc']}%) <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />\r\n                                    </ListItem>\r\n\r\n                                </>\r\n                            )) : ''}\r\n                        </div>\r\n\r\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    <Grid item xs={9} sm={9}>\r\n\r\n\r\n                        <Grid direction=\"row\" alignItems=\"center\" container>\r\n\r\n                            <Grid item xs={10} sm={5}>\r\n                                <Typography variant=\"h5\"  >\r\n                                    {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"}   {this.state.sbinLtp}\r\n                                </Typography>\r\n                                Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\r\n                                High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\r\n                                Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\r\n                                Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2}>\r\n                                <FormControl style={styles.selectStyle}>\r\n                                    <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\r\n                                    <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\r\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\r\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={1} sm={2}  >\r\n\r\n                                <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\r\n                                <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={10} sm={12}>\r\n                                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\r\n\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                                <TableRow key={i} >\r\n\r\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )) : ''}\r\n                                        </TableBody>\r\n                                    </Table>\r\n\r\n                                </Paper>\r\n\r\n\r\n\r\n                                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\r\n                                    <Grid direction=\"row\" container spacing={2}>\r\n\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\r\n                                                <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\r\n                                                    <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\r\n                                                    <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item xs={12} sm={4}>\r\n                                            <MaterialUIDateTimePicker callbackFromParent={dateParam} />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel>Long Exit</InputLabel>\r\n                                                <Select value={this.state.longExitPriceType} name=\"longExitPriceType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={2}>High</MenuItem>\r\n                                                    <MenuItem value={3}>Low</MenuItem>\r\n                                                    <MenuItem value={4}>Close</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel>Short Exit</InputLabel>\r\n                                                <Select value={this.state.shortExitPriceType} name=\"shortExitPriceType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={2}>High</MenuItem>\r\n                                                    <MenuItem value={3}>Low</MenuItem>\r\n                                                    <MenuItem value={4}>Close</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={12} style={{ marginTop: '28px' }}>\r\n                                            {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Test</Button> : <Spinner />}\r\n\r\n                                            &nbsp; Stock: {this.state.stockTesting}  Total Test Count: {this.state.runningTest}\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n\r\n                                    <br />\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow>\r\n\r\n                                                <TableCell align=\"center\">Total Trade Found: {this.state.backTestResult && this.state.backTestResult.length}</TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"center\"><b>{localStorage.getItem('sumSellEntyPrice')}</b></TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\r\n                                                <TableCell style={{ color: \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\r\n                                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell>\r\n\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\r\n\r\n\r\n                                            </TableRow>\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">FoundAt</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOff</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">PnL %</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Brokerage</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" title=\"Qty of 100\" align=\"center\">Net PnL</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\r\n\r\n\r\n\r\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}}\r\n                                                <TableRow hover key={i} >\r\n\r\n                                                    <TableCell align=\"left\">{i + 1}</TableCell>\r\n                                                    <TableCell align=\"center\">{row.symbol}</TableCell>\r\n                                                    <TableCell align=\"center\">{row.foundAt}</TableCell>\r\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\r\n\r\n                                                    <TableCell align=\"center\" {...sumSellEntyPrice = sumSellEntyPrice + parseFloat(row.sellEntyPrice * row.quantity)}>{row.sellEntyPrice}({row.quantity})</TableCell>\r\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\r\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\r\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}> <b>{row.perChange}%</b></TableCell>\r\n                                                    <TableCell style={{ color: \"#00cbcb\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\r\n\r\n                                                    <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\r\n\r\n                                                    <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\" > <b>{((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</b></TableCell>\r\n\r\n                                                </TableRow>\r\n\r\n\r\n\r\n                                            )) : ''}\r\n\r\n\r\n                                            <TableRow >\r\n\r\n                                                <TableCell align=\"center\">Total</TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"center\"><b>{localStorage.setItem('sumSellEntyPrice', sumSellEntyPrice.toFixed(2))}{sumSellEntyPrice.toFixed(2)}</b></TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n\r\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\r\n                                                <TableCell style={{ color: \"#00cbcb\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\r\n                                                <TableCell style={{ color: netSumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell>\r\n\r\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\r\n\r\n\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n\r\n\r\n                                    <b> Average gross/trade PnL: </b> <b style={{ color: netSumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} >{(sumPerChange / this.state.backTestResult.length).toFixed(2)}%</b>\r\n\r\n\r\n\r\n\r\n\r\n                                </Paper>\r\n\r\n\r\n\r\n\r\n                                {/* <Position /> */}\r\n                            </Grid>\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import axios from \"axios\";\r\nconst performServerAction = axios.create({\r\n    baseURL: ''\r\n  });\r\nexport default performServerAction;","import * as actionTypes from \"./types\";\r\nimport performServerAction from \"../api\"\r\nimport AuthService from \"../components/service/AuthService\";\r\n\r\nexport const setPackLoaded = ()=> async dispatch=> {\r\n    var data = { allPacks:true, portal: true}; \r\n    const response = await performServerAction.post('getPrepaidPacks', data)\r\n    \r\n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\r\n  };\r\n  export const getPackById = (id)=> async dispatch=> {\r\n    try{\r\n     \r\n\r\n      //add getPrepaidPacksById after / in sprint 7 and 8\r\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\r\n    \r\n     //sprint 8 & 9\r\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\r\n\r\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\r\n    }catch(err){\r\n      console.log(err,\"ERRRR\")\r\n    }\r\n   \r\n  };\r\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",updatedInfo);\r\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\r\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\r\n      updatedInfo.productId =  String( updatedInfo.productId );\r\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\r\n      updatedInfo.active =  String( updatedInfo.active );\r\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\r\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\r\n\r\n      \r\n\r\n\r\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",packInfo)\r\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.data.indexSymbol}\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {props.data.indexSymbol}  At {props.data.timestamp}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\r\n        <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \r\n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\r\n\r\n                </TableRow>\r\n                <TableBody>\r\n                    \r\n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n\r\n                            {index !== 0 ? <>\r\n                                   <TableCell align=\"left\">{index} </TableCell>\r\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\r\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \r\n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\r\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\r\n                                 \r\n                                </>\r\n                           : \"\" } \r\n                                   \r\n                            </TableRow>\r\n\r\n                        )):      \r\n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\r\n                            Refresh\r\n                        </Button> </>}\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>    \r\n\r\n\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\n\r\nimport \"./ViewStyle.css\";\r\nimport MyDialog from './MyDialog'\r\nimport Notify from \"../../utils/Notify\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           // products: [],\r\n            stopnview:'', \r\n            indexTimeStamp:'', \r\n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n         this.loadPackList();\r\n  \r\n         var todayTime =  new Date(); \r\n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\r\n              setInterval(() => {\r\n                  this.loadPackList();\r\n              }, 60001 * 2);\r\n          }\r\n      }\r\n\r\n\r\n      loadPackList() {\r\n        \r\n    \r\n        AdminService.getAllIndices()\r\n            .then((res) => {\r\n                if(res.data){\r\n\r\n\r\n                    this.setState({indexTimeStamp : res.data.timestamp})\r\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \r\n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\r\n                    this.setState({products :   softedData});\r\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \r\n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \r\n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \r\n\r\n\r\n                    // for (let i = 0; i < softedData.length; i++) {\r\n                    //     // var cancel = setInterval(() => {\r\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n                    //     // }, 1000);\r\n                    //     // if(i == softedData.length-1 ){\r\n                    //     //     clearInterval(cancel)\r\n                    //     // }\r\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n\r\n                    // }\r\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\r\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\r\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\r\n                  \r\n                   \r\n                }\r\n\r\n            })\r\n            .catch((reject) => {\r\n\r\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \r\n                this.speckIt(\"All Indices API Failed\");     \r\n               \r\n\r\n            })\r\n    }\r\n\r\n\r\n    getIndicesStocks = (indexSymbol, index) =>{\r\n\r\n\r\n\r\n        AdminService.getIndiceStock(indexSymbol)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n\r\n            var resdata = res.data; \r\n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \r\n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \r\n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \r\n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \r\n\r\n\r\n            if(resdata){\r\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \r\n                \r\n                \r\n\r\n                if(document.getElementById('topDate_'+index)){\r\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \r\n                }\r\n                var percent = 0;\r\n\r\n                if(document.getElementById('top1_'+index)){\r\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\r\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \r\n                }\r\n                if(document.getElementById('top2_'+index)){\r\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\r\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top3_'+index)){\r\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\r\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top4_'+index)){\r\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\r\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top5_'+index)){\r\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\r\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \r\n                }   \r\n            }\r\n\r\n        })\r\n        .catch((reject) => {\r\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \r\n            this.speckIt(indexSymbol + \" API Failed \"  ); \r\n        })\r\n\r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n    }\r\n   \r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString(); \r\n      //  window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    dateFormat(date){ \r\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\r\n    }\r\n    timeFormat(date){ \r\n        return moment().calendar();   \r\n        //return moment(date).format('hh:mm:ss');\r\n\r\n        \r\n    }\r\n  \r\n    render(){\r\n     \r\n\r\n      return(\r\n        <React.Fragment>\r\n                <PostLoginNavBar />\r\n            \r\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\r\n\r\n                 <Grid item xs={7} sm={7}>\r\n                   \r\n                </Grid>\r\n\r\n        \r\n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\r\n\r\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                        Market - Indices at { this.state.indexTimeStamp }\r\n                    </Typography> \r\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n\r\n                <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \r\n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \r\n                    \r\n\r\n\r\n                </TableRow>\r\n                    \r\n                    <TableBody>\r\n                    \r\n                        { this.state.products ? this.state.products.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n                              \r\n                              {/* 'SECTORAL INDICES' */}\r\n                                { idata.key !== 'vijay' ? <>\r\n\r\n                                   <TableCell align=\"left\">{index+1} </TableCell>\r\n\r\n                                     <TableCell align=\"left\">   \r\n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\r\n                                    </TableCell>\r\n\r\n                                   \r\n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\r\n                                    \r\n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\r\n                                \r\n                                    <TableCell align=\"left\"  >\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\r\n                                            Refresh\r\n                                        </Button>\r\n\r\n                                    </TableCell> \r\n\r\n\r\n                                    \r\n\r\n                                     \r\n                                     \r\n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \r\n                                    \r\n                                     </> : \"\"\r\n                                }\r\n                               \r\n\r\n                            </TableRow>\r\n\r\n                        )):<Spinner/>}\r\n\r\n\r\n\r\n\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n                </Grid>\r\n\r\n                </Grid>\r\n                   \r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\n//import \"./styles.css\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n \r\n\r\n  // dateTime: \"23-06-2021 4:43:02 PM\"\r\n  // diff: -298523\r\n  // isDuplicate: true\r\n  // totCEOI: 902038\r\n  // totCEOIChange: \"0.000\"\r\n  // totCEVol: 15312564\r\n  // totChangeINOICall: 127897\r\n  // totChangeINOIDiff: -107353\r\n  // totChangeINOIPut: 20544\r\n  // totDiffChange: \"0.000\"\r\n  // totPEOI: 603515\r\n  // totPEOIChange: \"0.000\"\r\n  // totPEVol: 15418605\r\n  var data =  props.diffData && props.diffData.data;\r\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \r\n\r\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \r\n\r\n  // var startpage = 0  \r\n  // if(scpage * 10 <  data.length) {\r\n  //   startpage =  scpage * 10;  \r\n  // }   \r\n  // else if (props.diffData.scrollcount > data.length){\r\n  //   startpage =  0; \r\n  // }\r\n\r\n // data.reverse();\r\n\r\n\r\n  // console.log('scrollcount', props.diffData.scrollcount); \r\n  // console.log('startpage', startpage);\r\n\r\n  // console.log('charrt data', data);\r\n\r\n  //for (let index = startpage; index <  startpage + 10; index++) {\r\n  \r\n\r\n\r\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\r\n    if(data[index]){\r\n      putData.push(data[index].totPEOI); \r\n      callData.push(data[index].totCEOI); \r\n      diffData.push(data[index].diff); \r\n      timeDate.push( data[index].dateTime.substring(19,11)); \r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n  const chartData = {\r\n    labels: timeDate,\r\n    datasets: [\r\n      {\r\n        label: \"Put\",\r\n        data: putData,\r\n        fill: true,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"green\"\r\n      },\r\n      {\r\n        label: \"Call\",\r\n        data: callData,\r\n        fill: true,\r\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n        borderColor: \"red\",\r\n        \r\n      },\r\n      // {\r\n      //   label: \"Diff\",\r\n      //   data: diffData,\r\n      //   fill: true,\r\n      //   onoffline : true,\r\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n      //   borderColor: \"blue\",\r\n        \r\n      // }\r\n     \r\n    ]\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\r\n  } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n      this.filterOptionChain(e.target.name,  e.target.value); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        AdminService.getFunds().then(fundsRes => {\r\n            // console.log('profiledata', profileRes); \r\n               let fundsResData = resolveResponse(fundsRes);\r\n             //  var fundsResData =  fundsRes && fundsRes.data; \r\n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\r\n               \r\n                this.setState({  fundData :fundsResData.data })\r\n               }\r\n           })\r\n\r\n    }\r\n   \r\n  \r\n   toFixedAmount =(value) => {\r\n\r\n    if(value){\r\n      return  parseFloat(value).toFixed(2);\r\n    }\r\n   }\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n       \r\n            <br/><br/><br/>\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n            \r\n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n\r\n                <Typography variant=\"h6\">\r\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\r\n                </Typography>\r\n              \r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\r\n                </Typography>\r\n             \r\n                <Typography variant=\"h6\">\r\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\r\n                </Typography>\r\n\r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\r\n                </Typography>\r\n                </Paper>\r\n                </Grid>\r\n               \r\n\r\n\r\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n               \r\n                <Typography variant=\"h6\">\r\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\r\n                    </Typography>\r\n                    \r\n                    \r\n                    <Typography variant=\"h6\">\r\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\r\n                    </Typography>\r\n\r\n                  \r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport \"./ViewStyle.css\";\r\n\r\n\r\nclass TradeBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addProduct = this.addProduct.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.convertBool = this.convertBool.bind(this);\r\n        \r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All'\r\n\r\n        }\r\n    }\r\n    getTodayTrade = () => {\r\n        AdminService.retrieveTradeBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res);\r\n                console.log('datamy', data);\r\n\r\n                if(data && data.data){\r\n                    this.setState({oderbookData: data.data});\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n   \r\n   \r\n        this.getTodayTrade(); \r\n        \r\n       \r\n    }\r\n\r\n    zoneChange = (e) =>{\r\n        this.setState({[e.target.name]: e.target.value});\r\n\r\n        if(e.target.value.includes(\"Select All\")){\r\n            this.setState({selectedZone: this.state.listofzones})\r\n            this.setState({selectAllzone: \"Remove All\"})\r\n        }\r\n    \r\n        if(e.target.value.includes(\"Remove All\")){\r\n            this.setState({selectedZone: []})\r\n            this.setState({selectAllzone: \"Select All\"})\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n   \r\n    addProduct=(e)=> {\r\n        console.log(this.props)\r\n        this.props.history.push('/banner-add');\r\n    }\r\n\r\n    editProduct(productId) {\r\n        window.localStorage.removeItem(\"selectedBannerId\");\r\n        window.localStorage.setItem(\"selectedBannerId\", productId);\r\n        this.props.history.push('/banner-edit');\r\n    }\r\n\r\n    convertBool(flag) {\r\n        return flag ? 'Yes' : 'No';\r\n    }\r\n\r\n    dateFormat(date){\r\n        var d = new Date(date);\r\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\r\n        return fd;\r\n    }\r\n   \r\n    \r\n\r\n    render(){\r\n    \r\n      return(\r\n        <React.Fragment>\r\n            <PostLoginNavBar/>\r\n\r\n\r\n\r\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                  Today Trades ({this.state.oderbookData.length})\r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \r\n                            </Grid>\r\n\r\n                            \r\n                </Grid>\r\n            \r\n\r\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n\r\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\r\n                        \r\n\r\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\r\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\r\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\r\n\r\n                      \r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n            \r\n\r\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\r\n                        <TableRow key={row.productId} >\r\n\r\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\r\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                            \r\n                            <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\r\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\r\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\r\n\r\n                            \r\n                        </TableRow>\r\n                    )):<Spinner/>}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\r\nexport default TradeBook;","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\n//import AdminWelcome from '../adminwelcome.png';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport  {API_KEY} from \"../../utils/config\";\r\nimport * as moment from 'moment';\r\nimport { w3cwebsocket } from 'websocket'; \r\nimport pako from 'pako';\r\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            userName: \"\",\r\n            password: \"\",\r\n            autoSearchList :[],\r\n            isDasable:false,\r\n            isError:false,\r\n            InstrumentLTP : {},\r\n            ifNotBought : true,\r\n            autoSearchTemp : [],\r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\r\n        \r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n            console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n          this.setState({ startDate: date  });\r\n        } else if (fromDate === \"END_DATE\") {\r\n          this.setState({ endDate: date  });\r\n        }\r\n      };\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\":  this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             this.setState({ InstrumentLTP : LtpData});\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n       })\r\n    }\r\n    decodeWebsocketData =(array)  => {\r\n\r\n        console.log('atoms'); \r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n    \r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken ,clientcode ) => {\r\n\r\n\r\n        var firstTime_req =  {\r\n            \"actiontype\": \"subscribe\",\r\n            \"feedtype\": \"order_feed\",\r\n            \"jwttoken\": this.state.feedToken ,\r\n            \"clientcode\": this.state.clientcode ,\r\n            \"apikey\": API_KEY\r\n       }\r\n       \r\n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\r\n        wsClint.send(JSON.stringify( firstTime_req));\r\n    }\r\n\r\n    updateSocketWatch = (feedToken,clientcode ) => {\r\n      \r\n        var channel = this.state.symbolList.map(element => {\r\n             return 'nse_cm|'+ element.token; \r\n        });\r\n\r\n        channel = channel.join('&'); \r\n        var sbin =  {\r\n            \"task\":\"mw\",\r\n            \"channel\": channel,\r\n            \"token\":this.state.feedToken,\r\n            \"user\":this.state.clientcode,\r\n            \"acctid\":this.state.clientcode\r\n        }\r\n        wsClint.send( JSON.stringify( sbin)); \r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var feedToken =   tokens &&  tokens.feedToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \r\n        var clientcode =   userProfile &&  userProfile.clientcode;\r\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\r\n\r\n            \r\n        wsClint.onopen  = (res) => {\r\n\r\n             this.makeConnection();\r\n             console.log('connected');\r\n         //    this.updateSocketWatch();\r\n                \r\n            //  setTimeout(function(){\r\n            //    this.updateSocketWatch(feedToken ,clientcode);\r\n            //  }, 800);\r\n        }\r\n\r\n        wsClint.onmessage = (message) => {\r\n            \r\n            \r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n\r\n            this.setState({ positionList : JSON.parse(data) });\r\n\r\n        //    this.state.symbolList.forEach(element => {\r\n\r\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\r\n        //     // console.log(\"foundLive\", foundLive);\r\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\r\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\r\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\r\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\r\n               \r\n               \r\n        //      });\r\n        \r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e); \r\n        }\r\n\r\n        setInterval(() => {\r\n\r\n            var heartbeatReq =  {\r\n                \"actiontype\": \"heartbeat\",\r\n                \"feedtype\": \"order_feed\",\r\n                \"jwttoken\": this.state.feedToken ,\r\n                \"clientcode\": this.state.clientcode ,\r\n                \"apikey\": API_KEY\r\n            }\r\n    \r\n            console.log(\"heartbeatReq : \" + heartbeatReq);\r\n            wsClint.send(heartbeatReq);\r\n          //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if(!list){\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n      \r\n    }\r\n\r\n    placeOrder = (transactiontype) => {\r\n\r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":transactiontype, //BUY OR SELL\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\":this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n\r\n                if(this.state.stoploss){\r\n                    this.placeSLMOrder(this.state.stoploss);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails =(name) => {\r\n       \r\n        var token= ''; \r\n        for (let index = 0; index <  this.state.symbolList.length; index++) {\r\n            if(this.state.symbolList[index].symbol === name){\r\n                    token =  this.state.symbolList[index].token; \r\n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\r\n                    break; \r\n            }\r\n        }  \r\n        this.getHistory(token); \r\n    }\r\n\r\n    placeSLMOrder = () => {\r\n\r\n        var data = {\r\n                \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":\"SELL\",\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": this.state.quantity, \r\n            \"triggerprice\" : this.state.stoploss,\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n     // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data  = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token ,\r\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1) , \r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n       }\r\n       \r\n        AdminService.getHistoryData(data).then(res => {\r\n             let data = resolveResponse(res,'noPop' );\r\n              console.log(data); \r\n              if(data && data.data){\r\n                 \r\n                var histCandles = data.data; \r\n                histCandles &&  histCandles.sort(function(a,b){\r\n                  return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if(histCandles.length > 0){\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\r\n                }\r\n                this.getLTP();\r\n              }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n        \r\n\r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        console.log(\"values\", values); \r\n        console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n\r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index,1);\r\n        localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList : list });\r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                \r\n               \r\n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n\r\n                    <Grid item xs={10} sm={12}> \r\n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\r\n                              \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {/* {\r\n                                \"variety\": null,\r\n                                \"ordertype\": \"LIMIT\",\r\n                                \"producttype\": \"INTRADAY\",\r\n                                \"duration\": \"DAY\",\r\n                                \"price\": \"194\",\r\n                                \"triggerprice\": \"0\",\r\n                                \"quantity\": \"1\",\r\n                                \"disclosedquantity\": \"0\",\r\n                                \"squareoff\": \"0\",\r\n                                \"stoploss\": \"0\",\r\n                                \"trailingstoploss\": \"0\",\r\n                                \"tradingsymbol\": \"SBIN-EQ\",\r\n                                \"transactiontype\": \"BUY\",\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": null,\r\n                                \"instrumenttype\": \"\",\r\n                                \"strikeprice\": \"-1\",\r\n                                \"optiontype\": \"\",\r\n                                \"expirydate\": \"\",\r\n                                \"lotsize\": \"1\",\r\n                                \"cancelsize\": \"1\",\r\n                                \"averageprice\": \"0\",\r\n                                \"filledshares\": \"0\",\r\n                                \"unfilledshares\": \"1\",\r\n                                \"orderid\": \"201020000000080\",\r\n                                \"text\": \"\",\r\n                                \"status\": \"cancelled\",\r\n                                \"orderstatus\": \"cancelled\",\r\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"fillid\": null,\r\n                                \"filltime\": null\r\n                            } */}\r\n\r\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\r\n                                <TableRow key={i} >\r\n\r\n\r\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    \r\n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n                                    <TableCell align=\"center\">{row.status}</TableCell>\r\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\r\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\r\n                                \r\n                                </TableRow>\r\n                            )):''}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     formContainer : {\r\n//         display: 'flex',\r\n//         flexFlow: 'row wrap'\r\n//     },\r\n\r\n    \r\n\r\n// };\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            resMessage: [],\r\n            counter:0,\r\n            listCount:0\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        // AdminService.scanStocks().then(fundsRes => {\r\n        //     // console.log('profiledata', profileRes); \r\n        //      //  let fundsResData = resolveResponse(fundsRes);\r\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \r\n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\r\n               \r\n        //         this.setState({  fundData :fundsResData.data })\r\n        //        }\r\n        //    })\r\n\r\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n        this.setState({watchlistCount : list.length})\r\n\r\n    }\r\n\r\n    readCsv = async() => {\r\n\r\n      var list = this.state.addtowatchlist; \r\n\r\n      var parsedList =JSON.parse(list) \r\n      console.log(parsedList.length);\r\n      \r\n      var newJsonList = []; \r\n\r\n      for (let index = 0; index < parsedList.length; index++) {\r\n        const element = parsedList[index];\r\n        console.log(element);\r\n\r\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\r\n\r\n          let searchResdata =  searchRes.data; \r\n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \r\n        \r\n         // && element.LTP >= 200\r\n          if(found.length){ \r\n            newJsonList.push(found[0]); \r\n         \r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \r\n              if(!foundInWatchlist.length){\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\r\n\r\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\r\n                watchlist.push(found[0]); \r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n                console.log(\"fdaata\");\r\n               \r\n              }else{\r\n                this.setState({watchlistCount : watchlist.length,})\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\r\n\r\n              }\r\n            //  console.log(found[0].symbol, \"found\",found);      \r\n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\r\n          }\r\n          if(this.state.resMessage && this.state.resMessage.length){\r\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\r\n\r\n          }\r\n        \r\n       })\r\n\r\n       await new Promise(r => setTimeout(r, 500));  \r\n      }\r\n\r\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\r\n      \r\n      var data = {\r\n        listName : parsedList[0].SYMBOL, \r\n        listItem : newJsonList \r\n      }\r\n      console.log(\"newjosnlist:\", data);\r\n      AdminService.addIntoStaticData(data).then(res => {\r\n        let resdata = resolveResponse(res,'noPop' );\r\n       // console.log(resdata);\r\n        this.setState({listName: resdata.listName,listCount: resdata.count})\r\n      });\r\n      \r\n    }\r\n    resetCsv=()=>{\r\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\r\n\r\n    }\r\n   \r\n  \r\n\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n\r\n          \r\n            <Paper style={{padding:\"25px\" }}>   \r\n\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n              \r\n           \r\n              \r\n\r\n\r\n              \r\n\r\n                <Grid item xs={12} sm={8}> \r\n                <Typography variant=\"h6\">\r\n                   Current Watchlist Count   {this.state.watchlistCount} \r\n\r\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \r\n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \r\n\r\n                   <br />\r\n                  </Typography>\r\n                         \r\n\r\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\r\n              \r\n\r\n                </Grid>\r\n\r\n            \r\n                  \r\n                <Grid  item xs={8} sm={8}>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \r\n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\r\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\r\n\r\n\r\n\r\n                   \r\n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\r\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\r\n                     */}\r\n                       \r\n                </Grid>\r\n\r\n                <Grid  item xs={8} sm={8}>\r\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\r\n                         <>  <span> {data} </span>  <br /> </>\r\n                           \r\n                        )) : ''}\r\n   \r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n                </Paper>\r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    tableStyle : {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }, \r\n    selectStyle:{\r\n        marginBottom: '0px',\r\n        minWidth: 240,\r\n        maxWidth: 240\r\n\r\n    }\r\n  \r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport LoginComponent from \"./login/LoginComponent\";\r\n\r\nimport Home from './MyTrade/Home';\r\n\r\n// import NiftyView from \"./MyTrade/NiftyView\";\r\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\r\n\r\nimport MySectorTop from \"./MyTrade/MySectorTop\";\r\n\r\nimport Chart from \"./MyTrade/Chart\";\r\n\r\nimport Funds from \"./MyTrade/Funds\";\r\nimport Orderbook from \"./MyTrade/Orderbook\";\r\nimport Tradebook from \"./MyTrade/Tradebook\";\r\n// import LiveFeed from \"./MyTrade/LiveFeed\";\r\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\r\nimport Position from \"./MyTrade/Position\";\r\n\r\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={LoginComponent}/>\r\n                    <Route path=\"/login\" component={LoginComponent}/>\r\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\r\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\r\n                    <Route path=\"/sector\" component={MySectorTop}/>\r\n                    <Route path=\"/chart\" component={Chart}/>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/funds\" component={Funds}/>\r\n                    <Route path=\"/order\" component={Orderbook}/>\r\n                    <Route path=\"/trade\" component={Tradebook}/>\r\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\r\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\r\n                    <Route path=\"/position\" component={Position}/>\r\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\r\n                    \r\n           \r\n                    <Route path=\"*\" component={LoginComponent} />\r\n                    \r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport './App.css';\r\nimport AppRouter from \"./components/RouterComponent\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n        <AppRouter/>\r\n        <ToastContainer/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./createStore\";\r\nimport App from \"./App\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}