{"version":3,"sources":["components/mylogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/AdminService.js","components/LoginNavbar.js","components/login/LoginNewUI.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/LeftMenuBar.js","utils/InvertColor.js","components/PostLoginNavbar.js","utils/MaterialUIDateTimePicker.js","components/MyTrade/ChartDialog.js","components/MyTrade/Orderbook.js","components/MyTrade/Position.js","components/MyTrade/Tab.js","components/MyTrade/Home.js","api.js","action/index.js","components/MyTrade/MyDialog.js","components/MyTrade/MySectorTop.js","components/MyTrade/Chart.js","components/MyTrade/Funds.js","components/MyTrade/Tradebook.js","components/MyTrade/OrderStatusLive.js","components/MyTrade/AddToWatchlist.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","tokens","JSON","parse","headers","Authorization","jwtToken","Content-Type","Accept","X-UserType","X-SourceID","X-ClientLocalIP","X-ClientPublicIP","X-MACAddress","X-PrivateKey","token","API_KEY","service_AdminService","credentials","axios","post","AuthService","loginHeader","getHeader","formData","get","getScannerHeader","query","data","location","hostname","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","alt","style","width","src","MyLogo","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","utils_Notify","msg","toast","error","this","options","success","warn","POSITION","BOTTOM_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","status","message","Notify","showSuccess","showError","replace","setItem","Promise","reject","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","loginPayload","clientcode","AdminService","then","loginRes","stringify","getUserData","profileRes","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","history","push","React","Component","formStyle","flexFlow","justifyContent","AdminMenuList","ListItem","button","href","ListItemIcon","EmojiEmotions_default","ListItemText","primary","FileCopy_default","LogoutMenu","react_router_dom","to","textDecoration","confirm","userProfile","logout","res","clear","cookies","document","cookie","split","i","eqPos","indexOf","substr","deleteAllCookies","PowerSettingsNew_default","root","flexGrow","menuButton","marginRight","title","MenuAppBar","_React$useState","useState","_React$useState2","slicedToArray","auth","setAuth","FormGroup","FormControlLabel","control","Switch","checked","event","aria-label","endMenu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","contentShift","PostLoginNavBar","acquisitionCount","resubmitCount","useTheme","_React$useState3","_React$useState4","open","setOpen","clsx","IconButton","edge","Menu_default","item","noWrap","direction","AccountCircle_default","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","startd","Date","setHours","setMinutes","selectedStartDate","setSelectedStartDate","endd","selectedEndDate","setSelectedEndDate","useUtils_cfb96ac9","utils","DateFnsUtils","DateTimePicker","format","date","callbackFromParent","myCallback","KeyboardButtonProps","DialogTitle","withStyles","closeButton","right","top","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","candledata","values","setValues","handleClose","setTimeout","series","chart","height","text","align","xaxis","yaxis","tooltip","enabled","console","log","Dialog","aria-labelledby","ChartDialog_DialogTitle","ChartDialog_DialogContent","dividers","react_apexcharts_min_default","ChartDialog_DialogActions","OrderBook","getTodayOrder","retrieveOrderBook","orderlist","sort","b","updatetime","oderbookData","modifyOrder","row","trailingstoploss","triggerprice","variety","orderid","ordertype","price","producttype","quantity","lotsize","tradingsymbol","symboltoken","exchange","listofzones","selectedZone","zone","selectAllzone","firstTimeFlag","_this2","Paper","gutterBottom","float","Table","size","TableHead","whiteSpace","TableRow","TableCell","TableBody","map","hover","key","toString","substring","transactiontype","orderstatus","textAlign","averageprice","fontSize","lib_default","Home","getCandleHistoryAndStore","asyncToGenerator","regenerator_default","mark","_callee","watchList","today","timediff","startdate","_loop","index","wrap","_context2","prev","next","toLocaleTimeString","clearInterval","candleHistoryInterval","moment","isoWeekday","subtract","element","_context","interval","fromdate","todate","getHistoryData","histdata","candleData","reverse","last10Candle","slice","symbol","findTweezerTopPatternLive","findTweezerBottomPatternLive","r","stop","delegateYield","candleHist","maxHigh","maxLow","lastTrendCandleLow","firstTrendCandleHigh","firstCandle","time","high","low","close","secondCandle","diffPer","Math","round","foundData","pattenName","foundPatternList","SpeechSynthesisUtterance","toLowerCase","speechSynthesis","speak","last8candleHigh","last8candleLow","toFixed","toLocaleString","findNR4PatternLive","_callee2","sumPercentage","_loop2","timediffend","_context4","backTestResult","backTestFlag","_context3","last4Candle","last5Candle","rangeArr","candleChartData","forEach","firstElement","rgrangeCount","buyentry","sellenty","getLTP","LtpData","ltp","perChange","orderActivated","pnlAmount","netPnLAmount","nr4TotalPer","totelActivatedCount","perTradeExposureAmt","TradeConfig","totalCapital","perTradeExposurePer","floor","BuyAt","SellAt","brokerageCharges","toConsumableArray","stockTesting","showCandleChart","getElementById","click","refreshLtpPer","_callee3","_loop3","_context6","_context5","getStoplossFromOrderbook","stopLoss","buyavgprice","maxLossAmount","parseInt","netqty","getPositionData","_callee4","totalMaxPnL","_context7","getPosition","positionList","todayProfitPnL","totalbuyvalue","totalsellvalue","totalQtyTraded","allbuyavgprice","allsellavgprice","totalPercentage","percentPnL","parseFloat","sellavgprice","pnl","buyqty","slData","totalsellavgprice","totalbuyavgprice","stopLossAmount","totalBrokerCharges","totalTornOver","checkAndPlaceSingleOrder","stock","autoCompleteSearch","found","filter","exch_seg","orderWithFlatstoploss","ltpPrice","stopLossPrice","perTradeStopLossPer","getMinPriceAllowTick","orderOption","buyPrice","placeOrderMethod","catch","autoSearchList","BankLtpltp","getStopLossPrice","_ref5","_callee5","_context8","slPrice","stoploss","_x","_x2","apply","squareoff","placeOrder","placeSLMOrder","historyWiseOrderPlace","LockedSymbolName","ltpdata","ltpres","format1","beginningTime","clossest","lowerest","highestHigh","lowestLow","devideLen","bbmiddleValue","bblowerValue","stoplossPer","onSelectItem","autoSearchTemp","fdata","list","updateSocketWatch","getAveragePrice","orderId","cancelOrderOfSame","orderData","getOpenPeningOrderId","cancelOrder","squareOff","updateOrderList","slmOption","modifyOrderMethod","minPrice","wholenumber","decimal","getPercentage","avgPrice","percentChange","lastTriggerprice","sqrOffbeginningTime","sqrOffendTime","isBetween","symbolname","InstrumentLTP","endTime","currentTime","positionInterval","scaninterval","bankNiftyInterval","scanendTime","tostartInteral","setInterval","getMinutes","getTime","_this3","totalDayLoss","dailyLossPer","abs","getNSETopStock","scandata","result","_loop4","isFound","j","symbolName","searchRes","_this4","selectedStockInteval","getSelectedStockFromDb","_loop5","selectedStockwatchList","_this5","getAutoScanStock","lastSeachStock","_this6","netPnLAmountTotal","overflow","fontWeight","paddingLeft","background","rel","Orderbook","Equalizer_default","MuiTabsScroller","wsClint","w3cwebsocket","onChangePattern","onChangeWatchlist","staticData","symbolList","fromDate","startDate","endDate","decodeWebsocketData","array","newarray","String","fromCharCode","join","makeConnection","feedToken","firstTime_req","send","channel","sbin","task","user","acctid","backTestAnyPattern","runningTest","patternType","abrupt","backTestNR4","index2","next10Candle","backtestTweezerTop","backtestTweezerBottom","next5thCandle","perChng","longExitPriceType","foundStock","foundAt","sellEntyPrice","buyExitPrice","squareOffAt","shortExitPriceType","lowestOfBoth","highestOfBoth","higherStopLoss","indexTarget","lowestOf315","indexTarget2","trailingSL","indexTarget3","flatSellingPrice","flatSellingPriceAt","indexTarget4","indexTarget5","buyEntyPrice","LowerStopLoss","squiredOffAt315","squareOffAt315Time","highestOf315","slmOrderType","LoadSymbolDetails","getHistory","histCandles","InstrumentHistroy","watchlist","saveWatchListJSON","resdata","search","deleteItemWatchlist","findIndex","splice","ifNotBought","selectedWatchlist","getStaticData","totalWatchlist","keys","element2","onmessage","decoded","atob","pako","inflate","liveData","foundLive","tk","cng","nc","foundTweezerTop","entryBelow","onerror","_req","dateParam","firstLavel","secondLavel","sumPerChange","sumBrokeragePer","netSumPerChange","sumPnlValue","sumSellEntyPrice","Autocomplete","freeSolo","disableClearable","paddingRight","option","renderInput","params","InputProps","FormControl","selectStyle","htmlFor","Select","MenuItem","overflowY","Delete_default","sbinLtp","MaterialUIDateTimePicker","formContainer","textStyle","imgStyle","minWidth","marginBottom","MuiTextField","maxHeight","footerButton","left","bottom","performServerAction","baseURL","setPackLoaded","_ref","dispatch","allPacks","portal","sent","indexSymbol","MyDialog_DialogTitle","timestamp","MyDialog_DialogContent","stickyHeader","indexSymbolData","idata","lastPrice","pChange","change","MyDialog_DialogActions","MyView","getIndicesStocks","getIndiceStock","speckIt","toLocaleLowerCase","innerHTML","percent","stopnview","indexTimeStamp","products","loadPackList","todayTime","getHours","getAllIndices","softedData","calendar","MyDialog_CustomizedDialogs","last","encodeURIComponent","advances","declines","unchanged","connect","App","diffData","putData","callData","timeDate","totPEOI","totCEOI","diff","dateTime","chartData","labels","datasets","fill","borderColor","index_modern","maintainAspectRatio","filterOptionChain","toFixedAmount","curnewdata","underlyingValue","totalCOI","expiry","strike","FilteredBY","AllspTotalOI","PEoi","CEoi","scrollcount","getFunds","fundsRes","fundsResData","fundData","net","availablecash","availableintradaypayin","availablelimitmargin","collateral","utiliseddebits","utilisedexposure","utilisedholdingsales","utilisedoptionpremium","utilisedpayout","utilisedspan","utilisedturnover","m2munrealized","m2mrealized","TradeBook","getTodayTrade","retrieveTradeBook","zoneChange","includes","addProduct","editProduct","convertBool","productId","removeItem","flag","d","toLocaleDateString","toTimeString","fillsize","fillprice","tradevalue","filltime","actiontype","feedtype","jwttoken","apikey","onopen","heartbeatReq","exchtime","readCsv","parsedList","newJsonList","addtowatchlist","SYMBOL","watchlistCount","resMessage","counter","listName","listItem","addIntoStaticData","listCount","count","resetCsv","reload","multiline","rows","fullwidth","AppRouter","react_router","path","exact","MySectorTop","Chart","Funds","Tradebook","OrderStatusLive","Position","AddToWatchlist","RouterComponent","react_toastify","ReactDOM","render","es","src_App","querySelector"],"mappings":"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","file":"static/js/main.02819a9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo.92bbdbd4.png\";","import * as actionTypes from \"../action/types\";\r\nconst INTIAL_STATE = {\r\n    packs: [],\r\n    pack:[],\r\n    updatedPack:null\r\n  };\r\n export default (state = INTIAL_STATE,action)=>{\r\n    switch (action.type) {\r\n        case actionTypes.SET_PACK_LOADED:\r\n          return { ...state, packs:action.payload };\r\n        case actionTypes.EDIT_PACK_INFO:\r\n          return {...state,updatedPack:action.payload}\r\n          case actionTypes.GET_PACK_INFO_BY_ID:\r\n              return {...state,pack:action.payload}    \r\n     default:\r\n          return state;\r\n      }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport getPackReducer from './packReducer';\r\n\r\nexport default combineReducers({\r\n    packs: getPackReducer,\r\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\r\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\r\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport default store;","class AuthService {\r\n\r\n    getLoggedInUserInfo() {\r\n        localStorage.getItem(\"UserInfo\");\r\n    }\r\n\r\n    getHeader() {\r\n\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var jwtToken =   tokens &&  tokens.jwtToken;\r\n\r\n        return { 'headers': {\r\n            'Authorization': 'Bearer ' + jwtToken,\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n\r\n    loginHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json', \r\n            'X-UserType':'USER',\r\n            'X-SourceID':'WEB',\r\n            'X-ClientLocalIP':'192.168.1.128',\r\n            'X-ClientPublicIP':'91.0.4472.114',\r\n            'X-MACAddress':'f0:18:98:26:c4:cc',\r\n            'X-PrivateKey':'I4O6PJAn'\r\n        } }\r\n    }\r\n    getImageHeader() {\r\n        return { 'headers': {'token': localStorage.getItem(\"token\")}}\r\n    }\r\n\r\n    getScannerHeader() {\r\n        return { 'headers': {\r\n            'Content-Type':'application/json', \r\n            'Accept':'application/json',\r\n      //      'Access-Control-Allow-Headers': \"x-csrf-token\",\r\n       //     'x-csrf-token':'dWsWEZqGaGd6RfARb33LKjPDdyuGUUrgi8Z4qvsB' \r\n            // 'sec-fetch-mode': 'cors',\r\n            // 'origin': 'localhost',\r\n\r\n            \r\n        } }\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();","//my app api\r\nexport const API_KEY  = 'I4O6PJAn'; \r\nexport const LOGIN_API =  'https://apiconnect.angelbroking.com/rest/auth/angelbroking/user/v1/loginByPassword';\r\nexport const LOGOUT_API =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/logout';\r\nexport const GET_USER_PROFILE =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getProfile';\r\nexport const GET_FUNDS =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/user/v1/getRMS';\r\nexport const GetOrderBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getOrderBook'; \r\nexport const GetTradeBook = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getTradeBook'; \r\nexport const GetAllTradableInstruments = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json'; \r\nexport const PlaceOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/placeOrder'; \r\nexport const modifyOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/modifyOrder'; \r\nexport const cancelOrderApi = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/cancelOrder'; \r\n\r\nexport const GetLTPAPI = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getLtpData'; \r\nexport const getCandleData = 'https://apiconnect.angelbroking.com/rest/secure/angelbroking/historical/v1/getCandleData'; \r\nexport const getPosition =  'https://apiconnect.angelbroking.com/rest/secure/angelbroking/order/v1/getPosition';\r\n\t\r\nexport const getScannedStocks =  'http://localhost:8081/getScannedStocks'\t\r\nexport const getNseTopStocks =  'http://localhost:8081/getNseTopStocks'\t\r\nexport const getSelectedStock =  'http://localhost:8081/getSelectedStock'\t\r\n","import axios from 'axios';\r\nimport AuthService from \"./AuthService\";\r\nimport  * as apiConstant from \"../../utils/config\";\r\n\r\nclass AdminService {\r\n\r\n    login(credentials) {\r\n         return axios.post(apiConstant.LOGIN_API, credentials, AuthService.loginHeader());\r\n    } \r\n\r\n    logout(credentials) {\r\n        return axios.post(apiConstant.LOGOUT_API, credentials, AuthService.getHeader());\r\n     } \r\n\r\n    getUserData(formData){\r\n        return axios.get(apiConstant.GET_USER_PROFILE, AuthService.getHeader());\r\n    }\r\n\r\n    getFunds(formData){\r\n        return axios.get(apiConstant.GET_FUNDS, AuthService.getHeader());\r\n    }\r\n\r\n    retrieveOrderBook(formData){\r\n        return axios.get(apiConstant.GetOrderBook, AuthService.getHeader());\r\n    }\r\n    retrieveTradeBook(formData){\r\n        return axios.get(apiConstant.GetTradeBook, AuthService.getHeader());\r\n    }\r\n    \r\n    retrieveallTradableInstruments(formData){\r\n        return axios.get(apiConstant.GetAllTradableInstruments,'');\r\n    }\r\n\r\n    placeOrder(credentials) {\r\n        return axios.post(apiConstant.PlaceOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    modifyOrder(credentials) {\r\n        return axios.post(apiConstant.modifyOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n    cancelOrder(credentials) {\r\n\r\n        return axios.post(apiConstant.cancelOrderApi, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getLTP(credentials) {\r\n        return axios.post(apiConstant.GetLTPAPI, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    getHistoryData(credentials) {\r\n        return axios.post(apiConstant.getCandleData, credentials, AuthService.getHeader());\r\n    } \r\n\r\n    scanStocks(credentials) {\r\n        return axios.post('https://chartink.com/screener/process', credentials, AuthService.getScannerHeader());\r\n     } \r\n\r\n     autoCompleteSearch(query) {\r\n        return axios.get('http://localhost:8081/search/'+query, '');\r\n     } \r\n     saveWatchList(data) {\r\n        return axios.get('http://localhost:8081/saveWatchList/'+data, '');\r\n     } \r\n     addIntoStaticData(data) {\r\n        return axios.post('http://localhost:8081/addIntoStaticData', data, '');\r\n     }\r\n     saveWatchListJSON(data) {\r\n        return axios.post('http://localhost:8081/saveWatchListJSON', data, '');\r\n     }\r\n     getWatchListJSON() {\r\n        return axios.get('/myJsonWatchList.json', '');\r\n     } \r\n     getStaticData() {\r\n         if(window.location.hostname== \"localhost\")\r\n        return axios.get('/staticData.json', '');\r\n        else\r\n        return axios.get('/mtrade/staticData.json', '');\r\n     } \r\n     saveCandleHistory(data) {\r\n        return axios.post('http://localhost:8081/saveCandleHistory', data,  '');\r\n     } \r\n\r\n     getPosition(data){\r\n        return axios.get(apiConstant.getPosition, AuthService.getHeader());\r\n     }\r\n\r\n     getAutoScanStock(){\r\n        return axios.get(apiConstant.getScannedStocks, '');\r\n     }\r\n\r\n     getNSETopStock(){\r\n        return axios.get(apiConstant.getNseTopStocks, '');\r\n     }\r\n\r\n     getSelectedStockFromDb(){\r\n        return axios.get(apiConstant.getSelectedStock, '');\r\n     }\r\n\r\n    //  getBNcpdata(){\r\n    //     return axios.get(apiConstant.'', AuthService.getHeader());\r\n    //  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default new AdminService();\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport MyLogo from './mylogo.png';\r\n\r\nconst LoginNavBar = (props) => {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                <img alt=\"logo\"  style={{width:\"190px\"}} src={MyLogo} />\r\n\r\n                    {/* <div style={{width:\"300px\"}}>\r\n                        <Typography variant=\"h6\" style={style}>\r\n                             &nbsp;&nbsp;  M-Trade\r\n                        </Typography>\r\n                    </div>               */}\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default LoginNavBar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Bharti Airtel Ltd\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleOnChange = e => {\r\n    props.loginProps.onChange(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <LoginNavBar/> */}\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PersonIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"User Id\"\r\n            name=\"userName\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.userName}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleOnChange}\r\n            value={props.loginProps.password}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={props.loginProps.login}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n         \r\n          \r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// method calling\r\n\r\n// import React from \"react\";\r\n// import \"./styles.css\";\r\n\r\n// class Child extends React.Component {\r\n//   render() {\r\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\r\n//   }\r\n// }\r\n\r\n// class Parent extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       username : \"vijay\"\r\n//     }\r\n//     this.handler = this.handler.bind(this)\r\n//   }\r\n\r\n//   handler(e) {\r\n//     console.log(e.target.name ); \r\n//     this.setState({\r\n//       [e.target.name]: e.target.value \r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     return <>\r\n//     Hello:  {this.state.username} \r\n//      <Child handler = {this.handler} />\r\n     \r\n//      </>\r\n//   }\r\n// }\r\n\r\n// export default Parent;\r\n","import { toast } from 'react-toastify';\r\n\r\nclass Notify {\r\n\r\n    showError(msg) {\r\n        toast.error(msg, this.options());\r\n    }\r\n\r\n    showSuccess(msg) {\r\n        toast.success(msg , this.options());\r\n    }\r\n\r\n    showWarning(msg) {\r\n        toast.warn(msg , this.options());\r\n    }\r\n\r\n    options() {\r\n        return {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n          //  position: \"buttom-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Notify();","import Notify from \"./Notify\";\r\n\r\nexport function resolveResponse(response, msg) {\r\n   //console.log('response',response);\r\n    let data = {};\r\n        if (response.status === 200) {\r\n            data = response.data;\r\n            if(data.status) {\r\n                if(data.message){\r\n\r\n                    if(msg !== 'noPop')\r\n                    Notify.showSuccess(data.message);\r\n                }\r\n                return data;\r\n            }else{\r\n               \r\n                Notify.showError(data.message);\r\n                if(data.message === \"Invalid Token\"){\r\n                    window.location.replace(\"#/login\");\r\n                    localStorage.setItem('userTokens', '');\r\n                    localStorage.setItem('userProfile', '');\r\n                }\r\n                return Promise.reject(data.message);\r\n            }\r\n        }\r\n        else if(response && !response.status){\r\n            Notify.showError(data.message);\r\n        }   \r\n}","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport LoginNavBar from \"../LoginNavbar\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LoginNewUI from './LoginNewUI';\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass LoginComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"V193588\",\r\n            password: \"\", \r\n            isDasable:false,\r\n            isError:false,\r\n            \r\n        };\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <LoginNavBar/>\r\n                \r\n                {/* <Container maxWidth=\"sm\">\r\n                     <br/><br/><br/> \r\n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\r\n                    <form style={styles.formStyle}>\r\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\r\n\r\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                        <Grid item  xs={12} sm={8}>\r\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\r\n                        </Grid>\r\n                        <Grid item  xs={12} sm={10}>\r\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                        </Grid>\r\n                    </form>\r\n                </Container> */}\r\n\r\n                {/* New Login UI */}\r\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\r\n                \r\n                <Grid container justify=\"space-around\">\r\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\r\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \r\n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      const userTokens =   window.localStorage.getItem(\"userTokens\"); \r\n      if(userTokens){\r\n      //  const lastUrl = localStorage.getItem(\"lastUrl\"); \r\n        this.props.history.push('home');\r\n      }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n    login = (e) => {\r\n        \r\n        this.setState({ isError: \"\" });\r\n\r\n\r\n        e.preventDefault();\r\n\r\n        if(!this.state.userName && !this.state.password){\r\n            this.setState({ isError: \"Olms Id and Password are required.\" });\r\n            return;\r\n        }\r\n\r\n        if(!this.state.userName){\r\n            this.setState({ isError: \"Olms Id is required.\" });\r\n            return;\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({ isError: \"Password is required.\" });\r\n            return;\r\n        }\r\n         \r\n        this.setState({ isDasable: true });\r\n\r\n \r\n\r\n        const loginPayload = {\r\n            clientcode:  this.state.userName,\r\n            password: this.state.password \r\n\r\n        };\r\n        AdminService.login(loginPayload)\r\n            .then(loginRes => {\r\n              //  Notify.showError(\"Olms Id and password is required.\");\r\n            //  alert(JSON.stringify(res));\r\n         //   console.log(\"res\",loginRes); \r\n\r\n              var data = resolveResponse(loginRes);\r\n              loginRes  = loginRes && loginRes.data; \r\n            //  console.log(\"resdata\",loginRes); \r\n              if(loginRes.status && loginRes.message !== 'SUCCESS'){\r\n                this.setState({ isError: loginRes.message });\r\n              }\r\n              \r\n               // data = res.data; \r\n                this.setState({ isDasable: false });\r\n\r\n                if(loginRes.data){\r\n                    window.localStorage.setItem(\"userTokens\",JSON.stringify(loginRes.data));\r\n                  \r\n\r\n                    AdminService.getUserData().then(profileRes => {\r\n                       // console.log('profiledata', profileRes); \r\n                          let data = resolveResponse(profileRes);\r\n                          profileRes =  profileRes && profileRes.data; \r\n                          if(profileRes.status & profileRes.message === 'SUCCESS'){\r\n                            window.localStorage.setItem(\"userProfile\",JSON.stringify(profileRes.data));\r\n                        //    this.props.history.push('/position');\r\n\r\n                             window.location.replace('/#/home')\r\n                          }\r\n                      })\r\n\r\n                  \r\n\r\n                }\r\n            });\r\n          \r\n            // setTimeout(() => {\r\n            //     this.setState({ isError: \"\" });\r\n            // }, 3000);\r\n\r\n\r\n           \r\n    }\r\n\r\n}\r\n\r\nconst styles ={\r\n    formStyle :{\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    errorMessage:{\r\n        color:\"red\",\r\n        marginTop: '11px'\r\n    },\r\n    waitMessage:{\r\n        color:\"gray\",\r\n        marginTop: '11px'\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { Link } from \"react-router-dom\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport AdminService from \"./service/AdminService\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n//import RouterComponent from '../RouterComponent'; \r\n\r\n\r\nexport const AdminMenuList = (\r\n\r\n  <div>\r\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\r\n   \r\n    <ListItem button component='a' href={\"/mtrade/#/livefeed\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Live Feed\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/position\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Positions\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/funds\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Funds\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/order\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Order Book\" />\r\n    </ListItem>\r\n    <ListItem button component='a' href={\"/mtrade/#/trade\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Trade Book\" />\r\n    </ListItem>\r\n  \r\n    <ListItem button component='a' href={\"/mtrade/#/bn-view\"} >  \r\n      <ListItemIcon>\r\n        <EmojiEmotionsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"NiftyBank View\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/nifty-view\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Nifty View\" />\r\n    </ListItem>\r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/sector\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Sector Top\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/test\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Exprement - Research\" />\r\n    </ListItem>\r\n  \r\n\r\n\r\n    <ListItem button component='a' href={\"/mtrade/#/addtowatchlist\"} >  \r\n      <ListItemIcon>\r\n        <FileCopyIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Add to watchlist\" />\r\n    </ListItem>\r\n  \r\n\r\n\r\n  </div>\r\n);\r\n\r\nfunction deleteAllCookies() {\r\n  var cookies = document.cookie.split(\";\");\r\n  for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i];\r\n      var eqPos = cookie.indexOf(\"=\");\r\n      var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n  }\r\n}\r\n\r\nfunction logoutPortal(){\r\n  //console.log(\"yo_man\")\r\n\r\n  if(window.confirm(\"Are you sure to logout?\")){\r\n\r\n  var userProfile = localStorage.getItem(\"userProfile\")\r\n  userProfile = userProfile && JSON.parse(userProfile);\r\n\r\n  var data = {\r\n    clientcode : userProfile && userProfile.clientcode\r\n    }\r\n\r\n    AdminService.logout(data)\r\n    .then(res => {\r\n    \r\n    localStorage.clear();\r\n    //localStorage.setItem('userTokens', '');\r\n    //localStorage.setItem('userProfile', '');\r\n    deleteAllCookies();\r\n    \r\n    window.location.replace(\"#/login\");\r\n    return;\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const LogoutMenu = (\r\n  <div>\r\n\r\n    <Link to={''} style={{textDecoration: \"none\"}} onClick={logoutPortal}>\r\n      <ListItem button>\r\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\r\n      </ListItem>\r\n    </Link>\r\n\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  //const [anchorEl, setAnchorEl] = React.useState(null);\r\n  //const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    localStorage.setItem('invertColorFlag', event.target.checked);\r\n    setAuth(event.target.checked);\r\n   \r\n  };\r\n\r\n  // const handleMenu = (event) => {\r\n\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Black & White'  : 'Colorfull'}\r\n        />\r\n      </FormGroup>\r\n     \r\n      {/* <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport * as Menu from './LeftMenuBar';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MyLogo from './mylogo.png';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport  InvertColor from '../utils/InvertColor';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    endMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'row reverse'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        //backgroundColor: '#f44336'\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function PostLoginNavBar(props) {\r\n\r\n    const [values] = React.useState({\r\n        acquisitionCount: '',\r\n        resubmitCount:''\r\n    });\r\n    \r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    // function handleClick(e) {\r\n    //     console.log(e.target.innerText)\r\n    //     //this.props.history.push('/login');\r\n    // }\r\n\r\n    var userProfile = localStorage.getItem(\"userProfile\")\r\n    userProfile = userProfile && JSON.parse(userProfile);\r\n    \r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n\r\n            >\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                        <Grid\r\n                                justify=\"space-between\"\r\n                                container\r\n                            >\r\n                        <Grid item >\r\n                        {/* <Typography variant=\"h6\" noWrap>\r\n                          M-Trade\r\n                         </Typography> */}\r\n                           <img alt=\"logo\" style={{ width: \"125px\" }} src={MyLogo} />\r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n                        <Typography variant=\"h6\" noWrap>\r\n                        {localStorage.getItem('BankLtpltp')}\r\n                         </Typography>\r\n                         \r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"row\"\r\n                                    style={{ color: \"white\" }}\r\n                                >\r\n\r\n                    \r\n                             <Grid item>\r\n                                    <Button  autoFocus href={\"#/addtowatchlist\"}  >\r\n                                       WatchLit({localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')).length})\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n\r\n\r\n                            <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/home\"}  color=\"secondary\">\r\n                                        Home\r\n                                    </Button>\r\n                              </Grid>\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/position\"}  color=\"primary\">\r\n                                      Position\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n\r\n                              {/* <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"#/order-status-live\"}  color=\"secondary\">\r\n                                        Order Status Live\r\n                                    </Button>\r\n                              </Grid> */}\r\n                              \r\n\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/order\"}  color=\"primary\">\r\n                                        Order\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/trade\"}  color=\"primary\">\r\n                                        Trade\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                            \r\n\r\n                              <Grid item>\r\n                                    <Button variant=\"contained\"  autoFocus href={\"/mtrade/#/funds\"}  color=\"primary\">\r\n                                        Funds\r\n                                    </Button>\r\n                              </Grid>\r\n\r\n                            <Grid item>\r\n                                <Typography  noWrap>\r\n\r\n                                <Button color=\"primary\">\r\n                                <AccountCircle />   {userProfile && userProfile.name ? userProfile.name.split(' ')[0] : null}\r\n                                </Button>\r\n\r\n                                </Typography> \r\n\r\n                        \r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                        </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    {/* <img style={{ width: \"207px\" }} src={MyLogo} /> */}\r\n        \r\n                    <InvertColor />\r\n                    <IconButton onClick={handleDrawerClose}  >\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\r\n                    </IconButton>\r\n                </div>\r\n\r\n            \r\n\r\n                <Divider />\r\n                <List>{Menu.AdminMenuList}</List>\r\n\r\n                {/* <Divider />\r\n                <List>  <InvertColor /></List> */}\r\n\r\n                <Divider />\r\n                <List>{Menu.LogoutMenu}</List>\r\n\r\n                \r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// BO agent : BOA\r\n// Data Entry : DE\r\n// Admin : ADMIN\r\n// Distributor : DIST\r\n\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Notify from \"./Notify\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  KeyboardDateTimePicker\r\n} from '@material-ui/pickers';\r\n\r\nfunction MaterialUIPickers(props) {\r\n\r\n // console.log(\"startDatestartDate,\",props ); \r\n  //var d = new Date(); \r\n  //d.setHours(0,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var startd = new Date(); \r\n  startd.setHours(9,0,0,0);\r\n  startd.setMinutes(15,0,0,0);\r\n\r\n  // The first commit of Material-UI\r\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\r\n  var endd = new Date(); \r\n  endd.setHours(15,0,0,0);\r\n  endd.setMinutes(30,0,0,0);\r\n\r\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\r\n\r\n  const handleStartDateChange = date => {\r\n    setSelectedStartDate(date);\r\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\r\n  //  var startDateMili = new Date(date).getTime(); \r\n//    document.getElementById(\"startDateMili\").value = startDateMili; \r\n//    var endDateMili = document.getElementById(\"endDateMili\").value; \r\n    // if(startDateMili > endDateMili  ){\r\n    //   Notify.showError(\"Start date time can't be grater than end date time.\");\r\n    // }\r\n  };\r\n\r\n\r\n\r\n  const handleEndDateChange = date => {\r\n    setSelectedEndDate(date);\r\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\r\n  //  var endDateMili = new Date(date).getTime(); \r\n  //  document.getElementById(\"endDateMili\").value = endDateMili; \r\n\r\n  //  var startDateMili = document.getElementById(\"startDateMili\").value; \r\n  //  if(endDateMili  < startDateMili){\r\n  //     Notify.showError(\"End Date time can't be less than start date time.\");\r\n  //   }\r\n   \r\n  };\r\n\r\n  // var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \r\n  // if(props.callbackFromParent && props.callbackFromParent.startDate){\r\n  //   selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \r\n  //  // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\r\n  // }\r\n\r\n  // var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \r\n  // //endDateMili ==''\r\n  // if(props.callbackFromParent && props.callbackFromParent.endDate){\r\n  //   selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \r\n  //   //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\r\n\r\n  // }\r\n\r\n return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container>\r\n     \r\n        <KeyboardDateTimePicker\r\n         // disableFuture=\"true\"\r\n          margin=\"normal\"\r\n          style={{width:\"140px\"}}\r\n         // required={true}\r\n          id=\"date-picker-dialog\"\r\n          label={'Start Date'}\r\n         // format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedStartDate}\r\n          onChange={handleStartDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n         <KeyboardDateTimePicker\r\n           style={{width:\"140px\"}}\r\n        // disableFuture=\"true\"\r\n         margin=\"normal\"\r\n       //  required={true}\r\n         id=\"date-picker-dialog\"\r\n         label={'End Date'}\r\n       //  format='dd-MM-yyyy HH:mm:ss'\r\n         format='dd-MM-yyyy'\r\n         value={selectedEndDate}\r\n         onChange={handleEndDateChange}\r\n         KeyboardButtonProps={{\r\n           'aria-label': 'change date',\r\n         }}\r\n        />\r\n        \r\n       \r\n        \r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default  MaterialUIPickers; \r\n","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { data } from 'jquery';\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n \r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  var [values, setValues] = React.useState({\r\n    data : [],\r\n    candledata: {}\r\n})\r\n\r\n\r\n \r\n\r\n  const handleClickOpen = () => {\r\n\r\n    setTimeout(() => {\r\n      setOpen(true);\r\n    }, 1000);\r\n\r\n\r\n    var candledata = {\r\n      series: [{\r\n          data: [\r\n            JSON.parse(localStorage.getItem('candleChartData'))\r\n            ]\r\n        }],\r\n      options: {\r\n          chart: {\r\n            type: 'candlestick',\r\n            height: 350\r\n          },\r\n          title: {\r\n              text: 'CandleStick Chart',\r\n              align: 'left'\r\n          },\r\n          xaxis: {\r\n              type: 'datetime',\r\n          },\r\n          yaxis: {\r\n              tooltip: {\r\n              enabled: true\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n    setValues({...values, ['candledata'] :  candledata});\r\n\r\n    console.log('candledata', values.candledata);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n   \r\n  \r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" id=\"showCandleChart\" color=\"primary\" style={{display:\"none\"}} onClick={handleClickOpen}>\r\n        Chart \r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {localStorage.getItem('cadleChartSymbol')} \r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"chart\">\r\n\r\n        {/* body data\r\n        <ReactApexChart\r\n              options={props.data && props.data.options}\r\n              series={props.data && props.data.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            /> */}\r\n\r\n        <ReactApexChart \r\n        \r\n        options={{\r\n          chart: {\r\n            type: 'candlestick',\r\n            height: 350\r\n          },\r\n          title: {\r\n              text: '',\r\n              align: 'left'\r\n          },\r\n          xaxis: {\r\n              type: 'datetime',\r\n          },\r\n          yaxis: {\r\n              tooltip: {\r\n              enabled: true\r\n              }\r\n          }\r\n      }}\r\n\r\n       series={[{\r\n        data:  JSON.parse(localStorage.getItem('candleChartData'))\r\n          \r\n      }]} \r\n\r\n      type=\"candlestick\" \r\n      width={500}\r\n      height={350} />\r\n\r\n\r\n    \r\n         \r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass OrderBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All',\r\n            triggerprice :0,\r\n            price:0,\r\n            lotsize:0,\r\n            firstTimeFlag: true\r\n\r\n        }\r\n    }\r\n\r\n    getTodayOrder = () => {\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n\r\n                this.setState({oderbookData: orderlist});\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));\r\n\r\n                // var pendingOrder = orderlist.filter(function(row){\r\n                //     return row.status == \"trigger pending\";\r\n                // }); \r\n                // this.setState({pendingOrder: pendingOrder});\r\n                                    \r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.getTodayOrder();\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    modifyOrder = (row, trailingstoploss) => {\r\n\r\n        console.log(this.state.triggerprice);\r\n\r\n        var data = {\r\n            \"variety\" :row.variety,  // \"STOPLOSS\",\r\n            \"orderid\": row.orderid,\r\n            \"ordertype\": this.state.price !== 0 ? \"STOPLOSS_LIMIT\" : \"STOPLOSS_MARKET\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": row.duration,\r\n            \"price\":  this.state.price,\r\n            \"triggerprice\": trailingstoploss || this.state.triggerprice,\r\n            \"quantity\":row.lotsize,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n            }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n               // localStorage.setItem('ifNotBought' ,  'false')\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n      return(\r\n        <React.Fragment>\r\n            <PostLoginNavBar/>\r\n            <Paper style={{padding:\"10px\"}} >\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                Oders Details ({this.state.oderbookData.length}) \r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button id=\"orderRefresh\"  type=\"number\" variant=\"contained\"  style={{float:\"right\"}} onClick={() => this.getTodayOrder()}>Refresh</Button>    \r\n                            </Grid>\r\n                            \r\n                </Grid>\r\n            \r\n            <Grid direction=\"row\" alignItems=\"center\" container>\r\n            <Grid item xs={12} sm={12} >\r\n                     <Table  size=\"small\"  style={{width:\"100%\"}}  aria-label=\"sticky table\" >\r\n               \r\n                        <TableHead style={{whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow variant=\"head\" >\r\n                                <TableCell align=\"center\"><b>Update time</b></TableCell>\r\n\r\n                                {/* <TableCell align=\"center\"><b>OrderId</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Instrument</b></TableCell>\r\n                                {/* <TableCell align=\"center\"><b>Token</b></TableCell> */}\r\n\r\n                                <TableCell align=\"center\"><b>Order Type</b></TableCell>\r\n                                <TableCell align=\"center\"><b>CNC/Intraday</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Qty </b></TableCell>\r\n                        \r\n                                <TableCell align=\"center\"><b>Average Price</b></TableCell>\r\n                                \r\n                                <TableCell align=\"center\"><b>Price</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Trigger Price</b></TableCell>\r\n\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                                <TableCell align=\"center\"><b>Details</b></TableCell>\r\n                \r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        \r\n                            {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map((row, i)  => (\r\n                                <TableRow hover key={i} >\r\n\r\n                                    <TableCell align=\"center\">{row.updatetime ? new Date(row.updatetime).toString().substring(15, 25) : \"\"}</TableCell>\r\n\r\n                                    {/* <TableCell align=\"center\">{row.orderid  }</TableCell> */}\r\n                                    <TableCell style={{ width: '10%'}}  align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    {/* <TableCell align=\"center\">{row.symboltoken  }</TableCell> */}\r\n\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"lotsize\"  value={row.quantity}  name=\"lotsize\" onChange={this.onChange}/>\r\n                                        : row.quantity}\r\n                    \r\n\r\n                                    </TableCell>\r\n\r\n                                \r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n\r\n                                \r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' ? \r\n                                        <TextField style={{textAlign:'center', width:'50px'}} id=\"price\"  value={this.state.price === 0 ? row.price : this.state.price}  name=\"price\" onChange={this.onChange}/>\r\n                                        : row.price}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <TextField  type=\"number\" style={{textAlign:'center', width:'50px'}} id=\"triggerprice\"  value={this.state.triggerprice === 0 ? row.triggerprice : this.state.triggerprice}  name=\"triggerprice\" onChange={this.onChange}/>\r\n                                        : row.triggerprice}\r\n                                    </TableCell>\r\n\r\n\r\n                                    <TableCell align=\"left\">\r\n                                        {row.orderstatus === 'trigger pending' || row.orderstatus ==='open' ? \r\n                                        <Button  size={'small'} type=\"number\" variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={() => this.modifyOrder(row)}>Update</Button>    \r\n                                        : ''}\r\n                                    </TableCell>\r\n                                    \r\n                                    <TableCell style={{fontSize: \"11px\", width: '10%'}} align=\"center\">{row.orderstatus}</TableCell>\r\n\r\n                                    <TableCell style={{fontSize: \"11px\"}} align=\"center\">{row.text}</TableCell>\r\n\r\n                                    \r\n                                </TableRow>\r\n                            )):<Spinner/>}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n                            \r\n               </Grid>    \r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(OrderBook);\r\nexport default OrderBook;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport * as moment from 'moment';\r\nimport OrderBook from './Orderbook';\r\nimport TradeConfig from './TradeConfig.json';\r\nimport ChartDialog from './ChartDialog'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            autoSearchList :[],\r\n            InstrumentLTP : {},\r\n            autoSearchTemp : [],\r\n            foundPatternList: [], \r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n            nr4TotalPer : 0,\r\n            totelActivatedCount : 0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        var beginningTime = moment('9:15am', 'h:mma');\r\n        var endTime = moment('3:30pm', 'h:mma');\r\n        const friday = 5; // for friday\r\n        var currentTime = moment(new Date(), \"h:mma\");\r\n        const today = moment().isoWeekday();\r\n        //market hours\r\n        if(today <= friday && currentTime.isBetween(beginningTime, endTime)){\r\n        //   this.setState({positionInterval :  setInterval(() => {this.getPositionData(); }, 2002)}) \r\n          //  this.setState({bankNiftyInterval :  setInterval(() => {this.getLTP(); }, 1002)}) \r\n        }else{\r\n            clearInterval(this.state.positionInterval);\r\n            clearInterval(this.state.scaninterval); \r\n            clearInterval(this.state.bankNiftyInterval); \r\n        }\r\n    \r\n        var scanendTime = moment('3:30pm', 'h:mma');\r\n        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n          //  this.setState({scaninterval :  setInterval(() => {this.getNSETopStock(); }, 5000)}) \r\n            //this.setState({selectedStockInteval :  setInterval(() => {this.getMySelectedStock(); }, 5000)}) \r\n            \r\n\r\n            \r\n            var tostartInteral =   setInterval(() => {\r\n\r\n                console.log(\"1st interval every second\", new Date().toLocaleTimeString());\r\n                var time = new Date(); \r\n                if(time.getMinutes() % 15 === 0){\r\n                    console.log(\"5th min completed at\", new Date().toLocaleTimeString());\r\n                    console.log(\"next scan at\", new Date(new Date().getTime()+70000).toLocaleTimeString());\r\n                    \r\n                    setTimeout(() => {\r\n                        console.log(\"set timout at 70sec \", new Date());\r\n                        this.getCandleHistoryAndStore(); \r\n                    }, 70000);\r\n\r\n                    setInterval(() => {\r\n                        console.log(\"2st interval every 5min 10Sec\", new Date());\r\n                        if(today <= friday && currentTime.isBetween(beginningTime, scanendTime)){\r\n                            this.getCandleHistoryAndStore(); \r\n                        }\r\n                     }, 60000 * 15 + 70000 );  \r\n\r\n                     clearInterval(tostartInteral); \r\n                } \r\n            }, 1000);\r\n            \r\n          \r\n        } \r\n\r\n //  this.getCandleHistoryAndStore(); \r\n\r\n   this.findNR4PatternLive();\r\n\r\n    // this.getPositionData();\r\n    // this.getNSETopStock();\r\n     \r\n\r\n    //  this.getMySelectedStock();\r\n\r\n    \r\n\r\n    // setInterval(() => {\r\n        \r\n    //     var timediff = moment.duration(\"00:50:00\");\r\n    //     var startdate = moment(new Date()).subtract(timediff);\r\n    \r\n\r\n    //     var enddiff = moment.duration(\"00:01:00\");\r\n    //     var enddate = moment(new Date()).add(enddiff);\r\n\r\n\r\n    //     var data  = {\r\n    //         \"exchange\": \"NSE\",\r\n    //         \"symboltoken\": 212,\r\n    //         \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE\r\n    //         \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\") , \r\n    //         \"todate\": moment(enddate).format(\"YYYY-MM-DD HH:mm\") , //moment(this.state.endDate).format(format1) /\r\n    //     }\r\n    \r\n    //     AdminService.getHistoryData(data).then(res => { \r\n    //         let histdata = resolveResponse(res,'noPop' );\r\n    //         var candleData = histdata.data; \r\n    //         candleData.reverse(); \r\n    //         console.log( new Date().toLocaleTimeString(),\"testlive\", candleData[0])\r\n    //     }); \r\n\r\n    // }, 1000);\r\n\r\n   \r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.positionInterval);\r\n        clearInterval(this.state.scaninterval);\r\n        clearInterval(this.state.bankNiftyInterval); \r\n    }\r\n\r\n  \r\n\r\n    getCandleHistoryAndStore = async()=> {\r\n\r\n        console.log(\"getCandleHistoryAndStore called\", new Date().toLocaleTimeString()); \r\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ?  clearInterval(this.state.candleHistoryInterval) : \"\"; \r\n       var watchList =  localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList'))\r\n       const today = moment().isoWeekday();\r\n        var timediff = '';\r\n\r\n        \r\n\r\n        if(new Date().toLocaleTimeString() > \"10:05:00\"){\r\n            timediff = moment.duration(\"00:50:00\");\r\n        } else if (today === 1 && new Date().toLocaleTimeString() < \"10:05:00\"){\r\n            timediff = moment.duration(\"66:00:00\");\r\n        }else{\r\n            timediff = moment.duration(\"19:00:00\");\r\n        }\r\n        timediff = moment.duration(\"21:00:00\");\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";       \r\n        var startdate = moment(new Date()).subtract(timediff);\r\n\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n            var data  = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE    FIFTEEN_MINUTE\r\n                \"fromdate\": moment(startdate).format(format1) , \r\n                \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res,'noPop' );\r\n                //console.log(\"candle history\", histdata); \r\n                if(histdata && histdata.data && histdata.data.length){\r\n                   \r\n                    var candleData = histdata.data; \r\n                    candleData.reverse(); \r\n\r\n                    if(candleData && candleData.length >= 10){\r\n                        var last10Candle = candleData.slice(0, 10); \r\n                        console.log('',  index+1,  element.symbol, 'Time', new Date().toLocaleTimeString());   \r\n                        this.findTweezerTopPatternLive(last10Candle, element.symbol);\r\n                        this.findTweezerBottomPatternLive(last10Candle, element.symbol);\r\n\r\n                        //console.log(index+1, element.symbol, 'verifying TT pattern'); \r\n                    }\r\n\r\n                    // var data = {\r\n                    //     data : candleData, \r\n                    //     token: element.token,\r\n                    //     symbol: element.symbol\r\n                    // }\r\n                    // AdminService.saveCandleHistory(data).then(storeRes=>{\r\n                    //     console.log(\"storeRes\", new Date().toLocaleTimeString(),storeRes); \r\n                    // }); \r\n                \r\n                }else{\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\"); \r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 350));  \r\n        }\r\n\r\n\r\n    }\r\n\r\n    findTweezerTopPatternLive = (candleHist,symbol) => {\r\n\r\n     //   console.log(\"TweezerTop finding\", symbol); \r\n        if(candleHist && candleHist.length > 0){\r\n            //candleHist = candleHist.reverse(); \r\n           // console.log(symbol, \" TweezerTop candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if(maxHigh < candleHist[index][2])\r\n                maxHigh = candleHist[index][2];\r\n                if(candleHist[index][3] < maxLow)\r\n                maxLow = candleHist[index][3];  \r\n            } \r\n            \r\n            var lastTrendCandleLow = candleHist[9][3]; \r\n            var firstTrendCandleHigh = candleHist[2][2]; \r\n\r\n            var firstCandle = {\r\n                time : candleHist[0]  && candleHist[0][0],\r\n                open: candleHist[0]  && candleHist[0][1],\r\n                high: candleHist[0]  && candleHist[0][2],\r\n                low: candleHist[0]  && candleHist[0][3],\r\n                close: candleHist[0]  && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time:candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n        \r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow)*100/lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n    //        console.log(symbol, \"last 8 candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh, candleHist);\r\n           \r\n            //\r\n            if(diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth){\r\n                //1st candle green & 2nd candle is red check\r\n                if(secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close){ \r\n               // console.log(symbol, \"candleHist\",candleHist); \r\n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\r\n\r\n                       // console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log('%c' + symbol+ ' perfect twisser top  upside movement'+diffPer +  new Date( candleHist[0][0]).toLocaleTimeString(), 'background: red; color: #bada55'); \r\n        \r\n                        var foundData = {\r\n                            symbol : symbol, \r\n                            pattenName: 'Twisser Top', \r\n                            time: new Date( candleHist[0][0]).toLocaleTimeString(), \r\n                        }\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n\r\n                      //  this.setState({foundPatternList: [...this.state.foundPatternList, foundData]})\r\n                    //    console.log('%c' + new Date( candleHist[0][0]).toString(), 'color: green'); \r\n                    //    console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\",candleHist); \r\n                  //      console.log(symbol, 'perfect twisser top done close=open || open=close', );\r\n                        \r\n                        var msg = new SpeechSynthesisUtterance();\r\n                        msg.text = 'twisser top in '+symbol.toLowerCase() ; \r\n                        window.speechSynthesis.speak(msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findTweezerBottomPatternLive = (candleHist,symbol) => {\r\n       // console.log(\"TweezerBottom finding\", symbol); \r\n        if(candleHist && candleHist.length > 0){\r\n            //candleHist = candleHist.reverse(); \r\n           // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3]; \r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if(maxHigh < candleHist[index][2])\r\n                maxHigh = candleHist[index][2];\r\n                if(candleHist[index][3] < maxLow)\r\n                maxLow = candleHist[index][3];  \r\n            } \r\n            \r\n            var last8candleHigh = candleHist[9][2]; \r\n            var last8candleLow = candleHist[2][3]; \r\n\r\n            var firstCandle = {\r\n                time : candleHist[0]  && candleHist[0][0],\r\n                open: candleHist[0]  && candleHist[0][1],\r\n                high: candleHist[0]  && candleHist[0][2],\r\n                low: candleHist[0]  && candleHist[0][3],\r\n                close: candleHist[0]  && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time:candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n        \r\n            var diffPer = ((last8candleLow - last8candleHigh)*100/last8candleHigh).toFixed(2);\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5%  \r\n           \r\n            //  \r\n            if(diffPer <= -1.5 && highestOfBoth < maxHigh  && lowestOfBoth < maxLow){\r\n\r\n              \r\n                //1st candle green & 2nd candle is red check\r\n                if(secondCandle.open > secondCandle.close && firstCandle.close  > firstCandle.open){ \r\n               // console.log(symbol, \"candleHist\",candleHist); \r\n              //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", last8candleLow);\r\n              //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if(Math.round(secondCandle.close) ==  Math.round(firstCandle.open) || Math.round(secondCandle.open) ==  Math.round(firstCandle.close)){\r\n\r\n                      \r\n                        //console.log(symbol, \"last 8 candle diff \",  diffPer+\"% \", \"10th high\", last8candleHigh,\"3rd low\", last8candleLow, candleHist);\r\n\r\n                        console.log('%c' + symbol+ ' perfect twisser bottom downside movement diff '+diffPer+\"% \" + new Date( candleHist[0][0]).toLocaleTimeString(), 'background: #222; color: #bada55'); \r\n                        var foundData = {\r\n                            symbol : symbol, \r\n                            pattenName: 'Twisser bottom', \r\n                            time: new Date( candleHist[0][0]).toLocaleString(), \r\n                        }\r\n                     \r\n                     //   this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                        \r\n                     //   console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);                 \r\n                        console.log(symbol, \"last10Candle\",candleHist); \r\n                      //   console.log(symbol, 'perfect twisser bottom done close=open || open=close', new Date( candleHist[0][0]).toString());\r\n                        \r\n                        var msg = new SpeechSynthesisUtterance();\r\n                        msg.text = 'twisser bottom in '+symbol.toLowerCase() ; \r\n                        window.speechSynthesis.speak( msg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findNR4PatternLive = async () => {\r\n\r\n        console.log('nr4 scaning starting'); \r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var startdate = ''; \r\n           \r\n            var timediff = moment.duration(\"240:00:00\");\r\n            startdate = moment(new Date()).subtract(timediff);\r\n\r\n            var timediffend = moment.duration(\"24:00:00\");\r\n            var enddateLastday = moment(new Date()).subtract(timediffend);\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(startdate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                     candleData.reverse(); \r\n\r\n                     // var startindex = index2 * 10; \r\n                     var last4Candle = candleData.slice(1, 5);\r\n                     var last5Candle = candleData.slice(0, 5);\r\n                     // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                     // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                     if (last4Candle.length >= 4) {\r\n\r\n                        // last4Candle.reverse();\r\n\r\n                         var rangeArr = [], candleChartData = []; \r\n                         last4Candle.forEach(element => {\r\n                             rangeArr.push(element[2] - element[3]);\r\n                         });\r\n\r\n                         last5Candle.forEach(element => {\r\n                            candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                         });\r\n                         var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                         rangeArr.forEach(element => {\r\n                             if (firstElement <= element) {\r\n                                 firstElement = element;\r\n                                 rgrangeCount += 1;\r\n                             }\r\n                         });\r\n\r\n                         \r\n                         if (rgrangeCount == 4) {\r\n                            console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n\r\n                            \r\n                             var firstCandle = last4Candle[0];\r\n\r\n                             //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                             var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                             //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                             var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n\r\n                             var data  = {\r\n                                \"exchange\":\"NSE\",\r\n                                \"tradingsymbol\": element.symbol,\r\n                                \"symboltoken\":element.token,\r\n                            }\r\n\r\n                            AdminService.getLTP(data).then(res => {\r\n                                let data = resolveResponse(res, 'noPop');\r\n                                 var LtpData = data && data.data; \r\n                                 //console.log(LtpData);\r\n                                 if(LtpData && LtpData.ltp){\r\n\r\n                                    var orderActivated =  <span> {LtpData.ltp} </span>; \r\n                                    var quantity = 0, pnlAmount = 0, netPnLAmount=0, perChange, brokerageCharges = 0.06; \r\n                                    if(LtpData.ltp > buyentry){\r\n                                      orderActivated =  <span style={{color:'green'}}> Long Ltp: {LtpData.ltp} {((LtpData.ltp - buyentry)*100/buyentry).toFixed(2)}% </span>; \r\n                                      this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - buyentry)*100/buyentry) })\r\n                                      this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\r\n                                      \r\n                                      let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                                      quantity = Math.floor(perTradeExposureAmt/buyentry); \r\n                                      perChange =  (LtpData.ltp -  buyentry) * 100 / buyentry; \r\n                                      pnlAmount =  ((LtpData.ltp -  buyentry) * quantity).toFixed(2); \r\n                                      netPnLAmount = ((buyentry * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n\r\n                                    } \r\n                                    if(LtpData.ltp < sellenty){\r\n                                        orderActivated =  <span style={{color:'red'}}> Short Ltp: {LtpData.ltp} {((LtpData.ltp - sellenty)*100/sellenty).toFixed(2)}%</span>; \r\n                                        this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((sellenty - LtpData.ltp)*100/sellenty) })\r\n                                        this.setState({totelActivatedCount : this.state.totelActivatedCount + 1});\r\n                                        let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                                        quantity = Math.floor(perTradeExposureAmt/sellenty); \r\n                                        pnlAmount =  ((sellenty - LtpData.ltp) * quantity).toFixed(2); \r\n                                        perChange =  (sellenty - LtpData.ltp) * 100 / sellenty; \r\n                                        netPnLAmount = ((sellenty * (perChange - brokerageCharges) / 100) * quantity).toFixed(2);\r\n\r\n                                    } \r\n\r\n\r\n\r\n                                    var foundData = {\r\n                                        symbol : element.symbol, \r\n                                        token : element.token, \r\n                                        pattenName: 'NR4', \r\n                                        time: new Date( firstCandle[0]).toLocaleString(), \r\n                                        BuyAt : buyentry, \r\n                                        SellAt : sellenty,\r\n                                        orderActivated : orderActivated,\r\n                                        candleChartData : candleChartData, \r\n                                        quantity :  quantity,\r\n                                        brokerageCharges : brokerageCharges, \r\n                                        pnlAmount : pnlAmount,\r\n                                        netPnLAmount : netPnLAmount,\r\n                                        perChange : perChange\r\n                                    }\r\n        \r\n                                    console.log('nr4 scaned',foundData ); \r\n\r\n                                    if(quantity){\r\n                                        this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]})\r\n                                    }\r\n    \r\n                                    var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                                    foundPatternList.push(foundData); \r\n                                    localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                                \r\n                                }\r\n                                \r\n                           })\r\n\r\n\r\n\r\n                            \r\n\r\n                         }\r\n\r\n                     }\r\n                  \r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol})\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    showCandleChart = (candleData, symbol) => {\r\n\r\n\r\n        candleData  = candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n    \r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n    refreshLtpPer = async() => {\r\n\r\n       this.setState({nr4TotalPer : 0 }); \r\n       \r\n       var foundPatternList = this.state.foundPatternList;\r\n\r\n       this.setState({foundPatternList : [] }); \r\n\r\n//       foundPatternList.forEach(element => {\r\n         for (let index = 0; index < foundPatternList.length; index++) {\r\n             const element = foundPatternList[index];\r\n           \r\n            if(element.pattenName === 'NR4'){\r\n\r\n                var data  = {\r\n                    \"exchange\":\"NSE\",\r\n                    \"tradingsymbol\": element.symbol,\r\n                    \"symboltoken\":element.token,\r\n                }\r\n\r\n                AdminService.getLTP(data).then(res => {\r\n                    let data = resolveResponse(res, 'noPop');\r\n                     var LtpData = data && data.data; \r\n                     //console.log(LtpData);\r\n                     if(LtpData && LtpData.ltp){\r\n\r\n                        var orderActivated =  <span> {LtpData.ltp} </span>; \r\n\r\n                        if(LtpData.ltp > element.BuyAt){\r\n                          orderActivated =  <span style={{color:'green'}}> Long Ltp: {LtpData.ltp} {((LtpData.ltp - element.BuyAt)*100/element.BuyAt).toFixed(2)}% </span>; \r\n                          this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((LtpData.ltp - element.BuyAt)*100/element.BuyAt) })\r\n                        } \r\n                        if(LtpData.ltp < element.SellAt){\r\n                            orderActivated =  <span style={{color:'red'}}> Short Ltp: {LtpData.ltp} {((LtpData.ltp - element.SellAt)*100/element.SellAt).toFixed(2)}%</span>; \r\n                            this.setState({nr4TotalPer : this.state.nr4TotalPer +  ((element.SellAt - LtpData.ltp)*100/element.SellAt) })\r\n                        } \r\n\r\n                        var foundData = {\r\n                            symbol : element.symbol, \r\n                            token : element.token, \r\n                            pattenName: 'NR4', \r\n                            time: new Date().toLocaleString(), \r\n                            BuyAt : element.BuyAt, \r\n                            SellAt : element.SellAt,\r\n                            orderActivated : orderActivated\r\n                        }\r\n\r\n                        console.log('nr4 updated',foundData ); \r\n\r\n\r\n                        this.setState({foundPatternList: [...this.state.foundPatternList,foundData ]}); \r\n\r\n                        var foundPatternList = localStorage.getItem(\"foundPatternList\") ? JSON.parse(localStorage.getItem(\"foundPatternList\")) : []; \r\n                        foundPatternList.push(foundData); \r\n                        localStorage.setItem('foundPatternList', JSON.stringify(foundPatternList));\r\n                    \r\n                    }\r\n                    \r\n               })\r\n\r\n            }\r\n            await new Promise(r => setTimeout(r, 101));\r\n\r\n           \r\n       }\r\n\r\n\r\n\r\n    }\r\n\r\n    getStoplossFromOrderbook = (row) => {\r\n       var oderbookData = localStorage.getItem('oderbookData'); \r\n       oderbookData =  JSON.parse(oderbookData);\r\n       var stopLoss = 0; \r\n       var data = {}; \r\n       oderbookData.forEach(element => {\r\n        if(element.status === \"trigger pending\" && element.symboltoken === row.symboltoken){\r\n            data.stopLoss = element.triggerprice + \"(\"+ ((element.triggerprice-row.buyavgprice)*100/row.buyavgprice).toFixed(2) + \"%)\"; \r\n            data.maxLossAmount = ((element.triggerprice-row.buyavgprice)* parseInt(row.netqty)).toFixed(2); \r\n        }\r\n       });\r\n       return data; \r\n    }\r\n    getPositionData = async() => {\r\n     //   document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n        var maxPnL = 0, totalMaxPnL = 0; \r\n        AdminService.getPosition().then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var positionList = data && data.data;\r\n             if (positionList && positionList.length>0){\r\n                this.setState({ positionList : positionList}); \r\n                 var todayProfitPnL=0, totalbuyvalue=0, totalsellvalue=0, totalQtyTraded=0, allbuyavgprice=0,allsellavgprice=0,totalPercentage=0;\r\n                  positionList.forEach(element => {\r\n                    var percentPnL =((parseFloat(element.sellavgprice)-parseFloat(element.buyavgprice))*100/parseFloat(element.buyavgprice)).toFixed(2); \r\n                    todayProfitPnL+= parseFloat( element.pnl); \r\n                    totalbuyvalue+=parseFloat( element.totalbuyvalue); \r\n                    totalsellvalue+= parseFloat(element.totalsellvalue) === 0 ? parseFloat(element.totalbuyvalue) : parseFloat(element.totalsellvalue); \r\n                    totalQtyTraded+=parseInt( element.buyqty); \r\n                    allbuyavgprice+=parseFloat(element.buyavgprice); \r\n                    allsellavgprice+=parseFloat(element.sellavgprice); \r\n                    element.percentPnL=percentPnL;\r\n                    totalPercentage+= parseFloat( percentPnL); \r\n                    var slData  = this.getStoplossFromOrderbook(element) ; \r\n                    element.stopLoss = element.totalsellavgprice === \"0.00\" ? slData.stopLoss : element.totalsellavgprice + \"(\"+ ((element.totalsellavgprice-element.totalbuyavgprice)*100/element.totalbuyavgprice).toFixed(2) + \"%)\"; \r\n                    element.stopLossAmount = slData.maxLossAmount; \r\n                    totalMaxPnL += parseFloat(slData.maxLossAmount) ? parseFloat(slData.maxLossAmount) : 0;                     \r\n                }); \r\n                this.setState({ todayProfitPnL :todayProfitPnL.toFixed(2), totalbuyvalue: totalbuyvalue.toFixed(2), totalsellvalue : totalsellvalue.toFixed(2), totalQtyTraded: totalQtyTraded}); \r\n                this.setState({ allbuyavgprice :(allbuyavgprice/positionList.length).toFixed(2) ,allsellavgprice :(allsellavgprice/positionList.length).toFixed(2) , totalPercentage: totalPercentage    }); \r\n                this.setState({ totalBrokerCharges: ((totalbuyvalue + totalsellvalue) * 0.25/100).toFixed(2)});                \r\n\r\n                this.setState({totalTornOver: (totalbuyvalue + totalsellvalue).toFixed(2), totalMaxPnL : totalMaxPnL.toFixed(2)}); \r\n            }\r\n       })\r\n    }\r\n   \r\n    getNSETopStock(){\r\n\r\n       var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.scaninterval) : \"\"; \r\n\r\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n        totalDayLoss = -Math.abs(totalDayLoss); \r\n        if(this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\",totalDayLoss); \r\n            clearInterval(this.state.scaninterval);\r\n        }else{\r\n               AdminService.getNSETopStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if(data.status  && data.message === 'SUCCESS'){ \r\n                    var scandata =  data.result;   \r\n                   // console.log(\"scandata\",scandata); \r\n            \r\n                    for (let index = 0; index < scandata.length; index++) {\r\n                            var isFound = false; \r\n                            for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                 if(this.state.positionList[j].symbolname === scandata[index].symbolName){\r\n                                    isFound  = true; \r\n                                 }\r\n                            }\r\n                           \r\n                         //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                            if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\r\n                               \r\n                                AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n\r\n                                    let searchResdata =  searchRes.data; \r\n                                    var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \r\n                                   \r\n                                    if(found.length){\r\n                                        console.log(found[0].symbol, \"found\",found);      \r\n                                        localStorage.setItem('NseStock_' + scandata[index].symbolName, \"orderdone\");\r\n                                        this.historyWiseOrderPlace(found[0].token, found[0].symbol,  scandata[index].symbolName);\r\n                                    }\r\n                               })\r\n                             \r\n                            }\r\n                    }\r\n                }\r\n            })  \r\n        }\r\n\r\n    }\r\n\r\n\r\n    getMySelectedStock(){\r\n\r\n        var stop = new Date().toLocaleTimeString() > \"15:00:00\" ? clearInterval(this.state.selectedStockInteval) : \"\"; \r\n \r\n         var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n         totalDayLoss = -Math.abs(totalDayLoss); \r\n         if(this.state.todayProfitPnL < totalDayLoss) {\r\n             console.log(\"daily loss crossed\",totalDayLoss); \r\n             clearInterval(this.state.scaninterval);\r\n         }else{\r\n                AdminService.getSelectedStockFromDb().then(res => {\r\n                 let data = resolveResponse(res, \"noPop\");\r\n                 if(data.status  && data.message === 'SUCCESS'){ \r\n                     var scandata =  data.result;   \r\n                    // console.log(\"scandata\",scandata); \r\n             \r\n                     for (let index = 0; index < scandata.length; index++) {\r\n                             var isFound = false; \r\n                             for (let j = 0; j < this.state.positionList.length; j++) {\r\n                                  if(this.state.positionList[j].symbolname === scandata[index].symbol){\r\n                                     isFound  = true; \r\n                                  }\r\n                             }\r\n                            \r\n                          //   console.log(\"index\",index, \"symbolName\",scandata[index].symbolName);    \r\n                             if (!isFound && !localStorage.getItem('NseStock_' + scandata[index].symbolName)){\r\n                                \r\n                                 AdminService.autoCompleteSearch(scandata[index].symbolName).then(searchRes => {\r\n \r\n                                     let searchResdata =  searchRes.data; \r\n                                     var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === scandata[index].symbolName);                                \r\n                                    \r\n                                     if(found.length){\r\n\r\n                                        var selectedStockwatchList = localStorage.getItem(\"selectedStockwatchList\") ? JSON.parse(localStorage.getItem(\"selectedStockwatchList\")) : []; \r\n                                        selectedStockwatchList.push(found[0]); \r\n                                        localStorage.setItem('selectedStockwatchList', JSON.stringify(selectedStockwatchList));\r\n\r\n                                     }\r\n                                })\r\n                              \r\n                             }\r\n                     }\r\n                 }\r\n             })  \r\n         }\r\n \r\n     }\r\n\r\n\r\n    checkAndPlaceSingleOrder = (stock)=>{\r\n        AdminService.autoCompleteSearch(stock).then(res => {\r\n            let data =  res.data; \r\n            var found = data.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\");\r\n             console.log(\"stockfound\",found);  \r\n            if(found && found.length){\r\n                this.orderWithFlatstoploss(found[0].token,found[0].symbol); \r\n            }\r\n       })\r\n    }\r\n\r\n\r\n    getStockOnebyOne(){\r\n\r\n        var totalDayLoss = TradeConfig.totalCapital*TradeConfig.dailyLossPer/100; \r\n        totalDayLoss = -Math.abs(totalDayLoss); \r\n        if(this.state.todayProfitPnL < totalDayLoss) {\r\n            console.log(\"daily loss crossed\",totalDayLoss); \r\n            clearInterval(this.state.scaninterval);\r\n        }else{\r\n            console.log(\"still ok\"); \r\n            AdminService.getAutoScanStock().then(res => {\r\n                let data = resolveResponse(res, \"noPop\");\r\n                if(data.status  && data.message === 'SUCCESS'){ \r\n                    var scandata =  data.result;   \r\n                    if(scandata && scandata.length>0){\r\n                        var lastSeachStock = scandata[scandata.length-1].symbolName;               \r\n                        localStorage.setItem('scannedStocks',JSON.stringify(scandata)); \r\n                        var isFound = false; \r\n                        for (let index = 0; index < this.state.positionList.length; index++) {\r\n                             if(this.state.positionList[index].symbolname === lastSeachStock){\r\n                                isFound  = true; \r\n                             }\r\n                        }\r\n                        if (!isFound && !localStorage.getItem('scannedstock_' + lastSeachStock)){\r\n                            console.log(\"found new\", lastSeachStock)\r\n                            var msg = new SpeechSynthesisUtterance();\r\n                            msg.text = 'hey Vijay, '+lastSeachStock; \r\n                            window.speechSynthesis.speak(msg);\r\n                            localStorage.setItem('scannedstock_' + lastSeachStock , \"orderdone\");\r\n                            this.checkAndPlaceSingleOrder(lastSeachStock); \r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            })  \r\n        }\r\n    }\r\n\r\n\r\n    orderWithFlatstoploss = (token, symbol) => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n\r\n             var LtpData = data && data.data; \r\n             var ltpPrice  = LtpData.ltp\r\n             if(ltpPrice){ \r\n              \r\n            //  var stopLossPrice = ltp - (ltp*0.7/100);\r\n              var stopLossPrice = ltpPrice - (ltpPrice * TradeConfig.perTradeStopLossPer/100);\r\n              stopLossPrice = this.getMinPriceAllowTick(stopLossPrice); \r\n              let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n              let quantity = Math.floor(perTradeExposureAmt/ltpPrice); \r\n              console.log(symbol + 'ltp '+ ltpPrice, \"quantity\",quantity,\"stopLossPrice\",stopLossPrice, \"perTradeExposureAmt\",perTradeExposureAmt ); \r\n              var orderOption = {\r\n                    transactiontype: 'BUY',\r\n                    tradingsymbol: symbol,\r\n                    symboltoken:token,\r\n                    buyPrice : 0,\r\n                    quantity: quantity, \r\n                    stopLossPrice: stopLossPrice\r\n                }\r\n\r\n              if(quantity && stopLossPrice){\r\n                this.placeOrderMethod(orderOption);   \r\n              }\r\n               \r\n            }         \r\n\r\n       }).catch((error)=>{\r\n            console.log(symbol, \"not found\", 'error', error);\r\n        })  \r\n    }\r\n  \r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n        //    console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n    }\r\n\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": \"BANKNIFTY\",\r\n            \"symboltoken\":\"26009\",\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             //console.log(LtpData);\r\n             if(LtpData && LtpData.ltp){\r\n                 localStorage.setItem({'BankLtpltp': LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%'});\r\n              //  this.setState({ BankLtpltp : LtpData.ltp + '  '+ ((LtpData.ltp-LtpData.close)*100/LtpData.close).toFixed(2) +'%' });\r\n             }\r\n            \r\n       })\r\n    }\r\n\r\n\r\n    getStopLossPrice = async(token, symbol) => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\": symbol,\r\n            \"symboltoken\": token,\r\n        }\r\n      \r\n        await AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             if(LtpData &&  LtpData.ltp){\r\n                var ltp = parseFloat(LtpData.ltp); \r\n                ltp  = ltp - (ltp*0.7/100);\r\n                var slPrice = this.getMinPriceAllowTick(ltp); \r\n\r\n                this.setState({ stoploss : slPrice});\r\n                return slPrice; \r\n             }\r\n           \r\n       })\r\n    }\r\n  \r\n    placeOrderMethod = (orderOption) => { \r\n       \r\n        var data = {\r\n            \"transactiontype\":orderOption.transactiontype,//BUY OR SELL\r\n            \"tradingsymbol\": orderOption.tradingsymbol,\r\n            \"symboltoken\":orderOption.symboltoken,\r\n            \"quantity\":orderOption.quantity,\r\n            \"ordertype\": orderOption.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"price\": orderOption.buyPrice,\r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"exchange\":\"NSE\",\r\n            \"variety\":\"NORMAL\"\r\n        }\r\n        console.log(\"place order option\", data);\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n                if(orderOption.stopLossPrice){\r\n                    this.placeSLMOrder(orderOption);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    historyWiseOrderPlace = (token, symbol, LockedSymbolName) => {\r\n\r\n        var ltpdata  = {\"exchange\":\"NSE\",\"tradingsymbol\": symbol,\"symboltoken\":token,}\r\n        AdminService.getLTP(ltpdata).then(res => {\r\n            let ltpres = resolveResponse(res, 'noPop');\r\n                var LtpData = ltpres && ltpres.data; \r\n                console.log(symbol, \" ltd data \", LtpData);\r\n                let quantity =0; \r\n                if(LtpData && LtpData.ltp){\r\n                    let perTradeExposureAmt =  TradeConfig.totalCapital * TradeConfig.perTradeExposurePer/100; \r\n                     quantity = Math.floor(perTradeExposureAmt/LtpData.ltp); \r\n                }\r\n\r\n                \r\n                quantity = quantity>0 ? 1 : 0; \r\n                console.log(symbol, \"  quantity can be order \", quantity);\r\n                if(quantity){\r\n                    const format1 = \"YYYY-MM-DD HH:mm\";\r\n                    var beginningTime = moment('9:15am', 'h:mma').format(format1);\r\n\r\n                    console.log(\"beginningTime\", beginningTime); \r\n\r\n                    var time = moment.duration(\"21:10:00\");\r\n                    var startdate = moment(new Date()).subtract(time);\r\n                    var data  = {\r\n                        \"exchange\": \"NSE\",\r\n                        \"symboltoken\": token ,\r\n                        \"interval\": \"FIVE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n                        \"fromdate\": moment(startdate).format(format1) , \r\n                        \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n                    }\r\n                \r\n                    AdminService.getHistoryData(data).then(res => {\r\n                        let histdata = resolveResponse(res,'noPop' );\r\n                       // console.log(\"candle history\", histdata); \r\n                        if(histdata && histdata.data && histdata.data.length){\r\n                           \r\n                            var candleData = histdata.data, clossest =0, lowerest=0, highestHigh = 0, lowestLow=0; \r\n                            candleData.reverse(); \r\n\r\n                            if(candleData && candleData.length>0){\r\n                                for (let index = 0; index < 20; index++) {\r\n                                    if(candleData[index]){\r\n                                        clossest += candleData[index][4]; //close  \r\n                                        lowerest += candleData[index][3];  //low\r\n                                        if(candleData[index][4] > highestHigh ){\r\n                                            highestHigh = candleData[index][4];  \r\n                                        }\r\n                                        if(lowestLow < candleData[index][3]){\r\n                                            lowestLow = candleData[index][3];  \r\n                                        }\r\n                                    }\r\n                                    \r\n                                }\r\n\r\n                                let devideLen = candleData.length > 20 ? 20 : candleData.length; \r\n    \r\n                                var bbmiddleValue = clossest/devideLen; \r\n                                var bblowerValue = lowerest/devideLen; \r\n                                \r\n                                var stoploss = bblowerValue - (highestHigh - lowestLow)*3/100;  \r\n                                stoploss = this.getMinPriceAllowTick(stoploss); \r\n    \r\n                                var stoplossPer = (highestHigh - stoploss)*100/highestHigh; \r\n                                \r\n                                console.log(symbol,  \" LTP \",LtpData.ltp ); \r\n                                console.log(symbol + \"highestHigh:\",highestHigh,  \"lowestLow\", lowestLow, \"stoploss after tick:\", stoploss , \"stoploss%\", stoplossPer);\r\n                                console.log(symbol + \"  close avg middle \", bbmiddleValue,  \"lowerest avg\", bblowerValue);\r\n                            \r\n                                var orderOption = {\r\n                                    transactiontype: 'BUY',\r\n                                    tradingsymbol: symbol,\r\n                                    symboltoken:token,\r\n                                    buyPrice : 0,\r\n                                    quantity: quantity, \r\n                                    stopLossPrice: stoploss\r\n                                }\r\n                                if(LtpData && LtpData.ltp > highestHigh && stoplossPer <= 1.5){ \r\n                                   this.placeOrderMethod(orderOption);\r\n                                }else{\r\n                                    localStorage.setItem('NseStock_' + LockedSymbolName, \"\");\r\n                                    console.log(symbol + \" its not fullfilled\"); \r\n                                }\r\n                            }\r\n\r\n                           \r\n                        }else{\r\n                            //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                            console.log(symbol + \" candle data emply\"); \r\n                        }\r\n                    })\r\n\r\n                }\r\n        })\r\n       // await new Promise(r => setTimeout(r, 2000)); \r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n    \r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n    cancelOrderOfSame = (row) =>  {\r\n       \r\n        var orderData =  this.getOpenPeningOrderId(row.symboltoken);  \r\n        var data = {\r\n            \"variety\":orderData.variety,\r\n            \"orderid\":orderData.orderId,\r\n        }\r\n        AdminService.cancelOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                console.log(\"cancel order\", data);   \r\n               // this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    squareOff = (row) =>  {\r\n       \r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\":row.symboltoken,\r\n            \"transactiontype\":row.buyqty > 0 ? 'SELL' : \"BUY\", \r\n            \"exchange\": row.exchange, \r\n            \"ordertype\": \"MARKET\", \r\n            \"producttype\": row.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": row.buyqty,\r\n        }\r\n\r\n        // if(window.confirm(\"Squire Off!!! Sure?\")){\r\n            \r\n        // }\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(\"squireoff\", data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n                this.cancelOrderOfSame(row); \r\n                document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n\r\n            }\r\n        })\r\n       \r\n    }\r\n    updateOrderList = () => {\r\n        AdminService.retrieveOrderBook()\r\n        .then((res) => {\r\n            let data = resolveResponse(res);\r\n            if(data && data.data){\r\n                var orderlist = data.data; \r\n                  orderlist.sort(function(a,b){\r\n                    return new Date(b.updatetime) - new Date(a.updatetime);\r\n                  });\r\n                localStorage.setItem('oderbookData', JSON.stringify( orderlist ));                       \r\n            }\r\n        });\r\n    }\r\n    \r\n    placeSLMOrder = (slmOption) => {\r\n        \r\n        var data = {\r\n            \"triggerprice\":slmOption.stopLossPrice,\r\n            \"tradingsymbol\": slmOption.tradingsymbol,\r\n            \"symboltoken\": slmOption.symboltoken,\r\n            \"quantity\": slmOption.quantity,\r\n            \"transactiontype\": slmOption.transactiontype === \"BUY\" ? \"SELL\" : \"BUY\", \r\n            \"exchange\": 'NSE', \r\n            \"producttype\": \"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n        console.log(\"SLM option data\", data); \r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n          //  console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n               // this.updateOrderList(); \r\n               var msg = new SpeechSynthesisUtterance();\r\n               msg.text = 'hey Vijay, '+ slmOption.tradingsymbol; \r\n               window.speechSynthesis.speak(msg);\r\n\r\n               document.getElementById('orderRefresh') && document.getElementById('orderRefresh').click(); \r\n            }\r\n        })\r\n    }\r\n\r\n    getOpenPeningOrderId =(symboltoken) => {\r\n\r\n        var oderbookData = JSON.parse(localStorage.getItem('oderbookData'));\r\n        var data = {}; \r\n         for (let index = 0; index < oderbookData.length; index++) {\r\n            if(oderbookData[index].symboltoken === symboltoken && oderbookData[index].transactiontype ===  \"SELL\"){\r\n                data.orderId = oderbookData[index].orderid  \r\n                data.variety = oderbookData[index].variety  \r\n                break;\r\n            }\r\n         } \r\n         return data;\r\n     }\r\n    modifyOrderMethod = (row, minPrice) => {\r\n        //console.log(this.state.triggerprice);\r\n\r\n        var orderData = this.getOpenPeningOrderId(row.symboltoken); \r\n        console.log(\"orderid\", this.state.orderData);\r\n\r\n        var data = {\r\n            \"variety\" : \"STOPLOSS\",\r\n            \"orderid\": orderData.orderId,\r\n            \"ordertype\": \"STOPLOSS_MARKET\",   // \"STOPLOSS_LIMIT\",\r\n            \"producttype\":  row.producttype, //\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\":  0,\r\n            \"triggerprice\": parseFloat( minPrice ),\r\n            \"quantity\":row.buyqty,\r\n            \"tradingsymbol\": row.tradingsymbol,\r\n            \"symboltoken\": row.symboltoken,\r\n            \"exchange\": row.exchange\r\n        }\r\n        AdminService.modifyOrder(data).then(res => {\r\n            let data = resolveResponse(res, \"noPop\");\r\n\r\n            var msg = new SpeechSynthesisUtterance();\r\n          \r\n          \r\n            if(data.status  && data.message ===  'SUCCESS'){\r\n              //  this.setState({ ['lastTriggerprice_' + row.symboltoken]:  parseFloat(minPrice)})\r\n              msg.text = row.tradingsymbol +' modified '+data.message\r\n              window.speechSynthesis.speak(msg);\r\n              localStorage.setItem('firstTimeModify'+row.symboltoken, 'No');\r\n                localStorage.setItem('lastTriggerprice_' + row.symboltoken, parseFloat(minPrice));\r\n            }\r\n        })\r\n    }\r\n    getMinPriceAllowTick = (minPrice) => {\r\n        minPrice =  minPrice.toFixed(2); \r\n       // console.log(\"minPrice\",minPrice); \r\n        var wholenumber = parseInt( minPrice.split('.')[0]);\r\n      //  console.log(\"wholenumber\",wholenumber); \r\n        var decimal =  parseFloat( minPrice.split('.')[1]);\r\n       // console.log(\"decimal\",decimal); \r\n        var tickedecimal =  decimal-decimal%5; \r\n        minPrice = parseFloat( wholenumber + '.'+tickedecimal); \r\n     //   console.log(\"minPricexxxx\",minPrice); \r\n        return minPrice; \r\n    }\r\n\r\n    getPercentage = (avgPrice,  ltp , row) =>  {\r\n\r\n        avgPrice =  parseFloat(avgPrice); \r\n        var percentChange = ((ltp - avgPrice)*100/avgPrice).toFixed(2); \r\n\r\n      //  console.log(row.symbolname,  'chng %',percentChange);\r\n         if(!localStorage.getItem('firstTimeModify'+row.symboltoken) && percentChange > 0.7){\r\n                var minPrice =  avgPrice + (avgPrice * 0.1/100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice); \r\n                this.modifyOrderMethod(row, minPrice);\r\n         }else{\r\n           //var lastTriggerprice =  this.state['lastTriggerprice_'+row.symboltoken]; \r\n           var lastTriggerprice =  parseFloat(localStorage.getItem('lastTriggerprice_'+row.symboltoken)); \r\n           var perchngfromTriggerPrice = ((ltp - lastTriggerprice)*100/lastTriggerprice).toFixed(2);   \r\n        //   console.log(row.symbolname, 'chng form Trigger Price',perchngfromTriggerPrice);\r\n           if(perchngfromTriggerPrice > 0.7){\r\n                minPrice =  lastTriggerprice + (lastTriggerprice * 0.25/100);\r\n                minPrice = this.getMinPriceAllowTick(minPrice); \r\n                this.modifyOrderMethod(row, minPrice);\r\n           }\r\n\r\n         }\r\n\r\n        let sqrOffbeginningTime = moment('3:14pm', 'h:mma');\r\n        let sqrOffendTime = moment('3:15pm', 'h:mma');\r\n        let sqrOffcurrentTime = moment(new Date(), \"h:mma\");\r\n        if(sqrOffcurrentTime.isBetween(sqrOffbeginningTime, sqrOffendTime)){\r\n\r\n            if(!localStorage.getItem('squiredOff'+row.symboltoken)){\r\n                localStorage.setItem('squiredOff'+row.symboltoken, 'yes');\r\n                this.squareOff(row); \r\n                console.log(\"Sqr off called for\",row.symbolname);  \r\n            }\r\n            \r\n\r\n        }\r\n\r\n        return percentChange;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n        var netPnLAmountTotal = 0; \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                     <br />\r\n                     <ChartDialog />\r\n                    <Grid style={{padding:'5px'}} justify=\"space-between\" direction=\"row\" container>\r\n                        <Grid item >\r\n                            <Typography variant=\"h6\" >\r\n                            <b>Positions ({this.state.positionList && this.state.positionList.length}) </b>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3} >\r\n                          <Typography component=\"h3\">\r\n                            <b>Date:: {new Date().toLocaleString()} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        \r\n                        <Grid item  >\r\n                          <Typography component=\"h3\">\r\n                            <b>Total Turnover {this.state.totalTornOver} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                       \r\n                        <Grid item >\r\n                          <Typography component=\"h3\"  >\r\n                            <b> Charges</b> <b style={{color:\"#00cbcb\"}}>-{this.state.totalBrokerCharges} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                        <Grid item  >\r\n                          <Typography component=\"h3\"   >\r\n                            <b>  P/L </b> <b style={{color:this.state.todayProfitPnL>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.todayProfitPnL} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <Typography component=\"h3\" >\r\n                            <b> Net P/L </b> <b style={{color:(this.state.todayProfitPnL - this.state.totalBrokerCharges)>0?\"darkmagenta\":\"#00cbcb\"}}>{this.state.totalBrokerCharges ? (this.state.todayProfitPnL - this.state.totalBrokerCharges).toFixed(2) : \"\"} </b>\r\n                            </Typography> \r\n                        </Grid>\r\n                        \r\n                        <Grid item  >\r\n                            <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getPositionData()}>Refresh</Button>    \r\n                        </Grid>\r\n                </Grid>\r\n               \r\n                 <Grid style={{padding:'5px'}}  spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                                \r\n\r\n                    <Grid item xs={12} sm={12}> \r\n                    <Paper style={{overflow:\"auto\", padding:'5px'}} >\r\n                                 \r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{whiteSpace: \"nowrap\", backgroundColor: \"lightgray\" }} variant=\"head\">\r\n                            <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                <TableCell style={{paddingLeft:\"3px\"}} className=\"TableHeadFormat\" align=\"left\">&nbsp;Trading symbol</TableCell>\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Trading Token</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Product type</TableCell> */}\r\n  \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Buy Price</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total buy value</TableCell> */}\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Average Sell Price</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">Total Sell value</TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Bought Qty</TableCell>\r\n                                \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Net Qty</TableCell>\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Trailing SL</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">Max Locked P/L</TableCell>\r\n\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">P/L </TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Chng % </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">LTP</TableCell>\r\n        \r\n    \r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">Action</TableCell>\r\n                           \r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {this.state.positionList ? this.state.positionList.map(row => (\r\n                                <TableRow hover key={row.symboltoken} style={{background : row.netqty !== '0'? 'gray': \"\"}} >\r\n\r\n                                    <TableCell style={{paddingLeft:\"3px\"}} align=\"left\">&nbsp; <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://chartink.com/stocks/\"+row.tradingsymbol.split('-')[0]+\".html\"}>{row.tradingsymbol.split('-')[0]}</a> </TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.symboltoken}</TableCell> */}\r\n                                    {/* <TableCell align=\"left\">{row.producttype}</TableCell> */}\r\n                                 \r\n                                    <TableCell align=\"left\">{row.totalbuyavgprice}</TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.totalbuyvalue}</TableCell> */}\r\n\r\n                                    <TableCell align=\"left\">{row.totalsellavgprice}</TableCell>\r\n                                    <TableCell align=\"left\">{row.buyqty}</TableCell>\r\n                                    <TableCell align=\"left\">{row.netqty}</TableCell>\r\n                                    {/* <TableCell align=\"left\">{row.totalsellvalue}</TableCell> */}\r\n                                    <TableCell align=\"left\"> {row.stopLoss}</TableCell> \r\n                                    <TableCell align=\"left\"> {row.stopLossAmount}</TableCell> \r\n\r\n                                    \r\n                                    {/* {(localStorage.getItem('lastTriggerprice_'+row.symboltoken))} */}\r\n                                    <TableCell align=\"left\" style={{color: parseFloat( row.pnl ) >0 ?  'darkmagenta' : '#00cbcb'}}><b>{row.pnl}</b></TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        { row.netqty !== '0' ? this.getPercentage(row.totalbuyavgprice, row.ltp, row) : \"\"} \r\n                                        {new Date().toLocaleTimeString() > \"15:15:00\" ? row.percentPnL : \"\"}\r\n                                      </TableCell> \r\n                                    <TableCell align=\"left\">{row.ltp}</TableCell>\r\n                                  \r\n                                    <TableCell align=\"left\">\r\n                                        {row.netqty !== \"0\" ? <Button size={'small'}  type=\"number\" variant=\"contained\" color=\"Secondary\"  onClick={() => this.squareOff(row)}>Square Off</Button>  : \"\"}  \r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                            )):''}\r\n\r\n                                <TableRow   variant=\"head\" style={{fontWeight: 'bold', backgroundColor: \"lightgray\"}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\">Instrument</TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"left\"></TableCell> */}\r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">&nbsp;Total</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.allbuyavgprice}</TableCell>\r\n                                {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalbuyvalue}</TableCell> */}\r\n\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{ this.state.allsellavgprice}</TableCell>\r\n          \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalQtyTraded}</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                                     {/* <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalsellvalue}</TableCell> */}\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\">{this.state.totalMaxPnL}</TableCell>\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\" style={{color: parseFloat( this.state.todayProfitPnL ) > 0 ?  'darkmagenta' : '#00cbcb'}}>{this.state.todayProfitPnL} </TableCell>\r\n \r\n                                <TableCell className=\"TableHeadFormat\" align=\"left\">\r\n                                    \r\n                                {new Date().toLocaleTimeString() > \"15:15:00\" ? this.state.totalPercentage && this.state.totalPercentage.toFixed(2) : \"\"}\r\n                    \r\n                                </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"left\"></TableCell>\r\n\r\n                                </TableRow>\r\n\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n\r\n\r\n                    </Grid>\r\n\r\n                  \r\n\r\n                        <Grid item xs={12} sm={12} >\r\n                             <OrderBook/>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} sm={12} >\r\n                        <Paper style={{overflow:\"auto\", padding:'5px'}} >\r\n\r\n                            \r\n\r\n                                <Grid        justify=\"space-between\"\r\n                                container>\r\n                                            <Grid item  >\r\n                                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                                 NR4 Trades ({this.state.foundPatternList && this.state.foundPatternList.length}) \r\n                                                </Typography> \r\n                                            </Grid>\r\n                                            <Grid item >\r\n                                                 <Button variant=\"contained\"  style={{ marginLeft: '20px' }} onClick={() => this.refreshLtpPer()}>Live Refresh</Button>\r\n                                            </Grid>\r\n                                            \r\n                                </Grid>\r\n                            \r\n                                 \r\n                                 <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                                     <TableHead  style={{whiteSpace: \"nowrap\", }} variant=\"head\">\r\n                                         <TableRow key=\"1\"  variant=\"head\" style={{fontWeight: 'bold'}}>\r\n             \r\n                                              \r\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Symbol Found </TableCell>\r\n                                             <TableCell className=\"TableHeadFormat\" align=\"left\">Patten Name</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Update Time</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">BuyAt</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">SellAt</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Activated({this.state.totelActivatedCount})  Ltp - Total({this.state.nr4TotalPer.toFixed(2)})%  </TableCell>\r\n\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Qty</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">PnL</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Charges%</TableCell>\r\n                                             <TableCell  className=\"TableHeadFormat\" align=\"left\">Net PnL  <b>({localStorage.getItem('netPnLAmountTotal')})</b></TableCell>\r\n\r\n             \r\n                                          \r\n                                         </TableRow>\r\n                                     </TableHead>\r\n                                     <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n             \r\n                                         {this.state.foundPatternList ? this.state.foundPatternList.map(row => (\r\n                                             <TableRow hover key={row.symboltoken}>\r\n             \r\n                                                <TableCell align=\"left\"> <Button  variant=\"contained\" style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol} <EqualizerIcon /> </Button></TableCell>\r\n                                                 <TableCell align=\"left\">{row.pattenName}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.time}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.BuyAt}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.SellAt}</TableCell>\r\n                                                 <TableCell align=\"left\"><b>{row.orderActivated} </b></TableCell>\r\n\r\n                                                 <TableCell align=\"left\">{row.quantity}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.pnlAmount}</TableCell>\r\n                                                 <TableCell align=\"left\">{row.brokerageCharges}</TableCell>\r\n                                                 <TableCell align=\"left\"  {...netPnLAmountTotal = netPnLAmountTotal + parseFloat(row.netPnLAmount)}><b>{row.netPnLAmount} </b></TableCell>\r\n\r\n                                             </TableRow>\r\n                                         )):''}\r\n                                     </TableBody>\r\n                                 </Table>\r\n\r\n                                 <b style={{float: 'right',marginRight: '80px'}}> Total :   {netPnLAmountTotal.toFixed(2)} </b> \r\n\r\n                               \r\n             \r\n                                 </Paper>\r\n                        </Grid>\r\n\r\n                               \r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     footerButton: {\r\n//         position: 'fixed',\r\n//     }\r\n// };\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 'auto',\r\n  },\r\n  MuiTabsScroller : {\r\n    overflow: 'auto'\r\n  }\r\n \r\n\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n      <TabPanel value={value} index={0} dir={theme.direction}>\r\n         \r\n        {props.data && props.data.symbolList ? props.data.symbolList.map(row => (\r\n            <>\r\n        <ListItem button style={{ fontSize: '12px'}} >\r\n            <ListItemText onClick={() => props.data.LoadSymbolDetails(row.symbol)} primary={row.name} /><DeleteIcon  onClick={() => props.data.deleteItemWatchlist(row.symbol)} />\r\n        </ListItem>\r\n        \r\n        </>\r\n        )):''}\r\n                                      \r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n        Nifty 100\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          Midcap\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n\r\n        <Tabs\r\n          className={classes.MuiTabsScroller}\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n     \r\n          style={{ overflow: 'auto'}}\r\n        >\r\n          <Tab label=\"Nifty 50\" {...a11yProps(0)} />\r\n          <Tab label=\"Midcap\" {...a11yProps(1)} />\r\n          <Tab label=\"Smallcap\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\r\nimport MaterialUIDateTimePicker from '../../utils/MaterialUIDateTimePicker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport * as moment from 'moment';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Notify from \"../../utils/Notify\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Spinner from \"react-spinner-material\";\r\n\r\nimport { w3cwebsocket } from 'websocket';\r\nimport pako from 'pako';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ChartDialog from './ChartDialog'; \r\n\r\n\r\nimport Position from './Position';\r\n\r\nimport Tab from './Tab'\r\n\r\nconst wsClint = new w3cwebsocket('wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream');\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sumPercentage: 0,\r\n            autoSearchList: [],\r\n            isDasable: false,\r\n            isError: false,\r\n            InstrumentLTP: {},\r\n            ifNotBought: true,\r\n            autoSearchTemp: [],\r\n            backTestResult: [],\r\n            backTestFlag: true,\r\n            patternType: \"NR4\",\r\n            symboltoken: \"\",\r\n            tradingsymbol: \"\",\r\n            buyPrice: 0,\r\n            quantity: 1,\r\n            producttype: \"INTRADAY\",\r\n            symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) || [],\r\n            selectedWatchlist: 'NIFTY 50',\r\n            longExitPriceType: 4,\r\n            shortExitPriceType: 4,\r\n            candleChartData : []\r\n            \r\n\r\n\r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n        this.updateSocketWatch = this.updateSocketWatch.bind(this);\r\n\r\n\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var data = e.target.value;\r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data = res.data;\r\n            console.log(data);\r\n            localStorage.setItem('autoSearchTemp', JSON.stringify(data));\r\n            this.setState({ autoSearchList: data });\r\n        })\r\n\r\n    }\r\n    onChangePattern = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onChangeWatchlist = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        var staticData = this.state.staticData;\r\n        this.setState({ symbolList: staticData[e.target.value] });\r\n        if (e.target.value == \"selectall\") {\r\n            this.setState({ symbolList: localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')) });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n            this.setState({ startDate: date });\r\n        } else if (fromDate === \"END_DATE\") {\r\n            this.setState({ endDate: date });\r\n        }\r\n    };\r\n    getLTP = () => {\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            var LtpData = data && data.data;\r\n            this.setState({ InstrumentLTP: LtpData });\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n        })\r\n    }\r\n    decodeWebsocketData = (array) => {\r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n\r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken, clientcode) => {\r\n\r\n        var firstTime_req = '{\"task\":\"cn\",\"channel\":\"NONLM\",\"token\":\"' + this.state.feedToken + '\",\"user\": \"' + this.state.clientcode + '\",\"acctid\":\"' + this.state.clientcode + '\"}';\r\n        //  console.log(\"1st Request :- \" + firstTime_req);\r\n        wsClint.send(firstTime_req);\r\n    }\r\n\r\n    updateSocketWatch = (feedToken, clientcode) => {\r\n\r\n        var channel = this.state.symbolList.map(element => {\r\n            return 'nse_cm|' + element.token;\r\n        });\r\n\r\n        channel = channel.join('&');\r\n        var sbin = {\r\n            \"task\": \"mw\",\r\n            \"channel\": channel,\r\n            \"token\": this.state.feedToken,\r\n            \"user\": this.state.clientcode,\r\n            \"acctid\": this.state.clientcode\r\n        }\r\n        wsClint.send(JSON.stringify(sbin));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        AdminService.getStaticData().then(res => {\r\n            var data = res.data;\r\n            //data = JSON.parse(data);   \r\n            var totalWatchlist = Object.keys(data);\r\n            this.setState({ totalWatchlist: totalWatchlist });\r\n            this.setState({ staticData: data });\r\n\r\n            var watchlist = [];\r\n            totalWatchlist.forEach(element => {\r\n\r\n                var mylist = data[element];\r\n                mylist.forEach(element2 => {\r\n                    var foundInWatchlist = watchlist.filter(row => row.token === element2.token);\r\n                    if (!foundInWatchlist.length) {\r\n                        watchlist.push(element2);\r\n                    }\r\n                });\r\n\r\n               \r\n            });\r\n\r\n            localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n            this.setState({ symbolList: data[this.state.selectedWatchlist] });\r\n        });\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\"));\r\n        var feedToken = tokens && tokens.feedToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n        var clientcode = userProfile && userProfile.clientcode;\r\n        this.setState({ feedToken: feedToken, clientcode: clientcode });\r\n\r\n\r\n        //    wsClint.onopen  = (res) => {\r\n\r\n        //          this.makeConnection();\r\n        //          this.updateSocketWatch(feedToken ,clientcode);\r\n\r\n        //         //  setTimeout(function(){\r\n        //         //    this.updateSocketWatch(feedToken ,clientcode);\r\n        //         //  }, 800);\r\n        //    }\r\n\r\n        wsClint.onmessage = (message) => {\r\n\r\n\r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n            var liveData = JSON.parse(data);\r\n\r\n            this.state.symbolList && this.state.symbolList.forEach(element => {\r\n\r\n                var foundLive = liveData.filter(row => row.tk == element.token);\r\n\r\n\r\n                if (foundLive.length > 0 && foundLive[0].ltp)\r\n                    this.setState({ [element.symbol + 'ltp']: foundLive.length > 0 && foundLive[0].ltp })\r\n                if (foundLive.length > 0 && foundLive[0].cng)\r\n                    this.setState({ [element.symbol + 'nc']: foundLive.length > 0 && foundLive[0].nc })\r\n\r\n                var foundTweezerTop = localStorage.getItem('foundTweezerTop_' + element.token) && JSON.parse(localStorage.getItem('foundTweezerTop' + element.token));\r\n\r\n                if (foundTweezerTop && foundTweezerTop.symboltoken == element.token) {\r\n\r\n                    if (foundTweezerTop.entryBelow < foundLive[0].ltp) {\r\n                        console.log('TweezerTop ', foundTweezerTop.tradingsymbol, \"entry found at \", foundLive[0].ltp);\r\n                        this.setState({ tradingsymbol: foundTweezerTop.tradingsymbol, symboltoken: foundTweezerTop.symboltoken, buyPrice: 0, producttype: 'INTRADAY', quantity: foundTweezerTop.quantity })\r\n                        //    this.placeOrder('SELL', \"BUY\"); \r\n\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e);\r\n        }\r\n\r\n        setInterval(() => {\r\n            var _req = '{\"task\":\"hb\",\"channel\":\"\",\"token\":\"' + feedToken + '\",\"user\": \"' + clientcode + '\",\"acctid\":\"' + clientcode + '\"}';\r\n            // console.log(\"Request :- \" + _req);\r\n            wsClint.send(_req);\r\n            //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if (!list) {\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n\r\n        // setInterval(() => {\r\n        //     AdminService.getAutoScanStock().then(res => {\r\n        //         let data = resolveResponse(res);\r\n        //         console.log(data);  \r\n        //         if(data.status  && data.message == 'SUCCESS'){ \r\n        //         //    this.setState({ orderid : data.data && data.data.orderid });  \r\n        //         }\r\n        //     })    \r\n        // }, 2000);\r\n\r\n    }\r\n\r\n    backTestAnyPattern = async () => {\r\n\r\n\r\n\r\n        if (!this.state.patternType) {\r\n            Notify.showError(\"Select pattern type\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.patternType === 'NR4') {\r\n            this.backTestNR4();\r\n            return;\r\n        }\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n\r\n        console.log(\"pattername\", this.state.patternType);\r\n\r\n        var watchList = this.state.symbolList; //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(new Date()).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    for (let index2 = 0; index2 < candleData.length - 35; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last10Candle = candleData.slice(index2, index2 + 10);\r\n                        var next10Candle = candleData.slice(index2 + 10, index2 + 35);\r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        console.log('\\n'); //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last10Candle.length >= 10 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n                            //  console.log(element.symbol, 'findingtime', new Date(candleData[index2][0]).toLocaleTimeString()); \r\n\r\n                            switch (this.state.patternType) {\r\n                                case 'TweezerTop':\r\n                                    this.backtestTweezerTop(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                case 'TweezerBottom':\r\n                                    this.backtestTweezerBottom(last10Candle, element.symbol, next10Candle);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n\r\n                        }\r\n                        runningTest += candleData.length;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(\" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    backTestNR4 = async () => {\r\n\r\n        this.setState({ backTestResult: [], backTestFlag: false });\r\n\r\n        var watchList = this.state.symbolList //localStorage.getItem('watchList') && JSON.parse(localStorage.getItem('watchList')); \r\n        var runningTest = 1, sumPercentage = 0;\r\n        for (let index = 0; index < watchList.length; index++) {\r\n            const element = watchList[index];\r\n\r\n            var data = {\r\n                \"exchange\": \"NSE\",\r\n                \"symboltoken\": element.token,\r\n                \"interval\": \"ONE_DAY\", //ONE_DAY FIVE_MINUTE FIFTEEN_MINUTE THIRTY_MINUTE\r\n                \"fromdate\": moment(this.state.startDate).format(\"YYYY-MM-DD HH:mm\"), //moment(\"2021-07-20 09:15\").format(\"YYYY-MM-DD HH:mm\") , \r\n                \"todate\": moment(this.state.endDate).format(\"YYYY-MM-DD HH:mm\") // moment(\"2020-06-30 14:00\").format(\"YYYY-MM-DD HH:mm\") \r\n            }\r\n\r\n            AdminService.getHistoryData(data).then(res => {\r\n                let histdata = resolveResponse(res, 'noPop');\r\n                //console.log(\"candle history\", histdata); \r\n                if (histdata && histdata.data && histdata.data.length) {\r\n\r\n                    var candleData = histdata.data;\r\n                    //  candleData.reverse(); \r\n                    for (let index2 = 0; index2 < candleData.length - 4; index2++) {\r\n                        // var startindex = index2 * 10; \r\n                        var last4Candle = candleData.slice(index2, index2 + 4);\r\n                        // var next10Candle = candleData.slice(index2+5 , index2+35 );    \r\n\r\n                        // console.log(element.symbol, 'backside',  last10Candle, '\\n forntside',  next10Candle);\r\n\r\n                        //&& new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\"\r\n                        if (last4Candle.length >= 4 && new Date(candleData[index2][0]).toLocaleTimeString() < \"14:15:00\") {\r\n\r\n                            last4Candle.reverse();\r\n\r\n                            var rangeArr = [], candleChartData = []; \r\n                            last4Candle.forEach(element => {\r\n                                rangeArr.push(element[2] - element[3]);\r\n                                candleChartData.push([element[0],element[1],element[2],element[3],element[4]]); \r\n                            });\r\n                            var firstElement = rangeArr[0], rgrangeCount = 0;\r\n                            rangeArr.forEach(element => {\r\n                                if (firstElement <= element) {\r\n                                    firstElement = element;\r\n                                    rgrangeCount += 1;\r\n                                }\r\n                            });\r\n\r\n                            //  console.log(element.symbol, last4Candle, rangeArr, rgrangeCount); \r\n                            if (rgrangeCount == 4) {\r\n                                var firstCandle = last4Candle[0];\r\n                                var next5thCandle = candleData[index2 + 4];\r\n                              //  candleChartData.unshift([next5thCandle[0],next5thCandle[1],next5thCandle[2],next5thCandle[3],next5thCandle[4]]); \r\n\r\n                                //var buyentry = (firstCandle[2] + (firstCandle[2] - firstCandle[3])/4).toFixed(2);\r\n                                var buyentry = (firstCandle[2] + (firstCandle[2] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[2] > buyentry) {\r\n                                    var perChng = (next5thCandle[this.state.longExitPriceType] - buyentry) * 100 / buyentry;\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"upside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Long - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: next5thCandle[this.state.longExitPriceType],\r\n                                        stopLoss: firstCandle[3],\r\n                                        buyExitPrice: buyentry,\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[2]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if (Math.floor(10000 / firstCandle[2])){ \r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                        this.setState({ backTestResult:  this.state.backTestResult.reverse()});\r\n                                    }\r\n\r\n                                }\r\n                                //var sellenty = (firstCandle[3] - (firstCandle[2] - firstCandle[3])/4).toFixed(2); \r\n                                var sellenty = (firstCandle[3] - (firstCandle[3] / 100 / 10)).toFixed(2);\r\n\r\n                                if (next5thCandle[3] < sellenty) {\r\n                                    var perChng = (sellenty - next5thCandle[this.state.shortExitPriceType]) * 100 / firstCandle[3];\r\n                                    sumPercentage += perChng;\r\n                                    console.log(element.symbol, firstCandle[0], \"dowside\", \"same day high\", firstCandle[2], \"same day low\", firstCandle[3], \"nextdaylow\", next5thCandle[3], \"nextdayhigh\", next5thCandle[2], 'next day closing', next5thCandle[4], perChng + '%');\r\n\r\n                                    var foundStock = {\r\n                                        foundAt: \"Short - \" + new Date(firstCandle[0]).toLocaleString(),\r\n                                        symbol: element.symbol,\r\n                                        sellEntyPrice: sellenty,\r\n                                        stopLoss: firstCandle[2],\r\n                                        buyExitPrice: next5thCandle[this.state.shortExitPriceType],\r\n                                        brokerageCharges: 0.06,\r\n                                        perChange: perChng.toFixed(2),\r\n                                        squareOffAt: new Date(next5thCandle[0]).toLocaleString(),\r\n                                        quantity: Math.floor(10000 / firstCandle[3]),\r\n                                        candleChartData : candleChartData\r\n                                    }\r\n                                    if(Math.floor(10000 / firstCandle[3])){\r\n                                        this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n                        runningTest = runningTest + candleData.length - 35;\r\n                    }\r\n                } else {\r\n                    //localStorage.setItem('NseStock_' + symbol, \"\");\r\n                    console.log(element.symbol, \" candle data emply\");\r\n                }\r\n            })\r\n            await new Promise(r => setTimeout(r, 300));\r\n            this.setState({ stockTesting: index + 1 + \". \" + element.symbol, runningTest: runningTest })\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n        console.log(\"sumPercentage\", sumPercentage)\r\n    }\r\n\r\n    backtestTweezerTop = (candleHist, symbol, next10Candle) => {\r\n\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer >= 1.5 && maxHigh < highestOfBoth && maxLow < lowestOfBoth) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open < secondCandle.close && firstCandle.open > firstCandle.close) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) && Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var higherStopLoss = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var sellEntyPrice = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] > higherStopLoss) {\r\n                                    squiredOffAt315 = higherStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //lowest of 3:15 profit booking\r\n                            var lowestOf315 = next10Candle[0][4], lowestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (next10Candle[indexTarget2][4] < lowestOf315) {\r\n                                    lowestOf315 = next10Candle[indexTarget2][4];\r\n                                    lowestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = higherStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (priceDiff < -0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > higherStopLoss) {\r\n                                    flatSellingPrice = higherStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - sellEntyPrice) * 100 / sellEntyPrice;\r\n\r\n                                if (rangePriceDiff <= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > higherStopLoss) {\r\n                                    rangeSellingPrice = higherStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: sellEntyPrice,\r\n                                    stopLoss: higherStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: 0,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / sellEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                //   foundStock.squareOffAt = new Date( squareOffAt315Time ).toLocaleString();\r\n                                //   foundStock.buyExitPrice = squiredOffAt315; \r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.buyExitPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.buyExitPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                foundStock.squareOffAt = new Date(flatSellingPriceAt).toLocaleString();\r\n                                foundStock.buyExitPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.buyExitPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({ backTestFlag: true });\r\n    }\r\n\r\n    backtestTweezerBottom = (candleHist, symbol, next10Candle) => {\r\n        if (candleHist && candleHist.length > 0) {\r\n\r\n            candleHist = candleHist.reverse();\r\n            // console.log(symbol, \"candleHist\",candleHist, new Date().toString()); \r\n\r\n\r\n            var maxHigh = candleHist[2] && candleHist[2][2], maxLow = candleHist[2] && candleHist[2][3];\r\n            for (let index = 3; index < candleHist.length; index++) {\r\n                if (maxHigh < candleHist[index][2])\r\n                    maxHigh = candleHist[index][2];\r\n                if (candleHist[index][3] < maxLow)\r\n                    maxLow = candleHist[index][3];\r\n            }\r\n\r\n\r\n            var lastTrendCandleLow = candleHist[9][3];\r\n            var firstTrendCandleHigh = candleHist[2][2];\r\n\r\n            var firstCandle = {\r\n                time: candleHist[0] && candleHist[0][0],\r\n                open: candleHist[0] && candleHist[0][1],\r\n                high: candleHist[0] && candleHist[0][2],\r\n                low: candleHist[0] && candleHist[0][3],\r\n                close: candleHist[0] && candleHist[0][4]\r\n            }\r\n            var secondCandle = {\r\n                time: candleHist[1] && candleHist[1][0],\r\n                open: candleHist[1] && candleHist[1][1],\r\n                high: candleHist[1] && candleHist[1][2],\r\n                low: candleHist[1] && candleHist[1][3],\r\n                close: candleHist[1] && candleHist[1][4]\r\n            }\r\n\r\n\r\n\r\n            var diffPer = (firstTrendCandleHigh - lastTrendCandleLow) * 100 / lastTrendCandleLow;\r\n            var lowestOfBoth = secondCandle.low < firstCandle.low ? secondCandle.low : firstCandle.low;\r\n            var highestOfBoth = secondCandle.high < firstCandle.high ? secondCandle.high : firstCandle.high;\r\n            //uptrend movement 1.5% \r\n            //    console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n\r\n\r\n            if (diffPer <= -1.5 && highestOfBoth < maxHigh && lowestOfBoth < maxLow) {\r\n                //1st candle green & 2nd candle is red check\r\n                if (secondCandle.open > secondCandle.close && firstCandle.close > firstCandle.open) {\r\n                    // console.log(symbol, \"candleHist\",candleHist); \r\n                    //  console.log(symbol, \"last 8th candle diff% \",  diffPer, \"10th Low\", lastTrendCandleLow,\"3rd high\", firstTrendCandleHigh);\r\n                    //  console.log(symbol, 'making twisser 1st green & 2nd red' , firstCandle, secondCandle );\r\n\r\n                    if (Math.round(secondCandle.close) == Math.round(firstCandle.open) || Math.round(secondCandle.open) == Math.round(firstCandle.close)) {\r\n\r\n                        console.log('%c' + new Date(candleHist[0][0]).toString(), 'color: green');\r\n                        console.log(symbol, \"last 8th candle diff% \", diffPer, \"10th Low\", lastTrendCandleLow, \"3rd high\", firstTrendCandleHigh);\r\n\r\n                        console.log(symbol, \"maxHigh\", maxHigh, \"maxLow\", maxLow);\r\n                        console.log(\"last10Candle\", candleHist);\r\n                        console.log(symbol, 'perfect twisser top done close=open || open=close',);\r\n                        console.log(\"next10Candle\", next10Candle);\r\n\r\n                        if (next10Candle && next10Candle.length) {\r\n                            // next10Candle = next10Candle.reverse(); \r\n\r\n                            var buyEntyPrice = (highestOfBoth + (highestOfBoth / 100 / 10)).toFixed(2);\r\n                            var LowerStopLoss = (lowestOfBoth - (lowestOfBoth / 100 / 10)).toFixed(2);\r\n\r\n                            //flat 3:15 or SL hit squired off \r\n                            var squiredOffAt315 = 0, squareOffAt315Time = '';\r\n                            for (let indexTarget = 0; indexTarget < next10Candle.length; indexTarget++) {\r\n\r\n                                if (next10Candle[indexTarget][2] < LowerStopLoss) {\r\n                                    squiredOffAt315 = LowerStopLoss;\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    squiredOffAt315 = next10Candle[indexTarget][4];\r\n                                    squareOffAt315Time = next10Candle[indexTarget][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //highest of 3:15 profit booking\r\n                            var highestOf315 = next10Candle[0][4], highestSquareOffAt = '';\r\n                            for (let indexTarget2 = 1; indexTarget2 < next10Candle.length; indexTarget2++) {\r\n                                if (highestOf315 < next10Candle[indexTarget2][4]) {\r\n                                    highestOf315 = next10Candle[indexTarget2][4];\r\n                                    highestSquareOffAt = next10Candle[indexTarget2][0];\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget2][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //trailing profit till of 3:15 \r\n                            var trailingSL = LowerStopLoss, trailingSLAT = '';\r\n                            for (let indexTarget3 = 0; indexTarget3 < next10Candle.length; indexTarget3++) {\r\n                                if (trailingSL > next10Candle[indexTarget3][2]) {\r\n                                    trailingSL = (next10Candle[indexTarget3][2] + (next10Candle[indexTarget3][2] / 100 / 4)).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                }\r\n                                else {\r\n                                    trailingSL = (next10Candle[indexTarget3][4]).toFixed(2);\r\n                                    trailingSLAT = next10Candle[indexTarget3][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget3][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            //flat 0.75% or SL hit profit booking\r\n                            var flatSellingPrice = 0, flatSellingPriceAt = '';\r\n                            for (let indexTarget4 = 0; indexTarget4 < next10Candle.length; indexTarget4++) {\r\n\r\n                                var priceDiff = (next10Candle[indexTarget4][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (priceDiff > 0.70) {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget4][2] > LowerStopLoss) {\r\n                                    flatSellingPrice = LowerStopLoss;\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget4][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    flatSellingPrice = next10Candle[indexTarget4][3];\r\n                                    flatSellingPriceAt = next10Candle[indexTarget4][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            //range based target range*1.5% or SL hit profit booking\r\n                            var rangeSellingPrice = 0, rangeSellingPriceAt = '';\r\n                            for (let indexTarget5 = 0; indexTarget5 < next10Candle.length; indexTarget5++) {\r\n\r\n                                var rangePriceDiff = (next10Candle[indexTarget5][3] - buyEntyPrice) * 100 / buyEntyPrice;\r\n\r\n                                if (rangePriceDiff >= -1.5) {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (next10Candle[indexTarget5][2] > LowerStopLoss) {\r\n                                    rangeSellingPrice = LowerStopLoss;\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                                if (new Date(next10Candle[indexTarget5][0]).toLocaleTimeString() == \"15:15:00\") {\r\n                                    rangeSellingPrice = next10Candle[indexTarget5][3];\r\n                                    rangeSellingPriceAt = next10Candle[indexTarget5][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            var backTestResult = localStorage.getItem(\"backTestResult\") ? JSON.parse(localStorage.getItem(\"backTestResult\")) : [];\r\n\r\n\r\n                            if (next10Candle[0][3] < lowestOfBoth || next10Candle[1][3] < lowestOfBoth || next10Candle[2][3] < lowestOfBoth) {\r\n                                var foundStock = {\r\n                                    foundAt: new Date(candleHist[0][0]).toLocaleString(),\r\n                                    symbol: symbol,\r\n                                    sellEntyPrice: 0,\r\n                                    stopLoss: LowerStopLoss,\r\n                                    orderActivated: false,\r\n                                    buyExitPrice: buyEntyPrice,\r\n                                    brokerageCharges: 0.06,\r\n                                    quantity: Math.floor(10000 / buyEntyPrice),\r\n                                }\r\n                                foundStock.orderActivated = true;\r\n                                //sqr off at 3:15\r\n                                foundStock.squareOffAt = new Date(squareOffAt315Time).toLocaleString();\r\n                                foundStock.sellEntyPrice = squiredOffAt315;\r\n\r\n                                //  lowest of 3:15\r\n                                // foundStock.squareOffAt = new Date( lowestSquareOffAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = lowestOf315 \r\n\r\n                                //trailing till 3:15\r\n                                // foundStock.squareOffAt = new Date( trailingSLAT ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = trailingSL;\r\n\r\n                                //flat profit booking at 0.70%\r\n                                // foundStock.squareOffAt = new Date( flatSellingPriceAt ).toLocaleString();\r\n                                // foundStock.sellEntyPrice = flatSellingPrice;\r\n\r\n\r\n                                //range based target range*1.5%\r\n                                //    foundStock.squareOffAt = new Date( rangeSellingPriceAt ).toLocaleString();\r\n                                //    foundStock.sellEntyPrice = rangeSellingPrice;\r\n\r\n                                foundStock.perChange = ((foundStock.sellEntyPrice - foundStock.buyExitPrice) * 100 / foundStock.sellEntyPrice).toFixed(2);\r\n                                backTestResult.push(foundStock);\r\n\r\n                                this.setState({ backTestResult: [...this.state.backTestResult, foundStock] });\r\n\r\n                                //  localStorage.setItem('backTestResult', JSON.stringify(backTestResult));\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.setState({ backTestFlag: true });\r\n\r\n    }\r\n\r\n    placeOrder = (transactiontype, slmOrderType) => {\r\n\r\n        var data = {\r\n            \"variety\": \"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": transactiontype, //BUY OR SELL\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": this.state.buyPrice === 0 ? \"MARKET\" : \"LIMIT\",\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //   console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n\r\n                if (this.state.stoploss) {\r\n                    this.placeSLMOrder(this.state.stoploss, slmOrderType);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails = (name) => {\r\n\r\n        var token = '';\r\n        for (let index = 0; index < this.state.symbolList.length; index++) {\r\n            if (this.state.symbolList[index].symbol === name) {\r\n                token = this.state.symbolList[index].token;\r\n                this.setState({ tradingsymbol: name, symboltoken: this.state.symbolList[index].token });\r\n                break;\r\n            }\r\n        }\r\n        this.getHistory(token);\r\n    }\r\n\r\n    placeSLMOrder = (slmOrderType) => {\r\n\r\n        var data = {\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\": this.state.symboltoken,\r\n            \"transactiontype\": slmOrderType ? slmOrderType : \"SELL\",\r\n            \"exchange\": \"NSE\",\r\n            \"ordertype\": \"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\": \"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\": \"0\",\r\n            \"stoploss\": \"0\",\r\n            \"quantity\": this.state.quantity,\r\n            \"triggerprice\": this.state.stoploss,\r\n            \"variety\": \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            //     console.log(data);   \r\n            if (data.status && data.message === 'SUCCESS') {\r\n                localStorage.setItem('ifNotBought', 'false')\r\n                this.setState({ orderid: data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n        // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token,\r\n            \"interval\": \"ONE_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1),\r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n        }\r\n\r\n        AdminService.getHistoryData(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n            //    console.log(data); \r\n            if (data && data.data) {\r\n\r\n                var histCandles = data.data;\r\n                histCandles && histCandles.sort(function (a, b) {\r\n                    return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if (histCandles.length > 0) {\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy: histCandles, buyPrice: histCandles[0][2] });\r\n                }\r\n                this.getLTP();\r\n            }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) => {\r\n\r\n\r\n        var autoSearchTemp = JSON.parse(localStorage.getItem('autoSearchTemp'));\r\n        //  console.log(\"values\", values); \r\n        //   console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if (autoSearchTemp.length > 0) {\r\n            var fdata = '';\r\n            for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol);\r\n                if (autoSearchTemp[index].symbol === values) {\r\n                    fdata = autoSearchTemp[index];\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [];\r\n            var foundInWatchlist = watchlist.filter(row => row.token === values);\r\n            if (!foundInWatchlist.length) {\r\n                watchlist.push(fdata);\r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n\r\n                AdminService.saveWatchListJSON({ stock: fdata }).then(res => {\r\n                    let resdata = resolveResponse(res, 'noPop');\r\n                    console.log(resdata);\r\n                });\r\n            }\r\n\r\n            this.setState({ symbolList: JSON.parse(localStorage.getItem('watchList')), search: \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = this.state.symbolList; // JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index, 1);\r\n        //  localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList: list });\r\n    }\r\n\r\n    getAveragePrice = (orderId) => {\r\n\r\n        var oderbookData = localStorage.getItem('oderbookData');\r\n        var averageprice = 0;\r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n            if (oderbookData[index].orderid === 'orderId') {\r\n                averageprice = oderbookData[index].averageprice\r\n                this.setState({ averageprice: averageprice });\r\n                break;\r\n            }\r\n        }\r\n        return averageprice;\r\n    }\r\n    showCandleChart = (candleData, symbol) => {\r\n\r\n\r\n        candleData  = candleData.reverse();\r\n\r\n        localStorage.setItem('candleChartData', JSON.stringify(candleData))\r\n        localStorage.setItem('cadleChartSymbol', symbol)\r\n    \r\n        document.getElementById('showCandleChart').click();\r\n    }\r\n\r\n\r\n    render() {\r\n        const dateParam = {\r\n            myCallback: this.myCallback,\r\n            startDate: '',\r\n            endDate: '',\r\n            firstLavel: \"Start Date and Time\",\r\n            secondLavel: \"End Date and Time\"\r\n        }\r\n\r\n       \r\n        var sumPerChange = 0, sumBrokeragePer = 0, netSumPerChange = 0, sumPnlValue = 0, sumSellEntyPrice = 0;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PostLoginNavBar />\r\n                <ChartDialog />\r\n                <Grid direction=\"row\" container>\r\n\r\n                    <Grid item xs={3} sm={3}  >\r\n\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            id=\"free-solo-2-demo\"\r\n                            disableClearable\r\n                            style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\r\n                            onChange={this.onSelectItem}\r\n                            //+ ' '+  option.exch_seg\r\n                            options={this.state.autoSearchList.length > 0 ? this.state.autoSearchList.map((option) =>\r\n                                option.symbol\r\n                            ) : []}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    onChange={this.onChange}\r\n                                    {...params}\r\n                                    label={\"Search Symbol (\" + this.state.symbolList.length + \")\"}\r\n                                    margin=\"normal\"\r\n                                    variant=\"standard\"\r\n\r\n                                    name=\"search\"\r\n                                    value={this.state.search}\r\n                                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                                />\r\n                            )}\r\n                        />\r\n\r\n                        <div style={{ marginLeft: '10px' }}>\r\n                            <FormControl style={{ paddingLeft: '12px' }} style={styles.selectStyle} >\r\n                                <InputLabel htmlFor=\"gender\">Select Watchlist</InputLabel>\r\n                                <Select value={this.state.selectedWatchlist} name=\"selectedWatchlist\" onChange={this.onChangeWatchlist}>\r\n                                    <MenuItem value={\"selectall\"}>{\"Select All\"}</MenuItem>\r\n\r\n                                    {this.state.totalWatchlist && this.state.totalWatchlist.map(element => (\r\n                                        <MenuItem value={element}>{element}</MenuItem>\r\n                                    ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div style={{ overflowY: 'scroll', height: \"75vh\" }}>\r\n\r\n                            {this.state.symbolList && this.state.symbolList.length ? this.state.symbolList.map(row => (\r\n                                <>\r\n                                    <ListItem button style={{ fontSize: '12px' }} >\r\n                                        <ListItemText style={{ color: this.state[row.symbol + 'nc'] > 0 ? 'green' : \"red\" }} onClick={() => this.LoadSymbolDetails(row.symbol)} primary={row.name} /> {this.state[row.symbol + 'ltp']} ({this.state[row.symbol + 'nc']}%) <DeleteIcon onClick={() => this.deleteItemWatchlist(row.symbol)} />\r\n                                    </ListItem>\r\n\r\n                                </>\r\n                            )) : ''}\r\n                        </div>\r\n\r\n                        {/* <Tab style={{position: 'fixed'}}  data={{symbolList : this.state.symbolList, LoadSymbolDetails: this.LoadSymbolDetails, deleteItemWatchlist: this.deleteItemWatchlist }}/> */}\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    <Grid item xs={9} sm={9}>\r\n\r\n\r\n                        <Grid direction=\"row\" alignItems=\"center\" container>\r\n\r\n                            <Grid item xs={10} sm={5}>\r\n                                <Typography variant=\"h5\"  >\r\n                                    {this.state.tradingsymbol} : {this.state.InstrumentLTP ? this.state.InstrumentLTP.ltp : \"\"}   {this.state.sbinLtp}\r\n                                </Typography>\r\n                                Open : {this.state.InstrumentLTP ? this.state.InstrumentLTP.open : \"\"} &nbsp;\r\n                                High : {this.state.InstrumentLTP ? this.state.InstrumentLTP.high : \"\"} &nbsp;\r\n                                Low :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.low : \"\"}&nbsp;\r\n                                Previous Close :  {this.state.InstrumentLTP ? this.state.InstrumentLTP.close : \"\"} &nbsp;\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2}>\r\n                                <FormControl style={styles.selectStyle}>\r\n                                    <InputLabel htmlFor=\"gender\">Order Type</InputLabel>\r\n                                    <Select value={this.state.producttype} name=\"producttype\" onChange={this.onChange}>\r\n                                        <MenuItem value={\"INTRADAY\"}>INTRADAY</MenuItem>\r\n                                        <MenuItem value={\"DELIVERY\"}>DELIVERY</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"buyPrice\" label=\"Buy Price\" value={this.state.buyPrice} name=\"buyPrice\" onChange={this.onChange} />\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"quantity\" label=\"Qty\" value={this.state.quantity} name=\"quantity\" onChange={this.onChange} />\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={1}>\r\n                                <TextField id=\"stoploss\" label=\"SL\" value={this.state.stoploss} name=\"stoploss\" onChange={this.onChange} />\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={1} sm={2}  >\r\n\r\n                                <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('BUY')}>Buy</Button>\r\n                                <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={() => this.placeOrder('SELL')}>Sell</Button>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={10} sm={12}>\r\n                                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\r\n\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Timestamp</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Open</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">High</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Low</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Close </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Volume</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n                                            {this.state.InstrumentHistroy && this.state.InstrumentHistroy ? this.state.InstrumentHistroy.map((row, i) => (\r\n                                                <TableRow key={i} >\r\n\r\n                                                    <TableCell align=\"center\">{new Date(row[0]).toLocaleString()}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[1]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[2]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[3]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[4]}</TableCell>\r\n                                                    <TableCell align=\"center\">{row[5]}</TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )) : ''}\r\n                                        </TableBody>\r\n                                    </Table>\r\n\r\n                                </Paper>\r\n\r\n\r\n\r\n                                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\r\n                                    <Grid direction=\"row\" container spacing={2}>\r\n\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel htmlFor=\"Nationality\">Pattern Type</InputLabel>\r\n                                                <Select value={this.state.patternType} name=\"patternType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={\"TweezerTop\"}>Tweezer Top</MenuItem>\r\n                                                    <MenuItem value={\"TweezerBottom\"}>Tweezer Bottom</MenuItem>\r\n                                                    <MenuItem value={\"NR4\"}>Narrow Range 4</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item xs={12} sm={4}>\r\n                                            <MaterialUIDateTimePicker callbackFromParent={dateParam} />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel>Long Exit</InputLabel>\r\n                                                <Select value={this.state.longExitPriceType} name=\"longExitPriceType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={2}>High</MenuItem>\r\n                                                    <MenuItem value={3}>Low</MenuItem>\r\n                                                    <MenuItem value={4}>Close</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={2} style={{ marginTop: '15px' }}>\r\n                                            <FormControl style={styles.selectStyle}>\r\n                                                <InputLabel>Short Exit</InputLabel>\r\n                                                <Select value={this.state.shortExitPriceType} name=\"shortExitPriceType\" onChange={this.onChangePattern}>\r\n                                                    <MenuItem value={2}>High</MenuItem>\r\n                                                    <MenuItem value={3}>Low</MenuItem>\r\n                                                    <MenuItem value={4}>Close</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={12} style={{ marginTop: '28px' }}>\r\n                                            {this.state.backTestFlag ? <Button variant=\"contained\" onClick={() => this.backTestAnyPattern()}>Test</Button> : <Spinner />}\r\n\r\n                                            &nbsp; Stock: {this.state.stockTesting}  Total Test Count: {this.state.runningTest}\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n\r\n                                    <br />\r\n\r\n                                    <Table size=\"small\" aria-label=\"sticky table\" >\r\n\r\n                                        <TableHead style={{ width: \"\", whiteSpace: \"nowrap\" }} variant=\"head\">\r\n                                            <TableRow>\r\n\r\n                                                <TableCell align=\"center\">Total Trade Found: {this.state.backTestResult && this.state.backTestResult.length}</TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"center\"><b>{localStorage.getItem('sumSellEntyPrice')}</b></TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPerChange') > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('sumPerChange')}%</b></TableCell>\r\n                                                <TableCell style={{ color: \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('sumBrokeragePer')}%</b></TableCell>\r\n                                                <TableCell style={{ color: localStorage.getItem('netSumPerChange') > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('netSumPerChange')}%</b></TableCell>\r\n\r\n                                                <TableCell style={{ color: localStorage.getItem('sumPnlValue') > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.getItem('sumPnlValue')}</b></TableCell>\r\n\r\n\r\n                                            </TableRow>\r\n                                            <TableRow variant=\"head\" style={{ fontWeight: 'bold' }}>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sr. </TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Symbol</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">FoundAt</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Buy</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Sell(Qty)</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">SquiredOff</TableCell>\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">StopLoss</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">PnL %</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Brokerage</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" align=\"center\">Net PnL %</TableCell>\r\n\r\n                                                <TableCell className=\"TableHeadFormat\" title=\"Qty of 100\" align=\"center\">Net PnL</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody style={{ width: \"\", whiteSpace: \"nowrap\" }}>\r\n\r\n\r\n                                            {this.state.backTestResult ? this.state.backTestResult.map((row, i) => (\r\n\r\n\r\n\r\n                                                //    style={{display: row.orderActivated ? 'visible' : 'none'}}\r\n                                                <TableRow hover key={i} >\r\n\r\n\r\n                                                    <TableCell align=\"center\">{i + 1}</TableCell>\r\n                                                    <TableCell align=\"center\"> <Button style={{ marginLeft: '20px' }} onClick={() => this.showCandleChart(row.candleChartData, row.symbol)}>{row.symbol}</Button></TableCell>\r\n                                                    <TableCell align=\"center\">{row.foundAt}</TableCell>\r\n                                                    <TableCell align=\"center\">{row.buyExitPrice}</TableCell>\r\n\r\n                                                    <TableCell align=\"center\" {...sumSellEntyPrice = sumSellEntyPrice + parseFloat(row.sellEntyPrice * row.quantity)}>{row.sellEntyPrice}({row.quantity})</TableCell>\r\n                                                    <TableCell align=\"center\">{row.squareOffAt}</TableCell>\r\n                                                    <TableCell align=\"center\">{row.stopLoss}</TableCell>\r\n                                                    <TableCell style={{ color: row.perChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\" {...sumPerChange = sumPerChange + parseFloat(row.perChange || 0)}> <b>{row.perChange}%</b></TableCell>\r\n                                                    <TableCell style={{ color: \"#00cbcb\" }} align=\"center\" {...sumBrokeragePer = sumBrokeragePer + parseFloat(row.brokerageCharges)}>{row.brokerageCharges}%</TableCell>\r\n\r\n                                                    <TableCell style={{ color: (row.perChange - row.brokerageCharges) > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\" {...netSumPerChange = netSumPerChange + parseFloat(row.perChange - row.brokerageCharges)}> <b>{(row.perChange - row.brokerageCharges).toFixed(2)}%</b></TableCell>\r\n\r\n                                                    <TableCell {...sumPnlValue = sumPnlValue + ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity)} style={{ color: ((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity) > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\" > <b>{((row.sellEntyPrice * (row.perChange - row.brokerageCharges) / 100) * row.quantity).toFixed(2)}</b></TableCell>\r\n\r\n                                                </TableRow>\r\n\r\n\r\n\r\n                                            )) : ''}\r\n\r\n\r\n                                            <TableRow >\r\n\r\n                                                <TableCell align=\"center\">Total</TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"center\"><b>{localStorage.setItem('sumSellEntyPrice', sumSellEntyPrice.toFixed(2))}{sumSellEntyPrice.toFixed(2)}</b></TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n                                                <TableCell align=\"left\"> </TableCell>\r\n\r\n\r\n                                                <TableCell style={{ color: sumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{localStorage.setItem('sumPerChange', sumPerChange.toFixed(2))}{sumPerChange.toFixed(2)}%</b></TableCell>\r\n                                                <TableCell style={{ color: \"#00cbcb\" }} align=\"center\"><b>-{(sumBrokeragePer).toFixed(2)}%</b>{localStorage.setItem('sumBrokeragePer', sumBrokeragePer.toFixed(2))}</TableCell>\r\n                                                <TableCell style={{ color: netSumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{(netSumPerChange).toFixed(2)}%</b>{localStorage.setItem('netSumPerChange', netSumPerChange.toFixed(2))}</TableCell>\r\n\r\n                                                <TableCell style={{ color: sumPnlValue > 0 ? \"darkmagenta\" : \"#00cbcb\" }} align=\"center\"><b>{(sumPnlValue).toFixed(2)}</b>{localStorage.setItem('sumPnlValue', sumPnlValue.toFixed(2))}</TableCell>\r\n\r\n\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n\r\n\r\n                                    <b> Average gross/trade PnL: </b> <b style={{ color: netSumPerChange > 0 ? \"darkmagenta\" : \"#00cbcb\" }} >{(sumPerChange / this.state.backTestResult.length).toFixed(2)}%</b>\r\n\r\n\r\n\r\n\r\n\r\n                                </Paper>\r\n\r\n\r\n\r\n\r\n                                {/* <Position /> */}\r\n\r\n              \r\n                            </Grid>\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap'\r\n    },\r\n\r\n    textStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    imgStyle: {\r\n        display: 'flex'\r\n    },\r\n\r\n    selectStyle: {\r\n        minWidth: '100%',\r\n        marginBottom: '10px'\r\n    },\r\n    MuiTextField: {\r\n        overflowY: 'scroll',\r\n        fontSize: \"12px\",\r\n        maxHeight: \"50px\",\r\n\r\n    },\r\n    footerButton: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: '20px',\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    }\r\n\r\n};\r\n\r\nexport default Home;","import axios from \"axios\";\r\nconst performServerAction = axios.create({\r\n    baseURL: ''\r\n  });\r\nexport default performServerAction;","import * as actionTypes from \"./types\";\r\nimport performServerAction from \"../api\"\r\nimport AuthService from \"../components/service/AuthService\";\r\n\r\nexport const setPackLoaded = ()=> async dispatch=> {\r\n    var data = { allPacks:true, portal: true}; \r\n    const response = await performServerAction.post('getPrepaidPacks', data)\r\n    \r\n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\r\n  };\r\n  export const getPackById = (id)=> async dispatch=> {\r\n    try{\r\n     \r\n\r\n      //add getPrepaidPacksById after / in sprint 7 and 8\r\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\r\n    \r\n     //sprint 8 & 9\r\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\r\n\r\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\r\n    }catch(err){\r\n      console.log(err,\"ERRRR\")\r\n    }\r\n   \r\n  };\r\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",updatedInfo);\r\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\r\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\r\n      updatedInfo.productId =  String( updatedInfo.productId );\r\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\r\n      updatedInfo.active =  String( updatedInfo.active );\r\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\r\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\r\n\r\n      \r\n\r\n\r\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\r\n    try{\r\n      console.log(\"ERROR\",packInfo)\r\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\r\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  //var indexSymbolData = JSON.parse(localStorage.getItem(props.data.indexSymbol)).data ; \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.data.indexSymbol}\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        {props.data.indexSymbol}  At {props.data.timestamp}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"medium\">\r\n        <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\"><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Stock Name</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Last Price</b></TableCell> \r\n                    <TableCell align=\"left\"><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Change Points</b></TableCell>\r\n\r\n                </TableRow>\r\n                <TableBody>\r\n                    \r\n                        {props.data.indexSymbolData ? props.data.indexSymbolData.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n\r\n                            {index !== 0 ? <>\r\n                                   <TableCell align=\"left\">{index} </TableCell>\r\n                                    <TableCell align=\"left\">{idata.symbol}</TableCell>\r\n                                    <TableCell align=\"left\" >{idata.lastPrice}</TableCell> \r\n                                     <TableCell align=\"left\">{idata.pChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.pChange}%</span>: idata.pChange === 0 ? <span>{idata.pChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.pChange}%</span>} </TableCell>\r\n                                     <TableCell align=\"left\">{idata.change}</TableCell>\r\n                                 \r\n                                </>\r\n                           : \"\" } \r\n                                   \r\n                            </TableRow>\r\n\r\n                        )):      \r\n                         <> <br/> <Button  variant=\"outlined\" size={'large'}   color=\"primary\">\r\n                            Refresh\r\n                        </Button> </>}\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>    \r\n\r\n\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\n\r\nimport \"./ViewStyle.css\";\r\nimport MyDialog from './MyDialog'\r\nimport Notify from \"../../utils/Notify\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           // products: [],\r\n            stopnview:'', \r\n            indexTimeStamp:'', \r\n            products : JSON.parse(localStorage.getItem('sorteIndexList')),\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n         this.loadPackList();\r\n  \r\n         var todayTime =  new Date(); \r\n         if(todayTime.getHours()>=9 && todayTime.getHours() < 16 ){\r\n              setInterval(() => {\r\n                  this.loadPackList();\r\n              }, 60001 * 2);\r\n          }\r\n      }\r\n\r\n\r\n      loadPackList() {\r\n        \r\n    \r\n        AdminService.getAllIndices()\r\n            .then((res) => {\r\n                if(res.data){\r\n\r\n\r\n                    this.setState({indexTimeStamp : res.data.timestamp})\r\n                    var softedData = res.data.data.sort(function(a, b){return b.percentChange - a.percentChange}); \r\n                    localStorage.setItem('sorteIndexList',  JSON.stringify(softedData));\r\n                    this.setState({products :   softedData});\r\n                    this.speckIt(\"1st sector is \" + softedData[0].indexSymbol +' '+ softedData[0].percentChange +'%' ); \r\n                    this.speckIt(\"2nd sector is \" +softedData[1].indexSymbol +' '+  softedData[1].percentChange +'%'); \r\n                    this.speckIt(\"3rd sector is \" +softedData[2].indexSymbol +' '+  softedData[2].percentChange +'%'); \r\n\r\n\r\n                    // for (let i = 0; i < softedData.length; i++) {\r\n                    //     // var cancel = setInterval(() => {\r\n                    //     //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n                    //     // }, 1000);\r\n                    //     // if(i == softedData.length-1 ){\r\n                    //     //     clearInterval(cancel)\r\n                    //     // }\r\n                    //     this.getIndicesStocks(softedData[i].indexSymbol,i);\r\n\r\n                    // }\r\n                    this.getIndicesStocks(softedData[0].indexSymbol,0);\r\n                    this.getIndicesStocks(softedData[1].indexSymbol,1);\r\n                    this.getIndicesStocks(softedData[2].indexSymbol,2);\r\n                  \r\n                   \r\n                }\r\n\r\n            })\r\n            .catch((reject) => {\r\n\r\n                Notify.showError(\"All Indices API Failed\"+ <br/> + reject);  \r\n                this.speckIt(\"All Indices API Failed\");     \r\n               \r\n\r\n            })\r\n    }\r\n\r\n\r\n    getIndicesStocks = (indexSymbol, index) =>{\r\n\r\n\r\n\r\n        AdminService.getIndiceStock(indexSymbol)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n\r\n            var resdata = res.data; \r\n            Notify.showSuccess(\"Success, Top is\" + resdata.data[1].symbol );  \r\n            this.speckIt(\"1st top \"+indexSymbol+\" stock is \" + resdata.data[1].symbol.toLocaleLowerCase() + ' high of '+ resdata.data[1].pChange + \"%\"); \r\n            this.speckIt(\"2nd top \"+indexSymbol+\" stock is \" + resdata.data[2].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[2].pChange + \"%\"); \r\n            this.speckIt(\"3rd top \"+indexSymbol+\" stock is \" + resdata.data[3].symbol.toLocaleLowerCase()+ ' high of '+ resdata.data[3].pChange + \"%\"); \r\n\r\n\r\n            if(resdata){\r\n                localStorage.setItem(indexSymbol, JSON.stringify(resdata)); \r\n                \r\n                \r\n\r\n                if(document.getElementById('topDate_'+index)){\r\n                    document.getElementById('topDate_'+index).innerHTML=resdata.timestamp.substring(12, 23);  \r\n                }\r\n                var percent = 0;\r\n\r\n                if(document.getElementById('top1_'+index)){\r\n                     percent = resdata.data[1].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[1].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[1].pChange + '</span>';\r\n                    document.getElementById('top1_'+index).innerHTML=resdata.data[1].symbol + ' '+resdata.data[1].lastPrice + '(' + percent + ')';  \r\n                }\r\n                if(document.getElementById('top2_'+index)){\r\n                     percent = resdata.data[2].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[2].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[2].pChange + '</span>';\r\n                    document.getElementById('top2_'+index).innerHTML=resdata.data[2].symbol+ ' '+resdata.data[2].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top3_'+index)){\r\n                     percent = resdata.data[3].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[3].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[3].pChange + '</span>';\r\n                    document.getElementById('top3_'+index).innerHTML=resdata.data[3].symbol+ ' '+resdata.data[3].lastPrice  + '(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top4_'+index)){\r\n                     percent = resdata.data[4].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[4].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[4].pChange + '</span>';\r\n                    document.getElementById('top4_'+index).innerHTML=resdata.data[4].symbol+ ' '+resdata.data[4].lastPrice  +'(' + percent + ')'; \r\n                }\r\n                if(document.getElementById('top5_'+index)){\r\n                     percent = resdata.data[5].pChange > 0 ? '<span style=\"color:green\">'+ resdata.data[5].pChange + '</span>' : '<span style=\"color:red\">'+ resdata.data[5].pChange + '</span>';\r\n                    document.getElementById('top5_'+index).innerHTML=resdata.data[5].symbol + ' '+resdata.data[5].lastPrice + '(' + percent + ')'; \r\n                }   \r\n            }\r\n\r\n        })\r\n        .catch((reject) => {\r\n            Notify.showError(indexSymbol + \" Failed\"+ <br/> + reject);  \r\n            this.speckIt(indexSymbol + \" API Failed \"  ); \r\n        })\r\n\r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n    }\r\n   \r\n    speckIt = (text) => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text.toString(); \r\n      //  window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    dateFormat(date){ \r\n        return moment(date).format('DD-MM-YYYY h:mm:ss A');\r\n    }\r\n    timeFormat(date){ \r\n        return moment().calendar();   \r\n        //return moment(date).format('hh:mm:ss');\r\n\r\n        \r\n    }\r\n  \r\n    render(){\r\n     \r\n\r\n      return(\r\n        <React.Fragment>\r\n                <PostLoginNavBar />\r\n            \r\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"5px\",paddingRight:\"5px\"}}>\r\n\r\n                 <Grid item xs={7} sm={7}>\r\n                   \r\n                </Grid>\r\n\r\n        \r\n                <Grid item xs={12} sm={12} style={{padding:\"20px\", overflow:\"auto\", height:\"900px\"}}>\r\n\r\n                <Typography  component=\"h3\" variant=\"h6\" color=\"primary\" >\r\n                        Market - Indices at { this.state.indexTimeStamp }\r\n                    </Typography> \r\n                <Table stickyHeader aria-label=\"sticky table\"  id=\"tabledata\" size=\"small\">\r\n\r\n                <TableRow variant=\"head\" >\r\n                    \r\n                    <TableCell align=\"left\" ><b>Sr.</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Index Name</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>CHNG%</b></TableCell> \r\n                    <TableCell align=\"left\" title=\"Advances/Declines/Unchanged\"><b>A/D/Un</b></TableCell> \r\n                    <TableCell align=\"left\" ><b>Refresh</b></TableCell> \r\n                    <TableCell align=\"left\"><b>TIME</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top1</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top2</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top3</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top4</b></TableCell> \r\n                    <TableCell align=\"left\"><b>Top5</b></TableCell> \r\n                    \r\n\r\n\r\n                </TableRow>\r\n                    \r\n                    <TableBody>\r\n                    \r\n                        { this.state.products ? this.state.products.map((idata, index) => (\r\n                            <TableRow hover key={index}>\r\n                              \r\n                              {/* 'SECTORAL INDICES' */}\r\n                                { idata.key !== 'vijay' ? <>\r\n\r\n                                   <TableCell align=\"left\">{index+1} </TableCell>\r\n\r\n                                     <TableCell align=\"left\">   \r\n                                        <MyDialog data={{indexSymbol: idata.indexSymbol + ' @ '+idata.last, indexSymbolData : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).data, timestamp : JSON.parse(localStorage.getItem(idata.indexSymbol)) && JSON.parse(localStorage.getItem(idata.indexSymbol)).timestamp}}/>\r\n                                    </TableCell>\r\n\r\n                                   \r\n                                    <TableCell align=\"left\"><a href={'https://www.nseindia.com/api/equity-stockIndices?index='+encodeURIComponent(idata.indexSymbol)} target=\"_blank\"  rel=\"noopener noreferrer\">  {idata.percentChange > 0 ?  <span style={{ color:'green', fontWeight:'bold' }} >{idata.percentChange}%</span>: idata.percentChange === 0 ? <span>{idata.percentChange}%</span> : <span style={{ color:'red',fontWeight:'bold'}} >{idata.percentChange}%</span>} </a></TableCell>\r\n                                    \r\n                                    <TableCell align=\"left\">  <span style={{ color:'green' }} >{idata.advances}</span> / <span style={{ color:'red' }} >{idata.declines}</span> / {idata.unchanged}</TableCell>\r\n                                \r\n                                    <TableCell align=\"left\"  >\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.getIndicesStocks(idata.indexSymbol, index)}>\r\n                                            Refresh\r\n                                        </Button>\r\n\r\n                                    </TableCell> \r\n\r\n\r\n                                    \r\n\r\n                                     \r\n                                     \r\n                                     <TableCell align=\"left\" id={'topDate_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top1_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top2_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top3_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top4_'+index}></TableCell> \r\n                                    <TableCell align=\"left\" id={'top5_'+index}></TableCell> \r\n                                    \r\n                                     </> : \"\"\r\n                                }\r\n                               \r\n\r\n                            </TableRow>\r\n\r\n                        )):<Spinner/>}\r\n\r\n\r\n\r\n\r\n\r\n                    </TableBody>\r\n\r\n\r\n                </Table>\r\n                </Grid>\r\n\r\n                </Grid>\r\n                   \r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\n//import \"./styles.css\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nexport default function App( props ) {\r\n\r\n \r\n\r\n  // dateTime: \"23-06-2021 4:43:02 PM\"\r\n  // diff: -298523\r\n  // isDuplicate: true\r\n  // totCEOI: 902038\r\n  // totCEOIChange: \"0.000\"\r\n  // totCEVol: 15312564\r\n  // totChangeINOICall: 127897\r\n  // totChangeINOIDiff: -107353\r\n  // totChangeINOIPut: 20544\r\n  // totDiffChange: \"0.000\"\r\n  // totPEOI: 603515\r\n  // totPEOIChange: \"0.000\"\r\n  // totPEVol: 15418605\r\n  var data =  props.diffData && props.diffData.data;\r\n  var putData = [], callData = [],  timeDate = [],  diffData = []; \r\n\r\n  // var scpage =   Math.floor( props.diffData.scrollcount/10 ) ? Math.floor( props.diffData.scrollcount/10 ) : 1; \r\n\r\n  // var startpage = 0  \r\n  // if(scpage * 10 <  data.length) {\r\n  //   startpage =  scpage * 10;  \r\n  // }   \r\n  // else if (props.diffData.scrollcount > data.length){\r\n  //   startpage =  0; \r\n  // }\r\n\r\n // data.reverse();\r\n\r\n\r\n  // console.log('scrollcount', props.diffData.scrollcount); \r\n  // console.log('startpage', startpage);\r\n\r\n  // console.log('charrt data', data);\r\n\r\n  //for (let index = startpage; index <  startpage + 10; index++) {\r\n  \r\n\r\n\r\n  for (let index = 0; index <  (data.length < 10 ? data.length : 10); index++) {\r\n    if(data[index]){\r\n      putData.push(data[index].totPEOI); \r\n      callData.push(data[index].totCEOI); \r\n      diffData.push(data[index].diff); \r\n      timeDate.push( data[index].dateTime.substring(19,11)); \r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n  const chartData = {\r\n    labels: timeDate,\r\n    datasets: [\r\n      {\r\n        label: \"Put\",\r\n        data: putData,\r\n        fill: true,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"green\"\r\n      },\r\n      {\r\n        label: \"Call\",\r\n        data: callData,\r\n        fill: true,\r\n        backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n        borderColor: \"red\",\r\n        \r\n      },\r\n      // {\r\n      //   label: \"Diff\",\r\n      //   data: diffData,\r\n      //   fill: true,\r\n      //   onoffline : true,\r\n      //   backgroundColor:  \"rgba(75,192,192,0.1)\",\r\n      //   borderColor: \"blue\",\r\n        \r\n      // }\r\n     \r\n    ]\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: true,\t// Don't maintain w/h ratio\r\n  } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n      this.filterOptionChain(e.target.name,  e.target.value); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        AdminService.getFunds().then(fundsRes => {\r\n            // console.log('profiledata', profileRes); \r\n               let fundsResData = resolveResponse(fundsRes);\r\n             //  var fundsResData =  fundsRes && fundsRes.data; \r\n               if(fundsResData.status & fundsResData.message === 'SUCCESS'){\r\n               \r\n                this.setState({  fundData :fundsResData.data })\r\n               }\r\n           })\r\n\r\n    }\r\n   \r\n  \r\n   toFixedAmount =(value) => {\r\n\r\n    if(value){\r\n      return  parseFloat(value).toFixed(2);\r\n    }\r\n   }\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n       \r\n            <br/><br/><br/>\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n            \r\n                <Grid id=\"tabledatachart\"  item xs={8} sm={8}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n\r\n                <Typography variant=\"h6\">\r\n                 Net:   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.net)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                   Available Cash :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablecash)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Aailable Intraday payin :   {this.state.fundData && this.toFixedAmount(this.state.fundData.availableintradaypayin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Available limit margin :   {this.state.fundData &&  this.toFixedAmount(this.state.fundData.availablelimitmargin)}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Collateral :   {this.state.fundData && this.toFixedAmount(this.state.fundData.collateral)}\r\n                </Typography>\r\n              \r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised debits :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utiliseddebits) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised exposure :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedexposure) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised holding sales :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedholdingsales)}\r\n                </Typography>\r\n             \r\n                <Typography variant=\"h6\">\r\n                Utilised option premium :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedoptionpremium) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised payout :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedpayout) }\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                Utilised span :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedspan) }\r\n                </Typography>\r\n\r\n\r\n                <Typography variant=\"h6\">\r\n                Utilised turnover :   {this.state.fundData && this.toFixedAmount(this.state.fundData.utilisedturnover) }\r\n                </Typography>\r\n                </Paper>\r\n                </Grid>\r\n               \r\n\r\n\r\n                <Grid id=\"tabledatachart\"  item xs={4} sm={4}>\r\n                <Paper style={{padding:\"25px\" }}>   \r\n               \r\n                <Typography variant=\"h6\">\r\n                    M2M Unrealized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2munrealized) }\r\n                    </Typography>\r\n                    \r\n                    \r\n                    <Typography variant=\"h6\">\r\n                    M2M Realized  :   {this.state.fundData && this.toFixedAmount(this.state.fundData.m2mrealized) }\r\n                    </Typography>\r\n\r\n                  \r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     }, \r\n//     selectStyle:{\r\n//         marginBottom: '0px',\r\n//         minWidth: 240,\r\n//         maxWidth: 240\r\n\r\n//     }\r\n  \r\n// }\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import React from \"react\";\r\nimport AdminService from \"../service/AdminService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport \"./ViewStyle.css\";\r\n\r\n\r\nclass TradeBook extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addProduct = this.addProduct.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.convertBool = this.convertBool.bind(this);\r\n        \r\n\r\n        this.state = {\r\n            oderbookData:[],\r\n            listofzones:[],\r\n            selectedZone:[],\r\n            zone:'',\r\n            selectAllzone:'Select All'\r\n\r\n        }\r\n    }\r\n    getTodayTrade = () => {\r\n        AdminService.retrieveTradeBook()\r\n            .then((res) => {\r\n                let data = resolveResponse(res);\r\n                console.log('datamy', data);\r\n\r\n                if(data && data.data){\r\n                    this.setState({oderbookData: data.data});\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n   \r\n   \r\n        this.getTodayTrade(); \r\n        \r\n       \r\n    }\r\n\r\n    zoneChange = (e) =>{\r\n        this.setState({[e.target.name]: e.target.value});\r\n\r\n        if(e.target.value.includes(\"Select All\")){\r\n            this.setState({selectedZone: this.state.listofzones})\r\n            this.setState({selectAllzone: \"Remove All\"})\r\n        }\r\n    \r\n        if(e.target.value.includes(\"Remove All\")){\r\n            this.setState({selectedZone: []})\r\n            this.setState({selectAllzone: \"Select All\"})\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n   \r\n    addProduct=(e)=> {\r\n        console.log(this.props)\r\n        this.props.history.push('/banner-add');\r\n    }\r\n\r\n    editProduct(productId) {\r\n        window.localStorage.removeItem(\"selectedBannerId\");\r\n        window.localStorage.setItem(\"selectedBannerId\", productId);\r\n        this.props.history.push('/banner-edit');\r\n    }\r\n\r\n    convertBool(flag) {\r\n        return flag ? 'Yes' : 'No';\r\n    }\r\n\r\n    dateFormat(date){\r\n        var d = new Date(date);\r\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\r\n        return fd;\r\n    }\r\n   \r\n    \r\n\r\n    render(){\r\n    \r\n      return(\r\n        <React.Fragment>\r\n            <PostLoginNavBar/>\r\n\r\n\r\n\r\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n            <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                                  Today Trades ({this.state.oderbookData.length})\r\n                                </Typography> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <Button  type=\"number\" variant=\"contained\" style={{float:\"right\"}} onClick={() => this.getTodayTrade()}>Refresh</Button>    \r\n                            </Grid>\r\n\r\n                            \r\n                </Grid>\r\n            \r\n\r\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                    <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n\r\n                        {/* <TableCell align=\"center\">checkbox</TableCell> */}\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Orderid</TableCell>\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Product Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Type</TableCell>\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Qty </TableCell>\r\n                        \r\n\r\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\r\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\" align=\"center\">Price</TableCell>\r\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\r\n                        <TableCell  className=\"TableHeadFormat\"   align=\"center\">Trade value</TableCell>\r\n\r\n                        <TableCell className=\"TableHeadFormat\" align=\"center\">Update time</TableCell>\r\n\r\n                      \r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n            \r\n\r\n                    {this.state.oderbookData && this.state.oderbookData ? this.state.oderbookData.map(row => (\r\n                        <TableRow key={row.productId} >\r\n\r\n                            {/* <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell> */}\r\n                            <TableCell align=\"center\">{row.orderid}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                            <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                            \r\n                            <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                            <TableCell align=\"center\">{row.fillsize}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\r\n                            <TableCell align=\"center\">{row.fillprice}</TableCell>\r\n                            <TableCell align=\"center\">{row.tradevalue}</TableCell>\r\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\r\n                             <TableCell align=\"center\">{row.filltime}</TableCell>\r\n\r\n                            \r\n                        </TableRow>\r\n                    )):<Spinner/>}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            </Paper>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n  \r\n}\r\n\r\n// const styles = {\r\n//     tableStyle : {\r\n//         display: 'flex',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     selectStyle:{\r\n//         // minWidth: '100%',\r\n//          marginBottom: '0px',\r\n//           minWidth: 300,\r\n//           maxWidth: 300,\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps=(state)=>{\r\n//     return {packs:state.packs.packs.data};\r\n// }\r\n\r\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\r\nexport default TradeBook;","import React from 'react';\r\nimport AdminService from \"../service/AdminService\";\r\nimport Grid from '@material-ui/core/Grid';\r\n//import AdminWelcome from '../adminwelcome.png';\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport  {API_KEY} from \"../../utils/config\";\r\nimport * as moment from 'moment';\r\nimport { w3cwebsocket } from 'websocket'; \r\nimport pako from 'pako';\r\nconst wsClint =  new w3cwebsocket('wss://smartapisocket.angelbroking.com/websocket'); \r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positionList : [],\r\n            userName: \"\",\r\n            password: \"\",\r\n            autoSearchList :[],\r\n            isDasable:false,\r\n            isError:false,\r\n            InstrumentLTP : {},\r\n            ifNotBought : true,\r\n            autoSearchTemp : [],\r\n            symboltoken: \"\", \r\n            tradingsymbol : \"\" ,\r\n            buyPrice : 0,\r\n            quantity : 1,\r\n            producttype : \"INTRADAY\",\r\n            symbolList : JSON.parse(localStorage.getItem('watchList'))\r\n        \r\n        };\r\n        this.myCallback = this.myCallback.bind(this);\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n        var data  = e.target.value; \r\n        AdminService.autoCompleteSearch(data).then(res => {\r\n            let data =  res.data; \r\n            console.log(data);       \r\n            localStorage.setItem('autoSearchTemp',JSON.stringify(data)); \r\n            this.setState({ autoSearchList : data });\r\n       })\r\n\r\n    }\r\n\r\n    myCallback = (date, fromDate) => {\r\n        if (fromDate === \"START_DATE\") {\r\n          this.setState({ startDate: date  });\r\n        } else if (fromDate === \"END_DATE\") {\r\n          this.setState({ endDate: date  });\r\n        }\r\n      };\r\n    getLTP =() => {\r\n        var data  = {\r\n            \"exchange\":\"NSE\",\r\n            \"tradingsymbol\":  this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n        }\r\n        AdminService.getLTP(data).then(res => {\r\n            let data = resolveResponse(res, 'noPop');\r\n             var LtpData = data && data.data; \r\n             this.setState({ InstrumentLTP : LtpData});\r\n\r\n            //  if(!localStorage.getItem('ifNotBought') && LtpData &&  LtpData.ltp > this.state.buyPrice){\r\n            //    this.placeOrder(this.state.buyPrice); \r\n            //  }\r\n\r\n            //  if(LtpData.ltp > this.getAveragePrice(this.state.orderid)){\r\n            //    this.placeSLMOrder(LtpData.ltp); \r\n            //  }\r\n       })\r\n    }\r\n    decodeWebsocketData =(array)  => {\r\n\r\n        console.log('atoms'); \r\n        var newarray = [];\r\n        try {\r\n            for (var i = 0; i < array.length; i++) {\r\n                newarray.push(String.fromCharCode(array[i]));\r\n            }\r\n        } catch (e) { }\r\n    \r\n        return newarray.join('');\r\n    }\r\n\r\n    makeConnection = (feedToken ,clientcode ) => {\r\n\r\n\r\n        var firstTime_req =  {\r\n            \"actiontype\": \"subscribe\",\r\n            \"feedtype\": \"order_feed\",\r\n            \"jwttoken\": this.state.feedToken ,\r\n            \"clientcode\": this.state.clientcode ,\r\n            \"apikey\": API_KEY\r\n       }\r\n       \r\n        console.log(\"1st Request :- \" + JSON.stringify( firstTime_req));\r\n        wsClint.send(JSON.stringify( firstTime_req));\r\n    }\r\n\r\n    updateSocketWatch = (feedToken,clientcode ) => {\r\n      \r\n        var channel = this.state.symbolList.map(element => {\r\n             return 'nse_cm|'+ element.token; \r\n        });\r\n\r\n        channel = channel.join('&'); \r\n        var sbin =  {\r\n            \"task\":\"mw\",\r\n            \"channel\": channel,\r\n            \"token\":this.state.feedToken,\r\n            \"user\":this.state.clientcode,\r\n            \"acctid\":this.state.clientcode\r\n        }\r\n        wsClint.send( JSON.stringify( sbin)); \r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\r\n        var tokens = JSON.parse(localStorage.getItem(\"userTokens\")); \r\n        var feedToken =   tokens &&  tokens.feedToken;\r\n\r\n        var userProfile = JSON.parse(localStorage.getItem(\"userProfile\")); \r\n        var clientcode =   userProfile &&  userProfile.clientcode;\r\n        this.setState({ feedToken : feedToken,clientcode : clientcode  });\r\n\r\n            \r\n        wsClint.onopen  = (res) => {\r\n\r\n             this.makeConnection();\r\n             console.log('connected');\r\n         //    this.updateSocketWatch();\r\n                \r\n            //  setTimeout(function(){\r\n            //    this.updateSocketWatch(feedToken ,clientcode);\r\n            //  }, 800);\r\n        }\r\n\r\n        wsClint.onmessage = (message) => {\r\n            \r\n            \r\n            var decoded = window.atob(message.data);\r\n            var data = this.decodeWebsocketData(pako.inflate(decoded));\r\n\r\n            this.setState({ positionList : JSON.parse(data) });\r\n\r\n        //    this.state.symbolList.forEach(element => {\r\n\r\n        //         var foundLive = liveData.filter(row => row.tk  == element.token);\r\n        //     // console.log(\"foundLive\", foundLive);\r\n        //         if(foundLive.length>0 &&  foundLive[0].ltp)\r\n        //             this.setState({ [element.symbol+'ltp'] : foundLive.length>0 &&  foundLive[0].ltp})\r\n        //         if(foundLive.length>0 &&  foundLive[0].cng)\r\n        //             this.setState({ [element.symbol+'nc'] : foundLive.length>0 &&  foundLive[0].nc})\r\n               \r\n               \r\n        //      });\r\n        \r\n        }\r\n\r\n        wsClint.onerror = (e) => {\r\n            console.log(\"socket error\", e); \r\n        }\r\n\r\n        setInterval(() => {\r\n\r\n            var heartbeatReq =  {\r\n                \"actiontype\": \"heartbeat\",\r\n                \"feedtype\": \"order_feed\",\r\n                \"jwttoken\": this.state.feedToken ,\r\n                \"clientcode\": this.state.clientcode ,\r\n                \"apikey\": API_KEY\r\n            }\r\n    \r\n            console.log(\"heartbeatReq : \" + heartbeatReq);\r\n            wsClint.send(heartbeatReq);\r\n          //  this.makeConnection(feedToken ,clientcode );\r\n        }, 59000);\r\n\r\n\r\n        var list = localStorage.getItem('watchList');\r\n        if(!list){\r\n            localStorage.setItem('watchList', []);\r\n        }\r\n      \r\n    }\r\n\r\n    placeOrder = (transactiontype) => {\r\n\r\n        var data = {\r\n            \"variety\":\"NORMAL\",\r\n            \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":transactiontype, //BUY OR SELL\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":   this.state.buyPrice  === 0 ? \"MARKET\" : \"LIMIT\", \r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": this.state.buyPrice,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\":this.state.quantity,\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n\r\n                if(this.state.stoploss){\r\n                    this.placeSLMOrder(this.state.stoploss);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoadSymbolDetails =(name) => {\r\n       \r\n        var token= ''; \r\n        for (let index = 0; index <  this.state.symbolList.length; index++) {\r\n            if(this.state.symbolList[index].symbol === name){\r\n                    token =  this.state.symbolList[index].token; \r\n                   this.setState({ tradingsymbol : name, symboltoken : this.state.symbolList[index].token});\r\n                    break; \r\n            }\r\n        }  \r\n        this.getHistory(token); \r\n    }\r\n\r\n    placeSLMOrder = () => {\r\n\r\n        var data = {\r\n                \"tradingsymbol\": this.state.tradingsymbol,\r\n            \"symboltoken\":this.state.symboltoken,\r\n            \"transactiontype\":\"SELL\",\r\n            \"exchange\":\"NSE\",\r\n            \"ordertype\":\"STOPLOSS_MARKET\", //STOPLOSS_MARKET STOPLOSS_LIMIT\r\n            \"producttype\": this.state.producttype, //\"INTRADAY\",//\"DELIVERY\",\r\n            \"duration\":\"DAY\",\r\n            \"price\": 0,\r\n            \"squareoff\":\"0\",\r\n            \"stoploss\":\"0\",\r\n            \"quantity\": this.state.quantity, \r\n            \"triggerprice\" : this.state.stoploss,\r\n            \"variety\" : \"STOPLOSS\"\r\n        }\r\n\r\n        AdminService.placeOrder(data).then(res => {\r\n            let data = resolveResponse(res);\r\n            console.log(data);   \r\n            if(data.status  && data.message === 'SUCCESS'){\r\n                localStorage.setItem('ifNotBought' ,  'false')\r\n                this.setState({ orderid : data.data && data.data.orderid });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getHistory = (token) => {\r\n\r\n        const format1 = \"YYYY-MM-DD HH:mm\";\r\n\r\n        var time = moment.duration(\"00:50:00\");\r\n        var startdate = moment(new Date()).subtract(time);\r\n     // var startdate = moment(this.state.startDate).subtract(time);\r\n\r\n        var data  = {\r\n            \"exchange\": \"NSE\",\r\n            \"symboltoken\": token ,\r\n            \"interval\": \"FIFTEEN_MINUTE\", //ONE_DAY FIVE_MINUTE \r\n            \"fromdate\": moment(startdate).format(format1) , \r\n            \"todate\": moment(new Date()).format(format1) //moment(this.state.endDate).format(format1) /\r\n       }\r\n       \r\n        AdminService.getHistoryData(data).then(res => {\r\n             let data = resolveResponse(res,'noPop' );\r\n              console.log(data); \r\n              if(data && data.data){\r\n                 \r\n                var histCandles = data.data; \r\n                histCandles &&  histCandles.sort(function(a,b){\r\n                  return new Date(b[0]) - new Date(a[0]);\r\n                });\r\n                if(histCandles.length > 0){\r\n                    localStorage.setItem('InstrumentHistroy', JSON.stringify(histCandles));\r\n                    this.setState({ InstrumentHistroy :histCandles , buyPrice : histCandles[0][2]});\r\n                }\r\n                this.getLTP();\r\n              }\r\n        })\r\n    }\r\n\r\n    onSelectItem = (event, values) =>{\r\n        \r\n\r\n        var autoSearchTemp = JSON.parse( localStorage.getItem('autoSearchTemp')); \r\n        console.log(\"values\", values); \r\n        console.log(\"autoSearchTemp\", autoSearchTemp); \r\n        if(autoSearchTemp.length> 0){\r\n            var fdata = '';       \r\n             for (let index = 0; index < autoSearchTemp.length; index++) {\r\n                console.log(\"fdata\", autoSearchTemp[index].symbol); \r\n                if( autoSearchTemp[index].symbol === values){\r\n                 fdata = autoSearchTemp[index];\r\n                 break;\r\n                }  \r\n             }\r\n           \r\n\r\n             var list = localStorage.getItem('watchList');\r\n             if(!list){\r\n                var data = []; \r\n                data.push(fdata); \r\n                localStorage.setItem('watchList',  JSON.stringify(data)); \r\n             }else{\r\n                list = JSON.parse( localStorage.getItem('watchList'));\r\n                var found = list.filter(row => row.symbol  === values);\r\n                if(found.length === 0){\r\n                    list.push(fdata); \r\n                    localStorage.setItem('watchList',  JSON.stringify(list)); \r\n                }\r\n               \r\n             }\r\n          \r\n             this.setState({ symbolList : JSON.parse(localStorage.getItem('watchList')), search : \"\" });\r\n            setTimeout(() => {\r\n                this.updateSocketWatch();\r\n            }, 100);\r\n            \r\n        }\r\n     \r\n    }\r\n\r\n    deleteItemWatchlist = (symbol) => {\r\n        var list = JSON.parse( localStorage.getItem('watchList'));\r\n        var index = list.findIndex(data => data.symbol === symbol)\r\n        list.splice(index,1);\r\n        localStorage.setItem('watchList',  JSON.stringify(list)); \r\n        this.setState({ symbolList : list });\r\n    }\r\n\r\n    getAveragePrice =(orderId) => {\r\n\r\n       var  oderbookData = localStorage.getItem('oderbookData');\r\n       var averageprice = 0; \r\n        for (let index = 0; index < oderbookData.length; index++) {\r\n           if(oderbookData[index].orderid ===  'orderId'){\r\n            averageprice =oderbookData[index].averageprice \r\n            this.setState({ averageprice : averageprice });\r\n            break;\r\n           }\r\n        } \r\n        return averageprice;\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n\r\n        return(\r\n            <React.Fragment>\r\n                 <PostLoginNavBar/>\r\n                \r\n               \r\n                 <Grid spacing={1}  direction=\"row\" alignItems=\"center\" container>\r\n\r\n                    <Grid item xs={10} sm={12}> \r\n                    <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\r\n\r\n\r\n                    <Table  size=\"small\"   aria-label=\"sticky table\" >\r\n                        <TableHead  style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\r\n                            <TableRow   variant=\"head\" style={{fontWeight: 'bold'}}>\r\n\r\n                                {/* <TableCell className=\"TableHeadFormat\" align=\"center\">Instrument</TableCell> */}\r\n                                \r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Trading symbol</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Order Type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Product type</TableCell>\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Transaction type</TableCell>\r\n                              \r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Quantity</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\" align=\"center\">Average Price</TableCell>\r\n\r\n                                <TableCell className=\"TableHeadFormat\" align=\"center\">Status </TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Order Status</TableCell>\r\n                                <TableCell  className=\"TableHeadFormat\"   align=\"center\">Exec Time</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\r\n\r\n                            {/* {\r\n                                \"variety\": null,\r\n                                \"ordertype\": \"LIMIT\",\r\n                                \"producttype\": \"INTRADAY\",\r\n                                \"duration\": \"DAY\",\r\n                                \"price\": \"194\",\r\n                                \"triggerprice\": \"0\",\r\n                                \"quantity\": \"1\",\r\n                                \"disclosedquantity\": \"0\",\r\n                                \"squareoff\": \"0\",\r\n                                \"stoploss\": \"0\",\r\n                                \"trailingstoploss\": \"0\",\r\n                                \"tradingsymbol\": \"SBIN-EQ\",\r\n                                \"transactiontype\": \"BUY\",\r\n                                \"exchange\": \"NSE\",\r\n                                \"symboltoken\": null,\r\n                                \"instrumenttype\": \"\",\r\n                                \"strikeprice\": \"-1\",\r\n                                \"optiontype\": \"\",\r\n                                \"expirydate\": \"\",\r\n                                \"lotsize\": \"1\",\r\n                                \"cancelsize\": \"1\",\r\n                                \"averageprice\": \"0\",\r\n                                \"filledshares\": \"0\",\r\n                                \"unfilledshares\": \"1\",\r\n                                \"orderid\": \"201020000000080\",\r\n                                \"text\": \"\",\r\n                                \"status\": \"cancelled\",\r\n                                \"orderstatus\": \"cancelled\",\r\n                                \"updatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchtime\": \"20-Oct-2020   13:10:59\",\r\n                                \"exchorderupdatetime\": \"20-Oct-2020   13:10:59\",\r\n                                \"fillid\": null,\r\n                                \"filltime\": null\r\n                            } */}\r\n\r\n                            {this.state.positionList ? this.state.positionList.map((row, i) => (\r\n                                <TableRow key={i} >\r\n\r\n\r\n                                    <TableCell align=\"center\">{row.tradingsymbol}</TableCell>\r\n                                    <TableCell align=\"center\">{row.ordertype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.producttype}</TableCell>\r\n                                    <TableCell align=\"center\">{row.transactiontype}</TableCell>\r\n                                    \r\n                                    <TableCell align=\"center\">{row.quantity}</TableCell>\r\n                                    <TableCell align=\"center\">{row.averageprice}</TableCell>\r\n                                    <TableCell align=\"center\">{row.status}</TableCell>\r\n                                    <TableCell align=\"center\">{row.orderstatus}</TableCell>\r\n                                    <TableCell align=\"center\">{row.exchtime}</TableCell>\r\n                                \r\n                                </TableRow>\r\n                            )):''}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                    </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n            \r\n               \r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// const styles ={\r\n//     formContainer : {\r\n//         display: 'flex',\r\n//         flexFlow: 'row wrap'\r\n//     },\r\n\r\n    \r\n\r\n// };\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPackLoaded} from \"../../action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport * as moment from 'moment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./ViewStyle.css\";\r\nimport PostLoginNavBar from \"../PostLoginNavbar\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AdminService from \"../service/AdminService\";\r\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport { ContactlessOutlined, Sync } from \"@material-ui/icons\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nclass MyView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            stopnview:'', \r\n            curnewdata:'', \r\n            underlyingValue : '', \r\n            timestamp:'',\r\n            totalCOI : 0,\r\n            expiry: '', \r\n            strike:'',\r\n            FilteredBY: '',\r\n            AllspTotalOI:[],\r\n            PEoi:0,\r\n            CEoi:0,\r\n            scrollcount : 0,\r\n            resMessage: [],\r\n            counter:0,\r\n            listCount:0\r\n            \r\n            //JSON.parse(localStorage.getItem('optionChainDataBN')).records.data\r\n\r\n\r\n\r\n        }\r\n//          this.findSupportResistence = this.findSupportResistence.bind(this);\r\n            \r\n    }\r\n\r\n    onChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value}); \r\n\r\n    }\r\n   \r\n  \r\n  \r\n    componentDidMount() {\r\n\r\n        // AdminService.scanStocks().then(fundsRes => {\r\n        //     // console.log('profiledata', profileRes); \r\n        //      //  let fundsResData = resolveResponse(fundsRes);\r\n        //      //  var fundsResData =  fundsRes && fundsRes.data; \r\n        //        if(fundsResData.status & fundsResData.message == 'SUCCESS'){\r\n               \r\n        //         this.setState({  fundData :fundsResData.data })\r\n        //        }\r\n        //    })\r\n\r\n        var list = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n        this.setState({watchlistCount : list.length})\r\n\r\n    }\r\n\r\n    readCsv = async() => {\r\n\r\n      var list = this.state.addtowatchlist; \r\n\r\n      var parsedList =JSON.parse(list) \r\n      console.log(parsedList.length);\r\n      \r\n      var newJsonList = []; \r\n\r\n      for (let index = 0; index < parsedList.length; index++) {\r\n        const element = parsedList[index];\r\n        console.log(element);\r\n\r\n        AdminService.autoCompleteSearch(element.SYMBOL).then(searchRes => {\r\n\r\n          let searchResdata =  searchRes.data; \r\n          var found = searchResdata.filter(row => row.exch_seg  === \"NSE\" &&  row.lotsize === \"1\" && row.name === element.SYMBOL);                                \r\n        \r\n         // && element.LTP >= 200\r\n          if(found.length){ \r\n            newJsonList.push(found[0]); \r\n         \r\n            var watchlist = localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : []; \r\n              var foundInWatchlist = watchlist.filter(row => row && row.token  === found[0] && found[0].token);                                \r\n              if(!foundInWatchlist.length){\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". ======================> New Symbol:  \"+ element.SYMBOL]})\r\n\r\n                this.setState({watchlistCount : watchlist.length, counter:this.state.counter+1})\r\n                watchlist.push(found[0]); \r\n                localStorage.setItem('watchList', JSON.stringify(watchlist));\r\n                console.log(\"fdaata\");\r\n               \r\n              }else{\r\n                this.setState({watchlistCount : watchlist.length,})\r\n                this.setState({resMessage: [...this.state.resMessage,  index + \". Already in List:  \"+ element.SYMBOL]})\r\n\r\n              }\r\n            //  console.log(found[0].symbol, \"found\",found);      \r\n            //  localStorage.setItem('NseStock_' + found[0].symbol, \"orderdone\");\r\n          }\r\n          if(this.state.resMessage && this.state.resMessage.length){\r\n            this.setState({resMessage: [...this.state.resMessage.reverse()]})\r\n\r\n          }\r\n        \r\n       })\r\n\r\n       await new Promise(r => setTimeout(r, 500));  \r\n      }\r\n\r\n      //\"NIFTY PSU BANK\".split(' ').join('') // \"NIFTYPSUBANK\"\r\n      \r\n      var data = {\r\n        listName : parsedList[0].SYMBOL, \r\n        listItem : newJsonList \r\n      }\r\n      console.log(\"newjosnlist:\", data);\r\n      AdminService.addIntoStaticData(data).then(res => {\r\n        let resdata = resolveResponse(res,'noPop' );\r\n       // console.log(resdata);\r\n        this.setState({listName: resdata.listName,listCount: resdata.count})\r\n      });\r\n      \r\n    }\r\n    resetCsv=()=>{\r\n      this.setState({addtowatchlist:\"\",resMessage:\"\"})\r\n\r\n    }\r\n   \r\n  \r\n\r\n\r\n    render(){\r\n\r\n      return(\r\n        <React.Fragment>\r\n            \r\n            <PostLoginNavBar />\r\n\r\n          \r\n            <Paper style={{padding:\"25px\" }}>   \r\n\r\n            \r\n            <Grid   direction=\"row\" container className=\"flexGrow\" spacing={2}  style={{paddingLeft:\"5px\",paddingRight:\"5px\", justifyContent:'center'}}>\r\n              \r\n              \r\n           \r\n              \r\n\r\n\r\n              \r\n\r\n                <Grid item xs={12} sm={8}> \r\n                <Typography variant=\"h6\">\r\n                   Current Watchlist Count   {this.state.watchlistCount} \r\n\r\n                   &nbsp; &nbsp;   &nbsp; &nbsp;   &nbsp; &nbsp;  \r\n                   <Button  onClick={() => { localStorage.setItem('watchList', []); window.location.reload();}}>Delete All</Button>    \r\n\r\n                   <br />\r\n                  </Typography>\r\n                         \r\n\r\n                    <TextField variant=\"outlined\" multiline rows={10} fullwidth style={{width:'90%', height: '50%'}}  label=\"Paste only JSON to add into watchlist\"  value={this.state.addtowatchlist}   name=\"addtowatchlist\" onChange={this.onChange}/>\r\n              \r\n\r\n                </Grid>\r\n\r\n            \r\n                  \r\n                <Grid  item xs={8} sm={8}>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.readCsv()}> Add to Watchlist</Button>    &nbsp; &nbsp;\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.resetCsv()}>Reset</Button>    \r\n                &nbsp; &nbsp;   <b>Total Added to Watchlist : {this.state.counter}</b>\r\n                &nbsp; &nbsp;   <b> Static Data Update: {this.state.listName}({this.state.listCount})</b>\r\n\r\n\r\n\r\n                   \r\n                    {/* {this.state.notAddedSymbol? \"Already in list: \" + this.state.notAddedSymbol : \"\" }\r\n                    {this.state.addedSymbol? \"Added: \" + this.state.addedSymbol : \"\" }\r\n                     */}\r\n                       \r\n                </Grid>\r\n\r\n                <Grid  item xs={8} sm={8}>\r\n                        {this.state.resMessage ? this.state.resMessage.map(data => (\r\n                         <>  <span> {data} </span>  <br /> </>\r\n                           \r\n                        )) : ''}\r\n   \r\n                </Grid>\r\n\r\n               \r\n              \r\n                </Grid>\r\n                   \r\n                </Paper>\r\n\r\n                \r\n           \r\n          \r\n\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    tableStyle : {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }, \r\n    selectStyle:{\r\n        marginBottom: '0px',\r\n        minWidth: 240,\r\n        maxWidth: 240\r\n\r\n    }\r\n  \r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {packs:state.packs.packs.data};\r\n}\r\nexport default connect(mapStateToProps,{setPackLoaded})(MyView);\r\n","import { HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport LoginComponent from \"./login/LoginComponent\";\r\n\r\nimport Home from './MyTrade/Home';\r\n\r\n// import NiftyView from \"./MyTrade/NiftyView\";\r\n//import BankNiftyView from \"./MyTrade/BankNiftyView\";\r\n\r\nimport MySectorTop from \"./MyTrade/MySectorTop\";\r\n\r\nimport Chart from \"./MyTrade/Chart\";\r\n\r\nimport Funds from \"./MyTrade/Funds\";\r\nimport Orderbook from \"./MyTrade/Orderbook\";\r\nimport Tradebook from \"./MyTrade/Tradebook\";\r\n// import LiveFeed from \"./MyTrade/LiveFeed\";\r\nimport OrderStatusLive from \"./MyTrade/OrderStatusLive\";\r\nimport Position from \"./MyTrade/Position\";\r\n\r\nimport AddToWatchlist from \"./MyTrade/AddToWatchlist\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={LoginComponent}/>\r\n                    <Route path=\"/login\" component={LoginComponent}/>\r\n                    {/* <Route path=\"/nifty-view\" component={NiftyView}/> */}\r\n                    {/* <Route path=\"/bn-view\" component={BankNiftyView}/> */}\r\n                    <Route path=\"/sector\" component={MySectorTop}/>\r\n                    <Route path=\"/chart\" component={Chart}/>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/funds\" component={Funds}/>\r\n                    <Route path=\"/order\" component={Orderbook}/>\r\n                    <Route path=\"/trade\" component={Tradebook}/>\r\n                    {/* <Route path=\"/livefeed\" component={LiveFeed}/> */}\r\n                    <Route path=\"/order-status-live\" component={OrderStatusLive}/>\r\n                    <Route path=\"/position\" component={Position}/>\r\n                    <Route path=\"/addtowatchlist\" component={AddToWatchlist}/>\r\n                    \r\n           \r\n                    <Route path=\"*\" component={LoginComponent} />\r\n                    \r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport './App.css';\r\nimport AppRouter from \"./components/RouterComponent\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n        <AppRouter/>\r\n        <ToastContainer/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./createStore\";\r\nimport App from \"./App\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}